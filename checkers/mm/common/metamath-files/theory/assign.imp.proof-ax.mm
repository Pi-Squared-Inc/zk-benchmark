$( mmtool stats
Propositions: 2639
Constants: 476
Variables: 34
VarHyps: 12015
LogHyp: 1829
DsjVarPairs: 5272
ProofSteps: 259466
TotalLemmaSize: 695573
TotalClaimSize: 2419394
MaxStackDepth: 111
MaxStackSize: 5785
GuestCycles: 480157045
end mmtool stats $)
$c #Pattern $.
$c #ElementVariable $.
$c #SetVariable $.
$c #Variable $.
$c #Symbol $.
$v ph0 ph1 ph2 ph3 ph4 ph5 ph6 ph7 ph8 $.
$v th0 th1 th2 th3 th4 th5 th6 th7 th8 $.
$v x y z w $.
$v X Y Z W $.
$v xX yY $.
$v sg0 sg1 sg2 sg3 sg4 $.
ph0-is-pattern $f #Pattern ph0 $.
ph1-is-pattern $f #Pattern ph1 $.
ph2-is-pattern $f #Pattern ph2 $.
ph3-is-pattern $f #Pattern ph3 $.
ph4-is-pattern $f #Pattern ph4 $.
ph5-is-pattern $f #Pattern ph5 $.
ph6-is-pattern $f #Pattern ph6 $.
ph7-is-pattern $f #Pattern ph7 $.
ph8-is-pattern $f #Pattern ph8 $.
th0-is-pattern $f #Pattern th0 $.
th1-is-pattern $f #Pattern th1 $.
th2-is-pattern $f #Pattern th2 $.
th3-is-pattern $f #Pattern th3 $.
th4-is-pattern $f #Pattern th4 $.
th5-is-pattern $f #Pattern th5 $.
th6-is-pattern $f #Pattern th6 $.
th7-is-pattern $f #Pattern th7 $.
th8-is-pattern $f #Pattern th8 $.
x-is-element-var $f #ElementVariable x $.
y-is-element-var $f #ElementVariable y $.
z-is-element-var $f #ElementVariable z $.
w-is-element-var $f #ElementVariable w $.
X-is-element-var $f #SetVariable X $.
Y-is-element-var $f #SetVariable Y $.
Z-is-element-var $f #SetVariable Z $.
W-is-element-var $f #SetVariable W $.
xX-is-var $f #Variable xX $.
yY-is-var $f #Variable yY $.
sg0-is-symbol $f #Symbol sg0 $.
sg1-is-symbol $f #Symbol sg1 $.
sg2-is-symbol $f #Symbol sg2 $.
sg3-is-symbol $f #Symbol sg3 $.
sg4-is-symbol $f #Symbol sg4 $.
element-var-is-var $a #Variable x $.
set-var-is-var $a #Variable X $.
var-is-pattern $a #Pattern xX $.
symbol-is-pattern $a #Pattern sg0 $.
$c #Positive $.
$c #Negative $.
$c #Fresh $.
$c #ApplicationContext $.
$c #Substitution $.
$c #Notation $.
$c |- $.
$c \bot $.
$c \imp $.
$c \app $.
$c \exists $.
$c \mu $.
$c ( ) $.
bot-is-pattern $a #Pattern \bot $.
imp-is-pattern $a #Pattern ( \imp ph0 ph1 ) $.
app-is-pattern $a #Pattern ( \app ph0 ph1 ) $.
exists-is-pattern $a #Pattern ( \exists x ph0 ) $.
${ mu-is-pattern.0 $e #Positive X ph0 $.
   mu-is-pattern $a #Pattern ( \mu X ph0 ) $. $}
positive-in-var $a #Positive xX yY $.
positive-in-symbol $a #Positive xX sg0 $.
positive-in-bot $a #Positive xX \bot $.
${ positive-in-imp.0 $e #Negative xX ph0 $.
   positive-in-imp.1 $e #Positive xX ph1 $.
   positive-in-imp $a #Positive xX ( \imp ph0 ph1 ) $. $}
${ positive-in-app.0 $e #Positive xX ph0 $.
   positive-in-app.1 $e #Positive xX ph1 $.
   positive-in-app $a #Positive xX ( \app ph0 ph1 ) $. $}
${ positive-in-exists.0 $e #Positive xX ph0 $.
   positive-in-exists $a #Positive xX ( \exists x ph0 ) $. $}
${ positive-in-mu.0 $e #Positive xX ph0 $.
   positive-in-mu $a #Positive xX ( \mu X ph0 ) $. $}
${ $d xX ph0 $.
   positive-disjoint $a #Positive xX ph0 $. $}
${ $d xX yY $.
   negative-in-var $a #Negative xX yY $. $}
negative-in-symbol $a #Negative xX sg0 $.
negative-in-bot $a #Negative xX \bot $.
${ negative-in-imp.0 $e #Positive xX ph0 $.
   negative-in-imp.1 $e #Negative xX ph1 $.
   negative-in-imp $a #Negative xX ( \imp ph0 ph1 ) $. $}
${ negative-in-app.0 $e #Negative xX ph0 $.
   negative-in-app.1 $e #Negative xX ph1 $.
   negative-in-app $a #Negative xX ( \app ph0 ph1 ) $. $}
${ negative-in-exists.0 $e #Negative xX ph0 $.
   negative-in-exists $a #Negative xX ( \exists x ph0 ) $. $}
${ negative-in-mu.0 $e #Negative xX ph0 $.
   negative-in-mu $a #Negative xX ( \mu X ph0 ) $. $}
${ $d xX ph0 $.
   negative-disjoint $a #Negative xX ph0 $. $}
${ $d xX yY $.
   fresh-in-var $a #Fresh xX yY $. $}
fresh-in-symbol $a #Fresh xX sg0 $.
fresh-in-bot $a #Fresh xX \bot $.
${ fresh-in-imp.0 $e #Fresh xX ph0 $.
   fresh-in-imp.1 $e #Fresh xX ph1 $.
   fresh-in-imp $a #Fresh xX ( \imp ph0 ph1 ) $. $}
${ fresh-in-app.0 $e #Fresh xX ph0 $.
   fresh-in-app.1 $e #Fresh xX ph1 $.
   fresh-in-app $a #Fresh xX ( \app ph0 ph1 ) $. $}
${ $d xX x $.
   fresh-in-exists.0 $e #Fresh xX ph0 $.
   fresh-in-exists $a #Fresh xX ( \exists x ph0 ) $. $}
fresh-in-exists-shadowed $a #Fresh x ( \exists x ph0 ) $.
${ $d xX X $.
   fresh-in-mu.0 $e #Fresh xX ph0 $.
   fresh-in-mu $a #Fresh xX ( \mu X ph0 ) $. $}
fresh-in-mu-shadowed $a #Fresh X ( \mu X ph0 ) $.
${ $d xX ph0 $.
   fresh-disjoint $a #Fresh xX ph0 $. $}
${ fresh-in-substitution.0 $e #Fresh xX ph1 $.
   fresh-in-substitution.1 $e #Substitution ph2 ph0 ph1 xX $.
   fresh-in-substitution $a #Fresh xX ph2 $. $}
${ fresh-after-substitution.0 $e #Fresh xX ph0 $.
   fresh-after-substitution.1 $e #Fresh xX ph1 $.
   fresh-after-substitution.2 $e #Substitution ph2 ph0 ph1 yY $.
   fresh-after-substitution $a #Fresh xX ph2 $. $}
substitution-var-same $a #Substitution ph0 xX ph0 xX $.
${ $d xX yY $.
   substitution-var-diff $a #Substitution yY yY ph0 xX $. $}
substitution-symbol $a #Substitution sg0 sg0 ph0 xX $.
substitution-bot $a #Substitution \bot \bot ph0 xX $.
${ substitution-imp.0 $e #Substitution ph1 ph3 ph0 xX $.
   substitution-imp.1 $e #Substitution ph2 ph4 ph0 xX $.
   substitution-imp $a #Substitution ( \imp ph1 ph2 ) ( \imp ph3 ph4 ) ph0 xX $. $}
${ substitution-app.0 $e #Substitution ph1 ph3 ph0 xX $.
   substitution-app.1 $e #Substitution ph2 ph4 ph0 xX $.
   substitution-app $a #Substitution ( \app ph1 ph2 ) ( \app ph3 ph4 ) ph0 xX $. $}
substitution-exists-shadowed $a #Substitution ( \exists x ph1 ) ( \exists x ph1 ) ph0 x $.
${ $d xX x $.
   $d y ph0 $.
   substitution-exists.0 $e #Substitution ph2 ph1 y x $.
   substitution-exists.1 $e #Substitution ph3 ph2 ph0 xX $.
   substitution-exists $a #Substitution ( \exists y ph3 ) ( \exists x ph1 ) ph0 xX $. $}
substitution-mu-shadowed $a #Substitution ( \mu X ph1 ) ( \mu X ph1 ) ph0 X $.
${ $d xX X $.
   $d Y ph0 $.
   substitution-mu.0 $e #Substitution ph2 ph1 Y X $.
   substitution-mu.1 $e #Substitution ph3 ph2 ph0 xX $.
   substitution-mu $a #Substitution ( \mu Y ph3 ) ( \mu X ph1 ) ph0 xX $. $}
substitution-identity $a #Substitution ph0 ph0 xX xX $.
${ yY-free-in-ph0 $e #Fresh yY ph0 $.
   ph1-definition $e #Substitution ph1 ph0 yY xX $.
   ${ substitution-fold.0 $e #Substitution ph2 ph1 ph3 yY $.
      substitution-fold $a #Substitution ph2 ph0 ph3 xX $. $}
   ${ substitution-unfold.0 $e #Substitution ph2 ph0 ph3 xX $.
      substitution-unfold $a #Substitution ph2 ph1 ph3 yY $. $} $}
${ substitution-inverse.0 $e #Fresh xX ph0 $.
   substitution-inverse.1 $e #Substitution ph1 ph0 xX yY $.
   substitution-inverse $a #Substitution ph0 ph1 yY xX $. $}
${ substitution-fresh.0 $e #Fresh xX ph0 $.
   substitution-fresh $a #Substitution ph0 ph0 ph1 xX $. $}
application-context-var $a #ApplicationContext xX xX $.
${ $d xX ph1 $.
   application-context-app-left.0 $e #ApplicationContext xX ph0 $.
   application-context-app-left $a #ApplicationContext xX ( \app ph0 ph1 ) $. $}
${ $d xX ph0 $.
   application-context-app-right.0 $e #ApplicationContext xX ph1 $.
   application-context-app-right $a #ApplicationContext xX ( \app ph0 ph1 ) $. $}
notation-reflexivity $a #Notation ph0 ph0 $.
${ notation-symmetry.0 $e #Notation ph0 ph1 $.
   notation-symmetry $a #Notation ph1 ph0 $. $}
${ notation-transitivity.0 $e #Notation ph0 ph1 $.
   notation-transitivity.1 $e #Notation ph1 ph2 $.
   notation-transitivity $a #Notation ph0 ph2 $. $}
${ notation-positive.0 $e #Positive xX ph0 $.
   notation-positive.1 $e #Notation ph1 ph0 $.
   notation-positive $a #Positive xX ph1 $. $}
${ notation-negative.0 $e #Negative xX ph0 $.
   notation-negative.1 $e #Notation ph1 ph0 $.
   notation-negative $a #Negative xX ph1 $. $}
${ notation-fresh.0 $e #Fresh xX ph0 $.
   notation-fresh.1 $e #Notation ph1 ph0 $.
   notation-fresh $a #Fresh xX ph1 $. $}
${ notation-substitution.0 $e #Substitution ph0 ph1 ph2 xX $.
   notation-substitution.1 $e #Notation ph3 ph0 $.
   notation-substitution.2 $e #Notation ph4 ph1 $.
   notation-substitution.3 $e #Notation ph5 ph2 $.
   notation-substitution $a #Substitution ph3 ph4 ph5 xX $. $}
${ notation-notation.0 $e #Notation ph0 ph1 $.
   notation-notation.1 $e #Notation ph2 ph0 $.
   notation-notation.2 $e #Notation ph3 ph1 $.
   notation-notation $a #Notation ph2 ph3 $. $}
${ notation-application-context.0 $e #ApplicationContext xX ph0 $.
   notation-application-context.1 $e #Notation ph1 ph0 $.
   notation-application-context $a #ApplicationContext xX ph1 $. $}
${ notation-proof.0 $e |- ph0 $.
   notation-proof.1 $e #Notation ph1 ph0 $.
   notation-proof $a |- ph1 $. $}
${ notation-imp.0 $e #Notation ph0 ph2 $.
   notation-imp.1 $e #Notation ph1 ph3 $.
   notation-imp $a #Notation ( \imp ph0 ph1 ) ( \imp ph2 ph3 ) $. $}
${ notation-app.0 $e #Notation ph0 ph2 $.
   notation-app.1 $e #Notation ph1 ph3 $.
   notation-app $a #Notation ( \app ph0 ph1 ) ( \app ph2 ph3 ) $. $}
${ notation-exists.0 $e #Notation ph0 ph1 $.
   notation-exists $a #Notation ( \exists x ph0 ) ( \exists x ph1 ) $. $}
${ notation-mu.0 $e #Notation ph0 ph1 $.
   notation-mu $a #Notation ( \mu X ph0 ) ( \mu X ph1 ) $. $}
$c \not $.
not-is-pattern $a #Pattern ( \not ph0 ) $.
not-is-sugar $a #Notation ( \not ph0 ) ( \imp ph0 \bot ) $.
$c \or $.
or-is-pattern $a #Pattern ( \or ph0 ph1 ) $.
or-is-sugar $a #Notation ( \or ph0 ph1 ) ( \imp ( \not ph0 ) ph1 ) $.
$c \and $.
and-is-pattern $a #Pattern ( \and ph0 ph1 ) $.
and-is-sugar $a #Notation ( \and ph0 ph1 ) ( \not ( \or ( \not ph0 ) ( \not ph1 ) ) ) $.
proof-rule-prop-1 $a |- ( \imp ph0 ( \imp ph1 ph0 ) ) $.
proof-rule-prop-2 $a |- ( \imp ( \imp ph0 ( \imp ph1 ph2 ) ) ( \imp ( \imp ph0 ph1 ) ( \imp ph0 ph2 ) ) ) $.
proof-rule-prop-3 $a |- ( \imp ( \imp ( \imp ph0 \bot ) \bot ) ph0 ) $.
${ proof-rule-mp.0 $e |- ( \imp ph0 ph1 ) $.
   proof-rule-mp.1 $e |- ph0 $.
   proof-rule-mp $a |- ph1 $. $}
${ proof-rule-exists.0 $e #Substitution ph0 ph1 y x $.
   proof-rule-exists $a |- ( \imp ph0 ( \exists x ph1 ) ) $. $}
${ proof-rule-gen.0 $e |- ( \imp ph0 ph1 ) $.
   proof-rule-gen.1 $e #Fresh x ph1 $.
   proof-rule-gen $a |- ( \imp ( \exists x ph0 ) ph1 ) $. $}
${ proof-rule-propagation-bot.0 $e #ApplicationContext xX ph0 $.
   proof-rule-propagation-bot.1 $e #Substitution ph1 ph0 \bot xX $.
   proof-rule-propagation-bot $a |- ( \imp ph1 \bot ) $. $}
${ proof-rule-propagation-or.0 $e #ApplicationContext xX ph0 $.
   proof-rule-propagation-or.1 $e #Substitution ph1 ph0 ( \or ph4 ph5 ) xX $.
   proof-rule-propagation-or.2 $e #Substitution ph2 ph0 ph4 xX $.
   proof-rule-propagation-or.3 $e #Substitution ph3 ph0 ph5 xX $.
   proof-rule-propagation-or $a |- ( \imp ph1 ( \or ph2 ph3 ) ) $. $}
${ proof-rule-propagation-exists.0 $e #ApplicationContext xX ph0 $.
   proof-rule-propagation-exists.1 $e #Substitution ph1 ph0 ( \exists y ph3 ) xX $.
   proof-rule-propagation-exists.2 $e #Substitution ph2 ph0 ph3 xX $.
   proof-rule-propagation-exists.3 $e #Fresh y ph0 $.
   proof-rule-propagation-exists $a |- ( \imp ph1 ( \exists y ph2 ) ) $. $}
${ proof-rule-frame.0 $e #ApplicationContext xX ph0 $.
   proof-rule-frame.1 $e #Substitution ph1 ph0 ph3 xX $.
   proof-rule-frame.2 $e #Substitution ph2 ph0 ph4 xX $.
   proof-rule-frame.3 $e |- ( \imp ph3 ph4 ) $.
   proof-rule-frame $a |- ( \imp ph1 ph2 ) $. $}
${ proof-rule-prefixpoint.0 $e #Substitution ph0 ph1 ( \mu X ph1 ) X $.
   proof-rule-prefixpoint $a |- ( \imp ph0 ( \mu X ph1 ) ) $. $}
${ proof-rule-kt.0 $e #Substitution ph0 ph1 ph2 X $.
   proof-rule-kt.1 $e |- ( \imp ph0 ph2 ) $.
   proof-rule-kt $a |- ( \imp ( \mu X ph1 ) ph2 ) $. $}
${ proof-rule-set-var-substitution.0 $e #Substitution ph0 ph1 ph2 X $.
   proof-rule-set-var-substitution.1 $e |- ph1 $.
   proof-rule-set-var-substitution $a |- ph0 $. $}
proof-rule-existence $a |- ( \exists x x ) $.
${ proof-rule-singleton.0 $e #ApplicationContext xX ph0 $.
   proof-rule-singleton.1 $e #ApplicationContext yY ph1 $.
   proof-rule-singleton.2 $e #Substitution ph3 ph0 ( \and x ph2 ) xX $.
   proof-rule-singleton.3 $e #Substitution ph4 ph1 ( \and x ( \not ph2 ) ) yY $.
   proof-rule-singleton $a |- ( \not ( \and ph3 ph4 ) ) $. $}
$v x0 x1 x2 x3 $.
x0-is-element-var $f #ElementVariable x0 $.
x1-is-element-var $f #ElementVariable x1 $.
x2-is-element-var $f #ElementVariable x2 $.
x3-is-element-var $f #ElementVariable x3 $.
$v s0 s1 s2 s3 $.
s0-is-element-var $f #ElementVariable s0 $.
s1-is-element-var $f #ElementVariable s1 $.
s2-is-element-var $f #ElementVariable s2 $.
s3-is-element-var $f #ElementVariable s3 $.
$c \top $.
top-is-pattern $a #Pattern \top $.
top-is-sugar $a #Notation \top ( \not \bot ) $.
$c \iff $.
iff-is-pattern $a #Pattern ( \iff ph0 ph1 ) $.
iff-is-sugar $a #Notation ( \iff ph0 ph1 ) ( \and ( \imp ph0 ph1 ) ( \imp ph1 ph0 ) ) $.
$c \forall $.
forall-is-pattern $a #Pattern ( \forall x ph0 ) $.
forall-is-sugar $a #Notation ( \forall x ph0 ) ( \not ( \exists x ( \not ph0 ) ) ) $.
$c \nu $.
${ nu-is-pattern.0 $e #Positive X ph0 $.
   nu-is-pattern $a #Pattern ( \nu X ph0 ) $. $}
${ nu-is-sugar.0 $e #Substitution ph0 ph1 ( \not X ) X $.
   nu-is-sugar $a #Notation ( \nu X ph1 ) ( \not ( \mu X ( \not ph0 ) ) ) $. $}
$c \definedness $.
definedness-is-symbol $a #Symbol \definedness $.
$c \ceil $.
ceil-is-pattern $a #Pattern ( \ceil ph0 ) $.
ceil-is-sugar $a #Notation ( \ceil ph0 ) ( \app \definedness ph0 ) $.
axiom-definedness $a |- ( \ceil x ) $.
$c \floor $.
floor-is-pattern $a #Pattern ( \floor ph0 ) $.
floor-is-sugar $a #Notation ( \floor ph0 ) ( \not ( \ceil ( \not ph0 ) ) ) $.
$c \in $.
in-is-pattern $a #Pattern ( \in x ph0 ) $.
in-is-sugar $a #Notation ( \in x ph0 ) ( \ceil ( \and x ph0 ) ) $.
$c \included $.
included-is-pattern $a #Pattern ( \included ph0 ph1 ) $.
included-is-sugar $a #Notation ( \included ph0 ph1 ) ( \floor ( \imp ph0 ph1 ) ) $.
$c \eq $.
eq-is-pattern $a #Pattern ( \eq ph0 ph1 ) $.
eq-is-sugar $a #Notation ( \eq ph0 ph1 ) ( \floor ( \iff ph0 ph1 ) ) $.
${ eq-elim.0 $e #Substitution ph2 ph4 ph0 x $.
   eq-elim.1 $e #Substitution ph3 ph4 ph1 x $.
   eq-elim $a |- ( \imp ( \eq ph0 ph1 ) ( \imp ph2 ph3 ) ) $. $}
$c \sort $.
sort-is-symbol $a #Symbol \sort $.
$c \inhabitant $.
inhabitant-is-symbol $a #Symbol \inhabitant $.
$c \inh $.
inh-is-pattern $a #Pattern ( \inh ph0 ) $.
inh-is-sugar $a #Notation ( \inh ph0 ) ( \app \inhabitant ph0 ) $.
$c \in-sort $.
in-sort-is-pattern $a #Pattern ( \in-sort ph0 ph1 ) $.
in-sort-is-sugar $a #Notation ( \in-sort ph0 ph1 ) ( \included ph0 ( \inh ph1 ) ) $.
inh-sort-nonempty $a |- ( \exists x ( \in-sort x \sort ) ) $.
$c \sorted-forall $.
sorted-forall-is-pattern $a #Pattern ( \sorted-forall x ph0 ph1 ) $.
sorted-forall-is-sugar $a #Notation ( \sorted-forall x ph0 ph1 ) ( \forall x ( \imp ( \in-sort x ph0 ) ph1 ) ) $.
$c \sorted-exists $.
sorted-exists-is-pattern $a #Pattern ( \sorted-exists x ph0 ph1 ) $.
sorted-exists-is-sugar $a #Notation ( \sorted-exists x ph0 ph1 ) ( \exists x ( \and ( \in-sort x ph0 ) ph1 ) ) $.
$c \forall-sort $.
forall-sort-is-pattern $a #Pattern ( \forall-sort s0 ph0 ) $.
forall-sort-is-sugar $a #Notation ( \forall-sort s0 ph0 ) ( \sorted-forall s0 \sort ph0 ) $.
$c \exists-sort $.
exists-sort-is-pattern $a #Pattern ( \exists-sort s0 ph0 ) $.
exists-sort-is-sugar $a #Notation ( \exists-sort s0 ph0 ) ( \sorted-exists s0 \sort ph0 ) $.
$c \is-singleton $.
is-singleton-is-pattern $a #Pattern ( \is-singleton ph0 ) $.
${ $d x ph0 $.
   is-singleton-is-sugar $a #Notation ( \is-singleton ph0 ) ( \exists x ( \eq x ph0 ) ) $. $}
$c \is-top $.
is-top-is-pattern $a #Pattern ( \is-top ph0 ) $.
is-top-is-sugar $a #Notation ( \is-top ph0 ) ( \eq ph0 \top ) $.
$c \is-bot $.
is-bot-is-pattern $a #Pattern ( \is-bot ph0 ) $.
is-bot-is-sugar $a #Notation ( \is-bot ph0 ) ( \eq ph0 \bot ) $.
$c \is-predicate $.
is-predicate-is-pattern $a #Pattern ( \is-predicate ph0 ) $.
is-predicate-is-sugar $a #Notation ( \is-predicate ph0 ) ( \or ( \is-top ph0 ) ( \is-bot ph0 ) ) $.
$c \is-singleton-or-bot $.
is-singleton-or-bot-is-pattern $a #Pattern ( \is-singleton-or-bot ph0 ) $.
is-singleton-or-bot-is-sugar $a #Notation ( \is-singleton-or-bot ph0 ) ( \or ( \is-singleton ph0 ) ( \is-bot ph0 ) ) $.
$c \is-constant $.
is-constant-is-pattern $a #Pattern ( \is-constant ph0 ph1 ) $.
${ $d x ph0 $.
   $d x ph1 $.
   is-constant-is-sugar $a #Notation ( \is-constant ph0 ph1 ) ( \sorted-exists x ph1 ( \eq ph0 x ) ) $. $}
$c \is-unary-function $.
is-unary-function-is-pattern $a #Pattern ( \is-unary-function ph0 ph1 ph2 ) $.
${ $d x y ph0 $.
   $d x y ph1 $.
   $d x y ph2 $.
   is-unary-function-is-sugar $a #Notation ( \is-unary-function ph0 ph1 ph2 ) ( \sorted-forall x ph1 ( \sorted-exists y ph2 ( \eq ( \app ph0 x ) y ) ) ) $. $}
$c \is-binary-function $.
is-binary-function-is-pattern $a #Pattern ( \is-binary-function ph0 ph1 ph2 ph3 ) $.
${ $d x y z ph0 $.
   $d x y z ph1 $.
   $d x y z ph2 $.
   $d x y z ph3 $.
   is-binary-function-is-sugar $a #Notation ( \is-binary-function ph0 ph1 ph2 ph3 ) ( \sorted-forall x ph1 ( \sorted-forall y ph2 ( \sorted-exists z ph3 ( \eq ( \app ph0 x y ) z ) ) ) ) $. $}
$c \unit-sort $.
unit-sort-is-symbol $a #Symbol \unit-sort $.
unit-sort-is-sort $a |- ( \exists-sort x ( \eq x \unit-sort ) ) $.
$c \unit $.
unit-is-pattern $a #Symbol \unit $.
unit-is-singleton $a |- ( \is-singleton \unit ) $.
unit-sort $a |- ( \eq \unit ( \inh \unit-sort ) ) $.
$c \pair-sort-symbol $.
pair-sort-symbol-is-symbol $a #Symbol \pair-sort-symbol $.
axiom-pair-sort-is-sort $a |- ( \is-binary-function \pair-sort-symbol \sort \sort \sort ) $.
$c \pair-sort $.
pair-sort-is-pattern $a #Pattern ( \pair-sort ph0 ph1 ) $.
pair-sort-is-sugar $a #Notation ( \pair-sort ph0 ph1 ) ( \app ( \app \pair-sort-symbol ph0 ) ph1 ) $.
$c \pair-symbol $.
pair-symbol-is-symbol $a #Symbol \pair-symbol $.
axiom-pair-symbol-is-binary-function $a ( \forall-sort s0 ( \forall-sort s1 ( \is-binary-function \pair-symbol s0 s1 ( \pair-sort s0 s1 ) ) ) ) $.
$c \pair $.
pair-is-pattern $a #Pattern ( \pair ph0 ph1 ) $.
pair-is-sugar $a #Notation ( \pair ph0 ph1 ) ( \app ( \app \pair-symbol ph0 ) ph1 ) $.
$c \pair-fst-symbol $.
pair-fst-symbol-is-symbol $a #Symbol \pair-fst-symbol $.
axiom-pair-fst-symbol-is-unary-function $a ( \forall-sort s0 ( \forall-sort s1 ( \is-unary-function \pair-fst-symbol ( \pair-sort s0 s1 ) s0 ) ) ) $.
$c \pair-fst $.
pair-fst-is-pattern $a #Pattern ( \pair-fst ph0 ) $.
pair-fst-is-sugar $a #Notation ( \pair-fst ph0 ) ( \app \pair-fst-symbol ph0 ) $.
$c \pair-snd-symbol $.
pair-snd-symbol-is-symbol $a #Symbol \pair-snd-symbol $.
axiom-pair-snd-symbol-is-unary-function $a ( \forall-sort s0 ( \forall-sort s1 ( \is-unary-function \pair-snd-symbol ( \pair-sort s0 s1 ) s1 ) ) ) $.
$c \pair-snd $.
pair-snd-is-pattern $a #Pattern ( \pair-snd ph0 ) $.
pair-snd-is-sugar $a #Notation ( \pair-snd ph0 ) ( \app \pair-snd-symbol ph0 ) $.
axiom-pair-fst $a |- ( \forall-sort s0 ( \forall-sort s1 ( \sorted-forall x0 s0 ( \sorted-forall x1 s2 ( \eq ( \pair-fst ( \pair x1 x2 ) ) x1 ) ) ) ) ) $.
axiom-pair-snd $a |- ( \forall-sort s0 ( \forall-sort s1 ( \sorted-forall x0 s0 ( \sorted-forall x1 s2 ( \eq ( \pair-snd ( \pair x1 x2 ) ) x2 ) ) ) ) ) $.
axiom-pair-inj $a |- ( \forall-sort s0 ( \forall-sort s1 ( \sorted-forall x0 s0 ( \sorted-forall x1 s2 ( \sorted-forall x2 s0 ( \sorted-forall x3 s2 ( \imp ( \eq ( \pair x0 x1 ) ( \pair x2 x3 ) ) ( \and ( \eq x0 x2 ) ( \eq x1 x3 ) ) ) ) ) ) ) ) ) $.
axiom-pair-sort-inh $a |- ( \forall-sort s0 ( \forall-sort s1 ( \eq ( \inh ( \pair-sort s0 s1 ) ) ( \pair ( \inh s0 ) ( \inh s1 ) ) ) ) ) $.
imp-reflexivity $a |- ( \imp ph0 ph0 ) $.
${ rule-imp-transitivity.0 $e |- ( \imp ph0 ph1 ) $.
   rule-imp-transitivity.1 $e |- ( \imp ph1 ph2 ) $.
   rule-imp-transitivity $a |- ( \imp ph0 ph2 ) $. $}
imp-transitivity $a |- ( \imp ( \imp ph0 ph1 ) ( \imp ( \imp ph1 ph2 ) ( \imp ph0 ph2 ) ) ) $.
bot-elim $a |- ( \imp \bot ph0 ) $.
contradiction $a |- ( \imp ( \imp ( \not ph0 ) \bot ) ph0 ) $.
top-intro $a |- \top $.
mp $a |- ( \imp ph0 ( \imp ( \imp ph0 ph1 ) ph1 ) ) $.
not-elim $a |- ( \imp ph0 ( \imp ( \imp ph0 \bot ) \bot ) ) $.
or-intro-left $a |- ( \imp ph0 ( \imp ( \imp ph0 \bot ) ph1 ) ) $.
contrapositive $a |- ( \imp ( \imp ph0 ph1 ) ( \imp ( \imp ph1 \bot ) ( \imp ph0 \bot ) ) ) $.
${ rule-contrapositive.0 $e |- ( \imp ph0 ph1 ) $.
   rule-contrapositive $a |- ( \imp ( \imp ph1 \bot ) ( \imp ph0 \bot ) ) $. $}
and-elim-left $a |- ( \imp ( \imp ( \imp ( \imp ( \imp ph0 \bot ) \bot ) ( \imp ph1 \bot ) ) \bot ) ph0 ) $.
and-elim-right $a |- ( \imp ( \imp ( \imp ( \imp ( \imp ph0 \bot ) \bot ) ( \imp ph1 \bot ) ) \bot ) ph1 ) $.
not-elim-alt $a |- ( \imp ( \imp ph0 \bot ) ( \imp ph0 ph1 ) ) $.
${ rule-peirce-bot.0 $e |- ( \imp ( \imp ph0 \bot ) ph0 ) $.
   rule-peirce-bot $a |- ph0 $. $}
peirce-bot $a |- ( \imp ( \imp ( \imp ph0 \bot ) ph0 ) ph0 ) $.
${ rule-peirce.0 $e |- ( \imp ( \imp ph0 ph1 ) ph0 ) $.
   rule-peirce $a |- ph0 $. $}
peirce $a |- ( \imp ( \imp ( \imp ph0 ph1 ) ph0 ) ph0 ) $.
${ rule-or-elim-alt.0 $e |- ( \imp ph0 ph2 ) $.
   rule-or-elim-alt.1 $e |- ( \imp ph1 ph2 ) $.
   rule-or-elim-alt.2 $e |- ( \imp ( \imp ph0 \bot ) ph1 ) $.
   rule-or-elim-alt $a |- ph2 $. $}
${ rule-or-elim.0 $e |- ( \imp ph0 ph2 ) $.
   rule-or-elim.1 $e |- ( \imp ph1 ph2 ) $.
   rule-or-elim $a |- ( \imp ( \imp ( \imp ph0 \bot ) ph1 ) ph2 ) $. $}
or-elim $a |- ( \imp ( \imp ph0 ph2 ) ( \imp ( \imp ph1 ph2 ) ( \imp ( \imp ( \imp ph0 \bot ) ph1 ) ph2 ) ) ) $.
${ rule-and-intro-alt.0 $e |- ph0 $.
   rule-and-intro-alt $a |- ( \imp ph1 ( \imp ( \imp ( \imp ( \imp ph0 \bot ) \bot ) ( \imp ph1 \bot ) ) \bot ) ) $. $}
and-intro $a |- ( \imp ph0 ( \imp ph1 ( \imp ( \imp ( \imp ( \imp ph0 \bot ) \bot ) ( \imp ph1 \bot ) ) \bot ) ) ) $.
${ rule-and-intro.0 $e |- ph0 $.
   rule-and-intro.1 $e |- ph1 $.
   rule-and-intro $a |- ( \imp ( \imp ( \imp ( \imp ph0 \bot ) \bot ) ( \imp ph1 \bot ) ) \bot ) $. $}
and-elim-left-sugar $a |- ( \imp ( \and ph0 ph1 ) ph0 ) $.
and-elim-right-sugar $a |- ( \imp ( \and ph0 ph1 ) ph1 ) $.
and-intro-sugar $a |- ( \imp ph0 ( \imp ph1 ( \and ph0 ph1 ) ) ) $.
${ rule-and-intro-sugar.0 $e |- ph0 $.
   rule-and-intro-sugar.1 $e |- ph1 $.
   rule-and-intro-sugar $a |- ( \and ph0 ph1 ) $. $}
${ rule-and-intro-alt2-sugar.0 $e |- ( \imp ph0 ph1 ) $.
   rule-and-intro-alt2-sugar.1 $e |- ( \imp ph0 ph2 ) $.
   rule-and-intro-alt2-sugar $a |- ( \imp ph0 ( \and ph1 ph2 ) ) $. $}
or-intro-left-sugar $a |- ( \imp ph0 ( \or ph0 ph1 ) ) $.
or-intro-right-sugar $a |- ( \imp ph0 ( \or ph1 ph0 ) ) $.
${ rule-or-elim-alt-sugar.0 $e |- ( \imp ph0 ph2 ) $.
   rule-or-elim-alt-sugar.1 $e |- ( \imp ph1 ph2 ) $.
   rule-or-elim-alt-sugar.2 $e |- ( \or ph0 ph1 ) $.
   rule-or-elim-alt-sugar $a |- ph2 $. $}
${ rule-or-elim-sugar.0 $e |- ( \imp ph0 ph2 ) $.
   rule-or-elim-sugar.1 $e |- ( \imp ph1 ph2 ) $.
   rule-or-elim-sugar $a |- ( \imp ( \or ph0 ph1 ) ph2 ) $. $}
or-elim-sugar $a |- ( \imp ( \imp ph0 ph2 ) ( \imp ( \imp ph1 ph2 ) ( \imp ( \or ph0 ph1 ) ph2 ) ) ) $.
${ rule-contradiction.0 $e |- ( \imp ( \not ph0 ) \bot ) $.
   rule-contradiction $a |- ph0 $. $}
${ rule-bot-elim.0 $e |- \bot $.
   rule-bot-elim $a |- ph0 $. $}
${ rule-not-elim-sugar.0 $e |- ph0 $.
   rule-not-elim-sugar.1 $e |- ( \not ph0 ) $.
   rule-not-elim-sugar $a |- \bot $. $}
${ rule-iff-intro.0 $e |- ( \imp ph0 ph1 ) $.
   rule-iff-intro.1 $e |- ( \imp ph1 ph0 ) $.
   rule-iff-intro $a |- ( \iff ph0 ph1 ) $. $}
contrapositive-sugar $a |- ( \imp ( \imp ph0 ph1 ) ( \imp ( \not ph1 ) ( \not ph0 ) ) ) $.
${ rule-contrapositive-sugar.0 $e |- ( \imp ph0 ph1 ) $.
   rule-contrapositive-sugar $a |- ( \imp ( \not ph1 ) ( \not ph0 ) ) $. $}
${ rule-contrapositive-alt-sugar.0 $e |- ( \imp ( \not ph0 ) ( \not ph1 ) ) $.
   rule-contrapositive-alt-sugar $a |- ( \imp ph1 ph0 ) $. $}
excluded-middle $a |- ( \or ph0 ( \not ph0 ) ) $.
case $a |- ( \imp ( \imp ph0 ph1 ) ( \imp ( \imp ( \not ph0 ) ph1 ) ph1 ) ) $.
${ rule-case.0 $e |- ( \imp ph0 ph1 ) $.
   rule-case.1 $e |- ( \imp ( \not ph0 ) ph1 ) $.
   rule-case $a |- ph1 $. $}
${ rule-case-alt.0 $e |- ( \or ph0 ph1 ) $.
   rule-case-alt.1 $e |- ( \imp ph0 ph2 ) $.
   rule-case-alt.2 $e |- ( \imp ph1 ph2 ) $.
   rule-case-alt $a |- ph2 $. $}
${ rule-imp-compat-in-or.0 $e |- ( \imp ph0 ph1 ) $.
   rule-imp-compat-in-or.1 $e |- ( \imp ph2 ph3 ) $.
   rule-imp-compat-in-or $a |- ( \imp ( \or ph0 ph2 ) ( \or ph1 ph3 ) ) $. $}
${ rule-imp-compat-in-and.0 $e |- ( \imp ph0 ph1 ) $.
   rule-imp-compat-in-and.1 $e |- ( \imp ph2 ph3 ) $.
   rule-imp-compat-in-and $a |- ( \imp ( \and ph0 ph2 ) ( \and ph1 ph3 ) ) $. $}
iff-elim-left $a |- ( \imp ( \iff ph0 ph1 ) ( \imp ph0 ph1 ) ) $.
iff-elim-right $a |- ( \imp ( \iff ph0 ph1 ) ( \imp ph1 ph0 ) ) $.
${ rule-iff-elim-left.0 $e |- ( \iff ph0 ph1 ) $.
   rule-iff-elim-left $a |- ( \imp ph0 ph1 ) $. $}
${ rule-iff-elim-right.0 $e |- ( \iff ph0 ph1 ) $.
   rule-iff-elim-right $a |- ( \imp ph1 ph0 ) $. $}
iff-reflexivity $a |- ( \iff ph0 ph0 ) $.
${ rule-iff-symmetry.0 $e |- ( \iff ph0 ph1 ) $.
   rule-iff-symmetry $a |- ( \iff ph1 ph0 ) $. $}
${ rule-iff-transitivity.0 $e |- ( \iff ph0 ph1 ) $.
   rule-iff-transitivity.1 $e |- ( \iff ph1 ph2 ) $.
   rule-iff-transitivity $a |- ( \iff ph0 ph2 ) $. $}
${ rule-iff-compat-in-or.0 $e |- ( \iff ph0 ph1 ) $.
   rule-iff-compat-in-or.1 $e |- ( \iff ph2 ph3 ) $.
   rule-iff-compat-in-or $a |- ( \iff ( \or ph0 ph2 ) ( \or ph1 ph3 ) ) $. $}
${ rule-iff-compat-in-and.0 $e |- ( \iff ph0 ph1 ) $.
   rule-iff-compat-in-and.1 $e |- ( \iff ph2 ph3 ) $.
   rule-iff-compat-in-and $a |- ( \iff ( \and ph0 ph2 ) ( \and ph1 ph3 ) ) $. $}
${ rule-iff-compat-in-not.0 $e |- ( \iff ph0 ph1 ) $.
   rule-iff-compat-in-not $a |- ( \iff ( \not ph0 ) ( \not ph1 ) ) $. $}
double-negation $a |- ( \iff ( \not ( \not ph0 ) ) ph0 ) $.
dn-intro-sugar $a |- ( \imp ph0 ( \not ( \not ph0 ) ) ) $.
dn-elim-sugar $a |- ( \imp ( \not ( \not ph0 ) ) ph0 ) $.
imp-to-or $a |- ( \iff ( \imp ph0 ph1 ) ( \or ( \not ph0 ) ph1 ) ) $.
bot-to-and $a |- ( \iff \bot ( \and ph0 ( \not ph0 ) ) ) $.
top-to-or $a |- ( \iff \top ( \or ph0 ( \not ph0 ) ) ) $.
iff-to-and $a |- ( \iff ( \iff ph0 ph1 ) ( \and ( \or ( \not ph0 ) ph1 ) ( \or ( \not ph1 ) ph0 ) ) ) $.
and-associativity $a |- ( \iff ( \and ( \and ph0 ph1 ) ph2 ) ( \and ph0 ( \and ph1 ph2 ) ) ) $.
and-commutativity $a |- ( \iff ( \and ph0 ph1 ) ( \and ph1 ph0 ) ) $.
or-associativity $a |- ( \iff ( \or ( \or ph0 ph1 ) ph2 ) ( \or ph0 ( \or ph1 ph2 ) ) ) $.
or-commutativity $a |- ( \iff ( \or ph0 ph1 ) ( \or ph1 ph0 ) ) $.
de-morgan-and $a |- ( \iff ( \not ( \and ph0 ph1 ) ) ( \or ( \not ph0 ) ( \not ph1 ) ) ) $.
de-morgan-or $a |- ( \iff ( \not ( \or ph0 ph1 ) ) ( \and ( \not ph0 ) ( \not ph1 ) ) ) $.
or-idempotency $a |- ( \iff ( \or ph0 ph0 ) ph0 ) $.
and-idempotency $a |- ( \iff ( \and ph0 ph0 ) ph0 ) $.
or-complement $a |- ( \iff ( \or ( \not ph0 ) ph0 ) \top ) $.
and-top $a |- ( \iff ( \and \top ph0 ) ph0 ) $.
or-top $a |- ( \iff ( \or \top ph0 ) \top ) $.
and-bot $a |- ( \imp ( \and \bot ph0 ) \bot ) $.
or-commutativity-alt $a |- ( \imp ( \imp ( \not ph0 ) ph1 ) ( \imp ( \not ph1 ) ph0 ) ) $.
or-to-imp-alt $a |- ( \imp ( \or ph0 ph1 ) ( \imp ( \not ph0 ) ph1 ) ) $.
${ rule-or-left-distributivity-right.0 $e |- ( \and ( \or ph0 ph2 ) ( \or ph1 ph2 ) ) $.
   rule-or-left-distributivity-right $a |- ( \or ( \and ph0 ph1 ) ph2 ) $. $}
or-left-distributivity-right $a |- ( \imp ( \and ( \or ph0 ph2 ) ( \or ph1 ph2 ) ) ( \or ( \and ph0 ph1 ) ph2 ) ) $.
or-left-distributivity $a |- ( \iff ( \or ( \and ph0 ph1 ) ph2 ) ( \and ( \or ph0 ph2 ) ( \or ph1 ph2 ) ) ) $.
or-right-distributivity $a |- ( \iff ( \or ph0 ( \and ph1 ph2 ) ) ( \and ( \or ph0 ph1 ) ( \or ph0 ph2 ) ) ) $.
and-left-distributivity $a |- ( \iff ( \and ( \or ph0 ph1 ) ph2 ) ( \or ( \and ph0 ph2 ) ( \and ph1 ph2 ) ) ) $.
resolution-1 $a |- ( \imp ( \and ( \not ph0 ) ph0 ) \bot ) $.
resolution-2 $a |- ( \imp ( \and ( \or ( \not ph0 ) ph1 ) ph0 ) ph1 ) $.
resolution-3 $a |- ( \imp ( \and ( \not ph0 ) ( \or ph0 ph1 ) ) ph1 ) $.
resolution-4 $a |- ( \imp ( \and ( \or ( \not ph0 ) ph1 ) ( \or ph0 ph2 ) ) ( \or ph1 ph2 ) ) $.
${ premises-switch.0 $e |- ( \imp ph0 ( \imp ph1 ph2 ) ) $.
   premises-switch $a |- ( \imp ph1 ( \imp ph0 ph2 ) ) $. $}
premises-switch-alt $a |- ( \imp ( \imp ph0 ( \imp ph1 ph2 ) ) ( \imp ph1 ( \imp ph0 ph2 ) ) ) $.
${ $d xX ph0 $.
   substitution-disjoint $a #Substitution ph0 ph0 ph1 xX $. $}
substitution-top $a #Substitution \top \top ph0 xX $.
${ substitution-not.0 $e #Substitution ph1 ph2 ph0 xX $.
   substitution-not $a #Substitution ( \not ph1 ) ( \not ph2 ) ph0 xX $. $}
${ substitution-or.0 $e #Substitution ph1 ph3 ph0 xX $.
   substitution-or.1 $e #Substitution ph2 ph4 ph0 xX $.
   substitution-or $a #Substitution ( \or ph1 ph2 ) ( \or ph3 ph4 ) ph0 xX $. $}
${ substitution-and.0 $e #Substitution ph1 ph3 ph0 xX $.
   substitution-and.1 $e #Substitution ph2 ph4 ph0 xX $.
   substitution-and $a #Substitution ( \and ph1 ph2 ) ( \and ph3 ph4 ) ph0 xX $. $}
${ substitution-iff.0 $e #Substitution ph1 ph3 ph0 xX $.
   substitution-iff.1 $e #Substitution ph2 ph4 ph0 xX $.
   substitution-iff $a #Substitution ( \iff ph1 ph2 ) ( \iff ph3 ph4 ) ph0 xX $. $}
${ substitution-ceil.0 $e #Substitution ph1 ph2 ph0 xX $.
   substitution-ceil $a #Substitution ( \ceil ph1 ) ( \ceil ph2 ) ph0 xX $. $}
${ substitution-floor.0 $e #Substitution ph1 ph2 ph0 xX $.
   substitution-floor $a #Substitution ( \floor ph1 ) ( \floor ph2 ) ph0 xX $. $}
${ substitution-included.0 $e #Substitution ph1 ph3 ph0 xX $.
   substitution-included.1 $e #Substitution ph2 ph4 ph0 xX $.
   substitution-included $a #Substitution ( \included ph1 ph2 ) ( \included ph3 ph4 ) ph0 xX $. $}
${ substitution-eq.0 $e #Substitution ph1 ph3 ph0 xX $.
   substitution-eq.1 $e #Substitution ph2 ph4 ph0 xX $.
   substitution-eq $a #Substitution ( \eq ph1 ph2 ) ( \eq ph3 ph4 ) ph0 xX $. $}
${ substitution-inh.0 $e #Substitution ph1 ph2 ph0 xX $.
   substitution-inh $a #Substitution ( \inh ph1 ) ( \inh ph2 ) ph0 xX $. $}
${ substitution-in-sort.0 $e #Substitution ph1 ph3 ph0 xX $.
   substitution-in-sort.1 $e #Substitution ph2 ph4 ph0 xX $.
   substitution-in-sort $a #Substitution ( \in-sort ph1 ph2 ) ( \in-sort ph3 ph4 ) ph0 xX $. $}
${ substitution-pair-sort.0 $e #Substitution ph1 ph3 ph0 xX $.
   substitution-pair-sort.1 $e #Substitution ph2 ph4 ph0 xX $.
   substitution-pair-sort $a #Substitution ( \pair-sort ph1 ph2 ) ( \pair-sort ph3 ph4 ) ph0 xX $. $}
${ substitution-pair.0 $e #Substitution ph1 ph3 ph0 xX $.
   substitution-pair.1 $e #Substitution ph2 ph4 ph0 xX $.
   substitution-pair $a #Substitution ( \pair ph1 ph2 ) ( \pair ph3 ph4 ) ph0 xX $. $}
${ substitution-pair-fst.0 $e #Substitution ph1 ph2 ph0 xX $.
   substitution-pair-fst $a #Substitution ( \pair-fst ph1 ) ( \pair-fst ph2 ) ph0 xX $. $}
${ substitution-pair-snd.0 $e #Substitution ph1 ph2 ph0 xX $.
   substitution-pair-snd $a #Substitution ( \pair-snd ph1 ) ( \pair-snd ph2 ) ph0 xX $. $}
${ $d xX x $.
   $d ph2 x $.
   substitution-exists-alt.0 $e #Substitution ph0 ph1 ph2 xX $.
   substitution-exists-alt $a #Substitution ( \exists x ph0 ) ( \exists x ph1 ) ph2 xX $. $}
${ notation-not.0 $e #Notation ph0 ph1 $.
   notation-not $a #Notation ( \not ph0 ) ( \not ph1 ) $. $}
${ notation-or.0 $e #Notation ph0 ph2 $.
   notation-or.1 $e #Notation ph1 ph3 $.
   notation-or $a #Notation ( \or ph0 ph1 ) ( \or ph2 ph3 ) $. $}
${ notation-and.0 $e #Notation ph0 ph2 $.
   notation-and.1 $e #Notation ph1 ph3 $.
   notation-and $a #Notation ( \and ph0 ph1 ) ( \and ph2 ph3 ) $. $}
${ notation-iff.0 $e #Notation ph0 ph2 $.
   notation-iff.1 $e #Notation ph1 ph3 $.
   notation-iff $a #Notation ( \iff ph0 ph1 ) ( \iff ph2 ph3 ) $. $}
${ notation-forall.0 $e #Notation ph0 ph1 $.
   notation-forall $a #Notation ( \forall x ph0 ) ( \forall x ph1 ) $. $}
${ notation-ceil.0 $e #Notation ph0 ph1 $.
   notation-ceil $a #Notation ( \ceil ph0 ) ( \ceil ph1 ) $. $}
${ notation-floor.0 $e #Notation ph0 ph1 $.
   notation-floor $a #Notation ( \floor ph0 ) ( \floor ph1 ) $. $}
${ notation-in.0 $e #Notation ph0 ph1 $.
   notation-in $a #Notation ( \in x ph0 ) ( \in x ph1 ) $. $}
${ notation-included.0 $e #Notation ph0 ph2 $.
   notation-included.1 $e #Notation ph1 ph3 $.
   notation-included $a #Notation ( \included ph0 ph1 ) ( \included ph2 ph3 ) $. $}
${ notation-eq.0 $e #Notation ph0 ph2 $.
   notation-eq.1 $e #Notation ph1 ph3 $.
   notation-eq $a #Notation ( \eq ph0 ph1 ) ( \eq ph2 ph3 ) $. $}
${ notation-inh.0 $e #Notation ph0 ph1 $.
   notation-inh $a #Notation ( \inh ph0 ) ( \inh ph1 ) $. $}
${ notation-in-sort.0 $e #Notation ph0 ph2 $.
   notation-in-sort.1 $e #Notation ph1 ph3 $.
   notation-in-sort $a #Notation ( \in-sort ph0 ph1 ) ( \in-sort ph2 ph3 ) $. $}
${ notation-sorted-forall.0 $e #Notation ph0 ph2 $.
   notation-sorted-forall.1 $e #Notation ph1 ph3 $.
   notation-sorted-forall $a #Notation ( \sorted-forall x ph0 ph1 ) ( \sorted-forall x ph2 ph3 ) $. $}
${ notation-sorted-exists.0 $e #Notation ph0 ph2 $.
   notation-sorted-exists.1 $e #Notation ph1 ph3 $.
   notation-sorted-exists $a #Notation ( \sorted-exists x ph0 ph1 ) ( \sorted-exists x ph2 ph3 ) $. $}
${ notation-forall-sort.0 $e #Notation ph0 ph1 $.
   notation-forall-sort $a #Notation ( \forall-sort s0 ph0 ) ( \forall-sort s0 ph1 ) $. $}
${ notation-exists-sort.0 $e #Notation ph0 ph1 $.
   notation-exists-sort $a #Notation ( \exists-sort s0 ph0 ) ( \exists-sort s0 ph1 ) $. $}
${ notation-is-top.0 $e #Notation ph0 ph1 $.
   notation-is-top $a #Notation ( \is-top ph0 ) ( \is-top ph1 ) $. $}
${ notation-is-bot.0 $e #Notation ph0 ph1 $.
   notation-is-bot $a #Notation ( \is-bot ph0 ) ( \is-bot ph1 ) $. $}
${ notation-is-predicate.0 $e #Notation ph0 ph1 $.
   notation-is-predicate $a #Notation ( \is-predicate ph0 ) ( \is-predicate ph1 ) $. $}
${ $d x ph0 $.
   propagation-app-bot-left $a |- ( \imp ( \app \bot ph0 ) \bot ) $. $}
${ $d x ph0 $.
   propagation-app-bot-right $a |- ( \imp ( \app ph0 \bot ) \bot ) $. $}
${ $d x ph2 $.
   propagation-app-or-left $a |- ( \imp ( \app ( \or ph0 ph1 ) ph2 ) ( \or ( \app ph0 ph2 ) ( \app ph1 ph2 ) ) ) $. $}
${ $d x ph0 $.
   propagation-app-or-right $a |- ( \imp ( \app ph0 ( \or ph1 ph2 ) ) ( \or ( \app ph0 ph1 ) ( \app ph0 ph2 ) ) ) $. $}
${ $d y ph1 $.
   $d y x $.
   propagation-app-exists-left.0 $e #Fresh x ph1 $.
   propagation-app-exists-left $a |- ( \imp ( \app ( \exists x ph0 ) ph1 ) ( \exists x ( \app ph0 ph1 ) ) ) $. $}
${ $d y ph0 $.
   $d y x $.
   propagation-app-exists-right.0 $e #Fresh x ph0 $.
   propagation-app-exists-right $a |- ( \imp ( \app ph0 ( \exists x ph1 ) ) ( \exists x ( \app ph0 ph1 ) ) ) $. $}
${ $d x ph2 $.
   frame-app-left.0 $e |- ( \imp ph0 ph1 ) $.
   frame-app-left $a |- ( \imp ( \app ph0 ph2 ) ( \app ph1 ph2 ) ) $. $}
${ $d x ph0 $.
   frame-app-right.0 $e |- ( \imp ph1 ph2 ) $.
   frame-app-right $a |- ( \imp ( \app ph0 ph1 ) ( \app ph0 ph2 ) ) $. $}
lemma-top $a |- \top $.
${ lemma-forall-gen.0 $e |- ( \imp ph0 ph1 ) $.
   lemma-forall-gen.1 $e #Fresh x ph0 $.
   lemma-forall-gen $a |- ( \imp ph0 ( \forall x ph1 ) ) $. $}
lemma-dn-intro $a |- ( \imp ph0 ( \imp ( \imp ph0 \bot ) \bot ) ) $.
lemma-imp2-iff $a |- ( \imp ( \and ( \imp ph0 ( \imp ph1 ph2 ) ) ( \imp ph0 ( \imp ph2 ph1 ) ) ) ( \imp ph0 ( \iff ph1 ph2 ) ) ) $.
${ lemma-forall-intro.0 $e |- ph0 $.
   lemma-forall-intro $a |- ( \forall x ph0 ) $. $}
${ forall-elim.0 $e #Substitution ph1 ph0 y x $.
   forall-elim $a |- ( \imp ( \forall x ph0 ) ph1 ) $. $}
forall-elim-alt $a |- ( \imp ( \forall x ph0 ) ph0 ) $.
forall-elim-alt2 $a |- ( \imp ( \imp ph0 ( \forall x ph1 ) ) ( \imp ph0 ph1 ) ) $.
forall-intro-alt $a |- ( \imp ( \imp ph0 ph1 ) ( \imp ( \forall x ph0 ) ph1 ) ) $.
exists-intro-alt $a |- ( \imp ph0 ( \exists x ph0 ) ) $.
${ lemma-forall-elim.0 $e |- ( \forall x ph0 ) $.
   lemma-forall-elim $a |- ph0 $. $}
${ $d x ph0 $.
   lemma-forall-sort-elim-disjoint.0 $e |- ( \forall-sort x ph0 ) $.
   lemma-forall-sort-elim-disjoint $a |- ph0 $. $}
${ $d x y $.
   alpha-exists.0 $e #Fresh y ph0 $.
   alpha-exists.1 $e #Substitution ph1 ph0 y x $.
   alpha-exists $a |- ( \iff ( \exists x ph0 ) ( \exists y ph1 ) ) $. $}
${ $d x y $.
   alpha-forall.0 $e #Fresh y ph0 $.
   alpha-forall.1 $e #Substitution ph1 ph0 y x $.
   alpha-forall $a |- ( \iff ( \forall x ph0 ) ( \forall y ph1 ) ) $. $}
${ $d x y $.
   alpha-forall-sort.0 $e #Fresh y ph0 $.
   alpha-forall-sort.1 $e #Substitution ph1 ph0 y x $.
   alpha-forall-sort $a |- ( \iff ( \forall-sort x ph0 ) ( \forall-sort y ph1 ) ) $. $}
${ $d x y $.
   fv-subst-left.0 $e |- ph0 $.
   fv-subst-left.1 $e #Substitution ph1 ph0 y x $.
   fv-subst-left.2 $e #Fresh y ph0 $.
   fv-subst-left $a |- ph1 $. $}
${ $d x y $.
   fv-subst-right.0 $e |- ph1 $.
   fv-subst-right.1 $e #Substitution ph1 ph0 y x $.
   fv-subst-right.2 $e #Fresh y ph0 $.
   fv-subst-right $a |- ph0 $. $}
lemma-ceil-compat-in-or $a |- ( \iff ( \ceil ( \or ph0 ph1 ) ) ( \or ( \ceil ph0 ) ( \ceil ph1 ) ) ) $.
lemma-x-and-ph-imp-not-ceil-x-and-not-ph $a |- ( \imp ( \and x ph0 ) ( \not ( \ceil ( \and x ( \not ph0 ) ) ) ) ) $.
lemma-curry-left $a |- ( \imp ( \imp ( \and ph0 ph1 ) ph2 ) ( \imp ph0 ( \imp ph1 ph2 ) ) ) $.
lemma-curry-right $a |- ( \imp ( \imp ph0 ( \imp ph1 ph2 ) ) ( \imp ( \and ph0 ph1 ) ph2 ) ) $.
${ rule-uncurry.0 $e |- ( \imp ph0 ( \imp ph1 ph2 ) ) $.
   rule-uncurry $a |- ( \imp ( \and ph0 ph1 ) ph2 ) $. $}
${ rule-curry.0 $e |- ( \imp ( \and ph0 ph1 ) ph2 ) $.
   rule-curry $a |- ( \imp ph0 ( \imp ph1 ph2 ) ) $. $}
${ prenex-exists-and-left.0 $e #Fresh x ph1 $.
   prenex-exists-and-left $a |- ( \imp ( \and ( \exists x ph0 ) ph1 ) ( \exists x ( \and ph0 ph1 ) ) ) $. $}
${ prenex-forall-and-left.0 $e #Fresh x ph1 $.
   prenex-forall-and-left $a |- ( \imp ( \and ( \forall x ph0 ) ph1 ) ( \forall x ( \and ph0 ph1 ) ) ) $. $}
lemma-disjoint-disj $a |- ( \imp ( \or ph0 ph1 ) ( \or ( \and ph0 ( \not ph1 ) ) ph1 ) ) $.
${ lemma-ph-imp-exists-x-and-ph.0 $e #Fresh x ph0 $.
   lemma-ph-imp-exists-x-and-ph $a |- ( \imp ph0 ( \exists x ( \and x ph0 ) ) ) $. $}
${ $d x ph0 $.
   lemma-app-context-imp-ceil.0 $e #ApplicationContext y ph1 $.
   lemma-app-context-imp-ceil.1 $e #Substitution ph2 ph1 ph0 y $.
   lemma-app-context-imp-ceil.2 $e #Substitution ph3 ph1 ( \exists x ( \and x ph0 ) ) y $.
   lemma-app-context-imp-ceil.3 $e #Substitution ph4 ph1 ( \and x ph0 ) y $.
   lemma-app-context-imp-ceil.4 $e |- ( \imp ph2 ph3 ) $.
   lemma-app-context-imp-ceil.5 $e |- ( \imp ph3 ( \exists x ph4 ) ) $.
   lemma-app-context-imp-ceil $a |- ( \imp ph2 ( \ceil ph0 ) ) $. $}
${ $d x ph0 $.
   lemma-ph-imp-ceil-ph $a |- ( \imp ph0 ( \ceil ph0 ) ) $. $}
${ $d x ph0 $.
   $d y sg0 $.
   $d y sg1 $.
   lemma-app-app-ph-imp-ceil-ph $a |- ( \imp ( \app sg0 ( \app sg1 ph0 ) ) ( \ceil ph0 ) ) $. $}
${ lemma-imp-compat-in-ceil.0 $e |- ( \imp ph0 ph1 ) $.
   lemma-imp-compat-in-ceil $a |- ( \imp ( \ceil ph0 ) ( \ceil ph1 ) ) $. $}
${ lemma-imp-compat-in-floor.0 $e |- ( \imp ph0 ph1 ) $.
   lemma-imp-compat-in-floor $a |- ( \imp ( \floor ph0 ) ( \floor ph1 ) ) $. $}
lemma-ceil2-imp-ceil $a |- ( \imp ( \ceil ( \ceil ph0 ) ) ( \ceil ph0 ) ) $.
lemma-floor-imp-floor2 $a |- ( \imp ( \floor ph0 ) ( \floor ( \floor ph0 ) ) ) $.
lemma-floor-elim-alt $a |- ( \imp ( \floor ph0 ) ph0 ) $.
${ lemma-floor-intro.0 $e |- ph0 $.
   lemma-floor-intro $a |- ( \floor ph0 ) $. $}
${ lemma-floor-elim.0 $e |- ( \floor ph0 ) $.
   lemma-floor-elim $a |- ph0 $. $}
lemma-floor-compat-in-and $a |- ( \iff ( \floor ( \and ph0 ph1 ) ) ( \and ( \floor ph0 ) ( \floor ph1 ) ) ) $.
lemma-floor-imp-floor $a |- ( \imp ( \floor ( \imp ph0 ph1 ) ) ( \imp ( \floor ph0 ) ( \floor ph1 ) ) ) $.
${ lemma-floor-imp-elim.0 $e |- ( \floor ( \imp ph0 ph1 ) ) $.
   lemma-floor-imp-elim $a |- ( \imp ( \floor ph0 ) ( \floor ph1 ) ) $. $}
${ lemma-in-sort.0 $e |- ( \in-sort ph1 ph0 ) $.
   lemma-in-sort $a |- ( \imp ph1 ( \inh ph0 ) ) $. $}
${ lemma-mp2.0 $e |- ph0 $.
   lemma-mp2.1 $e |- ph1 $.
   lemma-mp2.2 $e |- ( \imp ( \and ph0 ph1 ) ph2 ) $.
   lemma-mp2 $a |- ph2 $. $}
${ lemma-iff-intro-d.0 $e |- ( \imp ph0 ( \imp ph1 ph2 ) ) $.
   lemma-iff-intro-d.1 $e |- ( \imp ph0 ( \imp ph2 ph1 ) ) $.
   lemma-iff-intro-d $a |- ( \imp ph0 ( \iff ph1 ph2 ) ) $. $}
${ lemma-pmp2.0 $e |- ( \imp ph0 ph1 ) $.
   lemma-pmp2.1 $e |- ( \imp ph0 ( \imp ph1 ph2 ) ) $.
   lemma-pmp2 $a |- ( \imp ph0 ph2 ) $. $}
${ lemma-imp-not-not.0 $e |- ( \imp ph1 ph0 ) $.
   lemma-imp-not-not $a |- ( \imp ( \not ph0 ) ( \not ph1 ) ) $. $}
${ lemma-double-not-ceil-alt.0 $e |- ( \imp ( \ceil ( \not ( \ceil ph0 ) ) ) ( \not ( \ceil ph0 ) ) ) $.
   lemma-double-not-ceil-alt $a |- ( \imp ( \ceil ph0 ) ( \not ( \ceil ( \not ( \ceil ph0 ) ) ) ) ) $. $}
${ lemma-not-ceil-elim.0 $e |- ( \not ph0 ) $.
   lemma-not-ceil-elim $a |- ( \not ( \ceil ph0 ) ) $. $}
lemma-and-ceil $a |- ( \eq ( \and ( \ceil x ) ph0 ) ph0 ) $.
lemma-or-and $a |- ( \eq ( \or ( \and ( \not ph1 ) ph0 ) ( \and ( \ceil ph1 ) ph0 ) ) ph0 ) $.
${ lemma-not-and-rewrite.0 $e |- ( \imp ph1 ( \not ph0 ) ) $.
   lemma-not-and-rewrite $a |- ( \not ( \and ph0 ph1 ) ) $. $}
${ lemma-eq-intro.0 $e |- ( \imp ph0 ph1 ) $.
   lemma-eq-intro.1 $e |- ( \imp ph1 ph0 ) $.
   lemma-eq-intro $a |- ( \eq ph0 ph1 ) $. $}
${ lemma-eq-1.0 $e |- ( \imp ph1 ph0 ) $.
   lemma-eq-1 $a |- ( \eq ( \and ph0 ph1 ) ph1 ) $. $}
lemma-eq-imp $a |- ( \imp ( \eq ph0 ph1 ) ( \imp ph0 ph1 ) ) $.
lemma-eq-reflexivity $a |- ( \eq ph0 ph0 ) $.
${ lemma-eq-symmetry.0 $e |- ( \eq ph1 ph0 ) $.
   lemma-eq-symmetry $a |- ( \eq ph0 ph1 ) $. $}
${ lemma-eq-transitivity.0 $e |- ( \eq ph0 ph1 ) $.
   lemma-eq-transitivity.1 $e |- ( \eq ph1 ph2 ) $.
   lemma-eq-transitivity $a |- ( \eq ph0 ph2 ) $. $}
${ lemma-eq-congruence-or.0 $e |- ( \eq ph0 ph2 ) $.
   lemma-eq-congruence-or.1 $e |- ( \eq ph1 ph3 ) $.
   lemma-eq-congruence-or $a |- ( \eq ( \or ph0 ph1 ) ( \or ph2 ph3 ) ) $. $}
${ lemma-eq-congruence-and.0 $e |- ( \eq ph0 ph2 ) $.
   lemma-eq-congruence-and.1 $e |- ( \eq ph1 ph3 ) $.
   lemma-eq-congruence-and $a |- ( \eq ( \and ph0 ph1 ) ( \and ph2 ph3 ) ) $. $}
${ lemma-eq-congruence-not.0 $e |- ( \eq ph0 ph1 ) $.
   lemma-eq-congruence-not $a |- ( \eq ( \not ph0 ) ( \not ph1 ) ) $. $}
${ lemma-eq-congruence-ceil.0 $e |- ( \eq ph0 ph1 ) $.
   lemma-eq-congruence-ceil $a |- ( \eq ( \ceil ph0 ) ( \ceil ph1 ) ) $. $}
${ lemma-prenex-forall-imp.0 $e #Fresh x ph1 $.
   lemma-prenex-forall-imp.1 $e |- ( \forall x ( \imp ph0 ph1 ) ) $.
   lemma-prenex-forall-imp $a |- ( \imp ( \exists x ph0 ) ph1 ) $. $}
lemma-i-giveup-on-naming-2 $a |- ( \imp ( \imp ph0 ( \imp ph1 ph2 ) ) ( \imp ( \imp ph3 ph1 ) ( \imp ph0 ( \imp ph3 ph2 ) ) ) ) $.
${ functional-substitution-var-same.0 $e #Fresh x ph0 $.
   functional-substitution-var-same.1 $e #Substitution ph2 ph1 ph0 x $.
   functional-substitution-var-same $a |- ( \imp ( \exists x ( \eq x ph0 ) ) ( \imp ( \forall x ph1 ) ph2 ) ) $. $}
${ fresh-in-eq.0 $e #Fresh xX ph0 $.
   fresh-in-eq.1 $e #Fresh xX ph1 $.
   fresh-in-eq $a #Fresh xX ( \eq ph0 ph1 ) $. $}
${ $d x y $.
   $d x ph0 $.
   functional-substitution-var-diff.0 $e #Fresh y ph0 $.
   functional-substitution-var-diff.1 $e #Substitution ph2 ph1 ph0 x $.
   functional-substitution-var-diff $a |- ( \imp ( \exists y ( \eq y ph0 ) ) ( \imp ( \forall x ph1 ) ph2 ) ) $. $}
${ $d z ph0 $.
   $d z ph1 $.
   $d z ph2 $.
   $d z y $.
   $d z x $.
   functional-substitution.0 $e #Fresh y ph0 $.
   functional-substitution.1 $e #Substitution ph2 ph1 ph0 x $.
   functional-substitution.2 $e #Substitution ph3 ph1 z x $.
   functional-substitution $a |- ( \imp ( \exists y ( \eq y ph0 ) ) ( \imp ( \forall x ph1 ) ph2 ) ) $. $}
${ lemma-imp-compat-in-exists.0 $e |- ( \imp ph0 ph1 ) $.
   lemma-imp-compat-in-exists $a |- ( \imp ( \exists x ph0 ) ( \exists x ph1 ) ) $. $}
${ lemma-imp-compat-in-forall.0 $e |- ( \imp ph0 ph1 ) $.
   lemma-imp-compat-in-forall $a |- ( \imp ( \forall x ph0 ) ( \forall x ph1 ) ) $. $}
exists-and-elim $a |- ( \imp ( \exists x ( \and ph0 ph1 ) ) ( \and ( \exists x ph0 ) ( \exists x ph1 ) ) ) $.
${ rule-exists-and-elim.0 $e |- ( \exists x ( \and ph0 ph1 ) ) $.
   rule-exists-and-elim-left $a |- ( \exists x ph0 ) $.
   rule-exists-and-elim-right $a |- ( \exists x ph1 ) $. $}
${ singleton-inclusion.0 $e #Fresh y ph0 $.
   singleton-inclusion.1 $e #Fresh y ph1 $.
   singleton-inclusion $a |- ( \imp ( \exists y ( \and ( \included y ph1 ) ( \eq y ph0 ) ) ) ( \included ph0 ph1 ) ) $. $}
${ lemma-floor-intro-imp3.0 $e |- ( \imp ph0 ( \imp ph1 ph2 ) ) $.
   lemma-floor-intro-imp3 $a |- ( \imp ( \floor ph0 ) ( \imp ( \floor ph1 ) ( \floor ph2 ) ) ) $. $}
${ lemma-floor-intro-imp3-alt.0 $e |- ( \imp ph0 ( \imp ph1 ph2 ) ) $.
   lemma-floor-intro-imp3-alt $a |- ( \imp ( \floor ph0 ) ( \imp ( \floor ph1 ) ph2 ) ) $. $}
${ lemma-floor-intro-imp4.0 $e |- ( \imp ph0 ( \imp ph1 ( \imp ph2 ph3 ) ) ) $.
   lemma-floor-intro-imp4 $a |- ( \imp ( \floor ph0 ) ( \imp ( \floor ph1 ) ( \imp ( \floor ph2 ) ( \floor ph3 ) ) ) ) $. $}
${ lemma-floor-intro-imp4-alt.0 $e |- ( \imp ph0 ( \imp ph1 ( \imp ph2 ph3 ) ) ) $.
   lemma-floor-intro-imp4-alt $a |- ( \imp ( \floor ph0 ) ( \imp ( \floor ph1 ) ( \imp ( \floor ph2 ) ph3 ) ) ) $. $}
${ lemma-floor-intro-imp5.0 $e |- ( \imp ph0 ( \imp ph1 ( \imp ph2 ( \imp ph3 ph4 ) ) ) ) $.
   lemma-floor-intro-imp5 $a |- ( \imp ( \floor ph0 ) ( \imp ( \floor ph1 ) ( \imp ( \floor ph2 ) ( \imp ( \floor ph3 ) ( \floor ph4 ) ) ) ) ) $. $}
${ lemma-floor-intro-imp6.0 $e |- ( \imp ph0 ( \imp ph1 ( \imp ph2 ( \imp ph3 ( \imp ph4 ph5 ) ) ) ) ) $.
   lemma-floor-intro-imp6 $a |- ( \imp ( \floor ph0 ) ( \imp ( \floor ph1 ) ( \imp ( \floor ph2 ) ( \imp ( \floor ph3 ) ( \imp ( \floor ph4 ) ( \floor ph5 ) ) ) ) ) ) $. $}
in-sort-and-left-alt $a |- ( \imp ( \in-sort ph1 ph0 ) ( \in-sort ( \and ph1 ph2 ) ph0 ) ) $.
in-sort-and-right-alt $a |- ( \imp ( \in-sort ph2 ph0 ) ( \in-sort ( \and ph1 ph2 ) ph0 ) ) $.
in-sort-or-alt $a |- ( \imp ( \in-sort ph1 ph0 ) ( \imp ( \in-sort ph2 ph0 ) ( \in-sort ( \or ph1 ph2 ) ph0 ) ) ) $.
${ in-sort-and-left.0 $e |- ( \in-sort ph1 ph0 ) $.
   in-sort-and-left $a |- ( \in-sort ( \and ph1 ph2 ) ph0 ) $. $}
${ in-sort-and-right.0 $e |- ( \in-sort ph2 ph0 ) $.
   in-sort-and-right $a |- ( \in-sort ( \and ph1 ph2 ) ph0 ) $. $}
${ in-sort-or.0 $e |- ( \in-sort ph1 ph0 ) $.
   in-sort-or.1 $e |- ( \in-sort ph2 ph0 ) $.
   in-sort-or $a |- ( \in-sort ( \or ph1 ph2 ) ph0 ) $. $}
in-sort-inh $a |- ( \in-sort ( \inh ph0 ) ph0 ) $.
eq-imp-included $a |- ( \imp ( \eq ph0 ph1 ) ( \included ph0 ph1 ) ) $.
${ fresh-in-in-sort.0 $e #Fresh xX ph0 $.
   fresh-in-in-sort.1 $e #Fresh xX ph1 $.
   fresh-in-in-sort $a #Fresh xX ( \in-sort ph0 ph1 ) $. $}
${ lemma-prenex-forall-or.0 $e #Fresh x ph1 $.
   lemma-prenex-forall-or $a |- ( \imp ( \forall x ( \or ph0 ph1 ) ) ( \or ( \forall x ph0 ) ph1 ) ) $. $}
${ lemma-prenex-forall-imp-alt.0 $e #Fresh x ph1 $.
   lemma-prenex-forall-imp-alt $a |- ( \imp ( \forall x ( \imp ph0 ph1 ) ) ( \imp ( \exists x ph0 ) ph1 ) ) $. $}
${ lemma-and-top-elim-in-sort.0 $e |- ( \in-sort ph1 ph0 ) $.
   lemma-and-top-elim-in-sort $a |- ( \eq ( \and ph1 ( \inh ph0 ) ) ph1 ) $. $}
lemma-eq-transitivity-alt $a |- ( \imp ( \eq ph0 ph1 ) ( \imp ( \eq ph1 ph2 ) ( \eq ph0 ph2 ) ) ) $.
${ rule-weakening.0 $e |- ph1 $.
   rule-weakening $a |- ( \imp ph0 ph1 ) $. $}
weakening-imp2 $a |- ( \imp ( \imp ph0 ph1 ) ( \imp ( \imp ph2 ph0 ) ( \imp ph2 ph1 ) ) ) $.
weakening-imp3 $a |- ( \imp ( \imp ph0 ( \imp ph1 ph2 ) ) ( \imp ( \imp ph3 ph0 ) ( \imp ( \imp ph3 ph1 ) ( \imp ph3 ph2 ) ) ) ) $.
weakening-imp4 $a |- ( \imp ( \imp ph0 ( \imp ph1 ( \imp ph2 ph3 ) ) ) ( \imp ( \imp ph4 ph0 ) ( \imp ( \imp ph4 ph1 ) ( \imp ( \imp ph4 ph2 ) ( \imp ph4 ph3 ) ) ) ) ) $.
${ rule-weakening-imp2.0 $e |- ( \imp ph0 ph1 ) $.
   rule-weakening-imp2 $a |- ( \imp ( \imp ph2 ph0 ) ( \imp ph2 ph1 ) ) $. $}
eq-compat-in-or $a |- ( \imp ( \eq ph0 ph1 ) ( \imp ( \eq ph2 ph3 ) ( \eq ( \or ph0 ph2 ) ( \or ph1 ph3 ) ) ) ) $.
eq-compat-in-and $a |- ( \imp ( \eq ph0 ph1 ) ( \imp ( \eq ph2 ph3 ) ( \eq ( \and ph0 ph2 ) ( \and ph1 ph3 ) ) ) ) $.
eq-compat-in-not $a |- ( \imp ( \eq ph0 ph1 ) ( \eq ( \not ph0 ) ( \not ph1 ) ) ) $.
eq-compat-in-imp $a |- ( \imp ( \eq ph0 ph1 ) ( \imp ( \eq ph2 ph3 ) ( \eq ( \imp ph0 ph2 ) ( \imp ph1 ph3 ) ) ) ) $.
${ rule-eq-compat-in-or.0 $e |- ( \eq ph0 ph1 ) $.
   rule-eq-compat-in-or.1 $e |- ( \eq ph2 ph3 ) $.
   rule-eq-compat-in-or $a |- ( \eq ( \or ph0 ph2 ) ( \or ph1 ph3 ) ) $. $}
${ rule-eq-compat-in-and.0 $e |- ( \eq ph0 ph1 ) $.
   rule-eq-compat-in-and.1 $e |- ( \eq ph2 ph3 ) $.
   rule-eq-compat-in-and $a |- ( \eq ( \and ph0 ph2 ) ( \and ph1 ph3 ) ) $. $}
${ rule-eq-compat-in-not.0 $e |- ( \eq ph0 ph1 ) $.
   rule-eq-compat-in-not $a |- ( \eq ( \not ph0 ) ( \not ph1 ) ) $. $}
${ rule-eq-compat-in-ceil.0 $e |- ( \eq ph0 ph1 ) $.
   rule-eq-compat-in-ceil $a |- ( \eq ( \ceil ph0 ) ( \ceil ph1 ) ) $. $}
${ rule-eq-compat-in-floor.0 $e |- ( \eq ph0 ph1 ) $.
   rule-eq-compat-in-floor $a |- ( \eq ( \floor ph0 ) ( \floor ph1 ) ) $. $}
${ lemma-floor-intro-alt.0 $e |- ( \imp ( \floor ph0 ) ph1 ) $.
   lemma-floor-intro-alt $a |- ( \imp ( \floor ph0 ) ( \floor ph1 ) ) $. $}
eq-symmetry $a |- ( \imp ( \eq ph1 ph0 ) ( \eq ph0 ph1 ) ) $.
eq-transitivity $a |- ( \imp ( \eq ph0 ph1 ) ( \imp ( \eq ph1 ph2 ) ( \eq ph0 ph2 ) ) ) $.
eq-intro $a |- ( \imp ( \included ph0 ph1 ) ( \imp ( \included ph1 ph0 ) ( \eq ph0 ph1 ) ) ) $.
${ rule-eq-intro-hyp.0 $e |- ( \imp ph2 ( \included ph0 ph1 ) ) $.
   rule-eq-intro-hyp.1 $e |- ( \imp ph2 ( \included ph1 ph0 ) ) $.
   rule-eq-intro-hyp $a |- ( \imp ph2 ( \eq ph0 ph1 ) ) $. $}
${ rule-eq-transitivity-hyp.0 $e |- ( \imp ph3 ( \eq ph0 ph1 ) ) $.
   rule-eq-transitivity-hyp.1 $e |- ( \imp ph3 ( \eq ph1 ph2 ) ) $.
   rule-eq-transitivity-hyp $a |- ( \imp ph3 ( \eq ph0 ph2 ) ) $. $}
${ eq-elim-alt.0 $e #Substitution ph2 ph4 ph0 x $.
   eq-elim-alt.1 $e #Substitution ph3 ph4 ph1 x $.
   eq-elim-alt $a |- ( \imp ( \eq ph0 ph1 ) ( \eq ph2 ph3 ) ) $. $}
${ eq-elim-alt-hyp.0 $e #Substitution ph2 ph4 ph0 x $.
   eq-elim-alt-hyp.1 $e #Substitution ph3 ph4 ph1 x $.
   eq-elim-alt-hyp.2 $e |- ( \imp ph5 ( \eq ph0 ph1 ) ) $.
   eq-elim-alt-hyp $a |- ( \imp ph5 ( \eq ph2 ph3 ) ) $. $}
included-transitivity $a |- ( \imp ( \included ph0 ph1 ) ( \imp ( \included ph1 ph2 ) ( \included ph0 ph2 ) ) ) $.
${ rule-included-transitivity-hyp.0 $e |- ( \imp ph3 ( \included ph0 ph1 ) ) $.
   rule-included-transitivity-hyp.1 $e |- ( \imp ph3 ( \included ph1 ph2 ) ) $.
   rule-included-transitivity-hyp $a |- ( \imp ph3 ( \included ph0 ph2 ) ) $. $}
unit-sort-singleton $a |- ( \exists x ( \eq x ( \inh \unit-sort ) ) ) $.
unit-sort-nonempty $a |- ( \exists x ( \in-sort x \unit-sort ) ) $.
ceil-propagation-exists-left $a |- ( \imp ( \ceil ( \exists x ph0 ) ) ( \exists x ( \ceil ph0 ) ) ) $.
ceil-propagation-exists-right $a |- ( \imp ( \exists x ( \ceil ph0 ) ) ( \ceil ( \exists x ph0 ) ) ) $.
ceil-propagation-exists $a |- ( \iff ( \ceil ( \exists x ph0 ) ) ( \exists x ( \ceil ph0 ) ) ) $.
floor-propagation-forall-right $a |- ( \imp ( \floor ( \forall x ph0 ) ) ( \forall x ( \floor ph0 ) ) ) $.
floor-propagation-forall-left $a |- ( \imp ( \forall x ( \floor ph0 ) ) ( \floor ( \forall x ph0 ) ) ) $.
${ rule-eq-to-iff.0 $e |- ( \eq ph0 ph1 ) $.
   rule-eq-to-iff $a |- ( \iff ph0 ph1 ) $. $}
${ rule-iff-to-eq.0 $e |- ( \iff ph0 ph1 ) $.
   rule-iff-to-eq $a |- ( \eq ph0 ph1 ) $. $}
${ rule-iff-compat-in-ceil.0 $e |- ( \iff ph0 ph1 ) $.
   rule-iff-compat-in-ceil $a |- ( \iff ( \ceil ph0 ) ( \ceil ph1 ) ) $. $}
${ rule-iff-compat-in-floor.0 $e |- ( \iff ph0 ph1 ) $.
   rule-iff-compat-in-floor $a |- ( \iff ( \floor ph0 ) ( \floor ph1 ) ) $. $}
${ rule-iff-compat-in-app.0 $e |- ( \iff ph0 ph1 ) $.
   rule-iff-compat-in-app.1 $e |- ( \iff ph2 ph3 ) $.
   rule-iff-compat-in-app $a |- ( \iff ( \app ph0 ph2 ) ( \app ph1 ph3 ) ) $. $}
${ rule-iff-compat-in-imp.0 $e |- ( \iff ph0 ph1 ) $.
   rule-iff-compat-in-imp.1 $e |- ( \iff ph2 ph3 ) $.
   rule-iff-compat-in-imp $a |- ( \iff ( \imp ph0 ph2 ) ( \imp ph1 ph3 ) ) $. $}
${ rule-iff-compat-in-iff.0 $e |- ( \iff ph0 ph2 ) $.
   rule-iff-compat-in-iff.1 $e |- ( \iff ph1 ph3 ) $.
   rule-iff-compat-in-iff $a |- ( \iff ( \iff ph0 ph1 ) ( \iff ph2 ph3 ) ) $. $}
${ rule-iff-compat-in-eq.0 $e |- ( \iff ph0 ph2 ) $.
   rule-iff-compat-in-eq.1 $e |- ( \iff ph1 ph3 ) $.
   rule-iff-compat-in-eq $a |- ( \iff ( \eq ph0 ph1 ) ( \eq ph2 ph3 ) ) $. $}
${ rule-iff-compat-in-exists.0 $e |- ( \iff ph0 ph1 ) $.
   rule-iff-compat-in-exists $a |- ( \iff ( \exists x ph0 ) ( \exists x ph1 ) ) $. $}
${ rule-iff-compat-in-forall.0 $e |- ( \iff ph0 ph1 ) $.
   rule-iff-compat-in-forall $a |- ( \iff ( \forall x ph0 ) ( \forall x ph1 ) ) $. $}
${ rule-iff-compat-in-sorted-exists.0 $e |- ( \iff ph0 ph2 ) $.
   rule-iff-compat-in-sorted-exists.1 $e |- ( \iff ph1 ph3 ) $.
   rule-iff-compat-in-sorted-exists $a |- ( \iff ( \sorted-exists x ph0 ph1 ) ( \sorted-exists x ph2 ph3 ) ) $. $}
sorted-forall-to-sorted-exists $a |- ( \iff ( \sorted-forall x ph0 ph1 ) ( \not ( \sorted-exists x ph0 ( \not ph1 ) ) ) ) $.
${ rule-iff-compat-in-sorted-forall.0 $e |- ( \iff ph0 ph2 ) $.
   rule-iff-compat-in-sorted-forall.1 $e |- ( \iff ph1 ph3 ) $.
   rule-iff-compat-in-sorted-forall $a |- ( \iff ( \sorted-forall x ph0 ph1 ) ( \sorted-forall x ph2 ph3 ) ) $. $}
${ prenex-exists-and-right.0 $e #Fresh x ph1 $.
   prenex-exists-and-right $a |- ( \imp ( \exists x ( \and ph0 ph1 ) ) ( \and ( \exists x ph0 ) ph1 ) ) $. $}
${ prenex-exists-and.0 $e #Fresh x ph1 $.
   prenex-exists-and $a |- ( \iff ( \and ( \exists x ph0 ) ph1 ) ( \exists x ( \and ph0 ph1 ) ) ) $. $}
${ prenex-sorted-exists-and.0 $e #Fresh x ph2 $.
   prenex-sorted-exists-and $a |- ( \iff ( \and ( \sorted-exists x ph0 ph1 ) ph2 ) ( \sorted-exists x ph0 ( \and ph1 ph2 ) ) ) $. $}
${ lemma-prenex-forall-imp-right.0 $e #Fresh x ph0 $.
   lemma-prenex-forall-imp-right $a |- ( \iff ( \forall x ( \imp ph0 ph1 ) ) ( \imp ph0 ( \forall x ph1 ) ) ) $. $}
${ forall-not-to-not-exists.0 $e |- ( \forall x ( \not ph0 ) ) $.
   forall-not-to-not-exists $a |- ( \not ( \exists x ph0 ) ) $. $}
${ imp-compat-in-sorted-exists.0 $e |- ( \imp ph0 ph1 ) $.
   imp-compat-in-sorted-exists $a |- ( \imp ( \sorted-exists x ph2 ph0 ) ( \sorted-exists x ph2 ph1 ) ) $. $}
eq-compat-in-ceil $a |- ( \imp ( \eq ph0 ph1 ) ( \eq ( \ceil ph0 ) ( \ceil ph1 ) ) ) $.
x-in-ceil-imp-ceil $a |- ( \imp ( \in x ( \ceil ph0 ) ) ( \ceil ph0 ) ) $.
${ weakened-mp.0 $e |- ( \imp ph0 ( \imp ph1 ph2 ) ) $.
   weakened-mp.1 $e |- ( \imp ph0 ph1 ) $.
   weakened-mp $a |- ( \imp ph0 ph2 ) $. $}
${ $d x ph1 $.
   forall-propagate-in-floor-imp $a |- ( \imp ( \forall x ( \floor ( \imp ph0 ph1 ) ) ) ( \floor ( \imp ( \exists x ph0 ) ph1 ) ) ) $. $}
${ lemma-imp-compat-in-exists-alt.0 $e #Fresh x ph0 $.
   lemma-imp-compat-in-exists-alt.1 $e |- ( \imp ph0 ( \imp ph1 ph2 ) ) $.
   lemma-imp-compat-in-exists-alt $a |- ( \imp ph0 ( \imp ( \exists x ph1 ) ( \exists x ph2 ) ) ) $. $}
${ imp-compat-in-eq-and.0 $e |- ( \imp ph0 ph1 ) $.
   imp-compat-in-eq-and $a |- ( \imp ( \eq ( \and ph0 ph2 ) ph2 ) ( \eq ( \and ph1 ph2 ) ph2 ) ) $. $}
${ lemma-prenex-exists-imp-right.0 $e #Fresh x ph0 $.
   lemma-prenex-exists-imp-right $a |- ( \imp ( \exists x ( \imp ph0 ph1 ) ) ( \imp ph0 ( \exists x ph1 ) ) ) $. $}
${ prenex-forall-iff-left.0 $e #Fresh x ph1 $.
   prenex-forall-iff-left $a |- ( \imp ( \forall x ( \iff ph0 ph1 ) ) ( \iff ( \forall x ph0 ) ph1 ) ) $. $}
restricted-inclusion $a |- ( \imp ( \included ph0 ph1 ) ( \eq ( \and ph1 ph0 ) ph0 ) ) $.
iff-transitivity $a |- ( \imp ( \iff ph0 ph1 ) ( \imp ( \iff ph1 ph2 ) ( \iff ph0 ph2 ) ) ) $.
${ prenex-forall-or-left.0 $e #Fresh x ph0 $.
   prenex-forall-or-left $a |- ( \imp ( \forall x ( \or ph0 ph1 ) ) ( \or ph0 ( \forall x ph1 ) ) ) $. $}
${ prenex-forall-or-right.0 $e #Fresh x ph0 $.
   prenex-forall-or-right $a |- ( \imp ( \or ph0 ( \forall x ph1 ) ) ( \forall x ( \or ph0 ph1 ) ) ) $. $}
${ rule-imp-compat-in-and-alt.0 $e |- ( \imp ph4 ( \imp ph0 ph1 ) ) $.
   rule-imp-compat-in-and-alt.1 $e |- ( \imp ph4 ( \imp ph2 ph3 ) ) $.
   rule-imp-compat-in-and-alt $a |- ( \imp ph4 ( \imp ( \and ph0 ph2 ) ( \and ph1 ph3 ) ) ) $. $}
$c \kore-bottom $.
$c \kore-top $.
$c \kore-not $.
$c \kore-and $.
$c \kore-or $.
$c \kore-implies $.
$c \kore-iff $.
$c \kore-exists $.
$c \kore-forall $.
$c \kore-forall-sort $.
$c \kore-mu $.
$c \kore-nu $.
$c \kore-ceil $.
$c \kore-floor $.
$c \kore-equals $.
$c \kore-in $.
$c \kore-next $.
$c \kore-all-path-next $.
$c \kore-eventually $.
$c \kore-weak-eventually $.
$c \kore-always $.
$c \kore-well-founded $.
$c \kore-well-founded-alt $.
$c \kore-rewrites $.
$c \kore-rewrites-star $.
$c \kore-rewrites-plus $.
$c \kore-one-path-reaches-plus $.
$c \kore-one-path-reaches-star $.
$c \kore-circularity $.
$c \kore-non-terminating $.
$c \kore-all-path-next-nt $.
$c \kore-all-path-eventually $.
$c \kore-all-path-rewrites $.
$c \kore-all-path-rewrites-star $.
$c \kore-all-path-rewrites-plus $.
$c \kore-dv $.
$c \kore-valid $.
$c \kore-is-sort $.
$c \kore-inj $.
$c \kore-is-predicate $.
$c \kore-is-nonempty-sort $.
kore-exists-is-pattern $a #Pattern ( \kore-exists ph0 ph1 x ph2 ) $.
kore-exists-is-sugar $a #Notation ( \kore-exists ph0 ph1 x ph2 ) ( \and ( \sorted-exists x ph0 ph2 ) ( \inh ph1 ) ) $.
kore-forall-sort-is-pattern $a #Pattern ( \kore-forall-sort s0 ph0 ) $.
kore-forall-sort-is-sugar $a #Notation ( \kore-forall-sort s0 ph0 ) ( \forall-sort s0 ph0 ) $.
kore-valid-is-pattern $a #Pattern ( \kore-valid ph0 ph1 ) $.
kore-valid-is-sugar $a #Notation ( \kore-valid ph0 ph1 ) ( \eq ph1 ( \kore-top ph0 ) ) $.
kore-bottom-is-pattern $a #Pattern ( \kore-bottom ph0 ) $.
kore-bottom-is-sugar $a #Notation ( \kore-bottom ph0 ) \bot $.
kore-top-is-pattern $a #Pattern ( \kore-top ph0 ) $.
kore-top-is-sugar $a #Notation ( \kore-top ph0 ) ( \inh ph0 ) $.
kore-not-is-pattern $a #Pattern ( \kore-not ph0 ph1 ) $.
kore-not-is-sugar $a #Notation ( \kore-not ph0 ph1 ) ( \and ( \not ph1 ) ( \kore-top ph0 ) ) $.
kore-and-is-pattern $a #Pattern ( \kore-and ph0 ph1 ph2 ) $.
kore-and-is-sugar $a #Notation ( \kore-and ph0 ph1 ph2 ) ( \and ph1 ph2 ) $.
kore-or-is-pattern $a #Pattern ( \kore-or ph0 ph1 ph2 ) $.
kore-or-is-sugar $a #Notation ( \kore-or ph0 ph1 ph2 ) ( \or ph1 ph2 ) $.
kore-implies-is-pattern $a #Pattern ( \kore-implies ph0 ph1 ph2 ) $.
kore-implies-is-sugar $a #Notation ( \kore-implies ph0 ph1 ph2 ) ( \kore-or ph0 ( \kore-not ph0 ph1 ) ph2 ) $.
kore-iff-is-pattern $a #Pattern ( \kore-iff ph0 ph1 ph2 ) $.
kore-iff-is-sugar $a #Notation ( \kore-iff ph0 ph1 ph2 ) ( \kore-and ph0 ( \kore-implies ph0 ph1 ph2 ) ( \kore-implies ph0 ph2 ph1 ) ) $.
kore-ceil-is-pattern $a #Pattern ( \kore-ceil ph0 ph1 ph2 ) $.
kore-ceil-is-sugar $a #Notation ( \kore-ceil ph0 ph1 ph2 ) ( \and ( \ceil ph2 ) ( \kore-top ph1 ) ) $.
kore-floor-is-pattern $a #Pattern ( \kore-floor ph0 ph1 ph2 ) $.
kore-floor-is-sugar $a #Notation ( \kore-floor ph0 ph1 ph2 ) ( \kore-not ph1 ( \kore-ceil ph0 ph1 ( \kore-not ph0 ph2 ) ) ) $.
kore-equals-is-pattern $a #Pattern ( \kore-equals ph0 ph1 ph2 ph3 ) $.
kore-equals-is-sugar $a #Notation ( \kore-equals ph0 ph1 ph2 ph3 ) ( \kore-floor ph0 ph1 ( \kore-iff ph0 ph2 ph3 ) ) $.
kore-in-is-pattern $a #Pattern ( \kore-in ph0 ph1 ph2 ph3 ) $.
kore-in-is-sugar $a #Notation ( \kore-in ph0 ph1 ph2 ph3 ) ( \kore-floor ph0 ph1 ( \kore-implies ph0 ph2 ph3 ) ) $.
$c \kore-next-symbol $.
kore-next-is-symbol $a #Symbol \kore-next-symbol $.
kore-next-is-pattern $a #Pattern ( \kore-next ph0 ph1 ) $.
kore-next-is-sugar $a #Notation ( \kore-next ph0 ph1 ) ( \app \kore-next-symbol ph1 ) $.
kore-next-sorting $a |- ( \imp ( \in-sort ph1 ph0 ) ( \in-sort ( \kore-next ph0 ph1 ) ph0 ) ) $.
${ kore-mu-is-pattern.0 $e #Positive X ph1 $.
   kore-mu-is-pattern $a #Pattern ( \kore-mu ph0 X ph1 ) $. $}
kore-mu-is-sugar $a #Notation ( \kore-mu ph0 X ph1 ) ( \and ( \mu X ph1 ) ( \inh ph0 ) ) $.
${ kore-nu-is-pattern.0 $e #Positive X ph1 $.
   kore-nu-is-pattern $a #Pattern ( \kore-nu ph0 X ph1 ) $. $}
${ kore-nu-is-sugar.0 $e #Substitution ph2 ph1 ( \kore-not ph0 X ) X $.
   kore-nu-is-sugar $a #Notation ( \kore-nu ph0 X ph1 ) ( \kore-not ph0 ( \kore-mu ph0 X ( \kore-not ph0 ph2 ) ) ) $. $}
kore-all-path-next-is-pattern $a #Pattern ( \kore-all-path-next ph0 ph1 ) $.
kore-all-path-next-is-sugar $a #Notation ( \kore-all-path-next ph0 ph1 ) ( \kore-not ph0 ( \kore-next ph0 ( \kore-not ph0 ph1 ) ) ) $.
kore-eventually-is-pattern $a #Pattern ( \kore-eventually ph0 ph1 ) $.
${ $d X ph0 $.
   $d X ph1 $.
   kore-eventually-is-sugar $a #Notation ( \kore-eventually ph0 ph1 ) ( \kore-mu ph0 X ( \kore-or ph0 ph1 ( \kore-next ph0 X ) ) ) $. $}
kore-weak-eventually-is-pattern $a #Pattern ( \kore-weak-eventually ph0 ph1 ) $.
${ $d X ph0 $.
   $d X ph1 $.
   kore-weak-eventually-is-sugar $a #Notation ( \kore-weak-eventually ph0 ph1 ) ( \kore-not ph0 ( \kore-mu ph0 X ( \kore-not ph0 ( \kore-or ph0 ph1 ( \kore-next ph0 ( \kore-not ph0 X ) ) ) ) ) ) $. $}
kore-always-is-pattern $a #Pattern ( \kore-always ph0 ph1 ) $.
${ $d X ph0 $.
   $d X ph1 $.
   kore-always-is-sugar $a #Notation ( \kore-always ph0 ph1 ) ( \kore-not ph0 ( \kore-mu ph0 X ( \kore-not ph0 ( \kore-and ph0 ph1 ( \kore-all-path-next ph0 ( \kore-not ph0 X ) ) ) ) ) ) $. $}
kore-well-founded-is-pattern $a #Pattern ( \kore-well-founded ph0 ) $.
${ $d X ph0 $.
   kore-well-founded-is-sugar $a #Notation ( \kore-well-founded ph0 ) ( \kore-mu ph0 X ( \kore-all-path-next ph0 X ) ) $. $}
kore-well-founded-alt-is-pattern $a #Pattern ( \kore-well-founded-alt ph0 ) $.
${ $d X ph0 $.
   kore-well-founded-alt-is-sugar $a #Notation ( \kore-well-founded-alt ph0 ) ( \kore-mu ph0 X ( \kore-all-path-next ph0 ( \kore-always ph0 X ) ) ) $. $}
kore-rewrites-is-pattern $a #Pattern ( \kore-rewrites ph0 ph1 ph2 ) $.
kore-rewrites-is-sugar $a #Notation ( \kore-rewrites ph0 ph1 ph2 ) ( \kore-implies ph0 ph1 ( \kore-next ph0 ph2 ) ) $.
kore-rewrites-star-is-pattern $a #Pattern ( \kore-rewrites-star ph0 ph1 ph2 ) $.
kore-rewrites-star-is-sugar $a #Notation ( \kore-rewrites-star ph0 ph1 ph2 ) ( \kore-implies ph0 ph1 ( \kore-eventually ph0 ph2 ) ) $.
kore-rewrites-plus-is-pattern $a #Pattern ( \kore-rewrites-plus ph0 ph1 ph2 ) $.
kore-rewrites-plus-is-sugar $a #Notation ( \kore-rewrites-plus ph0 ph1 ph2 ) ( \kore-implies ph0 ph1 ( \kore-next ph0 ( \kore-eventually ph0 ph2 ) ) ) $.
kore-one-path-reaches-star-is-pattern $a #Pattern ( \kore-one-path-reaches-star ph0 ph1 ph2 ) $.
kore-one-path-reaches-star-is-sugar $a #Notation ( \kore-one-path-reaches-star ph0 ph1 ph2 ) ( \kore-implies ph0 ph1 ( \kore-weak-eventually ph0 ph2 ) ) $.
kore-one-path-reaches-plus-is-pattern $a #Pattern ( \kore-one-path-reaches-plus ph0 ph1 ph2 ) $.
kore-one-path-reaches-plus-is-sugar $a #Notation ( \kore-one-path-reaches-plus ph0 ph1 ph2 ) ( \kore-implies ph0 ph1 ( \kore-next ph0 ( \kore-weak-eventually ph0 ph2 ) ) ) $.
kore-circularity-is-pattern $a #Pattern ( \kore-circularity ph0 ph1 ) $.
kore-circularity-is-sugar $a #Notation ( \kore-circularity ph0 ph1 ) ( \kore-all-path-next ph0 ( \kore-always ph0 ph1 ) ) $.
kore-non-terminating-is-pattern $a #Pattern ( \kore-non-terminating ph0 ) $.
kore-non-terminating-is-sugar $a #Notation ( \kore-non-terminating ph0 ) ( \kore-next ph0 ( \kore-top ph0 ) ) $.
kore-all-path-next-nt-is-pattern $a #Pattern ( \kore-all-path-next-nt ph0 ph1 ) $.
kore-all-path-next-nt-is-sugar $a #Notation ( \kore-all-path-next-nt ph0 ph1 ) ( \kore-and ph0 ( \kore-all-path-next ph0 ph1 ) ( \kore-non-terminating ph0 ) ) $.
kore-all-path-eventually-is-pattern $a #Pattern ( \kore-all-path-eventually ph0 ph1 ) $.
${ $d X ph0 $.
   $d X ph1 $.
   kore-all-path-eventually-is-sugar $a #Notation ( \kore-all-path-eventually ph0 ph1 ) ( \kore-mu ph0 X ( \kore-or ph0 ph1 ( \kore-all-path-next-nt ph0 X ) ) ) $. $}
kore-all-path-rewrites-is-pattern $a #Pattern ( \kore-all-path-rewrites ph0 ph1 ph2 ) $.
kore-all-path-rewrites-is-sugar $a #Notation ( \kore-all-path-rewrites ph0 ph1 ph2 ) ( \kore-implies ph0 ph1 ( \kore-all-path-next-nt ph0 ph2 ) ) $.
kore-all-path-rewrites-star-is-pattern $a #Pattern ( \kore-all-path-rewrites-star ph0 ph1 ph2 ) $.
kore-all-path-rewrites-star-is-sugar $a #Notation ( \kore-all-path-rewrites-star ph0 ph1 ph2 ) ( \kore-implies ph0 ph1 ( \kore-all-path-eventually ph0 ph2 ) ) $.
kore-all-path-rewrites-plus-is-pattern $a #Pattern ( \kore-all-path-rewrites-plus ph0 ph1 ph2 ) $.
kore-all-path-rewrites-plus-is-sugar $a #Notation ( \kore-all-path-rewrites-plus ph0 ph1 ph2 ) ( \kore-implies ph0 ph1 ( \kore-all-path-next-nt ph0 ( \kore-all-path-eventually ph0 ph2 ) ) ) $.
$c \kore-dv-symbol $.
kore-dv-is-symbol $a #Symbol \kore-dv-symbol $.
kore-dv-is-pattern $a #Pattern ( \kore-dv ph0 ph1 ) $.
kore-dv-is-sugar $a #Notation ( \kore-dv ph0 ph1 ) ( \app ( \app \kore-dv-symbol ph0 ) ph1 ) $.
kore-dv-sorting $a |- ( \in-sort ( \kore-dv ph0 ph1 ) ph0 ) $.
kore-is-sort-is-pattern $a #Pattern ( \kore-is-sort ph0 ) $.
${ $d s0 ph0 $.
   kore-is-sort-is-sugar $a #Notation ( \kore-is-sort ph0 ) ( \exists-sort s0 ( \eq s0 ph0 ) ) $. $}
kore-forall-is-pattern $a #Pattern ( \kore-forall ph0 ph1 x ph2 ) $.
kore-forall-is-sugar $a #Notation ( \kore-forall ph0 ph1 x ph2 ) ( \kore-not ph1 ( \kore-exists ph0 ph1 x ( \kore-not ph1 ph2 ) ) ) $.
$c \kore-inj-symbol $.
kore-inj-is-symbol $a #Symbol \kore-inj-symbol $.
kore-inj-is-pattern $a #Pattern ( \kore-inj ph0 ph1 ph2 ) $.
kore-inj-is-sugar $a #Notation ( \kore-inj ph0 ph1 ph2 ) ( \app ( \app ( \app \kore-inj-symbol ph0 ) ph1 ) ph2 ) $.
kore-inj-id $a |- ( \eq ( \kore-inj ph0 ph1 ph2 ) ph2 ) $.
kore-is-predicate-is-pattern $a #Pattern ( \kore-is-predicate ph0 ph1 ) $.
kore-is-predicate-is-sugar $a #Notation ( \kore-is-predicate ph0 ph1 ) ( \or ( \kore-valid ph0 ph1 ) ( \is-bot ph1 ) ) $.
kore-is-nonempty-sort-is-pattern $a #Pattern ( \kore-is-nonempty-sort ph0 ) $.
kore-is-nonempty-sort-is-sugar $a #Notation ( \kore-is-nonempty-sort ph0 ) ( \ceil ( \inh ph0 ) ) $.
${ $d xX y $.
   $d xX ph1 $.
   $d y ph6 $.
   substitution-kore-exists.0 $e #Substitution ph0 ph3 ph6 xX $.
   substitution-kore-exists.1 $e #Substitution ph2 ph5 ph6 xX $.
   substitution-kore-exists $a #Substitution ( \kore-exists ph0 ph1 y ph2 ) ( \kore-exists ph3 ph1 y ph5 ) ph6 xX $. $}
${ $d xX y $.
   $d y ph6 $.
   substitution-kore-exists-alt.0 $e #Substitution ph0 ph3 ph6 xX $.
   substitution-kore-exists-alt.1 $e #Substitution ph1 ph4 ph6 xX $.
   substitution-kore-exists-alt.2 $e #Substitution ph2 ph5 ph6 xX $.
   substitution-kore-exists-alt $a #Substitution ( \kore-exists ph0 ph1 y ph2 ) ( \kore-exists ph3 ph4 y ph5 ) ph6 xX $. $}
${ $d x ph1 $.
   substitution-kore-exists-shadowed $a #Substitution ( \kore-exists ph0 ph1 x ph2 ) ( \kore-exists ph0 ph1 x ph2 ) ph3 x $. $}
${ $d xX x $.
   $d x ph2 $.
   substitution-kore-forall-sort.0 $e #Substitution ph0 ph1 ph2 xX $.
   substitution-kore-forall-sort $a #Substitution ( \kore-forall-sort x ph0 ) ( \kore-forall-sort x ph1 ) ph2 xX $. $}
substitution-kore-forall-sort-shadowed $a #Substitution ( \kore-forall-sort x ph0 ) ( \kore-forall-sort x ph0 ) ph1 x $.
${ substitution-kore-valid.0 $e #Substitution ph0 ph2 ph4 xX $.
   substitution-kore-valid.1 $e #Substitution ph1 ph3 ph4 xX $.
   substitution-kore-valid $a #Substitution ( \kore-valid ph0 ph1 ) ( \kore-valid ph2 ph3 ) ph4 xX $. $}
${ substitution-kore-bottom.0 $e #Substitution ph0 ph1 ph2 xX $.
   substitution-kore-bottom $a #Substitution ( \kore-bottom ph0 ) ( \kore-bottom ph1 ) ph2 xX $. $}
${ substitution-kore-top.0 $e #Substitution ph0 ph1 ph2 xX $.
   substitution-kore-top $a #Substitution ( \kore-top ph0 ) ( \kore-top ph1 ) ph2 xX $. $}
${ substitution-kore-not.0 $e #Substitution ph0 ph2 ph4 xX $.
   substitution-kore-not.1 $e #Substitution ph1 ph3 ph4 xX $.
   substitution-kore-not $a #Substitution ( \kore-not ph0 ph1 ) ( \kore-not ph2 ph3 ) ph4 xX $. $}
${ substitution-kore-and.0 $e #Substitution ph0 ph3 ph6 xX $.
   substitution-kore-and.1 $e #Substitution ph1 ph4 ph6 xX $.
   substitution-kore-and.2 $e #Substitution ph2 ph5 ph6 xX $.
   substitution-kore-and $a #Substitution ( \kore-and ph0 ph1 ph2 ) ( \kore-and ph3 ph4 ph5 ) ph6 xX $. $}
${ substitution-kore-or.0 $e #Substitution ph0 ph3 ph6 xX $.
   substitution-kore-or.1 $e #Substitution ph1 ph4 ph6 xX $.
   substitution-kore-or.2 $e #Substitution ph2 ph5 ph6 xX $.
   substitution-kore-or $a #Substitution ( \kore-or ph0 ph1 ph2 ) ( \kore-or ph3 ph4 ph5 ) ph6 xX $. $}
${ substitution-kore-implies.0 $e #Substitution ph0 ph3 ph6 xX $.
   substitution-kore-implies.1 $e #Substitution ph1 ph4 ph6 xX $.
   substitution-kore-implies.2 $e #Substitution ph2 ph5 ph6 xX $.
   substitution-kore-implies $a #Substitution ( \kore-implies ph0 ph1 ph2 ) ( \kore-implies ph3 ph4 ph5 ) ph6 xX $. $}
${ substitution-kore-ceil.0 $e #Substitution ph0 ph3 ph6 xX $.
   substitution-kore-ceil.1 $e #Substitution ph1 ph4 ph6 xX $.
   substitution-kore-ceil.2 $e #Substitution ph2 ph5 ph6 xX $.
   substitution-kore-ceil $a #Substitution ( \kore-ceil ph0 ph1 ph2 ) ( \kore-ceil ph3 ph4 ph5 ) ph6 xX $. $}
${ substitution-kore-floor.0 $e #Substitution ph0 ph3 ph6 xX $.
   substitution-kore-floor.1 $e #Substitution ph1 ph4 ph6 xX $.
   substitution-kore-floor.2 $e #Substitution ph2 ph5 ph6 xX $.
   substitution-kore-floor $a #Substitution ( \kore-floor ph0 ph1 ph2 ) ( \kore-floor ph3 ph4 ph5 ) ph6 xX $. $}
${ substitution-kore-equals.0 $e #Substitution ph0 ph4 ph8 xX $.
   substitution-kore-equals.1 $e #Substitution ph1 ph5 ph8 xX $.
   substitution-kore-equals.2 $e #Substitution ph2 ph6 ph8 xX $.
   substitution-kore-equals.3 $e #Substitution ph3 ph7 ph8 xX $.
   substitution-kore-equals $a #Substitution ( \kore-equals ph0 ph1 ph2 ph3 ) ( \kore-equals ph4 ph5 ph6 ph7 ) ph8 xX $. $}
${ substitution-kore-in.0 $e #Substitution ph0 ph4 ph8 xX $.
   substitution-kore-in.1 $e #Substitution ph1 ph5 ph8 xX $.
   substitution-kore-in.2 $e #Substitution ph2 ph6 ph8 xX $.
   substitution-kore-in.3 $e #Substitution ph3 ph7 ph8 xX $.
   substitution-kore-in $a #Substitution ( \kore-in ph0 ph1 ph2 ph3 ) ( \kore-in ph4 ph5 ph6 ph7 ) ph8 xX $. $}
${ substitution-kore-next.0 $e #Substitution ph0 ph2 ph4 xX $.
   substitution-kore-next.1 $e #Substitution ph1 ph3 ph4 xX $.
   substitution-kore-next $a #Substitution ( \kore-next ph0 ph1 ) ( \kore-next ph2 ph3 ) ph4 xX $. $}
${ substitution-kore-rewrites.0 $e #Substitution ph0 ph3 ph6 xX $.
   substitution-kore-rewrites.1 $e #Substitution ph1 ph4 ph6 xX $.
   substitution-kore-rewrites.2 $e #Substitution ph2 ph5 ph6 xX $.
   substitution-kore-rewrites $a #Substitution ( \kore-rewrites ph0 ph1 ph2 ) ( \kore-rewrites ph3 ph4 ph5 ) ph6 xX $. $}
${ $d X xX $.
   $d X ph4 $.
   substitution-kore-mu.0 $e #Substitution ph0 ph2 ph4 xX $.
   substitution-kore-mu.1 $e #Substitution ph1 ph3 ph4 xX $.
   substitution-kore-mu.2 $e #Positive X ph1 $.
   substitution-kore-mu.3 $e #Positive X ph3 $.
   substitution-kore-mu $a #Substitution ( \kore-mu ph0 X ph1 ) ( \kore-mu ph2 X ph3 ) ph4 xX $. $}
${ $d Y xX $.
   $d Y ph0 $.
   $d Y ph1 $.
   $d Y ph2 $.
   $d Y ph3 $.
   $d Y ph4 $.
   substitution-kore-eventually.0 $e #Substitution ph0 ph2 ph4 xX $.
   substitution-kore-eventually.1 $e #Substitution ph1 ph3 ph4 xX $.
   substitution-kore-eventually $a #Substitution ( \kore-eventually ph0 ph1 ) ( \kore-eventually ph2 ph3 ) ph4 xX $. $}
${ $d Y xX $.
   $d Y ph0 $.
   $d Y ph1 $.
   $d Y ph2 $.
   $d Y ph3 $.
   $d Y ph4 $.
   substitution-kore-weak-eventually.0 $e #Substitution ph0 ph2 ph4 xX $.
   substitution-kore-weak-eventually.1 $e #Substitution ph1 ph3 ph4 xX $.
   substitution-kore-weak-eventually $a #Substitution ( \kore-weak-eventually ph0 ph1 ) ( \kore-weak-eventually ph2 ph3 ) ph4 xX $. $}
${ $d Y xX $.
   $d Y ph0 $.
   $d Y ph1 $.
   $d Y ph2 $.
   $d Y ph3 $.
   $d Y ph4 $.
   substitution-kore-always.0 $e #Substitution ph0 ph2 ph4 xX $.
   substitution-kore-always.1 $e #Substitution ph1 ph3 ph4 xX $.
   substitution-kore-always $a #Substitution ( \kore-always ph0 ph1 ) ( \kore-always ph2 ph3 ) ph4 xX $. $}
${ substitution-kore-rewrites-star.0 $e #Substitution ph0 ph3 ph6 xX $.
   substitution-kore-rewrites-star.1 $e #Substitution ph1 ph4 ph6 xX $.
   substitution-kore-rewrites-star.2 $e #Substitution ph2 ph5 ph6 xX $.
   substitution-kore-rewrites-star $a #Substitution ( \kore-rewrites-star ph0 ph1 ph2 ) ( \kore-rewrites-star ph3 ph4 ph5 ) ph6 xX $. $}
${ substitution-kore-rewrites-plus.0 $e #Substitution ph0 ph3 ph6 xX $.
   substitution-kore-rewrites-plus.1 $e #Substitution ph1 ph4 ph6 xX $.
   substitution-kore-rewrites-plus.2 $e #Substitution ph2 ph5 ph6 xX $.
   substitution-kore-rewrites-plus $a #Substitution ( \kore-rewrites-plus ph0 ph1 ph2 ) ( \kore-rewrites-plus ph3 ph4 ph5 ) ph6 xX $. $}
${ substitution-kore-one-path-reaches-star.0 $e #Substitution ph0 ph3 ph6 xX $.
   substitution-kore-one-path-reaches-star.1 $e #Substitution ph1 ph4 ph6 xX $.
   substitution-kore-one-path-reaches-star.2 $e #Substitution ph2 ph5 ph6 xX $.
   substitution-kore-one-path-reaches-star $a #Substitution ( \kore-one-path-reaches-star ph0 ph1 ph2 ) ( \kore-one-path-reaches-star ph3 ph4 ph5 ) ph6 xX $. $}
${ substitution-kore-one-path-reaches-plus.0 $e #Substitution ph0 ph3 ph6 xX $.
   substitution-kore-one-path-reaches-plus.1 $e #Substitution ph1 ph4 ph6 xX $.
   substitution-kore-one-path-reaches-plus.2 $e #Substitution ph2 ph5 ph6 xX $.
   substitution-kore-one-path-reaches-plus $a #Substitution ( \kore-one-path-reaches-plus ph0 ph1 ph2 ) ( \kore-one-path-reaches-plus ph3 ph4 ph5 ) ph6 xX $. $}
${ substitution-kore-dv.0 $e #Substitution ph0 ph2 ph4 xX $.
   substitution-kore-dv.1 $e #Substitution ph1 ph3 ph4 xX $.
   substitution-kore-dv $a #Substitution ( \kore-dv ph0 ph1 ) ( \kore-dv ph2 ph3 ) ph4 xX $. $}
${ $d xX y $.
   $d xX ph1 $.
   $d y ph6 $.
   substitution-kore-forall.0 $e #Substitution ph0 ph3 ph6 xX $.
   substitution-kore-forall.1 $e #Substitution ph2 ph5 ph6 xX $.
   substitution-kore-forall $a #Substitution ( \kore-forall ph0 ph1 y ph2 ) ( \kore-forall ph3 ph1 y ph5 ) ph6 xX $. $}
${ $d x ph1 $.
   substitution-kore-forall-shadowed $a #Substitution ( \kore-forall ph0 ph1 x ph2 ) ( \kore-forall ph0 ph1 x ph2 ) ph3 x $. $}
${ substitution-kore-inj.0 $e #Substitution ph0 ph3 ph6 xX $.
   substitution-kore-inj.1 $e #Substitution ph1 ph4 ph6 xX $.
   substitution-kore-inj.2 $e #Substitution ph2 ph5 ph6 xX $.
   substitution-kore-inj $a #Substitution ( \kore-inj ph0 ph1 ph2 ) ( \kore-inj ph3 ph4 ph5 ) ph6 xX $. $}
${ $d x ph0 $.
   $d x ph1 $.
   $d x ph2 $.
   $d x xX $.
   substitution-kore-is-sort.0 $e #Substitution ph0 ph1 ph2 xX $.
   substitution-kore-is-sort $a #Substitution ( \kore-is-sort ph0 ) ( \kore-is-sort ph1 ) ph2 xX $. $}
${ notation-kore-valid.0 $e #Notation ph0 ph2 $.
   notation-kore-valid.1 $e #Notation ph1 ph3 $.
   notation-kore-valid $a #Notation ( \kore-valid ph0 ph1 ) ( \kore-valid ph2 ph3 ) $. $}
${ notation-kore-next.0 $e #Notation ph0 ph2 $.
   notation-kore-next.1 $e #Notation ph1 ph3 $.
   notation-kore-next $a #Notation ( \kore-next ph0 ph1 ) ( \kore-next ph2 ph3 ) $. $}
${ notation-kore-or.0 $e #Notation ph0 ph3 $.
   notation-kore-or.1 $e #Notation ph1 ph4 $.
   notation-kore-or.2 $e #Notation ph2 ph5 $.
   notation-kore-or $a #Notation ( \kore-or ph0 ph1 ph2 ) ( \kore-or ph3 ph4 ph5 ) $. $}
${ notation-kore-implies.0 $e #Notation ph0 ph3 $.
   notation-kore-implies.1 $e #Notation ph1 ph4 $.
   notation-kore-implies.2 $e #Notation ph2 ph5 $.
   notation-kore-implies $a #Notation ( \kore-implies ph0 ph1 ph2 ) ( \kore-implies ph3 ph4 ph5 ) $. $}
${ notation-kore-not.0 $e #Notation ph0 ph2 $.
   notation-kore-not.1 $e #Notation ph1 ph3 $.
   notation-kore-not $a #Notation ( \kore-not ph0 ph1 ) ( \kore-not ph2 ph3 ) $. $}
${ positive-in-kore-not.0 $e #Positive xX ph0 $.
   positive-in-kore-not.1 $e #Negative xX ph1 $.
   positive-in-kore-not $a #Positive xX ( \kore-not ph0 ph1 ) $. $}
${ negative-in-kore-not.0 $e #Negative xX ph0 $.
   negative-in-kore-not.1 $e #Positive xX ph1 $.
   negative-in-kore-not $a #Negative xX ( \kore-not ph0 ph1 ) $. $}
${ positive-in-kore-next.0 $e #Positive xX ph0 $.
   positive-in-kore-next.1 $e #Positive xX ph1 $.
   positive-in-kore-next $a #Positive xX ( \kore-next ph0 ph1 ) $. $}
${ negative-in-kore-next.0 $e #Negative xX ph0 $.
   negative-in-kore-next.1 $e #Negative xX ph1 $.
   negative-in-kore-next $a #Negative xX ( \kore-next ph0 ph1 ) $. $}
${ $d X xX ph0 $.
   $d X ph1 $.
   positive-in-kore-always.0 $e #Positive xX ph1 $.
   positive-in-kore-always $a #Positive xX ( \kore-always ph0 ph1 ) $. $}
${ $d X xX ph0 $.
   $d X ph1 $.
   negative-in-kore-always.0 $e #Negative xX ph1 $.
   negative-in-kore-always $a #Negative xX ( \kore-always ph0 ph1 ) $. $}
${ $d X ph0 $.
   $d X ph1 $.
   $d X ph2 $.
   $d X ph3 $.
   notation-kore-always.0 $e #Notation ph0 ph2 $.
   notation-kore-always.1 $e #Notation ph1 ph3 $.
   notation-kore-always $a #Notation ( \kore-always ph0 ph1 ) ( \kore-always ph2 ph3 ) $. $}
in-vs-include-lemma-0 $a |- ( \imp ph0 ( \or ( \and ph0 ( \not ph1 ) ) ( \and ph0 ph1 ) ) ) $.
in-vs-include-lemma-1 $a |- ( \imp ( \not ( \imp ph0 ph1 ) ) ( \and ph0 ( \not ph1 ) ) ) $.
in-vs-include-lemma-2 $a |- ( \imp ( \and ph0 ( \not ph1 ) ) ( \not ( \imp ph0 ph1 ) ) ) $.
in-imp-include $a |- ( \imp ( \in x ph0 ) ( \included x ph0 ) ) $.
include-imp-in $a |- ( \imp ( \included x ph0 ) ( \in x ph0 ) ) $.
in-vs-include $a |- ( \iff ( \in x ph0 ) ( \included x ph0 ) ) $.
${ membership-intro.0 $e |- ph0 $.
   membership-intro $a |- ( \forall x ( \in x ph0 ) ) $. $}
${ membership-elim.0 $e #Fresh x ph0 $.
   membership-elim.1 $e |- ( \forall x ( \in x ph0 ) ) $.
   membership-elim $a |- ph0 $. $}
${ $d x y $.
   membership-exists $a |- ( \iff ( \in x ( \exists y ph0 ) ) ( \exists y ( \in x ph0 ) ) ) $. $}
${ rule-imp-compat-in-in.0 $e |- ( \imp ph0 ph1 ) $.
   rule-imp-compat-in-in $a |- ( \imp ( \in x ph0 ) ( \in x ph1 ) ) $. $}
membership-or $a |- ( \iff ( \in x ( \or ph0 ph1 ) ) ( \or ( \in x ph0 ) ( \in x ph1 ) ) ) $.
membership-not $a |- ( \iff ( \in x ( \not ph0 ) ) ( \not ( \in x ph0 ) ) ) $.
membership-and $a |- ( \iff ( \in x ( \and ph0 ph1 ) ) ( \and ( \in x ph0 ) ( \in x ph1 ) ) ) $.
membership-var-left-aux-0 $a |- ( \imp ( \not ( \iff ph0 ph1 ) ) ( \or ( \and ph0 ( \not ph1 ) ) ( \and ( \not ph0 ) ph1 ) ) ) $.
membership-var-left-aux-1 $a |- ( \imp ( \ceil ( \and x y ) ) ( \not ( \ceil ( \and x ( \not y ) ) ) ) ) $.
membership-var-left-aux-2 $a |- ( \imp ( \ceil ( \and x y ) ) ( \not ( \ceil ( \and ( \not x ) y ) ) ) ) $.
membership-var-left $a |- ( \imp ( \in x y ) ( \eq x y ) ) $.
membership-var-right-aux $a |- ( \imp ( \or ph0 ph1 ) ( \or ( \not ( \iff ph0 ph1 ) ) ( \and ph0 ph1 ) ) ) $.
membership-var-right $a |- ( \imp ( \eq x y ) ( \in x y ) ) $.
membership-var $a |- ( \iff ( \in x y ) ( \eq x y ) ) $.
membership-imp $a |- ( \iff ( \in x ( \imp ph0 ph1 ) ) ( \imp ( \in x ph0 ) ( \in x ph1 ) ) ) $.
${ rule-membership-imp-right.0 $e |- ( \imp ( \in x ph0 ) ( \in x ph1 ) ) $.
   rule-membership-imp-right $a |- ( \in x ( \imp ph0 ph1 ) ) $. $}
ceil-and-x-ceil-ph-imp-ceil-ph $a |- ( \imp ( \ceil ( \and x ( \ceil ph0 ) ) ) ( \ceil ph0 ) ) $.
membership-symbol-ceil-aux-aux-0 $a |- ( \imp ( \ceil ( \and x ph0 ) ) ( \floor ( \ceil ( \and x ph0 ) ) ) ) $.
membership-symbol-ceil-aux-0 $a |- ( \imp ( \ceil ( \and x ph0 ) ) ( \ceil ( \and y ( \ceil ( \and x ph0 ) ) ) ) ) $.
${ $d y ph0 $.
   membership-symbol-ceil-right-aux-0 $a |- ( \imp ( \exists y ( \and ( \ceil ( \and y ph0 ) ) y ) ) ph0 ) $. $}
${ $d x y $.
   $d y ph0 $.
   membership-symbol-ceil-right $a |- ( \imp ( \exists y ( \in y ph0 ) ) ( \in x ( \ceil ph0 ) ) ) $. $}
${ $d x y ph0 $.
   $d y ph0 $.
   membership-symbol-ceil-left-aux-0 $a |- ( \imp ph0 ( \exists y ( \ceil ( \and y ph0 ) ) ) ) $. $}
${ $d x y $.
   $d y ph0 $.
   membership-symbol-ceil-left $a |- ( \imp ( \in x ( \ceil ph0 ) ) ( \exists y ( \in y ph0 ) ) ) $. $}
${ $d x y $.
   $d x ph0 $.
   $d y ph0 $.
   lemma-ceil-imp-floor-ceil $a |- ( \imp ( \ceil ph0 ) ( \floor ( \ceil ph0 ) ) ) $. $}
ceil-floor-imp-floor $a |- ( \imp ( \ceil ( \floor ph0 ) ) ( \floor ph0 ) ) $.
${ nonempty-is-not-bot.0 $e |- ( \ceil ph0 ) $.
   nonempty-is-not-bot $a |- ( \not ( \eq ph0 \bot ) ) $. $}
${ $d x y ph0 $.
   functional-imp-nonempty $a |- ( \imp ( \exists x ( \eq x ph0 ) ) ( \ceil ph0 ) ) $. $}
${ $d x ph0 $.
   functional-imp-nonempty-alt.0 $e |- ( \imp th0 ( \exists x ( \eq x ph0 ) ) ) $.
   functional-imp-nonempty-alt $a |- ( \imp th0 ( \ceil ph0 ) ) $. $}
lemma-floor-is-predicate $a |- ( \is-predicate ( \floor ph0 ) ) $.
not-bot-to-top $a |- ( \imp ( \is-bot ph0 ) ( \is-top ( \not ph0 ) ) ) $.
not-top-to-bot $a |- ( \imp ( \is-top ph0 ) ( \is-bot ( \not ph0 ) ) ) $.
predicate-intro-not $a |- ( \imp ( \is-predicate ph0 ) ( \is-predicate ( \not ph0 ) ) ) $.
${ rule-iff-compat-in-predicate.0 $e |- ( \iff ph0 ph1 ) $.
   rule-iff-compat-in-predicate $a |- ( \iff ( \is-predicate ph0 ) ( \is-predicate ph1 ) ) $. $}
ph-or-top-to-top $a |- ( \imp ( \is-top ph0 ) ( \is-top ( \or ph0 ph1 ) ) ) $.
bot-or-bot-to-bot $a |- ( \imp ( \and ( \is-bot ph0 ) ( \is-bot ph1 ) ) ( \is-bot ( \or ph0 ph1 ) ) ) $.
predicate-case2 $a |- ( \imp ( \and ( \is-predicate ph0 ) ( \is-predicate ph1 ) ) ( \or ( \and ( \is-bot ph0 ) ( \is-bot ph1 ) ) ( \or ( \and ( \is-bot ph0 ) ( \is-top ph1 ) ) ( \or ( \and ( \is-top ph0 ) ( \is-bot ph1 ) ) ( \and ( \is-top ph0 ) ( \is-top ph1 ) ) ) ) ) ) $.
predicate-intro-or $a |- ( \imp ( \and ( \is-predicate ph0 ) ( \is-predicate ph1 ) ) ( \is-predicate ( \or ph0 ph1 ) ) ) $.
predicate-intro-imp $a |- ( \imp ( \and ( \is-predicate ph0 ) ( \is-predicate ph1 ) ) ( \is-predicate ( \imp ph0 ph1 ) ) ) $.
${ rule-predicate-intro-imp.0 $e |- ( \is-predicate ph0 ) $.
   rule-predicate-intro-imp.1 $e |- ( \is-predicate ph1 ) $.
   rule-predicate-intro-imp $a |- ( \is-predicate ( \imp ph0 ph1 ) ) $. $}
lemma-bot-imp-floor $a |- ( \imp ( \is-bot ph0 ) ( \imp ph0 ( \floor ph0 ) ) ) $.
lemma-top-imp-floor $a |- ( \imp ( \is-top ph0 ) ( \imp ph0 ( \floor ph0 ) ) ) $.
lemma-predicate-floor-alt $a |- ( \imp ( \is-predicate ph0 ) ( \imp ph0 ( \floor ph0 ) ) ) $.
${ lemma-predicate-floor.0 $e |- ( \is-predicate ph0 ) $.
   lemma-predicate-floor $a |- ( \imp ph0 ( \floor ph0 ) ) $. $}
lemma-imp-floor-imp-floor $a |- ( \imp ( \imp ( \floor ph0 ) ( \floor ph1 ) ) ( \floor ( \imp ( \floor ph0 ) ( \floor ph1 ) ) ) ) $.
lemma-ceil-is-predicate $a |- ( \is-predicate ( \ceil ph0 ) ) $.
${ is-predicate-elim.0 $e |- ( \is-predicate ph0 ) $.
   is-predicate-elim.1 $e #Substitution ph2 ph1 \bot x $.
   is-predicate-elim.2 $e #Substitution ph3 ph1 \top x $.
   is-predicate-elim.3 $e #Substitution ph4 ph1 ph0 x $.
   is-predicate-elim.4 $e |- ph2 $.
   is-predicate-elim.5 $e |- ph3 $.
   is-predicate-elim $a |- ph4 $. $}
forall-predicate-case $a |- ( \imp ( \forall x ( \is-predicate ph0 ) ) ( \or ( \exists x ( \is-top ph0 ) ) ( \forall x ( \is-bot ph0 ) ) ) ) $.
predicate-intro-exists $a |- ( \imp ( \forall x ( \is-predicate ph0 ) ) ( \is-predicate ( \exists x ph0 ) ) ) $.
${ rule-predicate-intro-exists.0 $e |- ( \is-predicate ph0 ) $.
   rule-predicate-intro-exists $a |- ( \is-predicate ( \exists x ph0 ) ) $. $}
${ $d x ph0 $.
   nonempty-predicate-is-top.0 $e |- ( \ceil ph0 ) $.
   nonempty-predicate-is-top.1 $e |- ( \is-predicate ph1 ) $.
   nonempty-predicate-is-top $a |- ( \imp ( \eq ph0 ( \and ph1 ph0 ) ) ph1 ) $. $}
${ $d x ph1 $.
   $d x ph2 $.
   predicate-and-propagate-in-eq.0 $e |- ( \is-predicate ph0 ) $.
   predicate-and-propagate-in-eq $a |- ( \imp ( \and ph0 ( \eq ph1 ph2 ) ) ( \eq ( \and ph0 ph1 ) ph2 ) ) $. $}
${ $d x ph0 $.
   $d x ph1 $.
   predicate-imp-propagate-in-floor.0 $e |- ( \is-predicate ph0 ) $.
   predicate-imp-propagate-in-floor $a |- ( \imp ( \imp ph0 ( \floor ph1 ) ) ( \floor ( \imp ph0 ph1 ) ) ) $. $}
${ $d x ph0 $.
   $d x ph1 $.
   $d x ph2 $.
   predicate-imp-propagate-in-iff.0 $e |- ( \is-predicate ph0 ) $.
   predicate-imp-propagate-in-iff $a |- ( \imp ( \imp ph0 ( \iff ph1 ph2 ) ) ( \iff ( \and ( \imp ph0 ph1 ) ph2 ) ph2 ) ) $. $}
${ predicate-floor-intro.0 $e |- ( \is-predicate ph0 ) $.
   predicate-floor-intro.1 $e |- ( \imp ph0 ph1 ) $.
   predicate-floor-intro $a |- ( \imp ph0 ( \floor ph1 ) ) $. $}
${ rule-predicate-intro-and.0 $e |- ( \is-predicate ph0 ) $.
   rule-predicate-intro-and.1 $e |- ( \is-predicate ph1 ) $.
   rule-predicate-intro-and $a |- ( \is-predicate ( \and ph0 ph1 ) ) $. $}
predicate-intro-top $a |- ( \is-predicate \top ) $.
is-bot-elim $a |- ( \imp ( \is-bot ph0 ) ( \imp ph0 ph1 ) ) $.
${ $d x ph1 $.
   $d x ph2 $.
   predicate-imp-propagate-in-app.0 $e |- ( \is-predicate ph0 ) $.
   predicate-imp-propagate-in-app $a |- ( \iff ( \and ph0 ( \app ph1 ph2 ) ) ( \app ph1 ( \and ph0 ph2 ) ) ) $. $}
${ predicate-imp-compat-in-ceil.0 $e |- ( \is-predicate ph0 ) $.
   predicate-imp-compat-in-ceil.1 $e |- ( \imp ph0 ( \imp ph1 ph2 ) ) $.
   predicate-imp-compat-in-ceil $a |- ( \imp ph0 ( \imp ( \ceil ph1 ) ( \ceil ph2 ) ) ) $. $}
${ predicate-not-ceil-elim.0 $e |- ( \is-predicate ph0 ) $.
   predicate-not-ceil-elim.1 $e |- ( \imp ph0 ( \not ph1 ) ) $.
   predicate-not-ceil-elim $a |- ( \imp ph0 ( \not ( \ceil ph1 ) ) ) $. $}
kore-top-sorting $a |- ( \in-sort ( \kore-top ph0 ) ph0 ) $.
kore-bottom-sorting $a |- ( \in-sort ( \kore-bottom ph0 ) ph0 ) $.
kore-not-sorting $a |- ( \in-sort ( \kore-not ph0 ph1 ) ph0 ) $.
kore-or-sorting-alt $a |- ( \imp ( \in-sort ph1 ph0 ) ( \imp ( \in-sort ph2 ph0 ) ( \in-sort ( \kore-or ph0 ph1 ph2 ) ph0 ) ) ) $.
kore-or-sorting $a |- ( \imp ( \and ( \in-sort ph1 ph0 ) ( \in-sort ph2 ph0 ) ) ( \in-sort ( \kore-or ph0 ph1 ph2 ) ph0 ) ) $.
or-sorting $a |- ( \imp ( \and ( \in-sort ph1 ph0 ) ( \in-sort ph2 ph0 ) ) ( \in-sort ( \or ph1 ph2 ) ph0 ) ) $.
kore-and-sorting-alt $a |- ( \imp ( \in-sort ph1 ph0 ) ( \imp ( \in-sort ph2 ph0 ) ( \in-sort ( \kore-and ph0 ph1 ph2 ) ph0 ) ) ) $.
kore-and-sorting $a |- ( \imp ( \and ( \in-sort ph1 ph0 ) ( \in-sort ph2 ph0 ) ) ( \in-sort ( \kore-and ph0 ph1 ph2 ) ph0 ) ) $.
kore-implies-sorting-alt $a |- ( \imp ( \in-sort ph2 ph0 ) ( \in-sort ( \kore-implies ph0 ph1 ph2 ) ph0 ) ) $.
kore-implies-sorting $a |- ( \imp ( \and ( \in-sort ph1 ph0 ) ( \in-sort ph2 ph0 ) ) ( \in-sort ( \kore-implies ph0 ph1 ph2 ) ph0 ) ) $.
kore-ceil-sorting $a |- ( \in-sort ( \kore-ceil ph0 ph2 ph1 ) ph2 ) $.
kore-floor-sorting $a |- ( \in-sort ( \kore-floor ph0 ph2 ph1 ) ph2 ) $.
kore-equals-sorting $a |- ( \in-sort ( \kore-equals ph0 ph1 ph2 ph3 ) ph1 ) $.
${ $d X ph0 $.
   kore-mu-sorting.0 $e #Positive X ph1 $.
   kore-mu-sorting.1 $e |- ( \imp ( \in-sort X ph0 ) ( \in-sort ph1 ph0 ) ) $.
   kore-mu-sorting.2 $e #Substitution ph2 ph1 ( \inh ph0 ) X $.
   kore-mu-sorting $a |- ( \in-sort ( \mu X ph1 ) ph0 ) $. $}
${ kore-valid-to-in-sort.0 $e |- ( \kore-valid ph0 ph1 ) $.
   kore-valid-to-in-sort $a |- ( \in-sort ph1 ph0 ) $. $}
kore-exists-sorting $a |- ( \in-sort ( \kore-exists ph0 ph1 x ph2 ) ph1 ) $.
kore-forall-sorting $a |- ( \in-sort ( \kore-forall ph0 ph1 x ph2 ) ph1 ) $.
sorted-forall-sorting-lemma-0 $a |- ( \imp ph0 ( \imp ( \imp ph1 ph2 ) ( \imp ( \imp ph0 ph1 ) ph2 ) ) ) $.
sorted-forall-sorting-lemma-1 $a |- ( \imp ( \floor ph0 ) ( \imp ( \floor ( \imp ph1 ph2 ) ) ( \floor ( \imp ( \imp ( \floor ph0 ) ph1 ) ph2 ) ) ) ) $.
sorted-forall-sorting-lemma-2 $a |- ( \imp ( \floor ph0 ) ( \imp ( \imp ( \and ph3 ( \floor ph0 ) ) ( \floor ( \imp ph1 ph2 ) ) ) ( \imp ph3 ( \floor ( \imp ( \imp ( \floor ph0 ) ph1 ) ph2 ) ) ) ) ) $.
sorted-forall-sorting-lemma-3 $a |- ( \imp ( \imp ph0 ph1 ) ( \imp ( \imp ph2 ph0 ) ( \imp ph2 ph1 ) ) ) $.
${ $d x ph0 $.
   $d x ph3 $.
   sorted-forall-sorting.0 $e |- ( \exists x ( \in-sort x ph1 ) ) $.
   sorted-forall-sorting.1 $e |- ( \imp ( \and ph3 ( \in-sort x ph1 ) ) ( \in-sort ph2 ph0 ) ) $.
   sorted-forall-sorting $a |- ( \imp ph3 ( \in-sort ( \sorted-forall x ph1 ph2 ) ph0 ) ) $. $}
${ $d x ph0 $.
   $d x ph3 $.
   sorted-exists-sorting.0 $e |- ( \imp ( \and ph3 ( \in-sort x ph1 ) ) ( \in-sort ph2 ph0 ) ) $.
   sorted-exists-sorting $a |- ( \imp ph3 ( \in-sort ( \sorted-exists x ph1 ph2 ) ph0 ) ) $. $}
kore-rewrites-sorting $a |- ( \imp ( \and ( \in-sort ph1 ph0 ) ( \in-sort ph2 ph0 ) ) ( \in-sort ( \kore-rewrites ph0 ph1 ph2 ) ph0 ) ) $.
kore-in-sorting $a |- ( \in-sort ( \kore-in ph0 ph1 ph2 ph3 ) ph1 ) $.
${ kore-mu-sorting-alt.0 $e #Positive X ph1 $.
   kore-mu-sorting-alt $a |- ( \in-sort ( \kore-mu ph0 X ph1 ) ph0 ) $. $}
${ $d X ph0 $.
   $d X ph1 $.
   kore-eventually-sorting $a |- ( \in-sort ( \kore-eventually ph0 ph1 ) ph0 ) $. $}
${ $d X ph0 $.
   $d X ph1 $.
   kore-weak-eventually-sorting $a |- ( \in-sort ( \kore-weak-eventually ph0 ph1 ) ph0 ) $. $}
${ $d X ph0 $.
   $d X ph1 $.
   kore-always-sorting $a |- ( \in-sort ( \kore-always ph0 ph1 ) ph0 ) $. $}
kore-all-path-next-sorting $a |- ( \in-sort ( \kore-all-path-next ph0 ph1 ) ph0 ) $.
kore-circularity-sorting $a |- ( \in-sort ( \kore-circularity ph0 ph1 ) ph0 ) $.
${ $d X Y ph0 $.
   kore-well-founded-sorting $a |- ( \in-sort ( \kore-well-founded ph0 ) ph0 ) $. $}
${ $d X Y ph0 $.
   kore-well-founded-alt-sorting $a |- ( \in-sort ( \kore-well-founded-alt ph0 ) ph0 ) $. $}
kore-one-path-reaches-star-sorting $a |- ( \imp ( \in-sort ph1 ph0 ) ( \in-sort ( \kore-one-path-reaches-star ph0 ph1 ph2 ) ph0 ) ) $.
kore-one-path-reaches-plus-sorting $a |- ( \imp ( \in-sort ph1 ph0 ) ( \in-sort ( \kore-one-path-reaches-plus ph0 ph1 ph2 ) ph0 ) ) $.
kore-top-valid $a |- ( \kore-valid ph0 ( \kore-top ph0 ) ) $.
kore-not-bot $a |- ( \kore-valid ph0 ( \kore-not ph0 ( \kore-bottom ph0 ) ) ) $.
kore-bot-elim $a |- ( \imp ( \in-sort ph1 ph0 ) ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-bottom ph0 ) ph1 ) ) ) $.
kore-mp-aux $a |- ( \imp ( \iff ph1 ph0 ) ( \imp ( \iff ( \or ( \and ( \not ph1 ) ph0 ) ph2 ) ph0 ) ( \iff ph2 ph0 ) ) ) $.
kore-mp $a |- ( \imp ( \kore-valid ph0 ph1 ) ( \imp ( \kore-valid ph0 ( \kore-implies ph0 ph1 ph2 ) ) ( \kore-valid ph0 ph2 ) ) ) $.
${ kore-mp-alt.0 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph1 ph2 ) ) ) $.
   kore-mp-alt.1 $e |- ( \imp th0 ( \kore-valid ph0 ph1 ) ) $.
   kore-mp-alt $a |- ( \imp th0 ( \kore-valid ph0 ph2 ) ) $. $}
${ kore-weakened-mp.0 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph1 ( \kore-implies ph0 ph2 ph3 ) ) ) ) $.
   kore-weakened-mp.1 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph1 ph2 ) ) ) $.
   kore-weakened-mp $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph1 ph3 ) ) ) $. $}
kore-weakening-alt $a |- ( \imp ( \kore-valid ph0 ph1 ) ( \kore-valid ph0 ( \kore-implies ph0 ph2 ph1 ) ) ) $.
${ kore-weakening.0 $e |- ( \imp th0 ( \kore-valid ph0 ph2 ) ) $.
   kore-weakening $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph1 ph2 ) ) ) $. $}
kore-implies-transitivity $a |- ( \imp ( \kore-valid ph0 ( \kore-implies ph0 ph1 ph2 ) ) ( \imp ( \kore-valid ph0 ( \kore-implies ph0 ph2 ph3 ) ) ( \kore-valid ph0 ( \kore-implies ph0 ph1 ph3 ) ) ) ) $.
${ rule-kore-implies-transitivity.0 $e |- ( \kore-valid ph0 ( \kore-implies ph0 ph1 ph2 ) ) $.
   rule-kore-implies-transitivity.1 $e |- ( \kore-valid ph0 ( \kore-implies ph0 ph2 ph3 ) ) $.
   rule-kore-implies-transitivity $a |- ( \kore-valid ph0 ( \kore-implies ph0 ph1 ph3 ) ) $. $}
kore-or-intro-left $a |- ( \imp ( \in-sort ph1 ph0 ) ( \imp ( \in-sort ph2 ph0 ) ( \kore-valid ph0 ( \kore-implies ph0 ph1 ( \kore-or ph0 ph1 ph2 ) ) ) ) ) $.
kore-or-intro-right $a |- ( \imp ( \in-sort ph1 ph0 ) ( \imp ( \in-sort ph2 ph0 ) ( \kore-valid ph0 ( \kore-implies ph0 ph1 ( \kore-or ph0 ph2 ph1 ) ) ) ) ) $.
${ kore-or-intro-left-alt2.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-or-intro-left-alt2.1 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-or-intro-left-alt2 $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph1 ( \kore-or ph0 ph1 ph2 ) ) ) ) $. $}
${ kore-or-intro-right-alt2.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-or-intro-right-alt2.1 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-or-intro-right-alt2 $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph1 ( \kore-or ph0 ph2 ph1 ) ) ) ) $. $}
kore-or-elim-alt $a |- ( \imp ( \in-sort ph1 ph0 ) ( \imp ( \in-sort ph2 ph0 ) ( \imp ( \in-sort ph3 ph0 ) ( \imp ( \kore-valid ph0 ( \kore-implies ph0 ph1 ph3 ) ) ( \imp ( \kore-valid ph0 ( \kore-implies ph0 ph2 ph3 ) ) ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-or ph0 ph1 ph2 ) ph3 ) ) ) ) ) ) ) $.
${ kore-or-elim-alt3.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-or-elim-alt3.1 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-or-elim-alt3.2 $e |- ( \imp th0 ( \in-sort ph3 ph0 ) ) $.
   kore-or-elim-alt3 $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-implies ph0 ph1 ph3 ) ( \kore-implies ph0 ( \kore-implies ph0 ph2 ph3 ) ( \kore-implies ph0 ( \kore-or ph0 ph1 ph2 ) ph3 ) ) ) ) ) $. $}
${ kore-or-elim.0 $e |- ( \in-sort ph1 ph0 ) $.
   kore-or-elim.1 $e |- ( \in-sort ph2 ph0 ) $.
   kore-or-elim.2 $e |- ( \in-sort ph3 ph0 ) $.
   kore-or-elim.3 $e |- ( \kore-valid ph0 ( \kore-implies ph0 ph1 ph3 ) ) $.
   kore-or-elim.4 $e |- ( \kore-valid ph0 ( \kore-implies ph0 ph2 ph3 ) ) $.
   kore-or-elim $a |- ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-or ph0 ph1 ph2 ) ph3 ) ) $. $}
${ kore-or-elim-alt2.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-or-elim-alt2.1 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-or-elim-alt2.2 $e |- ( \imp th0 ( \in-sort ph3 ph0 ) ) $.
   kore-or-elim-alt2.3 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph1 ph3 ) ) ) $.
   kore-or-elim-alt2.4 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph2 ph3 ) ) ) $.
   kore-or-elim-alt2 $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-or ph0 ph1 ph2 ) ph3 ) ) ) $. $}
kore-and-elim-left-alt $a |- ( \imp ( \in-sort ph1 ph0 ) ( \imp ( \kore-valid ph0 ( \kore-and ph0 ph1 ph2 ) ) ( \kore-valid ph0 ph1 ) ) ) $.
kore-and-elim-right-alt $a |- ( \imp ( \in-sort ph2 ph0 ) ( \imp ( \kore-valid ph0 ( \kore-and ph0 ph1 ph2 ) ) ( \kore-valid ph0 ph2 ) ) ) $.
kore-and-elim-left $a |- ( \imp ( \in-sort ph1 ph0 ) ( \imp ( \in-sort ph2 ph0 ) ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-and ph0 ph1 ph2 ) ph1 ) ) ) ) $.
kore-and-elim-right $a |- ( \imp ( \in-sort ph1 ph0 ) ( \imp ( \in-sort ph2 ph0 ) ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-and ph0 ph2 ph1 ) ph1 ) ) ) ) $.
${ kore-and-elim-left-alt3.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-and-elim-left-alt3.1 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-and-elim-left-alt3 $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-and ph0 ph1 ph2 ) ph1 ) ) ) $. $}
${ kore-and-elim-right-alt3.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-and-elim-right-alt3.1 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-and-elim-right-alt3 $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-and ph0 ph1 ph2 ) ph2 ) ) ) $. $}
${ kore-and-elim-left-alt2.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-and-elim-left-alt2.1 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-and ph0 ph1 ph2 ) ) ) $.
   kore-and-elim-left-alt2 $a |- ( \imp th0 ( \kore-valid ph0 ph1 ) ) $. $}
${ kore-and-elim-right-alt2.0 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-and-elim-right-alt2.1 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-and ph0 ph1 ph2 ) ) ) $.
   kore-and-elim-right-alt2 $a |- ( \imp th0 ( \kore-valid ph0 ph2 ) ) $. $}
kore-and-intro $a |- ( \imp ( \in-sort ph1 ph0 ) ( \imp ( \in-sort ph2 ph0 ) ( \kore-valid ph0 ( \kore-implies ph0 ph1 ( \kore-implies ph0 ph2 ( \kore-and ph0 ph1 ph2 ) ) ) ) ) ) $.
${ kore-and-intro-alt.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-and-intro-alt.1 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-and-intro-alt.2 $e |- ( \imp th0 ( \kore-valid ph0 ph1 ) ) $.
   kore-and-intro-alt.3 $e |- ( \imp th0 ( \kore-valid ph0 ph2 ) ) $.
   kore-and-intro-alt $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-and ph0 ph1 ph2 ) ) ) $. $}
${ kore-and-intro-alt2.0 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-and-intro-alt2.1 $e |- ( \imp th0 ( \in-sort ph3 ph0 ) ) $.
   kore-and-intro-alt2.2 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph1 ph2 ) ) ) $.
   kore-and-intro-alt2.3 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph1 ph3 ) ) ) $.
   kore-and-intro-alt2 $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph1 ( \kore-and ph0 ph2 ph3 ) ) ) ) $. $}
kore-implies-elim $a |- ( \imp ( \in-sort ph1 ph0 ) ( \imp ( \in-sort ph2 ph0 ) ( \imp ( \kore-valid ph0 ( \kore-implies ph0 ph1 ph2 ) ) ( \imp ph1 ph2 ) ) ) ) $.
${ kore-implies-elim-alt.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-implies-elim-alt.1 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-implies-elim-alt.2 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph1 ph2 ) ) ) $.
   kore-implies-elim-alt $a |- ( \imp th0 ( \imp ph1 ph2 ) ) $. $}
${ kore-implies-intro.0 $e |- ( \in-sort ph1 ph0 ) $.
   kore-implies-intro.1 $e |- ( \in-sort ph2 ph0 ) $.
   kore-implies-intro.2 $e |- ( \imp ph1 ph2 ) $.
   kore-implies-intro $a |- ( \kore-valid ph0 ( \kore-implies ph0 ph1 ph2 ) ) $. $}
${ kore-implies-intro-alt.0 $e |- ( \is-predicate th0 ) $.
   kore-implies-intro-alt.1 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-implies-intro-alt.2 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-implies-intro-alt.3 $e |- ( \imp th0 ( \imp ph1 ph2 ) ) $.
   kore-implies-intro-alt $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph1 ph2 ) ) ) $. $}
${ kore-implies-reflexivity.0 $e |- ( \in-sort ph1 ph0 ) $.
   kore-implies-reflexivity $a |- ( \kore-valid ph0 ( \kore-implies ph0 ph1 ph1 ) ) $. $}
${ rule-kore-mp.0 $e |- ( \kore-valid ph0 ( \kore-implies ph0 ph1 ph2 ) ) $.
   rule-kore-mp.1 $e |- ( \kore-valid ph0 ph1 ) $.
   rule-kore-mp $a |- ( \kore-valid ph0 ph2 ) $. $}
kore-contrapositive $a |- ( \imp ( \in-sort ph1 ph0 ) ( \imp ( \in-sort ph2 ph0 ) ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-implies ph0 ph1 ph2 ) ( \kore-implies ph0 ( \kore-not ph0 ph2 ) ( \kore-not ph0 ph1 ) ) ) ) ) ) $.
${ rule-kore-contrapositive.0 $e |- ( \in-sort ph1 ph0 ) $.
   rule-kore-contrapositive.1 $e |- ( \in-sort ph2 ph0 ) $.
   rule-kore-contrapositive.2 $e |- ( \kore-valid ph0 ( \kore-implies ph0 ph1 ph2 ) ) $.
   rule-kore-contrapositive $a |- ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-not ph0 ph2 ) ( \kore-not ph0 ph1 ) ) ) $. $}
${ kore-contrapositive-alt.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-contrapositive-alt.1 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-contrapositive-alt.2 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph1 ph2 ) ) ) $.
   kore-contrapositive-alt $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-not ph0 ph2 ) ( \kore-not ph0 ph1 ) ) ) ) $. $}
kore-dn-intro $a |- ( \imp ( \in-sort ph1 ph0 ) ( \kore-valid ph0 ( \kore-implies ph0 ph1 ( \kore-not ph0 ( \kore-not ph0 ph1 ) ) ) ) ) $.
kore-dn-elim $a |- ( \imp ( \in-sort ph1 ph0 ) ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-not ph0 ( \kore-not ph0 ph1 ) ) ph1 ) ) ) $.
${ kore-de-morgan-alt.0 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-not ph0 ph1 ) ) ) $.
   kore-de-morgan-alt.1 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-not ph0 ph2 ) ) ) $.
   kore-de-morgan-alt $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-not ph0 ( \kore-or ph0 ph1 ph2 ) ) ) ) $. $}
${ kore-implies-reflexivity-alt.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-implies-reflexivity-alt $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph1 ph1 ) ) ) $. $}
${ kore-iff-reflexivity.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-iff-reflexivity $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-iff ph0 ph1 ph1 ) ) ) $. $}
${ kore-implies-transitivity-alt.0 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph1 ph2 ) ) ) $.
   kore-implies-transitivity-alt.1 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph2 ph3 ) ) ) $.
   kore-implies-transitivity-alt $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph1 ph3 ) ) ) $. $}
${ kore-implies-transitivity-alt2.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-implies-transitivity-alt2.1 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-implies-transitivity-alt2.2 $e |- ( \imp th0 ( \in-sort ph3 ph0 ) ) $.
   kore-implies-transitivity-alt2 $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-implies ph0 ph1 ph2 ) ( \kore-implies ph0 ( \kore-implies ph0 ph2 ph3 ) ( \kore-implies ph0 ph1 ph3 ) ) ) ) ) $. $}
${ kore-iff-transitivity.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-iff-transitivity.1 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-iff-transitivity.2 $e |- ( \imp th0 ( \in-sort ph3 ph0 ) ) $.
   kore-iff-transitivity.3 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-iff ph0 ph1 ph2 ) ) ) $.
   kore-iff-transitivity.4 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-iff ph0 ph2 ph3 ) ) ) $.
   kore-iff-transitivity $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-iff ph0 ph1 ph3 ) ) ) $. $}
${ kore-iff-symmetry.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-iff-symmetry.1 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-iff-symmetry.2 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-iff ph0 ph1 ph2 ) ) ) $.
   kore-iff-symmetry $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-iff ph0 ph2 ph1 ) ) ) $. $}
${ kore-and-commutativity.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-and-commutativity.1 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-and-commutativity $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-iff ph0 ( \kore-and ph0 ph1 ph2 ) ( \kore-and ph0 ph2 ph1 ) ) ) ) $. $}
${ kore-and-associativity.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-and-associativity.1 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-and-associativity.2 $e |- ( \imp th0 ( \in-sort ph3 ph0 ) ) $.
   kore-and-associativity $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-iff ph0 ( \kore-and ph0 ph1 ( \kore-and ph0 ph2 ph3 ) ) ( \kore-and ph0 ( \kore-and ph0 ph1 ph2 ) ph3 ) ) ) ) $. $}
${ kore-or-commutativity-alt.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-or-commutativity-alt.1 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-or-commutativity-alt $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-or ph0 ph1 ph2 ) ( \kore-or ph0 ph2 ph1 ) ) ) ) $. $}
${ kore-or-commutativity.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-or-commutativity.1 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-or-commutativity $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-iff ph0 ( \kore-or ph0 ph1 ph2 ) ( \kore-or ph0 ph2 ph1 ) ) ) ) $. $}
${ kore-or-associativity.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-or-associativity.1 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-or-associativity.2 $e |- ( \imp th0 ( \in-sort ph3 ph0 ) ) $.
   kore-or-associativity $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-iff ph0 ( \kore-or ph0 ph1 ( \kore-or ph0 ph2 ph3 ) ) ( \kore-or ph0 ( \kore-or ph0 ph1 ph2 ) ph3 ) ) ) ) $. $}
${ kore-implies-compat-in-kore-and.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-implies-compat-in-kore-and.1 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-implies-compat-in-kore-and.2 $e |- ( \imp th0 ( \in-sort ph3 ph0 ) ) $.
   kore-implies-compat-in-kore-and.3 $e |- ( \imp th0 ( \in-sort ph4 ph0 ) ) $.
   kore-implies-compat-in-kore-and.4 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph1 ph2 ) ) ) $.
   kore-implies-compat-in-kore-and.5 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph3 ph4 ) ) ) $.
   kore-implies-compat-in-kore-and $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-and ph0 ph1 ph3 ) ( \kore-and ph0 ph2 ph4 ) ) ) ) $. $}
${ kore-iff-compat-in-kore-and.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-iff-compat-in-kore-and.1 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-iff-compat-in-kore-and.2 $e |- ( \imp th0 ( \in-sort ph3 ph0 ) ) $.
   kore-iff-compat-in-kore-and.3 $e |- ( \imp th0 ( \in-sort ph4 ph0 ) ) $.
   kore-iff-compat-in-kore-and.4 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-iff ph0 ph1 ph2 ) ) ) $.
   kore-iff-compat-in-kore-and.5 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-iff ph0 ph3 ph4 ) ) ) $.
   kore-iff-compat-in-kore-and $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-iff ph0 ( \kore-and ph0 ph1 ph3 ) ( \kore-and ph0 ph2 ph4 ) ) ) ) $. $}
${ kore-implies-compat-in-kore-or.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-implies-compat-in-kore-or.1 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-implies-compat-in-kore-or.2 $e |- ( \imp th0 ( \in-sort ph3 ph0 ) ) $.
   kore-implies-compat-in-kore-or.3 $e |- ( \imp th0 ( \in-sort ph4 ph0 ) ) $.
   kore-implies-compat-in-kore-or.4 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph1 ph2 ) ) ) $.
   kore-implies-compat-in-kore-or.5 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph3 ph4 ) ) ) $.
   kore-implies-compat-in-kore-or $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-or ph0 ph1 ph3 ) ( \kore-or ph0 ph2 ph4 ) ) ) ) $. $}
${ kore-iff-compat-in-kore-or.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-iff-compat-in-kore-or.1 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-iff-compat-in-kore-or.2 $e |- ( \imp th0 ( \in-sort ph3 ph0 ) ) $.
   kore-iff-compat-in-kore-or.3 $e |- ( \imp th0 ( \in-sort ph4 ph0 ) ) $.
   kore-iff-compat-in-kore-or.4 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-iff ph0 ph1 ph2 ) ) ) $.
   kore-iff-compat-in-kore-or.5 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-iff ph0 ph3 ph4 ) ) ) $.
   kore-iff-compat-in-kore-or $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-iff ph0 ( \kore-or ph0 ph1 ph3 ) ( \kore-or ph0 ph2 ph4 ) ) ) ) $. $}
${ kore-iff-elim-left.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-iff-elim-left.1 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-iff-elim-left.2 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-iff ph0 ph1 ph2 ) ) ) $.
   kore-iff-elim-left $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph1 ph2 ) ) ) $. $}
${ kore-iff-elim-right.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-iff-elim-right.1 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-iff-elim-right.2 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-iff ph0 ph1 ph2 ) ) ) $.
   kore-iff-elim-right $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph2 ph1 ) ) ) $. $}
${ kore-and-top-alt.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-and-top-alt.1 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-and-top-alt $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-and ph0 ( \kore-and ph0 ph1 ( \kore-top ph0 ) ) ph2 ) ( \kore-and ph0 ph1 ph2 ) ) ) ) $. $}
${ kore-anp-top.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-and-top.1 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-and ph0 ph1 ( \kore-top ph0 ) ) ) ) $.
   kore-anp-top $a |- ( \imp th0 ( \kore-valid ph0 ph1 ) ) $. $}
${ kore-imp-conj-simplify.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-imp-conj-simplify.1 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-imp-conj-simplify.2 $e |- ( \imp th0 ( \in-sort ph4 ph0 ) ) $.
   kore-imp-conj-simplify.3 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph1 ph2 ) ) ) $.
   kore-imp-conj-simplify.4 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph3 ( \kore-and ph0 ph1 ph4 ) ) ) ) $.
   kore-imp-conj-simplify $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph3 ( \kore-and ph0 ph2 ph4 ) ) ) ) $. $}
${ kore-not-elim.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-not-elim.1 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-not-elim.2 $e |- ( \imp th0 ( \in-sort ph3 ph0 ) ) $.
   kore-not-elim.3 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-not ph0 ph1 ) ) ) $.
   kore-not-elim $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-and ph0 ph1 ph2 ) ph3 ) ) ) $. $}
${ kore-or-intro-left-alt.0 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-not ph0 ph1 ) ) ) $.
   kore-or-intro-left-alt $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-not ph0 ( \kore-and ph0 ph1 ph2 ) ) ) ) $. $}
${ kore-or-intro-right-alt.0 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-not ph0 ph2 ) ) ) $.
   kore-or-intro-right-alt $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-not ph0 ( \kore-and ph0 ph1 ph2 ) ) ) ) $. $}
${ kore-curry.0 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-and ph0 ph1 ph2 ) ph3 ) ) ) $.
   kore-curry $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph1 ( \kore-implies ph0 ph2 ph3 ) ) ) ) $. $}
${ kore-uncurry.0 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph1 ( \kore-implies ph0 ph2 ph3 ) ) ) ) $.
   kore-uncurry $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-and ph0 ph1 ph2 ) ph3 ) ) ) $. $}
${ kore-premise-switch.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-premise-switch.1 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-premise-switch.2 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph1 ( \kore-implies ph0 ph2 ph3 ) ) ) ) $.
   kore-premise-switch $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph2 ( \kore-implies ph0 ph1 ph3 ) ) ) ) $. $}
${ kore-and-intro-alt3.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-and-intro-alt3.1 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-and-intro-alt3.2 $e |- ( \imp th0 ( \in-sort ph3 ph0 ) ) $.
   kore-and-intro-alt3 $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-iff ph0 ( \kore-and ph0 ( \kore-implies ph0 ph1 ph2 ) ( \kore-implies ph0 ph1 ph3 ) ) ( \kore-implies ph0 ph1 ( \kore-and ph0 ph2 ph3 ) ) ) ) ) $. $}
${ kore-weakening-imp2.0 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph1 ph2 ) ) ) $.
   kore-weakening-imp2 $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-implies ph0 ph3 ph1 ) ( \kore-implies ph0 ph3 ph2 ) ) ) ) $. $}
${ kore-weakening-imp3.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-weakening-imp3.1 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-weakening-imp3.2 $e |- ( \imp th0 ( \in-sort ph4 ph0 ) ) $.
   kore-weakening-imp3.3 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph1 ( \kore-implies ph0 ph2 ph3 ) ) ) ) $.
   kore-weakening-imp3 $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-implies ph0 ph4 ph1 ) ( \kore-implies ph0 ( \kore-implies ph0 ph4 ph2 ) ( \kore-implies ph0 ph4 ph3 ) ) ) ) ) $. $}
${ kore-and-or-distributivity.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-and-or-distributivity.1 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-and-or-distributivity.2 $e |- ( \imp th0 ( \in-sort ph3 ph0 ) ) $.
   kore-and-or-distributivity $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-and ph0 ( \kore-or ph0 ph1 ph3 ) ( \kore-or ph0 ph2 ph3 ) ) ( \kore-or ph0 ( \kore-and ph0 ph1 ph2 ) ph3 ) ) ) ) $. $}
${ kore-and-or-distributivity-alt.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-and-or-distributivity-alt.1 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-and-or-distributivity-alt.2 $e |- ( \imp th0 ( \in-sort ph3 ph0 ) ) $.
   kore-and-or-distributivity-alt $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-and ph0 ph1 ( \kore-or ph0 ph2 ph3 ) ) ( \kore-or ph0 ( \kore-and ph0 ph1 ph2 ) ( \kore-and ph0 ph1 ph3 ) ) ) ) ) $. $}
kore-ceil-is-predicate $a |- ( \kore-is-predicate ph1 ( \kore-ceil ph0 ph1 ph2 ) ) $.
kore-is-predicate-not $a |- ( \imp ( \kore-is-predicate ph0 ph1 ) ( \kore-is-predicate ph0 ( \kore-not ph0 ph1 ) ) ) $.
${ kore-is-predicate-not-alt.0 $e |- ( \kore-is-predicate ph0 ph1 ) $.
   kore-is-predicate-not-alt $a |- ( \kore-is-predicate ph0 ( \kore-not ph0 ph1 ) ) $. $}
kore-floor-is-predicate $a |- ( \kore-is-predicate ph1 ( \kore-floor ph0 ph1 ph2 ) ) $.
kore-equals-is-predicate $a |- ( \kore-is-predicate ph1 ( \kore-equals ph0 ph1 ph2 ph3 ) ) $.
kore-is-predicate-and $a |- ( \imp ( \kore-is-predicate ph0 ph1 ) ( \imp ( \kore-is-predicate ph0 ph2 ) ( \kore-is-predicate ph0 ( \kore-and ph0 ph1 ph2 ) ) ) ) $.
${ kore-is-predicate-and-alt.0 $e |- ( \kore-is-predicate ph0 ph1 ) $.
   kore-is-predicate-and-alt.1 $e |- ( \kore-is-predicate ph0 ph2 ) $.
   kore-is-predicate-and-alt $a |- ( \kore-is-predicate ph0 ( \kore-and ph0 ph1 ph2 ) ) $. $}
${ $d x ph0 $.
   kore-is-sort-is-predicate $a |- ( \is-predicate ( \kore-is-sort ph0 ) ) $. $}
kore-is-predicate-top $a |- ( \kore-is-predicate ph0 ( \kore-top ph0 ) ) $.
${ kore-is-predicate-elim.0 $e |- ( \kore-is-predicate ph0 ph1 ) $.
   kore-is-predicate-elim.1 $e #Substitution ph3 ph2 ( \kore-bottom ph0 ) x $.
   kore-is-predicate-elim.2 $e #Substitution ph4 ph2 ( \kore-top ph0 ) x $.
   kore-is-predicate-elim.3 $e #Substitution ph5 ph2 ph1 x $.
   kore-is-predicate-elim.4 $e |- ph3 $.
   kore-is-predicate-elim.5 $e |- ph4 $.
   kore-is-predicate-elim $a |- ph5 $. $}
${ disjointness-eq.0 $e |- ( \eq ph0 ph2 ) $.
   disjointness-eq.1 $e |- ( \eq ph1 ph3 ) $.
   disjointness-eq.2 $e |- ( \not ( \and ph2 ph3 ) ) $.
   disjointness-eq $a |- ( \not ( \and ph0 ph1 ) ) $. $}
${ disjointness-simplify.0 $e |- ( \not ( \and ph0 ph1 ) ) $.
   disjointness-simplify.1 $e |- ( \imp ph2 ph1 ) $.
   disjointness-simplify $a |- ( \not ( \and ph0 ph2 ) ) $. $}
${ disjointness-symmetry.0 $e |- ( \not ( \and ph0 ph1 ) ) $.
   disjointness-symmetry $a |- ( \not ( \and ph1 ph0 ) ) $. $}
${ $d x ph0 $.
   disjointness-quantify.0 $e |- ( \not ( \and ph0 ph1 ) ) $.
   disjointness-quantify $a |- ( \not ( \and ph0 ( \sorted-exists x ph2 ph1 ) ) ) $. $}
${ predicate-commutes-with-context.0 $e |- ( \is-predicate ph0 ) $.
   predicate-commutes-with-context.1 $e #ApplicationContext x ph1 $.
   predicate-commutes-with-context.2 $e #Substitution ph2 ph1 ph5 x $.
   predicate-commutes-with-context.3 $e #Substitution ph3 ph1 ( \and ph0 ph5 ) x $.
   predicate-commutes-with-context.4 $e #Substitution ph4 ph1 ( \and \top ph5 ) x $.
   predicate-commutes-with-context $a |- ( \imp ( \and ph0 ph2 ) ph3 ) $. $}
${ $d y ph0 $.
   sorted-exists-propagation-converse.0 $e #ApplicationContext x ph0 $.
   sorted-exists-propagation-converse.1 $e #Substitution ph1 ph0 ph5 x $.
   sorted-exists-propagation-converse.2 $e #Substitution ph2 ph0 ( \sorted-exists y ph6 ph5 ) x $.
   sorted-exists-propagation-converse.3 $e #Substitution ph3 ph0 ( \and ( \in-sort y ph6 ) ph5 ) x $.
   sorted-exists-propagation-converse.4 $e #Substitution ph4 ph0 ( \and \top ph5 ) x $.
   sorted-exists-propagation-converse $a |- ( \imp ( \sorted-exists y ph6 ph1 ) ph2 ) $. $}
${ disjointness-case.0 $e |- ( \not ( \and ph0 ph1 ) ) $.
   disjointness-case.1 $e |- ( \not ( \and ph0 ph2 ) ) $.
   disjointness-case $a |- ( \not ( \and ph0 ( \or ph1 ph2 ) ) ) $. $}
${ $d x ph0 $.
   sorted-exists-to-inh $a |- ( \imp ( \sorted-exists x ph0 x ) ( \inh ph0 ) ) $. $}
${ $d x ph1 $.
   disjointness-sort.0 $e |- ( \not ( \and ph0 ( \inh ph1 ) ) ) $.
   disjointness-sort $a |- ( \not ( \and ph0 ( \sorted-exists x ph1 x ) ) ) $. $}
${ $d x y $.
   $d x ph0 $.
   disjointness-alt-lemma $a |- ( \imp ( \sorted-exists x ph2 ( \ceil ( \and ph0 ph1 ) ) ) ( \ceil ( \and ph0 ( \sorted-exists x ph2 ph1 ) ) ) ) $. $}
${ $d x ph0 $.
   disjointness-alt.0 $e |- ( \not ( \and ph0 ( \sorted-exists x ph2 ph1 ) ) ) $.
   disjointness-alt $a |- ( \not ( \sorted-exists x ph2 ( \ceil ( \and ph0 ph1 ) ) ) ) $. $}
${ disjointness-in-sort.0 $e |- ( \in-sort ph0 ph2 ) $.
   disjointness-in-sort.1 $e |- ( \not ( \and ( \inh ph2 ) ph1 ) ) $.
   disjointness-in-sort $a |- ( \not ( \and ph0 ph1 ) ) $. $}
kore-semantics-not $a |- ( \eq ( \kore-not ph0 ph1 ) ( \and ( \not ph1 ) ( \inh ph0 ) ) ) $.
${ kore-semantics-forall.0 $e #Fresh x ph1 $.
   kore-semantics-forall $a |- ( \eq ( \kore-forall ph0 ph1 x ph2 ) ( \and ( \sorted-forall x ph0 ph2 ) ( \inh ph1 ) ) ) $. $}
kore-semantics-and $a |- ( \eq ( \kore-and ph0 ph1 ph2 ) ( \and ph1 ph2 ) ) $.
kore-semantics-or $a |- ( \eq ( \kore-or ph0 ph1 ph2 ) ( \or ph1 ph2 ) ) $.
kore-semantics-implies $a |- ( \imp ( \in-sort ph2 ph0 ) ( \eq ( \kore-implies ph0 ph1 ph2 ) ( \and ( \imp ph1 ph2 ) ( \inh ph0 ) ) ) ) $.
kore-semantics-iff $a |- ( \imp ( \and ( \in-sort ph1 ph0 ) ( \in-sort ph2 ph0 ) ) ( \eq ( \kore-iff ph0 ph1 ph2 ) ( \and ( \iff ph1 ph2 ) ( \inh ph0 ) ) ) ) $.
kore-semantics-ceil $a |- ( \eq ( \kore-ceil ph0 ph1 ph2 ) ( \and ( \ceil ph2 ) ( \inh ph1 ) ) ) $.
kore-semantics-floor $a |- ( \eq ( \kore-floor ph0 ph1 ph2 ) ( \and ( \floor ( \imp ( \inh ph0 ) ph2 ) ) ( \inh ph1 ) ) ) $.
kore-semantics-equals-lemma-0 $a |- ( \imp ( \and ( \in-sort ph1 ph0 ) ( \in-sort ph2 ph0 ) ) ( \included ( \not ( \inh ph0 ) ) ( \iff ph1 ph2 ) ) ) $.
kore-semantics-equals-lemma-1 $a |- ( \imp ( \and ( \in-sort ph2 ph0 ) ( \in-sort ph3 ph0 ) ) ( \included ( \iff ph2 ph3 ) ( \imp ( \inh ph0 ) ( \iff ph2 ph3 ) ) ) ) $.
kore-semantics-equals-lemma-2 $a |- ( \imp ( \included ( \not ( \inh ph0 ) ) ( \iff ph1 ph2 ) ) ( \included ( \imp ( \inh ph0 ) ( \iff ph1 ph2 ) ) ( \iff ph1 ph2 ) ) ) $.
kore-semantics-equals-lemma-3 $a |- ( \imp ( \and ( \in-sort ph2 ph0 ) ( \in-sort ph3 ph0 ) ) ( \eq ( \imp ( \inh ph0 ) ( \iff ph2 ph3 ) ) ( \iff ph2 ph3 ) ) ) $.
${ $d x ph0 $.
   $d x ph1 $.
   kore-semantics-equals-alt $a |- ( \imp ( \and ( \in-sort ph2 ph0 ) ( \in-sort ph3 ph0 ) ) ( \eq ( \kore-equals ph0 ph1 ph2 ph3 ) ( \and ( \floor ( \imp ( \inh ph0 ) ( \iff ph2 ph3 ) ) ) ( \inh ph1 ) ) ) ) $. $}
${ $d x ph0 $.
   $d x ph1 $.
   kore-semantics-equals $a |- ( \imp ( \and ( \in-sort ph2 ph0 ) ( \in-sort ph3 ph0 ) ) ( \eq ( \kore-equals ph0 ph1 ph2 ph3 ) ( \and ( \eq ph2 ph3 ) ( \inh ph1 ) ) ) ) $. $}
${ $d x ph1 $.
   kore-exists-intro $a |- ( \imp ( \exists x ( \eq ph0 ph1 ) ) ( \eq ( \and ( \exists x ph0 ) ph1 ) ph1 ) ) $. $}
kore-semantics-dn $a |- ( \imp ( \in-sort ph1 ph0 ) ( \eq ( \kore-not ph0 ( \kore-not ph0 ph1 ) ) ph1 ) ) $.
${ kore-semantics-exists-dn.0 $e |- ( \is-predicate th0 ) $.
   kore-semantics-exists-dn.1 $e #Fresh x th0 $.
   kore-semantics-exists-dn.2 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-semantics-exists-dn $a |- ( \imp th0 ( \eq ( \kore-exists ph1 ph0 x ( \kore-not ph0 ( \kore-not ph0 ph2 ) ) ) ( \kore-exists ph1 ph0 x ph2 ) ) ) $. $}
${ kore-equals-symmetry.0 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-equals ph1 ph0 ph3 ph2 ) ) ) $.
   kore-equals-symmetry $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-equals ph1 ph0 ph2 ph3 ) ) ) $. $}
${ kore-in-reflexivity.0 $e |- ( \is-predicate th0 ) $.
   kore-in-reflexivity.1 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-in-reflexivity $a |- ( \imp th0 ( \kore-valid ph1 ( \kore-in ph0 ph1 ph2 ph2 ) ) ) $. $}
${ sorted-forall-propagate-floor $a |- ( \imp ( \sorted-forall x ph0 ( \floor ph1 ) ) ( \floor ( \sorted-forall x ph0 ph1 ) ) ) $. $}
${ $d x ph2 $.
   kore-forall-intro-lemma $a |- ( \imp ( \sorted-forall x ph0 ( \eq ph1 ph2 ) ) ( \eq ( \and ( \sorted-forall x ph0 ph1 ) ph2 ) ph2 ) ) $. $}
${ $d x th0 $.
   $d x ph0 $.
   kore-forall-intro.0 $e |- ( \sorted-forall x ph2 ( \imp th0 ( \kore-valid ph0 ph1 ) ) ) $.
   kore-forall-intro $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-forall ph2 ph0 x ph1 ) ) ) $. $}
${ $d x th0 $.
   $d x ph0 $.
   kore-forall-intro-alt.0 $e |- ( \imp ( \and ( \in-sort x ph2 ) th0 ) ( \kore-valid ph0 ph1 ) ) $.
   kore-forall-intro-alt $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-forall ph2 ph0 x ph1 ) ) ) $. $}
${ kore-equality-in-constraint.0 $e |- ( \is-predicate th0 ) $.
   kore-equality-in-constraint.1 $e #Substitution ph2 ph4 ph5 x $.
   kore-equality-in-constraint.2 $e #Substitution ph3 ph4 ph6 x $.
   kore-equality-in-constraint.3 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-equality-in-constraint.4 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-equality-in-constraint.5 $e |- ( \imp th0 ( \in-sort ph3 ph0 ) ) $.
   kore-equality-in-constraint.6 $e |- ( \imp th0 ( \in-sort ph5 ph7 ) ) $.
   kore-equality-in-constraint.7 $e |- ( \imp th0 ( \in-sort ph6 ph7 ) ) $.
   kore-equality-in-constraint.8 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph1 ( \kore-equals ph7 ph0 ph5 ph6 ) ) ) ) $.
   kore-equality-in-constraint $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-and ph0 ph1 ph2 ) ( \kore-and ph0 ph1 ph3 ) ) ) ) $. $}
unit-sort-is-kore-sort $a |- ( \kore-is-sort \unit-sort ) $.
unit-sort-is-functional $a |- ( \exists x ( \eq x \unit-sort ) ) $.
${ $d x ph0 $.
   kore-sort-functional.0 $e |- ( \imp th0 ( \kore-is-sort ph0 ) ) $.
   kore-sort-functional $a |- ( \imp th0 ( \exists x ( \eq x ph0 ) ) ) $. $}
${ $d z ph0 $.
   $d z ph1 $.
   $d z ph2 $.
   $d z y $.
   $d z x $.
   $d z th1 $.
   $d z th2 $.
   $d x ph0 $.
   functional-substitution-alt2.0 $e #Fresh y th0 $.
   functional-substitution-alt2.1 $e |- ( \imp th0 ( \exists x ( \eq x ph0 ) ) ) $.
   functional-substitution-alt2.2 $e |- ( \imp ( \and th0 th1 ) ph1 ) $.
   functional-substitution-alt2.3 $e #Substitution ( \imp th2 ph2 ) ( \imp th1 ph1 ) ph0 y $.
   functional-substitution-alt2.4 $e #Substitution ( \imp th3 ph3 ) ( \imp th1 ph1 ) z y $.
   functional-substitution-alt2 $a |- ( \imp ( \and th0 th2 ) ph2 ) $. $}
${ $d z ph0 $.
   $d z ph1 $.
   $d z ph2 $.
   $d z y $.
   $d z x $.
   $d z th1 $.
   $d z th2 $.
   $d x ph0 $.
   $d y th0 $.
   functional-substitution-alt.0 $e |- ( \imp th0 ( \exists x ( \eq x ph0 ) ) ) $.
   functional-substitution-alt.1 $e |- ( \imp ( \and th0 th1 ) ph1 ) $.
   functional-substitution-alt.2 $e #Substitution ( \imp th2 ph2 ) ( \imp th1 ph1 ) ph0 y $.
   functional-substitution-alt.3 $e #Substitution ( \imp th3 ph3 ) ( \imp th1 ph1 ) z y $.
   functional-substitution-alt $a |- ( \imp ( \and th0 th2 ) ph2 ) $. $}
${ $d z ph0 $.
   $d z ph1 $.
   $d z ph2 $.
   $d z y $.
   $d z x $.
   $d z th1 $.
   $d z th2 $.
   $d x ph0 $.
   $d y th0 $.
   functional-substitution-alt3.0 $e |- ( \imp th0 ( \exists x ( \eq x ph0 ) ) ) $.
   functional-substitution-alt3.2 $e #Substitution ( \imp th2 ph2 ) ( \imp th1 ph1 ) ph0 y $.
   functional-substitution-alt3.3 $e #Substitution ( \imp th3 ph3 ) ( \imp th1 ph1 ) z y $.
   functional-substitution-alt3 $a |- ( \imp th0 ( \imp ( \forall y ( \imp th1 ph1 ) ) ( \imp th2 ph2 ) ) ) $. $}
${ $d z ph0 $.
   $d z ph1 $.
   $d z ph2 $.
   $d z y $.
   $d z x $.
   $d z th1 $.
   $d z th2 $.
   $d z ph4 $.
   $d x ph0 $.
   $d y ph4 $.
   $d y ph5 $.
   $d y th0 $.
   functional-substitution-alt4.0 $e |- ( \is-predicate th0 ) $.
   functional-substitution-alt4.1 $e |- ( \imp th0 ( \exists x ( \eq x ph0 ) ) ) $.
   functional-substitution-alt4.2 $e |- ( \imp th0 ( \in-sort ph2 ph5 ) ) $.
   functional-substitution-alt4.3 $e |- ( \imp th0 ( \in-sort ph0 ph4 ) ) $.
   functional-substitution-alt4.4 $e #Substitution ph2 ph1 ph0 y $.
   functional-substitution-alt4.5 $e #Substitution ph3 ph1 z y $.
   functional-substitution-alt4 $a |- ( \imp th0 ( \kore-valid ph5 ( \kore-implies ph5 ( \kore-forall ph4 ph5 y ph1 ) ph2 ) ) ) $. $}
eq-compat-in-eq-alt $a |- ( \imp ( \eq ph0 ph1 ) ( \eq ( \eq ph0 ph2 ) ( \eq ph1 ph2 ) ) ) $.
${ nonempty-floor-is-top.0 $e |- ( \ceil ph0 ) $.
   nonempty-floor-is-top $a |- ( \iff ( \eq ph0 ( \and ( \floor ph1 ) ph0 ) ) ( \floor ph1 ) ) $. $}
${ $d x y $.
   unit-sort-nonempty-alt $a |- ( \ceil ( \inh \unit-sort ) ) $. $}
${ kore-equals-to-eq.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-equals-to-eq.1 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-equals-to-eq.2 $e |- ( \imp th0 ( \kore-valid \unit-sort ( \kore-equals ph0 \unit-sort ph1 ph2 ) ) ) $.
   kore-equals-to-eq $a |- ( \imp th0 ( \eq ph1 ph2 ) ) $. $}
${ kore-equals-elim.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-equals-elim.1 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-equals-elim.2 $e |- ( \imp th0 ( \kore-valid \unit-sort ( \kore-equals ph0 \unit-sort ph1 ph2 ) ) ) $.
   kore-equals-elim.3 $e |- ( \imp th0 ph3 ) $.
   kore-equals-elim.4 $e #Substitution ph3 ph4 ph1 x $.
   kore-equals-elim.5 $e #Substitution ph5 ph4 ph2 x $.
   kore-equals-elim $a |- ( \imp th0 ph5 ) $. $}
${ kore-equals-elim-alt.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-equals-elim-alt.1 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-equals-elim-alt.2 $e |- ( \imp th0 ( \kore-valid \unit-sort ( \kore-equals ph0 \unit-sort ph1 ph2 ) ) ) $.
   kore-equals-elim-alt.3 $e |- ( \imp th0 ( \kore-valid ph6 ph3 ) ) $.
   kore-equals-elim-alt.4 $e #Substitution ( \kore-valid ph6 ph3 ) ph4 ph1 x $.
   kore-equals-elim-alt.5 $e #Substitution ( \kore-valid ph7 ph5 ) ph4 ph2 x $.
   kore-equals-elim-alt $a |- ( \imp th0 ( \kore-valid ph7 ph5 ) ) $. $}
kore-equals-reflexivity-aux $a |- ( \not ( \and ( \not ( \and ( \or ( \and ( \not ph2 ) ph1 ) ph2 ) ( \or ( \and ( \not ph2 ) ph1 ) ph2 ) ) ) ph1 ) ) $.
kore-equals-reflexivity $a |- ( \kore-valid ph0 ( \kore-equals ph1 ph0 ph2 ph2 ) ) $.
${ $d x ph0 $.
   $d x ph1 $.
   $d x ph2 $.
   kore-dup-and $a |- ( \kore-valid ph0 ( \kore-equals ph1 ph0 ( \kore-and ph1 ph2 ph2 ) ph2 ) ) $. $}
${ $d x y s0 $.
   $d y ph0 $.
   $d y ph1 $.
   kore-variable-functional $a |- ( \imp ( \in-sort x ph0 ) ( \kore-valid ph1 ( \kore-exists ph0 ph1 y ( \kore-equals ph0 ph1 y x ) ) ) ) $. $}
${ $d y x $.
   $d y ph0 $.
   $d y ph1 $.
   $d x ph2 $.
   kore-functional-lemma $a |- ( \imp ( \floor ph2 ) ( \imp ( \eq ( \and ( \exists x ph1 ) ph0 ) ph0 ) ( \eq ( \and ( \exists x ( \and ( \floor ph2 ) ph1 ) ) ph0 ) ph0 ) ) ) $. $}
${ $d x ph0 $.
   $d x ph1 $.
   kore-functional.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-functional.1 $e |- ( \imp th0 ( \kore-valid \unit-sort ( \kore-exists ph0 \unit-sort x ( \kore-equals ph0 \unit-sort x ph1 ) ) ) ) $.
   kore-functional $a |- ( \imp th0 ( \exists x ( \eq x ph1 ) ) ) $. $}
kore-ph-implies-ceil-ph $a |- ( \kore-valid ph0 ( \kore-implies ph0 ph1 ( \kore-ceil ph0 ph0 ph1 ) ) ) $.
${ kore-floor-ph-implies-ph.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-floor-ph-implies-ph $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-floor ph0 ph0 ph1 ) ph1 ) ) ) $. $}
${ kore-exists-quantifier.0 $e #Substitution ph1 ph3 y x $.
   kore-exists-quantifier.1 $e #Fresh x ph2 $.
   kore-exists-quantifier $a |- ( \imp ( \in-sort y ph2 ) ( \kore-valid ph0 ( \kore-implies ph0 ph1 ( \kore-exists ph2 ph0 x ph3 ) ) ) ) $. $}
${ kore-forall-prenex-implies-left.0 $e #Fresh x ph0 $.
   kore-forall-prenex-implies-left.1 $e #Fresh x ph1 $.
   kore-forall-prenex-implies-left $a |- ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-implies ph0 ph1 ( \kore-forall ph3 ph0 x ph2 ) ) ( \kore-forall ph3 ph0 x ( \kore-implies ph0 ph1 ph2 ) ) ) ) $. $}
${ kore-forall-prenex-implies-right.0 $e #Fresh x ph0 $.
   kore-forall-prenex-implies-right.1 $e #Fresh x ph1 $.
   kore-forall-prenex-implies-right $a |- ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-forall ph3 ph0 x ( \kore-implies ph0 ph1 ph2 ) ) ( \kore-implies ph0 ph1 ( \kore-forall ph3 ph0 x ph2 ) ) ) ) $. $}
${ $d x ph0 $.
   $d x th0 $.
   $d y x $.
   $d y ph0 $.
   $d y ph1 $.
   $d y ph2 $.
   kore-forall-not-to-exists.0 $e |- ( \is-predicate th0 ) $.
   kore-forall-not-to-exists.1 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-forall-not-to-exists.2 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-forall ph1 ph0 x ( \kore-not ph0 ph2 ) ) ) ) $.
   kore-forall-not-to-exists $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-not ph0 ( \kore-exists ph1 ph0 x ph2 ) ) ) ) $. $}
${ kore-implies-compat-in-kore-next.0 $e |- ( \is-predicate th0 ) $.
   kore-implies-compat-in-kore-next.1 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-implies-compat-in-kore-next.2 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-implies-compat-in-kore-next.3 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph1 ph2 ) ) ) $.
   kore-implies-compat-in-kore-next $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-next ph0 ph1 ) ( \kore-next ph0 ph2 ) ) ) ) $. $}
${ kore-implies-compat-in-kore-next-alt.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-implies-compat-in-kore-next-alt.1 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-implies-compat-in-kore-next-alt.2 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph1 ph2 ) ) ) $.
   kore-implies-compat-in-kore-next-alt $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-next ph0 ph1 ) ( \kore-next ph0 ph2 ) ) ) ) $. $}
${ kore-or-propagates-in-kore-next.0 $e |- ( \is-predicate th0 ) $.
   kore-or-propagates-in-kore-next.1 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-or-propagates-in-kore-next.2 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-or-propagates-in-kore-next $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-iff ph0 ( \kore-next ph0 ( \kore-or ph0 ph1 ph2 ) ) ( \kore-or ph0 ( \kore-next ph0 ph1 ) ( \kore-next ph0 ph2 ) ) ) ) ) $. $}
${ kore-or-propagates-in-kore-next-alt.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-or-propagates-in-kore-next-alt.1 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-or-propagates-in-kore-next-alt $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-iff ph0 ( \kore-next ph0 ( \kore-or ph0 ph1 ph2 ) ) ( \kore-or ph0 ( \kore-next ph0 ph1 ) ( \kore-next ph0 ph2 ) ) ) ) ) $. $}
${ kore-prefixpoint.0 $e #Positive X ph2 $.
   kore-prefixpoint.1 $e #Substitution ph1 ph2 ( \mu X ph2 ) X $.
   kore-prefixpoint.2 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-prefixpoint $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph1 ( \kore-mu ph0 X ph2 ) ) ) ) $. $}
${ kore-kt.0 $e #Positive X ph1 $.
   kore-kt.1 $e #Substitution ph3 ph1 ph2 X $.
   kore-kt.2 $e #Substitution ph4 ph1 ( \imp th0 ph2 ) X $.
   kore-kt.3 $e |- ( \is-predicate th0 ) $.
   kore-kt.4 $e |- ( \imp th0 ( \imp ph4 ph3 ) ) $.
   kore-kt.5 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-kt.6 $e |- ( \imp th0 ( \in-sort ph3 ph0 ) ) $.
   kore-kt.7 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph3 ph2 ) ) ) $.
   kore-kt $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-mu ph0 X ph1 ) ph2 ) ) ) $. $}
${ kore-eventually-prefixpoint-lemma.0 $e #Notation ph2 ph3 $.
   kore-eventually-prefixpoint-lemma $a #Notation ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-or ph0 ph1 ( \kore-next ph0 ph2 ) ) ph2 ) ) ) ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-or ph0 ph1 ( \kore-next ph0 ph3 ) ) ph3 ) ) ) $. $}
${ $d X ph0 $.
   $d X ph1 $.
   kore-eventually-sorting-alt $a |- ( \imp ( \in-sort ph1 ph0 ) ( \in-sort ( \mu X ( \kore-or ph0 ph1 ( \kore-next ph0 X ) ) ) ph0 ) ) $. $}
${ $d X ph0 $.
   $d X ph1 $.
   kore-eventually-prefixpoint $a |- ( \imp ( \in-sort ph1 ph0 ) ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-or ph0 ph1 ( \kore-next ph0 ( \kore-eventually ph0 ph1 ) ) ) ( \kore-eventually ph0 ph1 ) ) ) ) $. $}
${ kore-eventually-prefixpoint-alt.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-eventually-prefixpoint-alt $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-or ph0 ph1 ( \kore-next ph0 ( \kore-eventually ph0 ph1 ) ) ) ( \kore-eventually ph0 ph1 ) ) ) ) $. $}
${ kore-eventually-kt-notation.0 $e #Notation ph1 ph2 $.
   kore-eventually-kt-notation $a #Notation ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph1 ph3 ) ) ) ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph2 ph3 ) ) ) $. $}
${ $d X ph0 $.
   $d X ph1 $.
   $d X ph2 $.
   kore-eventually-kt.0 $e |- ( \is-predicate th0 ) $.
   kore-eventually-kt.1 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-eventually-kt.2 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-eventually-kt.3 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-or ph0 ph1 ( \kore-next ph0 ph2 ) ) ph2 ) ) ) $.
   kore-eventually-kt $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-eventually ph0 ph1 ) ph2 ) ) ) $. $}
${ kore-eventually-kt-alt.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-eventually-kt-alt.1 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-eventually-kt-alt.2 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-or ph0 ph1 ( \kore-next ph0 ph2 ) ) ph2 ) ) ) $.
   kore-eventually-kt-alt $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-eventually ph0 ph1 ) ph2 ) ) ) $. $}
${ kore-ph-to-eventually-ph.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-ph-to-eventually-ph $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph1 ( \kore-eventually ph0 ph1 ) ) ) ) $. $}
${ kore-next-eventually-ph-to-eventually-ph.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-next-eventually-ph-to-eventually-ph $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-next ph0 ( \kore-eventually ph0 ph1 ) ) ( \kore-eventually ph0 ph1 ) ) ) ) $. $}
${ kore-eventually-idempotency.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-eventually-idempotency $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-eventually ph0 ( \kore-eventually ph0 ph1 ) ) ( \kore-eventually ph0 ph1 ) ) ) ) $. $}
${ kore-implies-compat-in-kore-eventually.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-implies-compat-in-kore-eventually.1 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-implies-compat-in-kore-eventually.2 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph1 ph2 ) ) ) $.
   kore-implies-compat-in-kore-eventually $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-eventually ph0 ph1 ) ( \kore-eventually ph0 ph2 ) ) ) ) $. $}
${ kore-or-propagates-in-eventually.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-or-propagates-in-eventually.1 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-or-propagates-in-eventually $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-iff ph0 ( \kore-eventually ph0 ( \kore-or ph0 ph1 ph2 ) ) ( \kore-or ph0 ( \kore-eventually ph0 ph1 ) ( \kore-eventually ph0 ph2 ) ) ) ) ) $. $}
${ kore-weak-eventually-postfixpoint-notation.0 $e #Notation ph2 ph3 $.
   kore-weak-eventually-postfixpoint-notation $a #Notation ( \imp ( \in-sort ph1 ph0 ) ( \kore-valid ph0 ( \kore-implies ph0 ph2 ( \kore-not ph0 ( \kore-not ph0 ( \kore-or ph0 ph1 ( \kore-next ph0 ph2 ) ) ) ) ) ) ) ( \imp ( \in-sort ph1 ph0 ) ( \kore-valid ph0 ( \kore-implies ph0 ph3 ( \kore-not ph0 ( \kore-not ph0 ( \kore-or ph0 ph1 ( \kore-next ph0 ph3 ) ) ) ) ) ) ) $. $}
${ $d X ph0 $.
   $d X ph1 $.
   kore-weak-eventually-postfixpoint $a |- ( \imp ( \in-sort ph1 ph0 ) ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-weak-eventually ph0 ph1 ) ( \kore-or ph0 ph1 ( \kore-next ph0 ( \kore-weak-eventually ph0 ph1 ) ) ) ) ) ) $. $}
${ kore-weak-eventually-postfixpoint-alt.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-weak-eventually-postfixpoint-alt $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-weak-eventually ph0 ph1 ) ( \kore-or ph0 ph1 ( \kore-next ph0 ( \kore-weak-eventually ph0 ph1 ) ) ) ) ) ) $. $}
${ kore-weak-eventually-kt-notation.0 $e #Notation ph2 ph3 $.
   kore-weak-eventually-kt-notation $a #Notation ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-not ph0 ( \kore-not ph0 ph1 ) ) ph2 ) ) ) ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-not ph0 ( \kore-not ph0 ph1 ) ) ph3 ) ) ) $. $}
${ $d X ph0 $.
   $d X ph1 $.
   $d X ph2 $.
   kore-weak-eventually-kt.0 $e |- ( \is-predicate th0 ) $.
   kore-weak-eventually-kt.1 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-weak-eventually-kt.2 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-weak-eventually-kt.3 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph1 ( \kore-or ph0 ph2 ( \kore-next ph0 ph1 ) ) ) ) ) $.
   kore-weak-eventually-kt $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph1 ( \kore-weak-eventually ph0 ph2 ) ) ) ) $. $}
${ kore-weak-eventually-kt-alt.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-weak-eventually-kt-alt.1 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-weak-eventually-kt-alt.2 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph1 ( \kore-or ph0 ph2 ( \kore-next ph0 ph1 ) ) ) ) ) $.
   kore-weak-eventually-kt-alt $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph1 ( \kore-weak-eventually ph0 ph2 ) ) ) ) $. $}
${ kore-weak-eventually-prefixpoint.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-weak-eventually-prefixpoint $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-or ph0 ph1 ( \kore-next ph0 ( \kore-weak-eventually ph0 ph1 ) ) ) ( \kore-weak-eventually ph0 ph1 ) ) ) ) $. $}
${ kore-eventually-to-weak-eventually.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-eventually-to-weak-eventually $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-eventually ph0 ph1 ) ( \kore-weak-eventually ph0 ph1 ) ) ) ) $. $}
${ kore-next-weak-eventually-ph-to-weak-eventually-ph.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-next-weak-eventually-ph-to-weak-eventually-ph $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-next ph0 ( \kore-weak-eventually ph0 ph1 ) ) ( \kore-weak-eventually ph0 ph1 ) ) ) ) $. $}
${ kore-ph-to-weak-eventually-ph.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-ph-to-weak-eventually-ph $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph1 ( \kore-weak-eventually ph0 ph1 ) ) ) ) $. $}
${ kore-implies-compat-in-kore-weak-eventually.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-implies-compat-in-kore-weak-eventually.1 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-implies-compat-in-kore-weak-eventually.2 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph1 ph2 ) ) ) $.
   kore-implies-compat-in-kore-weak-eventually $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-weak-eventually ph0 ph1 ) ( \kore-weak-eventually ph0 ph2 ) ) ) ) $. $}
${ kore-weak-eventually-idempotency.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-weak-eventually-idempotency $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-weak-eventually ph0 ( \kore-weak-eventually ph0 ph1 ) ) ( \kore-weak-eventually ph0 ph1 ) ) ) ) $. $}
${ kore-always-postfixpoint-notation.0 $e #Notation ph2 ph3 $.
   kore-always-postfixpoint-notation $a #Notation ( \imp ( \in-sort ph1 ph0 ) ( \kore-valid ph0 ( \kore-implies ph0 ph2 ( \kore-and ph0 ph1 ( \kore-all-path-next ph0 ph2 ) ) ) ) ) ( \imp ( \in-sort ph1 ph0 ) ( \kore-valid ph0 ( \kore-implies ph0 ph3 ( \kore-and ph0 ph1 ( \kore-all-path-next ph0 ph3 ) ) ) ) ) $. $}
${ $d X ph0 $.
   $d X ph1 $.
   kore-always-postfixpoint $a |- ( \imp ( \in-sort ph1 ph0 ) ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-always ph0 ph1 ) ( \kore-and ph0 ph1 ( \kore-all-path-next ph0 ( \kore-always ph0 ph1 ) ) ) ) ) ) $. $}
${ kore-always-postfixpoint-alt.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-always-postfixpoint-alt $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-always ph0 ph1 ) ( \kore-and ph0 ph1 ( \kore-all-path-next ph0 ( \kore-always ph0 ph1 ) ) ) ) ) ) $. $}
${ $d X ph0 $.
   $d X ph1 $.
   $d X ph2 $.
   kore-always-kt.0 $e |- ( \is-predicate th0 ) $.
   kore-always-kt.1 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-always-kt.2 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-always-kt.3 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph1 ( \kore-and ph0 ph2 ( \kore-all-path-next ph0 ph1 ) ) ) ) ) $.
   kore-always-kt $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph1 ( \kore-always ph0 ph2 ) ) ) ) $. $}
${ kore-always-kt-alt.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-always-kt-alt.1 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-always-kt-alt.2 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph1 ( \kore-and ph0 ph2 ( \kore-all-path-next ph0 ph1 ) ) ) ) ) $.
   kore-always-kt-alt $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph1 ( \kore-always ph0 ph2 ) ) ) ) $. $}
${ kore-implies-compat-in-kore-always.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-implies-compat-in-kore-always.1 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-implies-compat-in-kore-always.2 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph1 ph2 ) ) ) $.
   kore-implies-compat-in-kore-always $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-always ph0 ph1 ) ( \kore-always ph0 ph2 ) ) ) ) $. $}
${ kore-always-elim.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-always-elim $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-always ph0 ph1 ) ph1 ) ) ) $. $}
${ kore-always-idempotency.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-always-idempotency $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-always ph0 ( \kore-always ph0 ph1 ) ) ( \kore-always ph0 ph1 ) ) ) ) $. $}
${ kore-always-dup.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-always-dup $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-always ph0 ph1 ) ( \kore-always ph0 ( \kore-always ph0 ph1 ) ) ) ) ) $. $}
${ kore-well-founded-prefixpoint-notation.0 $e #Notation ph1 ph2 $.
   kore-well-founded-prefixpoint-notation $a #Notation ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-all-path-next ph0 ph1 ) ph1 ) ) ) ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-all-path-next ph0 ph2 ) ph2 ) ) ) $. $}
${ $d X ph0 $.
   kore-well-founded-prefixpoint $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-all-path-next ph0 ( \kore-well-founded ph0 ) ) ( \kore-well-founded ph0 ) ) ) ) $. $}
${ kore-well-founded-kt-notation.0 $e #Notation ph2 ph3 $.
   kore-well-founded-kt-notation $a #Notation ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph2 ph1 ) ) ) ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph3 ph1 ) ) ) $. $}
${ $d x X ph0 $.
   $d x X ph1 $.
   $d x th0 $.
   kore-well-founded-kt.0 $e |- ( \is-predicate th0 ) $.
   kore-well-founded-kt.1 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-well-founded-kt.2 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-all-path-next ph0 ph1 ) ph1 ) ) ) $.
   kore-well-founded-kt $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-well-founded ph0 ) ph1 ) ) ) $. $}
${ kore-well-founded-kt-alt.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-well-founded-kt-alt.1 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-all-path-next ph0 ph1 ) ph1 ) ) ) $.
   kore-well-founded-kt-alt $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-well-founded ph0 ) ph1 ) ) ) $. $}
${ kore-well-founded-alt-prefixpoint-notation.0 $e #Notation ph1 ph2 $.
   kore-well-founded-alt-prefixpoint-notation $a #Notation ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-all-path-next ph0 ( \kore-always ph0 ph1 ) ) ph1 ) ) ) ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-all-path-next ph0 ( \kore-always ph0 ph2 ) ) ph2 ) ) ) $. $}
${ $d X ph0 $.
   kore-well-founded-alt-prefixpoint $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-all-path-next ph0 ( \kore-always ph0 ( \kore-well-founded-alt ph0 ) ) ) ( \kore-well-founded-alt ph0 ) ) ) ) $. $}
${ kore-well-founded-alt-kt-notation.0 $e #Notation ph2 ph3 $.
   kore-well-founded-alt-kt-notation $a #Notation ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph2 ph1 ) ) ) ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph3 ph1 ) ) ) $. $}
${ $d x X ph0 $.
   $d x X ph1 $.
   $d x th0 $.
   kore-well-founded-alt-kt.0 $e |- ( \is-predicate th0 ) $.
   kore-well-founded-alt-kt.1 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-well-founded-alt-kt.2 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-all-path-next ph0 ( \kore-always ph0 ph1 ) ) ph1 ) ) ) $.
   kore-well-founded-alt-kt $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-well-founded-alt ph0 ) ph1 ) ) ) $. $}
${ kore-well-founded-alt-kt-alt.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-well-founded-alt-kt-alt.1 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-all-path-next ph0 ( \kore-always ph0 ph1 ) ) ph1 ) ) ) $.
   kore-well-founded-alt-kt-alt $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-well-founded-alt ph0 ) ph1 ) ) ) $. $}
kore-well-founded-alt-postfixpoint $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-well-founded-alt ph0 ) ( \kore-all-path-next ph0 ( \kore-always ph0 ( \kore-well-founded-alt ph0 ) ) ) ) ) ) $.
${ kore-all-path-next-and-next-propagate-lemma.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-all-path-next-and-next-propagate-lemma.1 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-all-path-next-and-next-propagate-lemma.2 $e |- ( \imp th0 ( \in-sort ph3 ph0 ) ) $.
   kore-all-path-next-and-next-propagate-lemma $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-or ph0 ( \kore-or ph0 ph1 ph3 ) ( \kore-not ph0 ph2 ) ) ( \kore-implies ph0 ( \kore-and ph0 ( \kore-not ph0 ph1 ) ph2 ) ph3 ) ) ) ) $. $}
${ kore-all-path-next-and-next-propagate.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-all-path-next-and-next-propagate.1 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-all-path-next-and-next-propagate $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-and ph0 ( \kore-all-path-next ph0 ph1 ) ( \kore-next ph0 ph2 ) ) ( \kore-next ph0 ( \kore-and ph0 ph1 ph2 ) ) ) ) ) $. $}
${ kore-all-path-next-imp-to-next.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-all-path-next-imp-to-next.1 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-all-path-next-imp-to-next $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-all-path-next ph0 ( \kore-implies ph0 ph1 ph2 ) ) ( \kore-implies ph0 ( \kore-next ph0 ph1 ) ( \kore-next ph0 ph2 ) ) ) ) ) $. $}
${ kore-weak-eventually-to-wf-eventually.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-weak-eventually-to-wf-eventually $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-weak-eventually ph0 ph1 ) ( \kore-implies ph0 ( \kore-well-founded ph0 ) ( \kore-eventually ph0 ph1 ) ) ) ) ) $. $}
${ kore-wf-eventually-to-weak-eventually.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-wf-eventually-to-weak-eventually $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-implies ph0 ( \kore-well-founded ph0 ) ( \kore-eventually ph0 ph1 ) ) ( \kore-weak-eventually ph0 ph1 ) ) ) ) $. $}
${ kore-or-propagates-in-weak-eventually.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-or-propagates-in-weak-eventually.1 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-or-propagates-in-weak-eventually $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-iff ph0 ( \kore-weak-eventually ph0 ( \kore-or ph0 ph1 ph2 ) ) ( \kore-or ph0 ( \kore-weak-eventually ph0 ph1 ) ( \kore-weak-eventually ph0 ph2 ) ) ) ) ) $. $}
${ kore-always-and-weak-eventually-to-eventually.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-always-and-weak-eventually-to-eventually.1 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-always-and-weak-eventually-to-eventually $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-and ph0 ( \kore-always ph0 ph1 ) ( \kore-weak-eventually ph0 ph2 ) ) ( \kore-weak-eventually ph0 ( \kore-and ph0 ph1 ph2 ) ) ) ) ) $. $}
${ kore-rewrites-star-reflexivity.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-rewrites-star-reflexivity $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-rewrites-star ph0 ph1 ph1 ) ) ) $. $}
${ kore-rewrites-star-union.0 $e |- ( \is-predicate th0 ) $.
   kore-rewrites-star-union.1 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-rewrites-star-union.2 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-rewrites-star-union.3 $e |- ( \imp th0 ( \in-sort ph3 ph0 ) ) $.
   kore-rewrites-star-union.4 $e |- ( \imp th0 ( \in-sort ph4 ph0 ) ) $.
   kore-rewrites-star-union.5 $e |- ( \imp th0 ( \in-sort ph5 ph0 ) ) $.
   kore-rewrites-star-union.6 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-rewrites-star ph0 ( \kore-and ph0 ph1 ph3 ) ph4 ) ) ) $.
   kore-rewrites-star-union.7 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-rewrites-star ph0 ( \kore-and ph0 ph2 ph3 ) ph5 ) ) ) $.
   kore-rewrites-star-union $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-rewrites-star ph0 ( \kore-and ph0 ( \kore-or ph0 ph1 ph2 ) ph3 ) ( \kore-or ph0 ph4 ph5 ) ) ) ) $. $}
${ kore-rewrites-plus-union.0 $e |- ( \is-predicate th0 ) $.
   kore-rewrites-plus-union.1 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-rewrites-plus-union.2 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-rewrites-plus-union.3 $e |- ( \imp th0 ( \in-sort ph3 ph0 ) ) $.
   kore-rewrites-plus-union.4 $e |- ( \imp th0 ( \in-sort ph4 ph0 ) ) $.
   kore-rewrites-plus-union.5 $e |- ( \imp th0 ( \in-sort ph5 ph0 ) ) $.
   kore-rewrites-plus-union.6 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-rewrites-plus ph0 ( \kore-and ph0 ph1 ph3 ) ph4 ) ) ) $.
   kore-rewrites-plus-union.7 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-rewrites-plus ph0 ( \kore-and ph0 ph2 ph3 ) ph5 ) ) ) $.
   kore-rewrites-plus-union $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-rewrites-plus ph0 ( \kore-and ph0 ( \kore-or ph0 ph1 ph2 ) ph3 ) ( \kore-or ph0 ph4 ph5 ) ) ) ) $. $}
${ kore-rewrites-star-subsumption-lhs.0 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph1 ph2 ) ) ) $.
   kore-rewrites-star-subsumption-lhs.1 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-rewrites-star ph0 ph2 ph3 ) ) ) $.
   kore-rewrites-star-subsumption-lhs $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-rewrites-star ph0 ph1 ph3 ) ) ) $. $}
${ kore-rewrites-star-subsumption-rhs.0 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-rewrites-star-subsumption-rhs.1 $e |- ( \imp th0 ( \in-sort ph3 ph0 ) ) $.
   kore-rewrites-star-subsumption-rhs.2 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-rewrites-star ph0 ph1 ph2 ) ) ) $.
   kore-rewrites-star-subsumption-rhs.3 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph2 ph3 ) ) ) $.
   kore-rewrites-star-subsumption-rhs $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-rewrites-star ph0 ph1 ph3 ) ) ) $. $}
${ kore-rewrites-plus-subsumption-lhs.0 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph1 ph2 ) ) ) $.
   kore-rewrites-plus-subsumption-lhs.1 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-rewrites-plus ph0 ph2 ph3 ) ) ) $.
   kore-rewrites-plus-subsumption-lhs $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-rewrites-plus ph0 ph1 ph3 ) ) ) $. $}
${ kore-rewrites-plus-subsumption-rhs.0 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-rewrites-plus-subsumption-rhs.1 $e |- ( \imp th0 ( \in-sort ph3 ph0 ) ) $.
   kore-rewrites-plus-subsumption-rhs.2 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-rewrites-plus ph0 ph1 ph2 ) ) ) $.
   kore-rewrites-plus-subsumption-rhs.3 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph2 ph3 ) ) ) $.
   kore-rewrites-plus-subsumption-rhs $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-rewrites-plus ph0 ph1 ph3 ) ) ) $. $}
${ kore-rewrites-star-prune.0 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-rewrites-star-prune.1 $e |- ( \imp th0 ( \in-sort ph3 ph0 ) ) $.
   kore-rewrites-star-prune.2 $e |- ( \imp th0 ( \in-sort ph4 ph0 ) ) $.
   kore-rewrites-star-prune.3 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-not ph0 ph2 ) ) ) $.
   kore-rewrites-star-prune.4 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-rewrites-star ph0 ph1 ( \kore-or ph0 ( \kore-and ph0 ph2 ph3 ) ph4 ) ) ) ) $.
   kore-rewrites-star-prune $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-rewrites-star ph0 ph1 ph4 ) ) ) $. $}
${ kore-rewrites-star-branch.0 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-rewrites-star-branch.1 $e |- ( \imp th0 ( \in-sort ph3 ph0 ) ) $.
   kore-rewrites-star-branch.2 $e |- ( \imp th0 ( \in-sort ph4 ph0 ) ) $.
   kore-rewrites-star-branch.3 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-rewrites-star ph0 ph1 ( \kore-or ph0 ph2 ph3 ) ) ) ) $.
   kore-rewrites-star-branch.4 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-rewrites-star ph0 ph2 ph4 ) ) ) $.
   kore-rewrites-star-branch $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-rewrites-star ph0 ph1 ( \kore-or ph0 ph4 ph3 ) ) ) ) $. $}
${ kore-rewrites-plus-branch.0 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-rewrites-plus-branch.1 $e |- ( \imp th0 ( \in-sort ph3 ph0 ) ) $.
   kore-rewrites-plus-branch.2 $e |- ( \imp th0 ( \in-sort ph4 ph0 ) ) $.
   kore-rewrites-plus-branch.3 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-rewrites-plus ph0 ph1 ( \kore-or ph0 ph2 ph3 ) ) ) ) $.
   kore-rewrites-plus-branch.4 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-rewrites-star ph0 ph2 ph4 ) ) ) $.
   kore-rewrites-plus-branch $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-rewrites-plus ph0 ph1 ( \kore-or ph0 ph4 ph3 ) ) ) ) $. $}
${ kore-rewrites-subsumption-lhs.0 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph1 ph2 ) ) ) $.
   kore-rewrites-subsumption-lhs.1 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-rewrites ph0 ph2 ph3 ) ) ) $.
   kore-rewrites-subsumption-lhs $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-rewrites ph0 ph1 ph3 ) ) ) $. $}
${ kore-rewrites-subsumption-rhs.0 $e |- ( \is-predicate th0 ) $.
   kore-rewrites-subsumption-rhs.1 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-rewrites-subsumption-rhs.2 $e |- ( \imp th0 ( \in-sort ph3 ph0 ) ) $.
   kore-rewrites-subsumption-rhs.3 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-rewrites ph0 ph1 ph2 ) ) ) $.
   kore-rewrites-subsumption-rhs.4 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph2 ph3 ) ) ) $.
   kore-rewrites-subsumption-rhs $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-rewrites ph0 ph1 ph3 ) ) ) $. $}
${ $d x th0 $.
   $d x ph0 $.
   $d x ph1 $.
   $d x ph2 $.
   kore-predicate-propagate-in-next.0 $e |- ( \kore-is-predicate ph0 ph1 ) $.
   kore-predicate-propagate-in-next.1 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-predicate-propagate-in-next.2 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-predicate-propagate-in-next $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-and ph0 ph1 ( \kore-next ph0 ph2 ) ) ( \kore-next ph0 ( \kore-and ph0 ph1 ph2 ) ) ) ) ) $. $}
${ $d x th0 $.
   $d x ph0 $.
   $d x ph1 $.
   $d x ph2 $.
   kore-predicate-propagate-in-weak-eventually.0 $e |- ( \kore-is-predicate ph0 ph1 ) $.
   kore-predicate-propagate-in-weak-eventually.1 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-predicate-propagate-in-weak-eventually.2 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-predicate-propagate-in-weak-eventually $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-and ph0 ph1 ( \kore-weak-eventually ph0 ph2 ) ) ( \kore-weak-eventually ph0 ( \kore-and ph0 ph1 ph2 ) ) ) ) ) $. $}
${ kore-rewrites-constraint-lemma.0 $e |- ( \kore-is-predicate ph0 ph1 ) $.
   kore-rewrites-constraint-lemma.1 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-rewrites-constraint-lemma.2 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-rewrites-constraint-lemma.3 $e |- ( \imp th0 ( \in-sort ph3 ph0 ) ) $.
   kore-rewrites-constraint-lemma.4 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-rewrites ph0 ( \kore-and ph0 ph1 ph2 ) ph3 ) ) ) $.
   kore-rewrites-constraint-lemma $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-rewrites ph0 ( \kore-and ph0 ph1 ph2 ) ( \kore-and ph0 ph1 ph3 ) ) ) ) $. $}
${ kore-one-path-reaches-plus-constraint-lemma.0 $e |- ( \kore-is-predicate ph0 ph1 ) $.
   kore-one-path-reaches-plus-constraint-lemma.1 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-one-path-reaches-plus-constraint-lemma.2 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-one-path-reaches-plus-constraint-lemma.3 $e |- ( \imp th0 ( \in-sort ph3 ph0 ) ) $.
   kore-one-path-reaches-plus-constraint-lemma.4 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-one-path-reaches-plus ph0 ( \kore-and ph0 ph1 ph2 ) ph3 ) ) ) $.
   kore-one-path-reaches-plus-constraint-lemma $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-one-path-reaches-plus ph0 ( \kore-and ph0 ph1 ph2 ) ( \kore-and ph0 ph1 ph3 ) ) ) ) $. $}
${ kore-one-path-reaches-star-constraint-lemma-alt.0 $e |- ( \kore-is-predicate ph0 ph2 ) $.
   kore-one-path-reaches-star-constraint-lemma-alt.1 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-one-path-reaches-star-constraint-lemma-alt.2 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-one-path-reaches-star-constraint-lemma-alt.3 $e |- ( \imp th0 ( \in-sort ph3 ph0 ) ) $.
   kore-one-path-reaches-star-constraint-lemma-alt.4 $e |- ( \imp th0 ( \in-sort ph4 ph0 ) ) $.
   kore-one-path-reaches-star-constraint-lemma-alt.5 $e |- ( \imp th0 ( \in-sort ph5 ph0 ) ) $.
   kore-one-path-reaches-star-constraint-lemma-alt.6 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph1 ( \kore-one-path-reaches-star ph0 ( \kore-and ph0 ph2 ph3 ) ( \kore-and ph0 ph4 ph5 ) ) ) ) ) $.
   kore-one-path-reaches-star-constraint-lemma-alt $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph1 ( \kore-one-path-reaches-star ph0 ( \kore-and ph0 ph2 ph3 ) ( \kore-and ph0 ( \kore-and ph0 ph2 ph4 ) ph5 ) ) ) ) ) $. $}
${ kore-one-path-reaches-plus-constraint-lemma-alt.0 $e |- ( \kore-is-predicate ph0 ph1 ) $.
   kore-one-path-reaches-plus-constraint-lemma-alt.1 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-one-path-reaches-plus-constraint-lemma-alt.2 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-one-path-reaches-plus-constraint-lemma-alt.3 $e |- ( \imp th0 ( \in-sort ph3 ph0 ) ) $.
   kore-one-path-reaches-plus-constraint-lemma-alt.4 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph4 ( \kore-one-path-reaches-plus ph0 ( \kore-and ph0 ph1 ph2 ) ph3 ) ) ) ) $.
   kore-one-path-reaches-plus-constraint-lemma-alt $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph4 ( \kore-one-path-reaches-plus ph0 ( \kore-and ph0 ph1 ph2 ) ( \kore-and ph0 ph1 ph3 ) ) ) ) ) $. $}
${ kore-rewrites-star-intro.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-rewrites-star-intro.1 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-rewrites-star-intro.2 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-rewrites ph0 ph1 ph2 ) ) ) $.
   kore-rewrites-star-intro $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-rewrites-star ph0 ph1 ph2 ) ) ) $. $}
${ kore-rewrites-star-intro-alt.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-rewrites-star-intro-alt.1 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-rewrites-star-intro-alt.2 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-rewrites-plus ph0 ph1 ph2 ) ) ) $.
   kore-rewrites-star-intro-alt $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-rewrites-star ph0 ph1 ph2 ) ) ) $. $}
${ kore-rewrites-plus-intro.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-rewrites-plus-intro.1 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-rewrites-plus-intro.2 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-rewrites ph0 ph1 ph2 ) ) ) $.
   kore-rewrites-plus-intro $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-rewrites-plus ph0 ph1 ph2 ) ) ) $. $}
${ kore-rewrites-star-transitivity.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-rewrites-star-transitivity.1 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-rewrites-star-transitivity.2 $e |- ( \imp th0 ( \in-sort ph3 ph0 ) ) $.
   kore-rewrites-star-transitivity.3 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-rewrites-star ph0 ph1 ph2 ) ) ) $.
   kore-rewrites-star-transitivity.4 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-rewrites-star ph0 ph2 ph3 ) ) ) $.
   kore-rewrites-star-transitivity $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-rewrites-star ph0 ph1 ph3 ) ) ) $. $}
${ kore-rewrites-plus-transitivity.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-rewrites-plus-transitivity.1 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-rewrites-plus-transitivity.2 $e |- ( \imp th0 ( \in-sort ph3 ph0 ) ) $.
   kore-rewrites-plus-transitivity.3 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-rewrites-plus ph0 ph1 ph2 ) ) ) $.
   kore-rewrites-plus-transitivity.4 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-rewrites-star ph0 ph2 ph3 ) ) ) $.
   kore-rewrites-plus-transitivity $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-rewrites-plus ph0 ph1 ph3 ) ) ) $. $}
${ kore-one-path-reaches-star-intro.0 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-one-path-reaches-star-intro.1 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-rewrites-star ph0 ph1 ph2 ) ) ) $.
   kore-one-path-reaches-star-intro $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-one-path-reaches-star ph0 ph1 ph2 ) ) ) $. $}
${ kore-one-path-reaches-star-intro-alt.0 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-one-path-reaches-star-intro-alt.1 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-one-path-reaches-plus ph0 ph1 ph2 ) ) ) $.
   kore-one-path-reaches-star-intro-alt $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-one-path-reaches-star ph0 ph1 ph2 ) ) ) $. $}
${ kore-one-path-reaches-star-intro-alt2.0 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-one-path-reaches-star-intro-alt2.1 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph1 ph2 ) ) ) $.
   kore-one-path-reaches-star-intro-alt2 $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-one-path-reaches-star ph0 ph1 ph2 ) ) ) $. $}
${ kore-one-path-reaches-star-intro-alt3.0 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-one-path-reaches-star-intro-alt3.1 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph3 ( \kore-one-path-reaches-plus ph0 ph1 ph2 ) ) ) ) $.
   kore-one-path-reaches-star-intro-alt3 $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph3 ( \kore-one-path-reaches-star ph0 ph1 ph2 ) ) ) ) $. $}
${ kore-one-path-reaches-plus-intro.0 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-one-path-reaches-plus-intro.1 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-rewrites-plus ph0 ph1 ph2 ) ) ) $.
   kore-one-path-reaches-plus-intro $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-one-path-reaches-plus ph0 ph1 ph2 ) ) ) $. $}
${ kore-one-path-reaches-star-transitivity.0 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-one-path-reaches-star-transitivity.1 $e |- ( \imp th0 ( \in-sort ph3 ph0 ) ) $.
   kore-one-path-reaches-star-transitivity.2 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-one-path-reaches-star ph0 ph1 ph2 ) ) ) $.
   kore-one-path-reaches-star-transitivity.3 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-one-path-reaches-star ph0 ph2 ph3 ) ) ) $.
   kore-one-path-reaches-star-transitivity $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-one-path-reaches-star ph0 ph1 ph3 ) ) ) $. $}
${ kore-one-path-reaches-plus-transitivity.0 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-one-path-reaches-plus-transitivity.1 $e |- ( \imp th0 ( \in-sort ph3 ph0 ) ) $.
   kore-one-path-reaches-plus-transitivity.2 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-one-path-reaches-plus ph0 ph1 ph2 ) ) ) $.
   kore-one-path-reaches-plus-transitivity.3 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-one-path-reaches-star ph0 ph2 ph3 ) ) ) $.
   kore-one-path-reaches-plus-transitivity $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-one-path-reaches-plus ph0 ph1 ph3 ) ) ) $. $}
${ kore-one-path-reaches-star-reflexivity.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-one-path-reaches-star-reflexivity $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-one-path-reaches-star ph0 ph1 ph1 ) ) ) $. $}
${ kore-one-path-reaches-star-subsumption-lhs.0 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph1 ph2 ) ) ) $.
   kore-one-path-reaches-star-subsumption-lhs.1 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-one-path-reaches-star ph0 ph2 ph3 ) ) ) $.
   kore-one-path-reaches-star-subsumption-lhs $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-one-path-reaches-star ph0 ph1 ph3 ) ) ) $. $}
${ kore-one-path-reaches-star-subsumption-rhs.0 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-one-path-reaches-star-subsumption-rhs.1 $e |- ( \imp th0 ( \in-sort ph3 ph0 ) ) $.
   kore-one-path-reaches-star-subsumption-rhs.2 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-one-path-reaches-star ph0 ph1 ph2 ) ) ) $.
   kore-one-path-reaches-star-subsumption-rhs.3 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph2 ph3 ) ) ) $.
   kore-one-path-reaches-star-subsumption-rhs $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-one-path-reaches-star ph0 ph1 ph3 ) ) ) $. $}
${ kore-one-path-reaches-plus-subsumption-lhs.0 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph1 ph2 ) ) ) $.
   kore-one-path-reaches-plus-subsumption-lhs.1 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-one-path-reaches-plus ph0 ph2 ph3 ) ) ) $.
   kore-one-path-reaches-plus-subsumption-lhs $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-one-path-reaches-plus ph0 ph1 ph3 ) ) ) $. $}
${ kore-one-path-reaches-plus-subsumption-rhs.0 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-one-path-reaches-plus-subsumption-rhs.1 $e |- ( \imp th0 ( \in-sort ph3 ph0 ) ) $.
   kore-one-path-reaches-plus-subsumption-rhs.2 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-one-path-reaches-plus ph0 ph1 ph2 ) ) ) $.
   kore-one-path-reaches-plus-subsumption-rhs.3 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph2 ph3 ) ) ) $.
   kore-one-path-reaches-plus-subsumption-rhs $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-one-path-reaches-plus ph0 ph1 ph3 ) ) ) $. $}
${ kore-one-path-reaches-star-subsumption-lhs-alt.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-one-path-reaches-star-subsumption-lhs-alt.1 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-one-path-reaches-star-subsumption-lhs-alt.2 $e |- ( \imp th0 ( \in-sort ph3 ph0 ) ) $.
   kore-one-path-reaches-star-subsumption-lhs-alt.3 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph1 ph2 ) ) ) $.
   kore-one-path-reaches-star-subsumption-lhs-alt.4 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph4 ( \kore-one-path-reaches-star ph0 ph2 ph3 ) ) ) ) $.
   kore-one-path-reaches-star-subsumption-lhs-alt $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph4 ( \kore-one-path-reaches-star ph0 ph1 ph3 ) ) ) ) $. $}
${ kore-one-path-reaches-plus-subsumption-lhs-alt.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-one-path-reaches-plus-subsumption-lhs-alt.1 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-one-path-reaches-plus-subsumption-lhs-alt.2 $e |- ( \imp th0 ( \in-sort ph3 ph0 ) ) $.
   kore-one-path-reaches-plus-subsumption-lhs-alt.3 $e |- ( \imp th0 ( \in-sort ph4 ph0 ) ) $.
   kore-one-path-reaches-plus-subsumption-lhs-alt.4 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph1 ph2 ) ) ) $.
   kore-one-path-reaches-plus-subsumption-lhs-alt.5 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph4 ( \kore-one-path-reaches-plus ph0 ph2 ph3 ) ) ) ) $.
   kore-one-path-reaches-plus-subsumption-lhs-alt $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph4 ( \kore-one-path-reaches-plus ph0 ph1 ph3 ) ) ) ) $. $}
${ kore-one-path-reaches-plus-subsumption-rhs-alt.0 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-one-path-reaches-plus-subsumption-rhs-alt.1 $e |- ( \imp th0 ( \in-sort ph3 ph0 ) ) $.
   kore-one-path-reaches-plus-subsumption-rhs-alt.2 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph4 ( \kore-one-path-reaches-plus ph0 ph1 ph2 ) ) ) ) $.
   kore-one-path-reaches-plus-subsumption-rhs-alt.3 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph2 ph3 ) ) ) $.
   kore-one-path-reaches-plus-subsumption-rhs-alt $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph4 ( \kore-one-path-reaches-plus ph0 ph1 ph3 ) ) ) ) $. $}
${ kore-one-path-reaches-star-subsumption-rhs-alt.0 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-one-path-reaches-star-subsumption-rhs-alt.1 $e |- ( \imp th0 ( \in-sort ph3 ph0 ) ) $.
   kore-one-path-reaches-star-subsumption-rhs-alt.2 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph4 ( \kore-one-path-reaches-star ph0 ph1 ph2 ) ) ) ) $.
   kore-one-path-reaches-star-subsumption-rhs-alt.3 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph2 ph3 ) ) ) $.
   kore-one-path-reaches-star-subsumption-rhs-alt $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph4 ( \kore-one-path-reaches-star ph0 ph1 ph3 ) ) ) ) $. $}
${ kore-one-path-reaches-star-subsumption-rhs-alt2.0 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-one-path-reaches-star-subsumption-rhs-alt2.1 $e |- ( \imp th0 ( \in-sort ph3 ph0 ) ) $.
   kore-one-path-reaches-star-subsumption-rhs-alt2.2 $e |- ( \imp th0 ( \in-sort ph5 ph0 ) ) $.
   kore-one-path-reaches-star-subsumption-rhs-alt2.3 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph4 ( \kore-one-path-reaches-star ph0 ph1 ( \kore-or ph0 ph2 ph3 ) ) ) ) ) $.
   kore-one-path-reaches-star-subsumption-rhs-alt2.4 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph3 ph5 ) ) ) $.
   kore-one-path-reaches-star-subsumption-rhs-alt2 $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph4 ( \kore-one-path-reaches-star ph0 ph1 ( \kore-or ph0 ph2 ph5 ) ) ) ) ) $. $}
${ kore-one-path-reaches-star-branch.0 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-one-path-reaches-star-branch.1 $e |- ( \imp th0 ( \in-sort ph3 ph0 ) ) $.
   kore-one-path-reaches-star-branch.2 $e |- ( \imp th0 ( \in-sort ph4 ph0 ) ) $.
   kore-one-path-reaches-star-branch.3 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-one-path-reaches-star ph0 ph1 ( \kore-or ph0 ph2 ph3 ) ) ) ) $.
   kore-one-path-reaches-star-branch.4 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-one-path-reaches-star ph0 ph2 ph4 ) ) ) $.
   kore-one-path-reaches-star-branch $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-one-path-reaches-star ph0 ph1 ( \kore-or ph0 ph4 ph3 ) ) ) ) $. $}
${ kore-one-path-reaches-plus-branch.0 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-one-path-reaches-plus-branch.1 $e |- ( \imp th0 ( \in-sort ph3 ph0 ) ) $.
   kore-one-path-reaches-plus-branch.2 $e |- ( \imp th0 ( \in-sort ph4 ph0 ) ) $.
   kore-one-path-reaches-plus-branch.3 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-one-path-reaches-plus ph0 ph1 ( \kore-or ph0 ph2 ph3 ) ) ) ) $.
   kore-one-path-reaches-plus-branch.4 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-one-path-reaches-star ph0 ph2 ph4 ) ) ) $.
   kore-one-path-reaches-plus-branch $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-one-path-reaches-plus ph0 ph1 ( \kore-or ph0 ph4 ph3 ) ) ) ) $. $}
${ kore-one-path-reaches-star-union.0 $e |- ( \is-predicate th0 ) $.
   kore-one-path-reaches-star-union.1 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-one-path-reaches-star-union.2 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-one-path-reaches-star-union.3 $e |- ( \imp th0 ( \in-sort ph3 ph0 ) ) $.
   kore-one-path-reaches-star-union.4 $e |- ( \imp th0 ( \in-sort ph4 ph0 ) ) $.
   kore-one-path-reaches-star-union.5 $e |- ( \imp th0 ( \in-sort ph5 ph0 ) ) $.
   kore-one-path-reaches-star-union.6 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-one-path-reaches-star ph0 ( \kore-and ph0 ph1 ph3 ) ph4 ) ) ) $.
   kore-one-path-reaches-star-union.7 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-one-path-reaches-star ph0 ( \kore-and ph0 ph2 ph3 ) ph5 ) ) ) $.
   kore-one-path-reaches-star-union $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-one-path-reaches-star ph0 ( \kore-and ph0 ( \kore-or ph0 ph1 ph2 ) ph3 ) ( \kore-or ph0 ph4 ph5 ) ) ) ) $. $}
${ kore-one-path-reaches-star-union-alt.0 $e |- ( \is-predicate th0 ) $.
   kore-one-path-reaches-star-union-alt.1 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-one-path-reaches-star-union-alt.2 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-one-path-reaches-star-union-alt.3 $e |- ( \imp th0 ( \in-sort ph3 ph0 ) ) $.
   kore-one-path-reaches-star-union-alt.4 $e |- ( \imp th0 ( \in-sort ph4 ph0 ) ) $.
   kore-one-path-reaches-star-union-alt.5 $e |- ( \imp th0 ( \in-sort ph5 ph0 ) ) $.
   kore-one-path-reaches-star-union-alt.6 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph5 ( \kore-one-path-reaches-star ph0 ph1 ph3 ) ) ) ) $.
   kore-one-path-reaches-star-union-alt.7 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph5 ( \kore-one-path-reaches-star ph0 ph2 ph4 ) ) ) ) $.
   kore-one-path-reaches-star-union-alt $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph5 ( \kore-one-path-reaches-star ph0 ( \kore-or ph0 ph1 ph2 ) ( \kore-or ph0 ph3 ph4 ) ) ) ) ) $. $}
${ kore-one-path-reaches-star-union-alt2.0 $e |- ( \is-predicate th0 ) $.
   kore-one-path-reaches-star-union-alt2.1 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-one-path-reaches-star-union-alt2.2 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-one-path-reaches-star-union-alt2.3 $e |- ( \imp th0 ( \in-sort ph3 ph0 ) ) $.
   kore-one-path-reaches-star-union-alt2.4 $e |- ( \imp th0 ( \in-sort ph4 ph0 ) ) $.
   kore-one-path-reaches-star-union-alt2.5 $e |- ( \imp th0 ( \in-sort ph5 ph0 ) ) $.
   kore-one-path-reaches-star-union-alt2.6 $e |- ( \imp th0 ( \in-sort ph6 ph0 ) ) $.
   kore-one-path-reaches-star-union-alt2.7 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-one-path-reaches-star ph0 ( \kore-and ph0 ph1 ph6 ) ph3 ) ) ) $.
   kore-one-path-reaches-star-union-alt2.8 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph5 ( \kore-one-path-reaches-star ph0 ( \kore-and ph0 ph2 ph6 ) ph4 ) ) ) ) $.
   kore-one-path-reaches-star-union-alt2 $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph5 ( \kore-one-path-reaches-star ph0 ( \kore-and ph0 ( \kore-or ph0 ph1 ph2 ) ph6 ) ( \kore-or ph0 ph3 ph4 ) ) ) ) ) $. $}
${ kore-one-path-reaches-plus-union.0 $e |- ( \is-predicate th0 ) $.
   kore-one-path-reaches-plus-union.1 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-one-path-reaches-plus-union.2 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-one-path-reaches-plus-union.3 $e |- ( \imp th0 ( \in-sort ph3 ph0 ) ) $.
   kore-one-path-reaches-plus-union.4 $e |- ( \imp th0 ( \in-sort ph4 ph0 ) ) $.
   kore-one-path-reaches-plus-union.5 $e |- ( \imp th0 ( \in-sort ph5 ph0 ) ) $.
   kore-one-path-reaches-plus-union.6 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-one-path-reaches-plus ph0 ( \kore-and ph0 ph1 ph3 ) ph4 ) ) ) $.
   kore-one-path-reaches-plus-union.7 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-one-path-reaches-plus ph0 ( \kore-and ph0 ph2 ph3 ) ph5 ) ) ) $.
   kore-one-path-reaches-plus-union $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-one-path-reaches-plus ph0 ( \kore-and ph0 ( \kore-or ph0 ph1 ph2 ) ph3 ) ( \kore-or ph0 ph4 ph5 ) ) ) ) $. $}
kore-well-founded-to-well-founded-alt $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-well-founded ph0 ) ( \kore-well-founded-alt ph0 ) ) ) ) $.
${ kore-reachability-one-path-circularity-lemma.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-reachability-one-path-circularity-lemma.1 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-circularity ph0 ph1 ) ph1 ) ) ) $.
   kore-reachability-one-path-circularity-lemma $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-well-founded ph0 ) ph1 ) ) ) $. $}
${ kore-reachability-permits-non-wf.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-reachability-permits-non-wf.1 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-reachability-permits-non-wf $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-implies ph0 ( \kore-well-founded ph0 ) ( \kore-one-path-reaches-plus ph0 ph1 ph2 ) ) ( \kore-one-path-reaches-plus ph0 ph1 ph2 ) ) ) ) $. $}
${ kore-reachability-one-path-transitivity.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-reachability-one-path-transitivity.1 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-reachability-one-path-transitivity.2 $e |- ( \imp th0 ( \in-sort ph3 ph0 ) ) $.
   kore-reachability-one-path-transitivity.3 $e |- ( \imp th0 ( \in-sort ph4 ph0 ) ) $.
   kore-reachability-one-path-transitivity.4 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-circularity ph0 ph1 ) ( \kore-one-path-reaches-plus ph0 ph2 ph3 ) ) ) ) $.
   kore-reachability-one-path-transitivity.5 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-always ph0 ph1 ) ( \kore-one-path-reaches-star ph0 ph3 ph4 ) ) ) ) $.
   kore-reachability-one-path-transitivity $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-circularity ph0 ph1 ) ( \kore-one-path-reaches-plus ph0 ph2 ph4 ) ) ) ) $. $}
${ kore-reachability-one-path-transitivity-alt.0 $e |- ( \is-predicate th0 ) $.
   kore-reachability-one-path-transitivity-alt.1 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-reachability-one-path-transitivity-alt.2 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-reachability-one-path-transitivity-alt.3 $e |- ( \imp th0 ( \in-sort ph3 ph0 ) ) $.
   kore-reachability-one-path-transitivity-alt.4 $e |- ( \imp th0 ( \in-sort ph4 ph0 ) ) $.
   kore-reachability-one-path-transitivity-alt.5 $e |- ( \imp th0 ( \in-sort ph5 ph0 ) ) $.
   kore-reachability-one-path-transitivity-alt.6 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-circularity ph0 ph1 ) ( \kore-one-path-reaches-plus ph0 ph2 ( \kore-or ph0 ph3 ph5 ) ) ) ) ) $.
   kore-reachability-one-path-transitivity-alt.7 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-always ph0 ph1 ) ( \kore-one-path-reaches-star ph0 ph3 ph4 ) ) ) ) $.
   kore-reachability-one-path-transitivity-alt $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-circularity ph0 ph1 ) ( \kore-one-path-reaches-plus ph0 ph2 ( \kore-or ph0 ph4 ph5 ) ) ) ) ) $. $}
${ kore-reachability-one-path-transitivity-alt2.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-reachability-one-path-transitivity-alt2.1 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-reachability-one-path-transitivity-alt2.2 $e |- ( \imp th0 ( \in-sort ph3 ph0 ) ) $.
   kore-reachability-one-path-transitivity-alt2.3 $e |- ( \imp th0 ( \in-sort ph4 ph0 ) ) $.
   kore-reachability-one-path-transitivity-alt2.4 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-one-path-reaches-plus ph0 ph2 ph3 ) ) ) $.
   kore-reachability-one-path-transitivity-alt2.5 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-always ph0 ph1 ) ( \kore-one-path-reaches-star ph0 ph3 ph4 ) ) ) ) $.
   kore-reachability-one-path-transitivity-alt2 $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-circularity ph0 ph1 ) ( \kore-one-path-reaches-plus ph0 ph2 ph4 ) ) ) ) $. $}
${ kore-reachability-one-path-case-star.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-reachability-one-path-case-star.1 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-reachability-one-path-case-star.2 $e |- ( \imp th0 ( \in-sort ph3 ph0 ) ) $.
   kore-reachability-one-path-case-star.3 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph1 ( \kore-one-path-reaches-star ph0 ph2 ph4 ) ) ) ) $.
   kore-reachability-one-path-case-star.4 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph1 ( \kore-one-path-reaches-star ph0 ph3 ph4 ) ) ) ) $.
   kore-reachability-one-path-case-star $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph1 ( \kore-one-path-reaches-star ph0 ( \kore-or ph0 ph2 ph3 ) ph4 ) ) ) ) $. $}
${ $d X xX $.
   $d X ph0 $.
   $d X ph1 $.
   fresh-in-kore-always.0 $e #Fresh xX ph0 $.
   fresh-in-kore-always.1 $e #Fresh xX ph1 $.
   fresh-in-kore-always $a #Fresh xX ( \kore-always ph0 ph1 ) $. $}
${ $d X xX $.
   $d X ph0 $.
   $d X ph1 $.
   fresh-in-kore-circularity.0 $e #Fresh xX ph0 $.
   fresh-in-kore-circularity.1 $e #Fresh xX ph1 $.
   fresh-in-kore-circularity $a #Fresh xX ( \kore-circularity ph0 ph1 ) $. $}
${ $d x ph1 $.
   disjointness-exists.0 $e |- ( \not ( \and ph1 ( \sorted-exists x ph2 ph3 ) ) ) $.
   disjointness-exists $a |- ( \imp ( \in-sort x ph2 ) ( \not ( \and ph1 ph3 ) ) ) $. $}
${ disjointness-to-not-in.0 $e |- ( \is-predicate th0 ) $.
   disjointness-to-not-in.1 $e |- ( \imp th0 ( \ceil ph1 ) ) $.
   disjointness-to-not-in.2 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   disjointness-to-not-in.3 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   disjointness-to-not-in.4 $e |- ( \imp th0 ( \not ( \and ph1 ph2 ) ) ) $.
   disjointness-to-not-in $a |- ( \imp th0 ( \kore-valid ph3 ( \kore-not ph3 ( \kore-in ph0 ph3 ph1 ph2 ) ) ) ) $. $}
${ desugar-not-to-imp.0 $e |- ( \not ph0 ) $.
   desugar-not-to-imp $a |- ( \imp ph0 \bot ) $. $}
${ sugar-imp-to-not.0 $e |- ( \imp ph0 \bot ) $.
   sugar-imp-to-not $a |- ( \not ph0 ) $. $}

$v xX0 $.
xX0-variable $f #Variable xX0 $.

$v ptn0 ptn1 ptn2 $.
ptn0-pattern $f #Pattern ptn0 $.
ptn1-pattern $f #Pattern ptn1 $.
ptn2-pattern $f #Pattern ptn2 $.

$v kore-sort-var-To $.
kore-sort-var-To-elementvariable $f #ElementVariable kore-sort-var-To $.
$d x y z w x0 x1 x2 x3 s0 s1 s2 s3 kore-sort-var-To $.

$v kore-sort-var-From $.
kore-sort-var-From-elementvariable $f #ElementVariable kore-sort-var-From $.
$d x y z w x0 x1 x2 x3 s0 s1 s2 s3 kore-sort-var-To kore-sort-var-From $.

$v ptn3 ptn4 $.
ptn3-pattern $f #Pattern ptn3 $.
ptn4-pattern $f #Pattern ptn4 $.

$v kore-sort-var-R kore-element-var-VE0 kore-element-var-VE2 kore-element-var-VE1 $.
kore-sort-var-R-elementvariable $f #ElementVariable kore-sort-var-R $.
kore-element-var-VE0-elementvariable $f #ElementVariable kore-element-var-VE0 $.
kore-element-var-VE2-elementvariable $f #ElementVariable kore-element-var-VE2 $.
kore-element-var-VE1-elementvariable $f #ElementVariable kore-element-var-VE1 $.
$d x y z w x0 x1 x2 x3 s0 s1 s2 s3 kore-sort-var-To kore-sort-var-From kore-sort-var-R kore-element-var-VE0 kore-element-var-VE2 kore-element-var-VE1 $.

$v kore-element-var-VE4 kore-element-var-VE3 $.
kore-element-var-VE4-elementvariable $f #ElementVariable kore-element-var-VE4 $.
kore-element-var-VE3-elementvariable $f #ElementVariable kore-element-var-VE3 $.
$d x y z w x0 x1 x2 x3 s0 s1 s2 s3 kore-sort-var-To kore-sort-var-From kore-sort-var-R kore-element-var-VE0 kore-element-var-VE2 kore-element-var-VE1 kore-element-var-VE4 kore-element-var-VE3 $.

$v kore-element-var-V0 kore-element-var-V1 kore-element-var-V2 $.
kore-element-var-V0-elementvariable $f #ElementVariable kore-element-var-V0 $.
kore-element-var-V1-elementvariable $f #ElementVariable kore-element-var-V1 $.
kore-element-var-V2-elementvariable $f #ElementVariable kore-element-var-V2 $.
$d x y z w x0 x1 x2 x3 s0 s1 s2 s3 kore-sort-var-To kore-sort-var-From kore-sort-var-R kore-element-var-VE0 kore-element-var-VE2 kore-element-var-VE1 kore-element-var-VE4 kore-element-var-VE3 kore-element-var-V0 kore-element-var-V1 kore-element-var-V2 $.

$v ptn5 ptn6 ptn7 ptn8 $.
ptn5-pattern $f #Pattern ptn5 $.
ptn6-pattern $f #Pattern ptn6 $.
ptn7-pattern $f #Pattern ptn7 $.
ptn8-pattern $f #Pattern ptn8 $.

$v kore-sort-var-SortSort $.
kore-sort-var-SortSort-elementvariable $f #ElementVariable kore-sort-var-SortSort $.
$d x y z w x0 x1 x2 x3 s0 s1 s2 s3 kore-sort-var-To kore-sort-var-From kore-sort-var-R kore-element-var-VE0 kore-element-var-VE2 kore-element-var-VE1 kore-element-var-VE4 kore-element-var-VE3 kore-element-var-V0 kore-element-var-V1 kore-element-var-V2 kore-sort-var-SortSort $.

$v kore-element-var-Val kore-element-var-From $.
kore-element-var-Val-elementvariable $f #ElementVariable kore-element-var-Val $.
kore-element-var-From-elementvariable $f #ElementVariable kore-element-var-From $.
$d x y z w x0 x1 x2 x3 s0 s1 s2 s3 kore-sort-var-To kore-sort-var-From kore-sort-var-R kore-element-var-VE0 kore-element-var-VE2 kore-element-var-VE1 kore-element-var-VE4 kore-element-var-VE3 kore-element-var-V0 kore-element-var-V1 kore-element-var-V2 kore-sort-var-SortSort kore-element-var-Val kore-element-var-From $.

$v kore-element-var-K0 $.
kore-element-var-K0-elementvariable $f #ElementVariable kore-element-var-K0 $.
$d x y z w x0 x1 x2 x3 s0 s1 s2 s3 kore-sort-var-To kore-sort-var-From kore-sort-var-R kore-element-var-VE0 kore-element-var-VE2 kore-element-var-VE1 kore-element-var-VE4 kore-element-var-VE3 kore-element-var-V0 kore-element-var-V1 kore-element-var-V2 kore-sort-var-SortSort kore-element-var-Val kore-element-var-From kore-element-var-K0 $.

$v kore-element-var-K1 $.
kore-element-var-K1-elementvariable $f #ElementVariable kore-element-var-K1 $.
$d x y z w x0 x1 x2 x3 s0 s1 s2 s3 kore-sort-var-To kore-sort-var-From kore-sort-var-R kore-element-var-VE0 kore-element-var-VE2 kore-element-var-VE1 kore-element-var-VE4 kore-element-var-VE3 kore-element-var-V0 kore-element-var-V1 kore-element-var-V2 kore-sort-var-SortSort kore-element-var-Val kore-element-var-From kore-element-var-K0 kore-element-var-K1 $.

$v kore-element-var-K2 $.
kore-element-var-K2-elementvariable $f #ElementVariable kore-element-var-K2 $.
$d x y z w x0 x1 x2 x3 s0 s1 s2 s3 kore-sort-var-To kore-sort-var-From kore-sort-var-R kore-element-var-VE0 kore-element-var-VE2 kore-element-var-VE1 kore-element-var-VE4 kore-element-var-VE3 kore-element-var-V0 kore-element-var-V1 kore-element-var-V2 kore-sort-var-SortSort kore-element-var-Val kore-element-var-From kore-element-var-K0 kore-element-var-K1 kore-element-var-K2 $.

$v kore-element-var-K3 $.
kore-element-var-K3-elementvariable $f #ElementVariable kore-element-var-K3 $.
$d x y z w x0 x1 x2 x3 s0 s1 s2 s3 kore-sort-var-To kore-sort-var-From kore-sort-var-R kore-element-var-VE0 kore-element-var-VE2 kore-element-var-VE1 kore-element-var-VE4 kore-element-var-VE3 kore-element-var-V0 kore-element-var-V1 kore-element-var-V2 kore-sort-var-SortSort kore-element-var-Val kore-element-var-From kore-element-var-K0 kore-element-var-K1 kore-element-var-K2 kore-element-var-K3 $.

$v kore-element-var-K $.
kore-element-var-K-elementvariable $f #ElementVariable kore-element-var-K $.
$d x y z w x0 x1 x2 x3 s0 s1 s2 s3 kore-sort-var-To kore-sort-var-From kore-sort-var-R kore-element-var-VE0 kore-element-var-VE2 kore-element-var-VE1 kore-element-var-VE4 kore-element-var-VE3 kore-element-var-V0 kore-element-var-V1 kore-element-var-V2 kore-sort-var-SortSort kore-element-var-Val kore-element-var-From kore-element-var-K0 kore-element-var-K1 kore-element-var-K2 kore-element-var-K3 kore-element-var-K $.

$v kore-sort-var-Q0 kore-element-var-VS1 kore-element-var-VS0 $.
kore-sort-var-Q0-elementvariable $f #ElementVariable kore-sort-var-Q0 $.
kore-element-var-VS1-setvariable $f #SetVariable kore-element-var-VS1 $.
kore-element-var-VS0-setvariable $f #SetVariable kore-element-var-VS0 $.
$d x y z w x0 x1 x2 x3 s0 s1 s2 s3 kore-sort-var-To kore-sort-var-From kore-sort-var-R kore-element-var-VE0 kore-element-var-VE2 kore-element-var-VE1 kore-element-var-VE4 kore-element-var-VE3 kore-element-var-V0 kore-element-var-V1 kore-element-var-V2 kore-sort-var-SortSort kore-element-var-Val kore-element-var-From kore-element-var-K0 kore-element-var-K1 kore-element-var-K2 kore-element-var-K3 kore-element-var-K kore-sort-var-Q0 $.

$v kore-sort-var-x0 kore-element-var-x1 $.
kore-sort-var-x0-elementvariable $f #ElementVariable kore-sort-var-x0 $.
kore-element-var-x1-elementvariable $f #ElementVariable kore-element-var-x1 $.
$d x y z w x0 x1 x2 x3 s0 s1 s2 s3 kore-sort-var-To kore-sort-var-From kore-sort-var-R kore-element-var-VE0 kore-element-var-VE2 kore-element-var-VE1 kore-element-var-VE4 kore-element-var-VE3 kore-element-var-V0 kore-element-var-V1 kore-element-var-V2 kore-sort-var-SortSort kore-element-var-Val kore-element-var-From kore-element-var-K0 kore-element-var-K1 kore-element-var-K2 kore-element-var-K3 kore-element-var-K kore-sort-var-Q0 kore-sort-var-x0 kore-element-var-x1 $.

$v kore-element-var-VE5 $.
kore-element-var-VE5-elementvariable $f #ElementVariable kore-element-var-VE5 $.
$d x y z w x0 x1 x2 x3 s0 s1 s2 s3 kore-sort-var-To kore-sort-var-From kore-sort-var-R kore-element-var-VE0 kore-element-var-VE2 kore-element-var-VE1 kore-element-var-VE4 kore-element-var-VE3 kore-element-var-V0 kore-element-var-V1 kore-element-var-V2 kore-sort-var-SortSort kore-element-var-Val kore-element-var-From kore-element-var-K0 kore-element-var-K1 kore-element-var-K2 kore-element-var-K3 kore-element-var-K kore-sort-var-Q0 kore-sort-var-x0 kore-element-var-x1 kore-element-var-VE5 $.

$v kore-element-var-VE6 $.
kore-element-var-VE6-elementvariable $f #ElementVariable kore-element-var-VE6 $.
$d x y z w x0 x1 x2 x3 s0 s1 s2 s3 kore-sort-var-To kore-sort-var-From kore-sort-var-R kore-element-var-VE0 kore-element-var-VE2 kore-element-var-VE1 kore-element-var-VE4 kore-element-var-VE3 kore-element-var-V0 kore-element-var-V1 kore-element-var-V2 kore-sort-var-SortSort kore-element-var-Val kore-element-var-From kore-element-var-K0 kore-element-var-K1 kore-element-var-K2 kore-element-var-K3 kore-element-var-K kore-sort-var-Q0 kore-sort-var-x0 kore-element-var-x1 kore-element-var-VE5 kore-element-var-VE6 $.

$v kore-element-var-VE7 $.
kore-element-var-VE7-elementvariable $f #ElementVariable kore-element-var-VE7 $.
$d x y z w x0 x1 x2 x3 s0 s1 s2 s3 kore-sort-var-To kore-sort-var-From kore-sort-var-R kore-element-var-VE0 kore-element-var-VE2 kore-element-var-VE1 kore-element-var-VE4 kore-element-var-VE3 kore-element-var-V0 kore-element-var-V1 kore-element-var-V2 kore-sort-var-SortSort kore-element-var-Val kore-element-var-From kore-element-var-K0 kore-element-var-K1 kore-element-var-K2 kore-element-var-K3 kore-element-var-K kore-sort-var-Q0 kore-sort-var-x0 kore-element-var-x1 kore-element-var-VE5 kore-element-var-VE6 kore-element-var-VE7 $.

$v kore-element-var-VS2 $.
kore-element-var-VS2-setvariable $f #SetVariable kore-element-var-VS2 $.

$v kore-sort-var-S3 kore-sort-var-S2 kore-sort-var-S1 kore-element-var-T $.
kore-sort-var-S3-elementvariable $f #ElementVariable kore-sort-var-S3 $.
kore-sort-var-S2-elementvariable $f #ElementVariable kore-sort-var-S2 $.
kore-sort-var-S1-elementvariable $f #ElementVariable kore-sort-var-S1 $.
kore-element-var-T-elementvariable $f #ElementVariable kore-element-var-T $.
$d x y z w x0 x1 x2 x3 s0 s1 s2 s3 kore-sort-var-To kore-sort-var-From kore-sort-var-R kore-element-var-VE0 kore-element-var-VE2 kore-element-var-VE1 kore-element-var-VE4 kore-element-var-VE3 kore-element-var-V0 kore-element-var-V1 kore-element-var-V2 kore-sort-var-SortSort kore-element-var-Val kore-element-var-From kore-element-var-K0 kore-element-var-K1 kore-element-var-K2 kore-element-var-K3 kore-element-var-K kore-sort-var-Q0 kore-sort-var-x0 kore-element-var-x1 kore-element-var-VE5 kore-element-var-VE6 kore-element-var-VE7 kore-sort-var-S3 kore-sort-var-S2 kore-sort-var-S1 kore-element-var-T $.

$v kore-element-var-x0 $.
kore-element-var-x0-elementvariable $f #ElementVariable kore-element-var-x0 $.
$d x y z w x0 x1 x2 x3 s0 s1 s2 s3 kore-sort-var-To kore-sort-var-From kore-sort-var-R kore-element-var-VE0 kore-element-var-VE2 kore-element-var-VE1 kore-element-var-VE4 kore-element-var-VE3 kore-element-var-V0 kore-element-var-V1 kore-element-var-V2 kore-sort-var-SortSort kore-element-var-Val kore-element-var-From kore-element-var-K0 kore-element-var-K1 kore-element-var-K2 kore-element-var-K3 kore-element-var-K kore-sort-var-Q0 kore-sort-var-x0 kore-element-var-x1 kore-element-var-VE5 kore-element-var-VE6 kore-element-var-VE7 kore-sort-var-S3 kore-sort-var-S2 kore-sort-var-S1 kore-element-var-T kore-element-var-x0 $.

$v kore-element-var-x2 $.
kore-element-var-x2-elementvariable $f #ElementVariable kore-element-var-x2 $.
$d x y z w x0 x1 x2 x3 s0 s1 s2 s3 kore-sort-var-To kore-sort-var-From kore-sort-var-R kore-element-var-VE0 kore-element-var-VE2 kore-element-var-VE1 kore-element-var-VE4 kore-element-var-VE3 kore-element-var-V0 kore-element-var-V1 kore-element-var-V2 kore-sort-var-SortSort kore-element-var-Val kore-element-var-From kore-element-var-K0 kore-element-var-K1 kore-element-var-K2 kore-element-var-K3 kore-element-var-K kore-sort-var-Q0 kore-sort-var-x0 kore-element-var-x1 kore-element-var-VE5 kore-element-var-VE6 kore-element-var-VE7 kore-sort-var-S3 kore-sort-var-S2 kore-sort-var-S1 kore-element-var-T kore-element-var-x0 kore-element-var-x2 $.

$v kore-sort-var-x1 $.
kore-sort-var-x1-elementvariable $f #ElementVariable kore-sort-var-x1 $.
$d x y z w x0 x1 x2 x3 s0 s1 s2 s3 kore-sort-var-To kore-sort-var-From kore-sort-var-R kore-element-var-VE0 kore-element-var-VE2 kore-element-var-VE1 kore-element-var-VE4 kore-element-var-VE3 kore-element-var-V0 kore-element-var-V1 kore-element-var-V2 kore-sort-var-SortSort kore-element-var-Val kore-element-var-From kore-element-var-K0 kore-element-var-K1 kore-element-var-K2 kore-element-var-K3 kore-element-var-K kore-sort-var-Q0 kore-sort-var-x0 kore-element-var-x1 kore-element-var-VE5 kore-element-var-VE6 kore-element-var-VE7 kore-sort-var-S3 kore-sort-var-S2 kore-sort-var-S1 kore-element-var-T kore-element-var-x0 kore-element-var-x2 kore-sort-var-x1 $.

$c \kore-sort-SortK \kore-sort-SortK-symbol $.
BASIC-K-sort-0-is-symbol $a #Symbol \kore-sort-SortK-symbol $.
BASIC-K-sort-0-is-pattern $a #Pattern \kore-sort-SortK $.
BASIC-K-sort-0-is-sugar $a #Notation \kore-sort-SortK \kore-sort-SortK-symbol $.
BASIC-K-sort-0-sort $a |- ( \kore-is-sort \kore-sort-SortK ) $.

$c \kore-sort-SortKItem \kore-sort-SortKItem-symbol $.
BASIC-K-sort-1-is-symbol $a #Symbol \kore-sort-SortKItem-symbol $.
BASIC-K-sort-1-is-pattern $a #Pattern \kore-sort-SortKItem $.
BASIC-K-sort-1-is-sugar $a #Notation \kore-sort-SortKItem \kore-sort-SortKItem-symbol $.
BASIC-K-sort-1-sort $a |- ( \kore-is-sort \kore-sort-SortKItem ) $.

$c \kore-sort-SortIds \kore-sort-SortIds-symbol $.
IMP-sort-0-is-symbol $a #Symbol \kore-sort-SortIds-symbol $.
IMP-sort-0-is-pattern $a #Pattern \kore-sort-SortIds $.
IMP-sort-0-is-sugar $a #Notation \kore-sort-SortIds \kore-sort-SortIds-symbol $.
IMP-sort-0-sort $a |- ( \kore-is-sort \kore-sort-SortIds ) $.

$c \kore-sort-SortTCellFragment \kore-sort-SortTCellFragment-symbol $.
IMP-sort-1-is-symbol $a #Symbol \kore-sort-SortTCellFragment-symbol $.
IMP-sort-1-is-pattern $a #Pattern \kore-sort-SortTCellFragment $.
IMP-sort-1-is-sugar $a #Notation \kore-sort-SortTCellFragment \kore-sort-SortTCellFragment-symbol $.
IMP-sort-1-sort $a |- ( \kore-is-sort \kore-sort-SortTCellFragment ) $.

$c \kore-sort-SortKCellOpt \kore-sort-SortKCellOpt-symbol $.
IMP-sort-2-is-symbol $a #Symbol \kore-sort-SortKCellOpt-symbol $.
IMP-sort-2-is-pattern $a #Pattern \kore-sort-SortKCellOpt $.
IMP-sort-2-is-sugar $a #Notation \kore-sort-SortKCellOpt \kore-sort-SortKCellOpt-symbol $.
IMP-sort-2-sort $a |- ( \kore-is-sort \kore-sort-SortKCellOpt ) $.

$c \kore-sort-SortIOInt \kore-sort-SortIOInt-symbol $.
IMP-sort-3-is-symbol $a #Symbol \kore-sort-SortIOInt-symbol $.
IMP-sort-3-is-pattern $a #Pattern \kore-sort-SortIOInt $.
IMP-sort-3-is-sugar $a #Notation \kore-sort-SortIOInt \kore-sort-SortIOInt-symbol $.
IMP-sort-3-sort $a |- ( \kore-is-sort \kore-sort-SortIOInt ) $.

$c \kore-sort-SortGeneratedTopCellFragment \kore-sort-SortGeneratedTopCellFragment-symbol $.
IMP-sort-4-is-symbol $a #Symbol \kore-sort-SortGeneratedTopCellFragment-symbol $.
IMP-sort-4-is-pattern $a #Pattern \kore-sort-SortGeneratedTopCellFragment $.
IMP-sort-4-is-sugar $a #Notation \kore-sort-SortGeneratedTopCellFragment \kore-sort-SortGeneratedTopCellFragment-symbol $.
IMP-sort-4-sort $a |- ( \kore-is-sort \kore-sort-SortGeneratedTopCellFragment ) $.

$c \kore-sort-SortIOFile \kore-sort-SortIOFile-symbol $.
IMP-sort-5-is-symbol $a #Symbol \kore-sort-SortIOFile-symbol $.
IMP-sort-5-is-pattern $a #Pattern \kore-sort-SortIOFile $.
IMP-sort-5-is-sugar $a #Notation \kore-sort-SortIOFile \kore-sort-SortIOFile-symbol $.
IMP-sort-5-sort $a |- ( \kore-is-sort \kore-sort-SortIOFile ) $.

$c \kore-sort-SortList \kore-sort-SortList-symbol $.
IMP-sort-6-is-symbol $a #Symbol \kore-sort-SortList-symbol $.
IMP-sort-6-is-pattern $a #Pattern \kore-sort-SortList $.
IMP-sort-6-is-sugar $a #Notation \kore-sort-SortList \kore-sort-SortList-symbol $.
IMP-sort-6-sort $a |- ( \kore-is-sort \kore-sort-SortList ) $.

$c \kore-sort-SortKCell \kore-sort-SortKCell-symbol $.
IMP-sort-7-is-symbol $a #Symbol \kore-sort-SortKCell-symbol $.
IMP-sort-7-is-pattern $a #Pattern \kore-sort-SortKCell $.
IMP-sort-7-is-sugar $a #Notation \kore-sort-SortKCell \kore-sort-SortKCell-symbol $.
IMP-sort-7-sort $a |- ( \kore-is-sort \kore-sort-SortKCell ) $.

$c \kore-sort-SortGeneratedTopCell \kore-sort-SortGeneratedTopCell-symbol $.
IMP-sort-8-is-symbol $a #Symbol \kore-sort-SortGeneratedTopCell-symbol $.
IMP-sort-8-is-pattern $a #Pattern \kore-sort-SortGeneratedTopCell $.
IMP-sort-8-is-sugar $a #Notation \kore-sort-SortGeneratedTopCell \kore-sort-SortGeneratedTopCell-symbol $.
IMP-sort-8-sort $a |- ( \kore-is-sort \kore-sort-SortGeneratedTopCell ) $.

$c \kore-sort-SortStateCell \kore-sort-SortStateCell-symbol $.
IMP-sort-9-is-symbol $a #Symbol \kore-sort-SortStateCell-symbol $.
IMP-sort-9-is-pattern $a #Pattern \kore-sort-SortStateCell $.
IMP-sort-9-is-sugar $a #Notation \kore-sort-SortStateCell \kore-sort-SortStateCell-symbol $.
IMP-sort-9-sort $a |- ( \kore-is-sort \kore-sort-SortStateCell ) $.

$c \kore-sort-SortGeneratedCounterCell \kore-sort-SortGeneratedCounterCell-symbol $.
IMP-sort-10-is-symbol $a #Symbol \kore-sort-SortGeneratedCounterCell-symbol $.
IMP-sort-10-is-pattern $a #Pattern \kore-sort-SortGeneratedCounterCell $.
IMP-sort-10-is-sugar $a #Notation \kore-sort-SortGeneratedCounterCell \kore-sort-SortGeneratedCounterCell-symbol $.
IMP-sort-10-sort $a |- ( \kore-is-sort \kore-sort-SortGeneratedCounterCell ) $.

$c \kore-sort-SortFloat \kore-sort-SortFloat-symbol $.
IMP-sort-11-is-symbol $a #Symbol \kore-sort-SortFloat-symbol $.
IMP-sort-11-is-pattern $a #Pattern \kore-sort-SortFloat $.
IMP-sort-11-is-sugar $a #Notation \kore-sort-SortFloat \kore-sort-SortFloat-symbol $.
IMP-sort-11-sort $a |- ( \kore-is-sort \kore-sort-SortFloat ) $.
IMP-sort-11-hooked-sort-disjoint-with-SortList $a |- ( \not ( \and ( \inh \kore-sort-SortFloat ) ( \inh \kore-sort-SortList ) ) ) $.

$c \kore-sort-SortTCellOpt \kore-sort-SortTCellOpt-symbol $.
IMP-sort-12-is-symbol $a #Symbol \kore-sort-SortTCellOpt-symbol $.
IMP-sort-12-is-pattern $a #Pattern \kore-sort-SortTCellOpt $.
IMP-sort-12-is-sugar $a #Notation \kore-sort-SortTCellOpt \kore-sort-SortTCellOpt-symbol $.
IMP-sort-12-sort $a |- ( \kore-is-sort \kore-sort-SortTCellOpt ) $.

$c \kore-sort-SortAExp \kore-sort-SortAExp-symbol $.
IMP-sort-13-is-symbol $a #Symbol \kore-sort-SortAExp-symbol $.
IMP-sort-13-is-pattern $a #Pattern \kore-sort-SortAExp $.
IMP-sort-13-is-sugar $a #Notation \kore-sort-SortAExp \kore-sort-SortAExp-symbol $.
IMP-sort-13-sort $a |- ( \kore-is-sort \kore-sort-SortAExp ) $.

$c \kore-sort-SortMap \kore-sort-SortMap-symbol $.
IMP-sort-14-is-symbol $a #Symbol \kore-sort-SortMap-symbol $.
IMP-sort-14-is-pattern $a #Pattern \kore-sort-SortMap $.
IMP-sort-14-is-sugar $a #Notation \kore-sort-SortMap \kore-sort-SortMap-symbol $.
IMP-sort-14-sort $a |- ( \kore-is-sort \kore-sort-SortMap ) $.
IMP-sort-14-hooked-sort-disjoint-with-SortList $a |- ( \not ( \and ( \inh \kore-sort-SortMap ) ( \inh \kore-sort-SortList ) ) ) $.
IMP-sort-14-hooked-sort-disjoint-with-SortFloat $a |- ( \not ( \and ( \inh \kore-sort-SortMap ) ( \inh \kore-sort-SortFloat ) ) ) $.

$c \kore-sort-SortString \kore-sort-SortString-symbol $.
IMP-sort-15-is-symbol $a #Symbol \kore-sort-SortString-symbol $.
IMP-sort-15-is-pattern $a #Pattern \kore-sort-SortString $.
IMP-sort-15-is-sugar $a #Notation \kore-sort-SortString \kore-sort-SortString-symbol $.
IMP-sort-15-sort $a |- ( \kore-is-sort \kore-sort-SortString ) $.
IMP-sort-15-hooked-sort-disjoint-with-SortList $a |- ( \not ( \and ( \inh \kore-sort-SortString ) ( \inh \kore-sort-SortList ) ) ) $.
IMP-sort-15-hooked-sort-disjoint-with-SortFloat $a |- ( \not ( \and ( \inh \kore-sort-SortString ) ( \inh \kore-sort-SortFloat ) ) ) $.
IMP-sort-15-hooked-sort-disjoint-with-SortMap $a |- ( \not ( \and ( \inh \kore-sort-SortString ) ( \inh \kore-sort-SortMap ) ) ) $.

$c \kore-sort-SortIOString \kore-sort-SortIOString-symbol $.
IMP-sort-16-is-symbol $a #Symbol \kore-sort-SortIOString-symbol $.
IMP-sort-16-is-pattern $a #Pattern \kore-sort-SortIOString $.
IMP-sort-16-is-sugar $a #Notation \kore-sort-SortIOString \kore-sort-SortIOString-symbol $.
IMP-sort-16-sort $a |- ( \kore-is-sort \kore-sort-SortIOString ) $.

$c \kore-sort-SortId \kore-sort-SortId-symbol $.
IMP-sort-17-is-symbol $a #Symbol \kore-sort-SortId-symbol $.
IMP-sort-17-is-pattern $a #Pattern \kore-sort-SortId $.
IMP-sort-17-is-sugar $a #Notation \kore-sort-SortId \kore-sort-SortId-symbol $.
IMP-sort-17-sort $a |- ( \kore-is-sort \kore-sort-SortId ) $.
IMP-sort-17-hooked-sort-disjoint-with-SortList $a |- ( \not ( \and ( \inh \kore-sort-SortId ) ( \inh \kore-sort-SortList ) ) ) $.
IMP-sort-17-hooked-sort-disjoint-with-SortFloat $a |- ( \not ( \and ( \inh \kore-sort-SortId ) ( \inh \kore-sort-SortFloat ) ) ) $.
IMP-sort-17-hooked-sort-disjoint-with-SortMap $a |- ( \not ( \and ( \inh \kore-sort-SortId ) ( \inh \kore-sort-SortMap ) ) ) $.
IMP-sort-17-hooked-sort-disjoint-with-SortString $a |- ( \not ( \and ( \inh \kore-sort-SortId ) ( \inh \kore-sort-SortString ) ) ) $.

$c \kore-sort-SortBlock \kore-sort-SortBlock-symbol $.
IMP-sort-18-is-symbol $a #Symbol \kore-sort-SortBlock-symbol $.
IMP-sort-18-is-pattern $a #Pattern \kore-sort-SortBlock $.
IMP-sort-18-is-sugar $a #Notation \kore-sort-SortBlock \kore-sort-SortBlock-symbol $.
IMP-sort-18-sort $a |- ( \kore-is-sort \kore-sort-SortBlock ) $.

$c \kore-sort-SortGeneratedCounterCellOpt \kore-sort-SortGeneratedCounterCellOpt-symbol $.
IMP-sort-19-is-symbol $a #Symbol \kore-sort-SortGeneratedCounterCellOpt-symbol $.
IMP-sort-19-is-pattern $a #Pattern \kore-sort-SortGeneratedCounterCellOpt $.
IMP-sort-19-is-sugar $a #Notation \kore-sort-SortGeneratedCounterCellOpt \kore-sort-SortGeneratedCounterCellOpt-symbol $.
IMP-sort-19-sort $a |- ( \kore-is-sort \kore-sort-SortGeneratedCounterCellOpt ) $.

$c \kore-sort-SortKConfigVar \kore-sort-SortKConfigVar-symbol $.
IMP-sort-20-is-symbol $a #Symbol \kore-sort-SortKConfigVar-symbol $.
IMP-sort-20-is-pattern $a #Pattern \kore-sort-SortKConfigVar $.
IMP-sort-20-is-sugar $a #Notation \kore-sort-SortKConfigVar \kore-sort-SortKConfigVar-symbol $.
IMP-sort-20-sort $a |- ( \kore-is-sort \kore-sort-SortKConfigVar ) $.
IMP-sort-20-hooked-sort-disjoint-with-SortList $a |- ( \not ( \and ( \inh \kore-sort-SortKConfigVar ) ( \inh \kore-sort-SortList ) ) ) $.
IMP-sort-20-hooked-sort-disjoint-with-SortFloat $a |- ( \not ( \and ( \inh \kore-sort-SortKConfigVar ) ( \inh \kore-sort-SortFloat ) ) ) $.
IMP-sort-20-hooked-sort-disjoint-with-SortMap $a |- ( \not ( \and ( \inh \kore-sort-SortKConfigVar ) ( \inh \kore-sort-SortMap ) ) ) $.
IMP-sort-20-hooked-sort-disjoint-with-SortString $a |- ( \not ( \and ( \inh \kore-sort-SortKConfigVar ) ( \inh \kore-sort-SortString ) ) ) $.
IMP-sort-20-hooked-sort-disjoint-with-SortId $a |- ( \not ( \and ( \inh \kore-sort-SortKConfigVar ) ( \inh \kore-sort-SortId ) ) ) $.

$c \kore-sort-SortBExp \kore-sort-SortBExp-symbol $.
IMP-sort-21-is-symbol $a #Symbol \kore-sort-SortBExp-symbol $.
IMP-sort-21-is-pattern $a #Pattern \kore-sort-SortBExp $.
IMP-sort-21-is-sugar $a #Notation \kore-sort-SortBExp \kore-sort-SortBExp-symbol $.
IMP-sort-21-sort $a |- ( \kore-is-sort \kore-sort-SortBExp ) $.

$c \kore-sort-SortInt \kore-sort-SortInt-symbol $.
IMP-sort-22-is-symbol $a #Symbol \kore-sort-SortInt-symbol $.
IMP-sort-22-is-pattern $a #Pattern \kore-sort-SortInt $.
IMP-sort-22-is-sugar $a #Notation \kore-sort-SortInt \kore-sort-SortInt-symbol $.
IMP-sort-22-sort $a |- ( \kore-is-sort \kore-sort-SortInt ) $.
IMP-sort-22-hooked-sort-disjoint-with-SortList $a |- ( \not ( \and ( \inh \kore-sort-SortInt ) ( \inh \kore-sort-SortList ) ) ) $.
IMP-sort-22-hooked-sort-disjoint-with-SortFloat $a |- ( \not ( \and ( \inh \kore-sort-SortInt ) ( \inh \kore-sort-SortFloat ) ) ) $.
IMP-sort-22-hooked-sort-disjoint-with-SortMap $a |- ( \not ( \and ( \inh \kore-sort-SortInt ) ( \inh \kore-sort-SortMap ) ) ) $.
IMP-sort-22-hooked-sort-disjoint-with-SortString $a |- ( \not ( \and ( \inh \kore-sort-SortInt ) ( \inh \kore-sort-SortString ) ) ) $.
IMP-sort-22-hooked-sort-disjoint-with-SortId $a |- ( \not ( \and ( \inh \kore-sort-SortInt ) ( \inh \kore-sort-SortId ) ) ) $.
IMP-sort-22-hooked-sort-disjoint-with-SortKConfigVar $a |- ( \not ( \and ( \inh \kore-sort-SortInt ) ( \inh \kore-sort-SortKConfigVar ) ) ) $.

$c \kore-sort-SortStateCellOpt \kore-sort-SortStateCellOpt-symbol $.
IMP-sort-23-is-symbol $a #Symbol \kore-sort-SortStateCellOpt-symbol $.
IMP-sort-23-is-pattern $a #Pattern \kore-sort-SortStateCellOpt $.
IMP-sort-23-is-sugar $a #Notation \kore-sort-SortStateCellOpt \kore-sort-SortStateCellOpt-symbol $.
IMP-sort-23-sort $a |- ( \kore-is-sort \kore-sort-SortStateCellOpt ) $.

$c \kore-sort-SortIOError \kore-sort-SortIOError-symbol $.
IMP-sort-24-is-symbol $a #Symbol \kore-sort-SortIOError-symbol $.
IMP-sort-24-is-pattern $a #Pattern \kore-sort-SortIOError $.
IMP-sort-24-is-sugar $a #Notation \kore-sort-SortIOError \kore-sort-SortIOError-symbol $.
IMP-sort-24-sort $a |- ( \kore-is-sort \kore-sort-SortIOError ) $.

$c \kore-sort-SortSet \kore-sort-SortSet-symbol $.
IMP-sort-25-is-symbol $a #Symbol \kore-sort-SortSet-symbol $.
IMP-sort-25-is-pattern $a #Pattern \kore-sort-SortSet $.
IMP-sort-25-is-sugar $a #Notation \kore-sort-SortSet \kore-sort-SortSet-symbol $.
IMP-sort-25-sort $a |- ( \kore-is-sort \kore-sort-SortSet ) $.
IMP-sort-25-hooked-sort-disjoint-with-SortList $a |- ( \not ( \and ( \inh \kore-sort-SortSet ) ( \inh \kore-sort-SortList ) ) ) $.
IMP-sort-25-hooked-sort-disjoint-with-SortFloat $a |- ( \not ( \and ( \inh \kore-sort-SortSet ) ( \inh \kore-sort-SortFloat ) ) ) $.
IMP-sort-25-hooked-sort-disjoint-with-SortMap $a |- ( \not ( \and ( \inh \kore-sort-SortSet ) ( \inh \kore-sort-SortMap ) ) ) $.
IMP-sort-25-hooked-sort-disjoint-with-SortString $a |- ( \not ( \and ( \inh \kore-sort-SortSet ) ( \inh \kore-sort-SortString ) ) ) $.
IMP-sort-25-hooked-sort-disjoint-with-SortId $a |- ( \not ( \and ( \inh \kore-sort-SortSet ) ( \inh \kore-sort-SortId ) ) ) $.
IMP-sort-25-hooked-sort-disjoint-with-SortKConfigVar $a |- ( \not ( \and ( \inh \kore-sort-SortSet ) ( \inh \kore-sort-SortKConfigVar ) ) ) $.
IMP-sort-25-hooked-sort-disjoint-with-SortInt $a |- ( \not ( \and ( \inh \kore-sort-SortSet ) ( \inh \kore-sort-SortInt ) ) ) $.

$c \kore-sort-SortPgm \kore-sort-SortPgm-symbol $.
IMP-sort-26-is-symbol $a #Symbol \kore-sort-SortPgm-symbol $.
IMP-sort-26-is-pattern $a #Pattern \kore-sort-SortPgm $.
IMP-sort-26-is-sugar $a #Notation \kore-sort-SortPgm \kore-sort-SortPgm-symbol $.
IMP-sort-26-sort $a |- ( \kore-is-sort \kore-sort-SortPgm ) $.

$c \kore-sort-SortKResult \kore-sort-SortKResult-symbol $.
IMP-sort-27-is-symbol $a #Symbol \kore-sort-SortKResult-symbol $.
IMP-sort-27-is-pattern $a #Pattern \kore-sort-SortKResult $.
IMP-sort-27-is-sugar $a #Notation \kore-sort-SortKResult \kore-sort-SortKResult-symbol $.
IMP-sort-27-sort $a |- ( \kore-is-sort \kore-sort-SortKResult ) $.

$c \kore-sort-SortStream \kore-sort-SortStream-symbol $.
IMP-sort-28-is-symbol $a #Symbol \kore-sort-SortStream-symbol $.
IMP-sort-28-is-pattern $a #Pattern \kore-sort-SortStream $.
IMP-sort-28-is-sugar $a #Notation \kore-sort-SortStream \kore-sort-SortStream-symbol $.
IMP-sort-28-sort $a |- ( \kore-is-sort \kore-sort-SortStream ) $.

$c \kore-sort-SortTCell \kore-sort-SortTCell-symbol $.
IMP-sort-29-is-symbol $a #Symbol \kore-sort-SortTCell-symbol $.
IMP-sort-29-is-pattern $a #Pattern \kore-sort-SortTCell $.
IMP-sort-29-is-sugar $a #Notation \kore-sort-SortTCell \kore-sort-SortTCell-symbol $.
IMP-sort-29-sort $a |- ( \kore-is-sort \kore-sort-SortTCell ) $.

$c \kore-sort-SortStmt \kore-sort-SortStmt-symbol $.
IMP-sort-30-is-symbol $a #Symbol \kore-sort-SortStmt-symbol $.
IMP-sort-30-is-pattern $a #Pattern \kore-sort-SortStmt $.
IMP-sort-30-is-sugar $a #Notation \kore-sort-SortStmt \kore-sort-SortStmt-symbol $.
IMP-sort-30-sort $a |- ( \kore-is-sort \kore-sort-SortStmt ) $.

$c \kore-sort-SortBool \kore-sort-SortBool-symbol $.
IMP-sort-31-is-symbol $a #Symbol \kore-sort-SortBool-symbol $.
IMP-sort-31-is-pattern $a #Pattern \kore-sort-SortBool $.
IMP-sort-31-is-sugar $a #Notation \kore-sort-SortBool \kore-sort-SortBool-symbol $.
IMP-sort-31-sort $a |- ( \kore-is-sort \kore-sort-SortBool ) $.
IMP-sort-31-hooked-sort-disjoint-with-SortList $a |- ( \not ( \and ( \inh \kore-sort-SortBool ) ( \inh \kore-sort-SortList ) ) ) $.
IMP-sort-31-hooked-sort-disjoint-with-SortFloat $a |- ( \not ( \and ( \inh \kore-sort-SortBool ) ( \inh \kore-sort-SortFloat ) ) ) $.
IMP-sort-31-hooked-sort-disjoint-with-SortMap $a |- ( \not ( \and ( \inh \kore-sort-SortBool ) ( \inh \kore-sort-SortMap ) ) ) $.
IMP-sort-31-hooked-sort-disjoint-with-SortString $a |- ( \not ( \and ( \inh \kore-sort-SortBool ) ( \inh \kore-sort-SortString ) ) ) $.
IMP-sort-31-hooked-sort-disjoint-with-SortId $a |- ( \not ( \and ( \inh \kore-sort-SortBool ) ( \inh \kore-sort-SortId ) ) ) $.
IMP-sort-31-hooked-sort-disjoint-with-SortKConfigVar $a |- ( \not ( \and ( \inh \kore-sort-SortBool ) ( \inh \kore-sort-SortKConfigVar ) ) ) $.
IMP-sort-31-hooked-sort-disjoint-with-SortInt $a |- ( \not ( \and ( \inh \kore-sort-SortBool ) ( \inh \kore-sort-SortInt ) ) ) $.
IMP-sort-31-hooked-sort-disjoint-with-SortSet $a |- ( \not ( \and ( \inh \kore-sort-SortBool ) ( \inh \kore-sort-SortSet ) ) ) $.

INJ-symbol-0-sorting $a |- ( \imp ( \and ( \and ( \kore-is-sort ptn0 ) ( \kore-is-sort ptn1 ) ) ( \in-sort ptn2 ptn0 ) ) ( \in-sort ( \kore-inj ptn0 ptn1 ptn2 ) ptn1 ) ) $.

$c \kore-symbol-kseq \kore-symbol-kseq-symbol $.
KSEQ-symbol-0-is-symbol $a #Symbol \kore-symbol-kseq-symbol $.
KSEQ-symbol-0-is-pattern $a #Pattern ( \kore-symbol-kseq ptn0 ptn1 ) $.
KSEQ-symbol-0-is-sugar $a #Notation ( \kore-symbol-kseq ptn0 ptn1 ) ( \app ( \app \kore-symbol-kseq-symbol ptn0 ) ptn1 ) $.
KSEQ-symbol-0-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortKItem ) ( \in-sort ptn1 \kore-sort-SortK ) ) ( \in-sort ( \kore-symbol-kseq ptn0 ptn1 ) \kore-sort-SortK ) ) $.

$c \kore-symbol-dotk \kore-symbol-dotk-symbol $.
KSEQ-symbol-1-is-symbol $a #Symbol \kore-symbol-dotk-symbol $.
KSEQ-symbol-1-is-pattern $a #Pattern \kore-symbol-dotk $.
KSEQ-symbol-1-is-sugar $a #Notation \kore-symbol-dotk \kore-symbol-dotk-symbol $.
KSEQ-symbol-1-sorting $a |- ( \in-sort \kore-symbol-dotk \kore-sort-SortK ) $.

$c \kore-symbol-append \kore-symbol-append-symbol $.
KSEQ-symbol-2-is-symbol $a #Symbol \kore-symbol-append-symbol $.
KSEQ-symbol-2-is-pattern $a #Pattern ( \kore-symbol-append ptn0 ptn1 ) $.
KSEQ-symbol-2-is-sugar $a #Notation ( \kore-symbol-append ptn0 ptn1 ) ( \app ( \app \kore-symbol-append-symbol ptn0 ) ptn1 ) $.
KSEQ-symbol-2-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ptn1 \kore-sort-SortK ) ) ( \in-sort ( \kore-symbol-append ptn0 ptn1 ) \kore-sort-SortK ) ) $.

$c \kore-symbol-Lbl'BangUndsUnds'IMP-SYNTAX'Unds'BExp'Unds'BExp \kore-symbol-Lbl'BangUndsUnds'IMP-SYNTAX'Unds'BExp'Unds'BExp-symbol $.
IMP-symbol-0-is-symbol $a #Symbol \kore-symbol-Lbl'BangUndsUnds'IMP-SYNTAX'Unds'BExp'Unds'BExp-symbol $.
IMP-symbol-0-is-pattern $a #Pattern ( \kore-symbol-Lbl'BangUndsUnds'IMP-SYNTAX'Unds'BExp'Unds'BExp ptn0 ) $.
IMP-symbol-0-is-sugar $a #Notation ( \kore-symbol-Lbl'BangUndsUnds'IMP-SYNTAX'Unds'BExp'Unds'BExp ptn0 ) ( \app \kore-symbol-Lbl'BangUndsUnds'IMP-SYNTAX'Unds'BExp'Unds'BExp-symbol ptn0 ) $.
IMP-symbol-0-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortBExp ) ( \in-sort ( \kore-symbol-Lbl'BangUndsUnds'IMP-SYNTAX'Unds'BExp'Unds'BExp ptn0 ) \kore-sort-SortBExp ) ) $.

$c \kore-symbol-Lbl'Hash'E2BIG \kore-symbol-Lbl'Hash'E2BIG-symbol $.
IMP-symbol-1-is-symbol $a #Symbol \kore-symbol-Lbl'Hash'E2BIG-symbol $.
IMP-symbol-1-is-pattern $a #Pattern \kore-symbol-Lbl'Hash'E2BIG $.
IMP-symbol-1-is-sugar $a #Notation \kore-symbol-Lbl'Hash'E2BIG \kore-symbol-Lbl'Hash'E2BIG-symbol $.
IMP-symbol-1-sorting $a |- ( \in-sort \kore-symbol-Lbl'Hash'E2BIG \kore-sort-SortIOError ) $.

$c \kore-symbol-Lbl'Hash'EACCES \kore-symbol-Lbl'Hash'EACCES-symbol $.
IMP-symbol-2-is-symbol $a #Symbol \kore-symbol-Lbl'Hash'EACCES-symbol $.
IMP-symbol-2-is-pattern $a #Pattern \kore-symbol-Lbl'Hash'EACCES $.
IMP-symbol-2-is-sugar $a #Notation \kore-symbol-Lbl'Hash'EACCES \kore-symbol-Lbl'Hash'EACCES-symbol $.
IMP-symbol-2-sorting $a |- ( \in-sort \kore-symbol-Lbl'Hash'EACCES \kore-sort-SortIOError ) $.

$c \kore-symbol-Lbl'Hash'EADDRINUSE \kore-symbol-Lbl'Hash'EADDRINUSE-symbol $.
IMP-symbol-3-is-symbol $a #Symbol \kore-symbol-Lbl'Hash'EADDRINUSE-symbol $.
IMP-symbol-3-is-pattern $a #Pattern \kore-symbol-Lbl'Hash'EADDRINUSE $.
IMP-symbol-3-is-sugar $a #Notation \kore-symbol-Lbl'Hash'EADDRINUSE \kore-symbol-Lbl'Hash'EADDRINUSE-symbol $.
IMP-symbol-3-sorting $a |- ( \in-sort \kore-symbol-Lbl'Hash'EADDRINUSE \kore-sort-SortIOError ) $.

$c \kore-symbol-Lbl'Hash'EADDRNOTAVAIL \kore-symbol-Lbl'Hash'EADDRNOTAVAIL-symbol $.
IMP-symbol-4-is-symbol $a #Symbol \kore-symbol-Lbl'Hash'EADDRNOTAVAIL-symbol $.
IMP-symbol-4-is-pattern $a #Pattern \kore-symbol-Lbl'Hash'EADDRNOTAVAIL $.
IMP-symbol-4-is-sugar $a #Notation \kore-symbol-Lbl'Hash'EADDRNOTAVAIL \kore-symbol-Lbl'Hash'EADDRNOTAVAIL-symbol $.
IMP-symbol-4-sorting $a |- ( \in-sort \kore-symbol-Lbl'Hash'EADDRNOTAVAIL \kore-sort-SortIOError ) $.

$c \kore-symbol-Lbl'Hash'EAFNOSUPPORT \kore-symbol-Lbl'Hash'EAFNOSUPPORT-symbol $.
IMP-symbol-5-is-symbol $a #Symbol \kore-symbol-Lbl'Hash'EAFNOSUPPORT-symbol $.
IMP-symbol-5-is-pattern $a #Pattern \kore-symbol-Lbl'Hash'EAFNOSUPPORT $.
IMP-symbol-5-is-sugar $a #Notation \kore-symbol-Lbl'Hash'EAFNOSUPPORT \kore-symbol-Lbl'Hash'EAFNOSUPPORT-symbol $.
IMP-symbol-5-sorting $a |- ( \in-sort \kore-symbol-Lbl'Hash'EAFNOSUPPORT \kore-sort-SortIOError ) $.

$c \kore-symbol-Lbl'Hash'EAGAIN \kore-symbol-Lbl'Hash'EAGAIN-symbol $.
IMP-symbol-6-is-symbol $a #Symbol \kore-symbol-Lbl'Hash'EAGAIN-symbol $.
IMP-symbol-6-is-pattern $a #Pattern \kore-symbol-Lbl'Hash'EAGAIN $.
IMP-symbol-6-is-sugar $a #Notation \kore-symbol-Lbl'Hash'EAGAIN \kore-symbol-Lbl'Hash'EAGAIN-symbol $.
IMP-symbol-6-sorting $a |- ( \in-sort \kore-symbol-Lbl'Hash'EAGAIN \kore-sort-SortIOError ) $.

$c \kore-symbol-Lbl'Hash'EALREADY \kore-symbol-Lbl'Hash'EALREADY-symbol $.
IMP-symbol-7-is-symbol $a #Symbol \kore-symbol-Lbl'Hash'EALREADY-symbol $.
IMP-symbol-7-is-pattern $a #Pattern \kore-symbol-Lbl'Hash'EALREADY $.
IMP-symbol-7-is-sugar $a #Notation \kore-symbol-Lbl'Hash'EALREADY \kore-symbol-Lbl'Hash'EALREADY-symbol $.
IMP-symbol-7-sorting $a |- ( \in-sort \kore-symbol-Lbl'Hash'EALREADY \kore-sort-SortIOError ) $.

$c \kore-symbol-Lbl'Hash'EBADF \kore-symbol-Lbl'Hash'EBADF-symbol $.
IMP-symbol-8-is-symbol $a #Symbol \kore-symbol-Lbl'Hash'EBADF-symbol $.
IMP-symbol-8-is-pattern $a #Pattern \kore-symbol-Lbl'Hash'EBADF $.
IMP-symbol-8-is-sugar $a #Notation \kore-symbol-Lbl'Hash'EBADF \kore-symbol-Lbl'Hash'EBADF-symbol $.
IMP-symbol-8-sorting $a |- ( \in-sort \kore-symbol-Lbl'Hash'EBADF \kore-sort-SortIOError ) $.

$c \kore-symbol-Lbl'Hash'EBUSY \kore-symbol-Lbl'Hash'EBUSY-symbol $.
IMP-symbol-9-is-symbol $a #Symbol \kore-symbol-Lbl'Hash'EBUSY-symbol $.
IMP-symbol-9-is-pattern $a #Pattern \kore-symbol-Lbl'Hash'EBUSY $.
IMP-symbol-9-is-sugar $a #Notation \kore-symbol-Lbl'Hash'EBUSY \kore-symbol-Lbl'Hash'EBUSY-symbol $.
IMP-symbol-9-sorting $a |- ( \in-sort \kore-symbol-Lbl'Hash'EBUSY \kore-sort-SortIOError ) $.

$c \kore-symbol-Lbl'Hash'ECHILD \kore-symbol-Lbl'Hash'ECHILD-symbol $.
IMP-symbol-10-is-symbol $a #Symbol \kore-symbol-Lbl'Hash'ECHILD-symbol $.
IMP-symbol-10-is-pattern $a #Pattern \kore-symbol-Lbl'Hash'ECHILD $.
IMP-symbol-10-is-sugar $a #Notation \kore-symbol-Lbl'Hash'ECHILD \kore-symbol-Lbl'Hash'ECHILD-symbol $.
IMP-symbol-10-sorting $a |- ( \in-sort \kore-symbol-Lbl'Hash'ECHILD \kore-sort-SortIOError ) $.

$c \kore-symbol-Lbl'Hash'ECONNABORTED \kore-symbol-Lbl'Hash'ECONNABORTED-symbol $.
IMP-symbol-11-is-symbol $a #Symbol \kore-symbol-Lbl'Hash'ECONNABORTED-symbol $.
IMP-symbol-11-is-pattern $a #Pattern \kore-symbol-Lbl'Hash'ECONNABORTED $.
IMP-symbol-11-is-sugar $a #Notation \kore-symbol-Lbl'Hash'ECONNABORTED \kore-symbol-Lbl'Hash'ECONNABORTED-symbol $.
IMP-symbol-11-sorting $a |- ( \in-sort \kore-symbol-Lbl'Hash'ECONNABORTED \kore-sort-SortIOError ) $.

$c \kore-symbol-Lbl'Hash'ECONNREFUSED \kore-symbol-Lbl'Hash'ECONNREFUSED-symbol $.
IMP-symbol-12-is-symbol $a #Symbol \kore-symbol-Lbl'Hash'ECONNREFUSED-symbol $.
IMP-symbol-12-is-pattern $a #Pattern \kore-symbol-Lbl'Hash'ECONNREFUSED $.
IMP-symbol-12-is-sugar $a #Notation \kore-symbol-Lbl'Hash'ECONNREFUSED \kore-symbol-Lbl'Hash'ECONNREFUSED-symbol $.
IMP-symbol-12-sorting $a |- ( \in-sort \kore-symbol-Lbl'Hash'ECONNREFUSED \kore-sort-SortIOError ) $.

$c \kore-symbol-Lbl'Hash'ECONNRESET \kore-symbol-Lbl'Hash'ECONNRESET-symbol $.
IMP-symbol-13-is-symbol $a #Symbol \kore-symbol-Lbl'Hash'ECONNRESET-symbol $.
IMP-symbol-13-is-pattern $a #Pattern \kore-symbol-Lbl'Hash'ECONNRESET $.
IMP-symbol-13-is-sugar $a #Notation \kore-symbol-Lbl'Hash'ECONNRESET \kore-symbol-Lbl'Hash'ECONNRESET-symbol $.
IMP-symbol-13-sorting $a |- ( \in-sort \kore-symbol-Lbl'Hash'ECONNRESET \kore-sort-SortIOError ) $.

$c \kore-symbol-Lbl'Hash'EDEADLK \kore-symbol-Lbl'Hash'EDEADLK-symbol $.
IMP-symbol-14-is-symbol $a #Symbol \kore-symbol-Lbl'Hash'EDEADLK-symbol $.
IMP-symbol-14-is-pattern $a #Pattern \kore-symbol-Lbl'Hash'EDEADLK $.
IMP-symbol-14-is-sugar $a #Notation \kore-symbol-Lbl'Hash'EDEADLK \kore-symbol-Lbl'Hash'EDEADLK-symbol $.
IMP-symbol-14-sorting $a |- ( \in-sort \kore-symbol-Lbl'Hash'EDEADLK \kore-sort-SortIOError ) $.

$c \kore-symbol-Lbl'Hash'EDESTADDRREQ \kore-symbol-Lbl'Hash'EDESTADDRREQ-symbol $.
IMP-symbol-15-is-symbol $a #Symbol \kore-symbol-Lbl'Hash'EDESTADDRREQ-symbol $.
IMP-symbol-15-is-pattern $a #Pattern \kore-symbol-Lbl'Hash'EDESTADDRREQ $.
IMP-symbol-15-is-sugar $a #Notation \kore-symbol-Lbl'Hash'EDESTADDRREQ \kore-symbol-Lbl'Hash'EDESTADDRREQ-symbol $.
IMP-symbol-15-sorting $a |- ( \in-sort \kore-symbol-Lbl'Hash'EDESTADDRREQ \kore-sort-SortIOError ) $.

$c \kore-symbol-Lbl'Hash'EDOM \kore-symbol-Lbl'Hash'EDOM-symbol $.
IMP-symbol-16-is-symbol $a #Symbol \kore-symbol-Lbl'Hash'EDOM-symbol $.
IMP-symbol-16-is-pattern $a #Pattern \kore-symbol-Lbl'Hash'EDOM $.
IMP-symbol-16-is-sugar $a #Notation \kore-symbol-Lbl'Hash'EDOM \kore-symbol-Lbl'Hash'EDOM-symbol $.
IMP-symbol-16-sorting $a |- ( \in-sort \kore-symbol-Lbl'Hash'EDOM \kore-sort-SortIOError ) $.

$c \kore-symbol-Lbl'Hash'EEXIST \kore-symbol-Lbl'Hash'EEXIST-symbol $.
IMP-symbol-17-is-symbol $a #Symbol \kore-symbol-Lbl'Hash'EEXIST-symbol $.
IMP-symbol-17-is-pattern $a #Pattern \kore-symbol-Lbl'Hash'EEXIST $.
IMP-symbol-17-is-sugar $a #Notation \kore-symbol-Lbl'Hash'EEXIST \kore-symbol-Lbl'Hash'EEXIST-symbol $.
IMP-symbol-17-sorting $a |- ( \in-sort \kore-symbol-Lbl'Hash'EEXIST \kore-sort-SortIOError ) $.

$c \kore-symbol-Lbl'Hash'EFAULT \kore-symbol-Lbl'Hash'EFAULT-symbol $.
IMP-symbol-18-is-symbol $a #Symbol \kore-symbol-Lbl'Hash'EFAULT-symbol $.
IMP-symbol-18-is-pattern $a #Pattern \kore-symbol-Lbl'Hash'EFAULT $.
IMP-symbol-18-is-sugar $a #Notation \kore-symbol-Lbl'Hash'EFAULT \kore-symbol-Lbl'Hash'EFAULT-symbol $.
IMP-symbol-18-sorting $a |- ( \in-sort \kore-symbol-Lbl'Hash'EFAULT \kore-sort-SortIOError ) $.

$c \kore-symbol-Lbl'Hash'EFBIG \kore-symbol-Lbl'Hash'EFBIG-symbol $.
IMP-symbol-19-is-symbol $a #Symbol \kore-symbol-Lbl'Hash'EFBIG-symbol $.
IMP-symbol-19-is-pattern $a #Pattern \kore-symbol-Lbl'Hash'EFBIG $.
IMP-symbol-19-is-sugar $a #Notation \kore-symbol-Lbl'Hash'EFBIG \kore-symbol-Lbl'Hash'EFBIG-symbol $.
IMP-symbol-19-sorting $a |- ( \in-sort \kore-symbol-Lbl'Hash'EFBIG \kore-sort-SortIOError ) $.

$c \kore-symbol-Lbl'Hash'EHOSTDOWN \kore-symbol-Lbl'Hash'EHOSTDOWN-symbol $.
IMP-symbol-20-is-symbol $a #Symbol \kore-symbol-Lbl'Hash'EHOSTDOWN-symbol $.
IMP-symbol-20-is-pattern $a #Pattern \kore-symbol-Lbl'Hash'EHOSTDOWN $.
IMP-symbol-20-is-sugar $a #Notation \kore-symbol-Lbl'Hash'EHOSTDOWN \kore-symbol-Lbl'Hash'EHOSTDOWN-symbol $.
IMP-symbol-20-sorting $a |- ( \in-sort \kore-symbol-Lbl'Hash'EHOSTDOWN \kore-sort-SortIOError ) $.

$c \kore-symbol-Lbl'Hash'EHOSTUNREACH \kore-symbol-Lbl'Hash'EHOSTUNREACH-symbol $.
IMP-symbol-21-is-symbol $a #Symbol \kore-symbol-Lbl'Hash'EHOSTUNREACH-symbol $.
IMP-symbol-21-is-pattern $a #Pattern \kore-symbol-Lbl'Hash'EHOSTUNREACH $.
IMP-symbol-21-is-sugar $a #Notation \kore-symbol-Lbl'Hash'EHOSTUNREACH \kore-symbol-Lbl'Hash'EHOSTUNREACH-symbol $.
IMP-symbol-21-sorting $a |- ( \in-sort \kore-symbol-Lbl'Hash'EHOSTUNREACH \kore-sort-SortIOError ) $.

$c \kore-symbol-Lbl'Hash'EINPROGRESS \kore-symbol-Lbl'Hash'EINPROGRESS-symbol $.
IMP-symbol-22-is-symbol $a #Symbol \kore-symbol-Lbl'Hash'EINPROGRESS-symbol $.
IMP-symbol-22-is-pattern $a #Pattern \kore-symbol-Lbl'Hash'EINPROGRESS $.
IMP-symbol-22-is-sugar $a #Notation \kore-symbol-Lbl'Hash'EINPROGRESS \kore-symbol-Lbl'Hash'EINPROGRESS-symbol $.
IMP-symbol-22-sorting $a |- ( \in-sort \kore-symbol-Lbl'Hash'EINPROGRESS \kore-sort-SortIOError ) $.

$c \kore-symbol-Lbl'Hash'EINTR \kore-symbol-Lbl'Hash'EINTR-symbol $.
IMP-symbol-23-is-symbol $a #Symbol \kore-symbol-Lbl'Hash'EINTR-symbol $.
IMP-symbol-23-is-pattern $a #Pattern \kore-symbol-Lbl'Hash'EINTR $.
IMP-symbol-23-is-sugar $a #Notation \kore-symbol-Lbl'Hash'EINTR \kore-symbol-Lbl'Hash'EINTR-symbol $.
IMP-symbol-23-sorting $a |- ( \in-sort \kore-symbol-Lbl'Hash'EINTR \kore-sort-SortIOError ) $.

$c \kore-symbol-Lbl'Hash'EINVAL \kore-symbol-Lbl'Hash'EINVAL-symbol $.
IMP-symbol-24-is-symbol $a #Symbol \kore-symbol-Lbl'Hash'EINVAL-symbol $.
IMP-symbol-24-is-pattern $a #Pattern \kore-symbol-Lbl'Hash'EINVAL $.
IMP-symbol-24-is-sugar $a #Notation \kore-symbol-Lbl'Hash'EINVAL \kore-symbol-Lbl'Hash'EINVAL-symbol $.
IMP-symbol-24-sorting $a |- ( \in-sort \kore-symbol-Lbl'Hash'EINVAL \kore-sort-SortIOError ) $.

$c \kore-symbol-Lbl'Hash'EIO \kore-symbol-Lbl'Hash'EIO-symbol $.
IMP-symbol-25-is-symbol $a #Symbol \kore-symbol-Lbl'Hash'EIO-symbol $.
IMP-symbol-25-is-pattern $a #Pattern \kore-symbol-Lbl'Hash'EIO $.
IMP-symbol-25-is-sugar $a #Notation \kore-symbol-Lbl'Hash'EIO \kore-symbol-Lbl'Hash'EIO-symbol $.
IMP-symbol-25-sorting $a |- ( \in-sort \kore-symbol-Lbl'Hash'EIO \kore-sort-SortIOError ) $.

$c \kore-symbol-Lbl'Hash'EISCONN \kore-symbol-Lbl'Hash'EISCONN-symbol $.
IMP-symbol-26-is-symbol $a #Symbol \kore-symbol-Lbl'Hash'EISCONN-symbol $.
IMP-symbol-26-is-pattern $a #Pattern \kore-symbol-Lbl'Hash'EISCONN $.
IMP-symbol-26-is-sugar $a #Notation \kore-symbol-Lbl'Hash'EISCONN \kore-symbol-Lbl'Hash'EISCONN-symbol $.
IMP-symbol-26-sorting $a |- ( \in-sort \kore-symbol-Lbl'Hash'EISCONN \kore-sort-SortIOError ) $.

$c \kore-symbol-Lbl'Hash'EISDIR \kore-symbol-Lbl'Hash'EISDIR-symbol $.
IMP-symbol-27-is-symbol $a #Symbol \kore-symbol-Lbl'Hash'EISDIR-symbol $.
IMP-symbol-27-is-pattern $a #Pattern \kore-symbol-Lbl'Hash'EISDIR $.
IMP-symbol-27-is-sugar $a #Notation \kore-symbol-Lbl'Hash'EISDIR \kore-symbol-Lbl'Hash'EISDIR-symbol $.
IMP-symbol-27-sorting $a |- ( \in-sort \kore-symbol-Lbl'Hash'EISDIR \kore-sort-SortIOError ) $.

$c \kore-symbol-Lbl'Hash'ELOOP \kore-symbol-Lbl'Hash'ELOOP-symbol $.
IMP-symbol-28-is-symbol $a #Symbol \kore-symbol-Lbl'Hash'ELOOP-symbol $.
IMP-symbol-28-is-pattern $a #Pattern \kore-symbol-Lbl'Hash'ELOOP $.
IMP-symbol-28-is-sugar $a #Notation \kore-symbol-Lbl'Hash'ELOOP \kore-symbol-Lbl'Hash'ELOOP-symbol $.
IMP-symbol-28-sorting $a |- ( \in-sort \kore-symbol-Lbl'Hash'ELOOP \kore-sort-SortIOError ) $.

$c \kore-symbol-Lbl'Hash'EMFILE \kore-symbol-Lbl'Hash'EMFILE-symbol $.
IMP-symbol-29-is-symbol $a #Symbol \kore-symbol-Lbl'Hash'EMFILE-symbol $.
IMP-symbol-29-is-pattern $a #Pattern \kore-symbol-Lbl'Hash'EMFILE $.
IMP-symbol-29-is-sugar $a #Notation \kore-symbol-Lbl'Hash'EMFILE \kore-symbol-Lbl'Hash'EMFILE-symbol $.
IMP-symbol-29-sorting $a |- ( \in-sort \kore-symbol-Lbl'Hash'EMFILE \kore-sort-SortIOError ) $.

$c \kore-symbol-Lbl'Hash'EMLINK \kore-symbol-Lbl'Hash'EMLINK-symbol $.
IMP-symbol-30-is-symbol $a #Symbol \kore-symbol-Lbl'Hash'EMLINK-symbol $.
IMP-symbol-30-is-pattern $a #Pattern \kore-symbol-Lbl'Hash'EMLINK $.
IMP-symbol-30-is-sugar $a #Notation \kore-symbol-Lbl'Hash'EMLINK \kore-symbol-Lbl'Hash'EMLINK-symbol $.
IMP-symbol-30-sorting $a |- ( \in-sort \kore-symbol-Lbl'Hash'EMLINK \kore-sort-SortIOError ) $.

$c \kore-symbol-Lbl'Hash'EMSGSIZE \kore-symbol-Lbl'Hash'EMSGSIZE-symbol $.
IMP-symbol-31-is-symbol $a #Symbol \kore-symbol-Lbl'Hash'EMSGSIZE-symbol $.
IMP-symbol-31-is-pattern $a #Pattern \kore-symbol-Lbl'Hash'EMSGSIZE $.
IMP-symbol-31-is-sugar $a #Notation \kore-symbol-Lbl'Hash'EMSGSIZE \kore-symbol-Lbl'Hash'EMSGSIZE-symbol $.
IMP-symbol-31-sorting $a |- ( \in-sort \kore-symbol-Lbl'Hash'EMSGSIZE \kore-sort-SortIOError ) $.

$c \kore-symbol-Lbl'Hash'ENAMETOOLONG \kore-symbol-Lbl'Hash'ENAMETOOLONG-symbol $.
IMP-symbol-32-is-symbol $a #Symbol \kore-symbol-Lbl'Hash'ENAMETOOLONG-symbol $.
IMP-symbol-32-is-pattern $a #Pattern \kore-symbol-Lbl'Hash'ENAMETOOLONG $.
IMP-symbol-32-is-sugar $a #Notation \kore-symbol-Lbl'Hash'ENAMETOOLONG \kore-symbol-Lbl'Hash'ENAMETOOLONG-symbol $.
IMP-symbol-32-sorting $a |- ( \in-sort \kore-symbol-Lbl'Hash'ENAMETOOLONG \kore-sort-SortIOError ) $.

$c \kore-symbol-Lbl'Hash'ENETDOWN \kore-symbol-Lbl'Hash'ENETDOWN-symbol $.
IMP-symbol-33-is-symbol $a #Symbol \kore-symbol-Lbl'Hash'ENETDOWN-symbol $.
IMP-symbol-33-is-pattern $a #Pattern \kore-symbol-Lbl'Hash'ENETDOWN $.
IMP-symbol-33-is-sugar $a #Notation \kore-symbol-Lbl'Hash'ENETDOWN \kore-symbol-Lbl'Hash'ENETDOWN-symbol $.
IMP-symbol-33-sorting $a |- ( \in-sort \kore-symbol-Lbl'Hash'ENETDOWN \kore-sort-SortIOError ) $.

$c \kore-symbol-Lbl'Hash'ENETRESET \kore-symbol-Lbl'Hash'ENETRESET-symbol $.
IMP-symbol-34-is-symbol $a #Symbol \kore-symbol-Lbl'Hash'ENETRESET-symbol $.
IMP-symbol-34-is-pattern $a #Pattern \kore-symbol-Lbl'Hash'ENETRESET $.
IMP-symbol-34-is-sugar $a #Notation \kore-symbol-Lbl'Hash'ENETRESET \kore-symbol-Lbl'Hash'ENETRESET-symbol $.
IMP-symbol-34-sorting $a |- ( \in-sort \kore-symbol-Lbl'Hash'ENETRESET \kore-sort-SortIOError ) $.

$c \kore-symbol-Lbl'Hash'ENETUNREACH \kore-symbol-Lbl'Hash'ENETUNREACH-symbol $.
IMP-symbol-35-is-symbol $a #Symbol \kore-symbol-Lbl'Hash'ENETUNREACH-symbol $.
IMP-symbol-35-is-pattern $a #Pattern \kore-symbol-Lbl'Hash'ENETUNREACH $.
IMP-symbol-35-is-sugar $a #Notation \kore-symbol-Lbl'Hash'ENETUNREACH \kore-symbol-Lbl'Hash'ENETUNREACH-symbol $.
IMP-symbol-35-sorting $a |- ( \in-sort \kore-symbol-Lbl'Hash'ENETUNREACH \kore-sort-SortIOError ) $.

$c \kore-symbol-Lbl'Hash'ENFILE \kore-symbol-Lbl'Hash'ENFILE-symbol $.
IMP-symbol-36-is-symbol $a #Symbol \kore-symbol-Lbl'Hash'ENFILE-symbol $.
IMP-symbol-36-is-pattern $a #Pattern \kore-symbol-Lbl'Hash'ENFILE $.
IMP-symbol-36-is-sugar $a #Notation \kore-symbol-Lbl'Hash'ENFILE \kore-symbol-Lbl'Hash'ENFILE-symbol $.
IMP-symbol-36-sorting $a |- ( \in-sort \kore-symbol-Lbl'Hash'ENFILE \kore-sort-SortIOError ) $.

$c \kore-symbol-Lbl'Hash'ENOBUFS \kore-symbol-Lbl'Hash'ENOBUFS-symbol $.
IMP-symbol-37-is-symbol $a #Symbol \kore-symbol-Lbl'Hash'ENOBUFS-symbol $.
IMP-symbol-37-is-pattern $a #Pattern \kore-symbol-Lbl'Hash'ENOBUFS $.
IMP-symbol-37-is-sugar $a #Notation \kore-symbol-Lbl'Hash'ENOBUFS \kore-symbol-Lbl'Hash'ENOBUFS-symbol $.
IMP-symbol-37-sorting $a |- ( \in-sort \kore-symbol-Lbl'Hash'ENOBUFS \kore-sort-SortIOError ) $.

$c \kore-symbol-Lbl'Hash'ENODEV \kore-symbol-Lbl'Hash'ENODEV-symbol $.
IMP-symbol-38-is-symbol $a #Symbol \kore-symbol-Lbl'Hash'ENODEV-symbol $.
IMP-symbol-38-is-pattern $a #Pattern \kore-symbol-Lbl'Hash'ENODEV $.
IMP-symbol-38-is-sugar $a #Notation \kore-symbol-Lbl'Hash'ENODEV \kore-symbol-Lbl'Hash'ENODEV-symbol $.
IMP-symbol-38-sorting $a |- ( \in-sort \kore-symbol-Lbl'Hash'ENODEV \kore-sort-SortIOError ) $.

$c \kore-symbol-Lbl'Hash'ENOENT \kore-symbol-Lbl'Hash'ENOENT-symbol $.
IMP-symbol-39-is-symbol $a #Symbol \kore-symbol-Lbl'Hash'ENOENT-symbol $.
IMP-symbol-39-is-pattern $a #Pattern \kore-symbol-Lbl'Hash'ENOENT $.
IMP-symbol-39-is-sugar $a #Notation \kore-symbol-Lbl'Hash'ENOENT \kore-symbol-Lbl'Hash'ENOENT-symbol $.
IMP-symbol-39-sorting $a |- ( \in-sort \kore-symbol-Lbl'Hash'ENOENT \kore-sort-SortIOError ) $.

$c \kore-symbol-Lbl'Hash'ENOEXEC \kore-symbol-Lbl'Hash'ENOEXEC-symbol $.
IMP-symbol-40-is-symbol $a #Symbol \kore-symbol-Lbl'Hash'ENOEXEC-symbol $.
IMP-symbol-40-is-pattern $a #Pattern \kore-symbol-Lbl'Hash'ENOEXEC $.
IMP-symbol-40-is-sugar $a #Notation \kore-symbol-Lbl'Hash'ENOEXEC \kore-symbol-Lbl'Hash'ENOEXEC-symbol $.
IMP-symbol-40-sorting $a |- ( \in-sort \kore-symbol-Lbl'Hash'ENOEXEC \kore-sort-SortIOError ) $.

$c \kore-symbol-Lbl'Hash'ENOLCK \kore-symbol-Lbl'Hash'ENOLCK-symbol $.
IMP-symbol-41-is-symbol $a #Symbol \kore-symbol-Lbl'Hash'ENOLCK-symbol $.
IMP-symbol-41-is-pattern $a #Pattern \kore-symbol-Lbl'Hash'ENOLCK $.
IMP-symbol-41-is-sugar $a #Notation \kore-symbol-Lbl'Hash'ENOLCK \kore-symbol-Lbl'Hash'ENOLCK-symbol $.
IMP-symbol-41-sorting $a |- ( \in-sort \kore-symbol-Lbl'Hash'ENOLCK \kore-sort-SortIOError ) $.

$c \kore-symbol-Lbl'Hash'ENOMEM \kore-symbol-Lbl'Hash'ENOMEM-symbol $.
IMP-symbol-42-is-symbol $a #Symbol \kore-symbol-Lbl'Hash'ENOMEM-symbol $.
IMP-symbol-42-is-pattern $a #Pattern \kore-symbol-Lbl'Hash'ENOMEM $.
IMP-symbol-42-is-sugar $a #Notation \kore-symbol-Lbl'Hash'ENOMEM \kore-symbol-Lbl'Hash'ENOMEM-symbol $.
IMP-symbol-42-sorting $a |- ( \in-sort \kore-symbol-Lbl'Hash'ENOMEM \kore-sort-SortIOError ) $.

$c \kore-symbol-Lbl'Hash'ENOPROTOOPT \kore-symbol-Lbl'Hash'ENOPROTOOPT-symbol $.
IMP-symbol-43-is-symbol $a #Symbol \kore-symbol-Lbl'Hash'ENOPROTOOPT-symbol $.
IMP-symbol-43-is-pattern $a #Pattern \kore-symbol-Lbl'Hash'ENOPROTOOPT $.
IMP-symbol-43-is-sugar $a #Notation \kore-symbol-Lbl'Hash'ENOPROTOOPT \kore-symbol-Lbl'Hash'ENOPROTOOPT-symbol $.
IMP-symbol-43-sorting $a |- ( \in-sort \kore-symbol-Lbl'Hash'ENOPROTOOPT \kore-sort-SortIOError ) $.

$c \kore-symbol-Lbl'Hash'ENOSPC \kore-symbol-Lbl'Hash'ENOSPC-symbol $.
IMP-symbol-44-is-symbol $a #Symbol \kore-symbol-Lbl'Hash'ENOSPC-symbol $.
IMP-symbol-44-is-pattern $a #Pattern \kore-symbol-Lbl'Hash'ENOSPC $.
IMP-symbol-44-is-sugar $a #Notation \kore-symbol-Lbl'Hash'ENOSPC \kore-symbol-Lbl'Hash'ENOSPC-symbol $.
IMP-symbol-44-sorting $a |- ( \in-sort \kore-symbol-Lbl'Hash'ENOSPC \kore-sort-SortIOError ) $.

$c \kore-symbol-Lbl'Hash'ENOSYS \kore-symbol-Lbl'Hash'ENOSYS-symbol $.
IMP-symbol-45-is-symbol $a #Symbol \kore-symbol-Lbl'Hash'ENOSYS-symbol $.
IMP-symbol-45-is-pattern $a #Pattern \kore-symbol-Lbl'Hash'ENOSYS $.
IMP-symbol-45-is-sugar $a #Notation \kore-symbol-Lbl'Hash'ENOSYS \kore-symbol-Lbl'Hash'ENOSYS-symbol $.
IMP-symbol-45-sorting $a |- ( \in-sort \kore-symbol-Lbl'Hash'ENOSYS \kore-sort-SortIOError ) $.

$c \kore-symbol-Lbl'Hash'ENOTCONN \kore-symbol-Lbl'Hash'ENOTCONN-symbol $.
IMP-symbol-46-is-symbol $a #Symbol \kore-symbol-Lbl'Hash'ENOTCONN-symbol $.
IMP-symbol-46-is-pattern $a #Pattern \kore-symbol-Lbl'Hash'ENOTCONN $.
IMP-symbol-46-is-sugar $a #Notation \kore-symbol-Lbl'Hash'ENOTCONN \kore-symbol-Lbl'Hash'ENOTCONN-symbol $.
IMP-symbol-46-sorting $a |- ( \in-sort \kore-symbol-Lbl'Hash'ENOTCONN \kore-sort-SortIOError ) $.

$c \kore-symbol-Lbl'Hash'ENOTDIR \kore-symbol-Lbl'Hash'ENOTDIR-symbol $.
IMP-symbol-47-is-symbol $a #Symbol \kore-symbol-Lbl'Hash'ENOTDIR-symbol $.
IMP-symbol-47-is-pattern $a #Pattern \kore-symbol-Lbl'Hash'ENOTDIR $.
IMP-symbol-47-is-sugar $a #Notation \kore-symbol-Lbl'Hash'ENOTDIR \kore-symbol-Lbl'Hash'ENOTDIR-symbol $.
IMP-symbol-47-sorting $a |- ( \in-sort \kore-symbol-Lbl'Hash'ENOTDIR \kore-sort-SortIOError ) $.

$c \kore-symbol-Lbl'Hash'ENOTEMPTY \kore-symbol-Lbl'Hash'ENOTEMPTY-symbol $.
IMP-symbol-48-is-symbol $a #Symbol \kore-symbol-Lbl'Hash'ENOTEMPTY-symbol $.
IMP-symbol-48-is-pattern $a #Pattern \kore-symbol-Lbl'Hash'ENOTEMPTY $.
IMP-symbol-48-is-sugar $a #Notation \kore-symbol-Lbl'Hash'ENOTEMPTY \kore-symbol-Lbl'Hash'ENOTEMPTY-symbol $.
IMP-symbol-48-sorting $a |- ( \in-sort \kore-symbol-Lbl'Hash'ENOTEMPTY \kore-sort-SortIOError ) $.

$c \kore-symbol-Lbl'Hash'ENOTSOCK \kore-symbol-Lbl'Hash'ENOTSOCK-symbol $.
IMP-symbol-49-is-symbol $a #Symbol \kore-symbol-Lbl'Hash'ENOTSOCK-symbol $.
IMP-symbol-49-is-pattern $a #Pattern \kore-symbol-Lbl'Hash'ENOTSOCK $.
IMP-symbol-49-is-sugar $a #Notation \kore-symbol-Lbl'Hash'ENOTSOCK \kore-symbol-Lbl'Hash'ENOTSOCK-symbol $.
IMP-symbol-49-sorting $a |- ( \in-sort \kore-symbol-Lbl'Hash'ENOTSOCK \kore-sort-SortIOError ) $.

$c \kore-symbol-Lbl'Hash'ENOTTY \kore-symbol-Lbl'Hash'ENOTTY-symbol $.
IMP-symbol-50-is-symbol $a #Symbol \kore-symbol-Lbl'Hash'ENOTTY-symbol $.
IMP-symbol-50-is-pattern $a #Pattern \kore-symbol-Lbl'Hash'ENOTTY $.
IMP-symbol-50-is-sugar $a #Notation \kore-symbol-Lbl'Hash'ENOTTY \kore-symbol-Lbl'Hash'ENOTTY-symbol $.
IMP-symbol-50-sorting $a |- ( \in-sort \kore-symbol-Lbl'Hash'ENOTTY \kore-sort-SortIOError ) $.

$c \kore-symbol-Lbl'Hash'ENXIO \kore-symbol-Lbl'Hash'ENXIO-symbol $.
IMP-symbol-51-is-symbol $a #Symbol \kore-symbol-Lbl'Hash'ENXIO-symbol $.
IMP-symbol-51-is-pattern $a #Pattern \kore-symbol-Lbl'Hash'ENXIO $.
IMP-symbol-51-is-sugar $a #Notation \kore-symbol-Lbl'Hash'ENXIO \kore-symbol-Lbl'Hash'ENXIO-symbol $.
IMP-symbol-51-sorting $a |- ( \in-sort \kore-symbol-Lbl'Hash'ENXIO \kore-sort-SortIOError ) $.

$c \kore-symbol-Lbl'Hash'EOF \kore-symbol-Lbl'Hash'EOF-symbol $.
IMP-symbol-52-is-symbol $a #Symbol \kore-symbol-Lbl'Hash'EOF-symbol $.
IMP-symbol-52-is-pattern $a #Pattern \kore-symbol-Lbl'Hash'EOF $.
IMP-symbol-52-is-sugar $a #Notation \kore-symbol-Lbl'Hash'EOF \kore-symbol-Lbl'Hash'EOF-symbol $.
IMP-symbol-52-sorting $a |- ( \in-sort \kore-symbol-Lbl'Hash'EOF \kore-sort-SortIOError ) $.

$c \kore-symbol-Lbl'Hash'EOPNOTSUPP \kore-symbol-Lbl'Hash'EOPNOTSUPP-symbol $.
IMP-symbol-53-is-symbol $a #Symbol \kore-symbol-Lbl'Hash'EOPNOTSUPP-symbol $.
IMP-symbol-53-is-pattern $a #Pattern \kore-symbol-Lbl'Hash'EOPNOTSUPP $.
IMP-symbol-53-is-sugar $a #Notation \kore-symbol-Lbl'Hash'EOPNOTSUPP \kore-symbol-Lbl'Hash'EOPNOTSUPP-symbol $.
IMP-symbol-53-sorting $a |- ( \in-sort \kore-symbol-Lbl'Hash'EOPNOTSUPP \kore-sort-SortIOError ) $.

$c \kore-symbol-Lbl'Hash'EOVERFLOW \kore-symbol-Lbl'Hash'EOVERFLOW-symbol $.
IMP-symbol-54-is-symbol $a #Symbol \kore-symbol-Lbl'Hash'EOVERFLOW-symbol $.
IMP-symbol-54-is-pattern $a #Pattern \kore-symbol-Lbl'Hash'EOVERFLOW $.
IMP-symbol-54-is-sugar $a #Notation \kore-symbol-Lbl'Hash'EOVERFLOW \kore-symbol-Lbl'Hash'EOVERFLOW-symbol $.
IMP-symbol-54-sorting $a |- ( \in-sort \kore-symbol-Lbl'Hash'EOVERFLOW \kore-sort-SortIOError ) $.

$c \kore-symbol-Lbl'Hash'EPERM \kore-symbol-Lbl'Hash'EPERM-symbol $.
IMP-symbol-55-is-symbol $a #Symbol \kore-symbol-Lbl'Hash'EPERM-symbol $.
IMP-symbol-55-is-pattern $a #Pattern \kore-symbol-Lbl'Hash'EPERM $.
IMP-symbol-55-is-sugar $a #Notation \kore-symbol-Lbl'Hash'EPERM \kore-symbol-Lbl'Hash'EPERM-symbol $.
IMP-symbol-55-sorting $a |- ( \in-sort \kore-symbol-Lbl'Hash'EPERM \kore-sort-SortIOError ) $.

$c \kore-symbol-Lbl'Hash'EPFNOSUPPORT \kore-symbol-Lbl'Hash'EPFNOSUPPORT-symbol $.
IMP-symbol-56-is-symbol $a #Symbol \kore-symbol-Lbl'Hash'EPFNOSUPPORT-symbol $.
IMP-symbol-56-is-pattern $a #Pattern \kore-symbol-Lbl'Hash'EPFNOSUPPORT $.
IMP-symbol-56-is-sugar $a #Notation \kore-symbol-Lbl'Hash'EPFNOSUPPORT \kore-symbol-Lbl'Hash'EPFNOSUPPORT-symbol $.
IMP-symbol-56-sorting $a |- ( \in-sort \kore-symbol-Lbl'Hash'EPFNOSUPPORT \kore-sort-SortIOError ) $.

$c \kore-symbol-Lbl'Hash'EPIPE \kore-symbol-Lbl'Hash'EPIPE-symbol $.
IMP-symbol-57-is-symbol $a #Symbol \kore-symbol-Lbl'Hash'EPIPE-symbol $.
IMP-symbol-57-is-pattern $a #Pattern \kore-symbol-Lbl'Hash'EPIPE $.
IMP-symbol-57-is-sugar $a #Notation \kore-symbol-Lbl'Hash'EPIPE \kore-symbol-Lbl'Hash'EPIPE-symbol $.
IMP-symbol-57-sorting $a |- ( \in-sort \kore-symbol-Lbl'Hash'EPIPE \kore-sort-SortIOError ) $.

$c \kore-symbol-Lbl'Hash'EPROTONOSUPPORT \kore-symbol-Lbl'Hash'EPROTONOSUPPORT-symbol $.
IMP-symbol-58-is-symbol $a #Symbol \kore-symbol-Lbl'Hash'EPROTONOSUPPORT-symbol $.
IMP-symbol-58-is-pattern $a #Pattern \kore-symbol-Lbl'Hash'EPROTONOSUPPORT $.
IMP-symbol-58-is-sugar $a #Notation \kore-symbol-Lbl'Hash'EPROTONOSUPPORT \kore-symbol-Lbl'Hash'EPROTONOSUPPORT-symbol $.
IMP-symbol-58-sorting $a |- ( \in-sort \kore-symbol-Lbl'Hash'EPROTONOSUPPORT \kore-sort-SortIOError ) $.

$c \kore-symbol-Lbl'Hash'EPROTOTYPE \kore-symbol-Lbl'Hash'EPROTOTYPE-symbol $.
IMP-symbol-59-is-symbol $a #Symbol \kore-symbol-Lbl'Hash'EPROTOTYPE-symbol $.
IMP-symbol-59-is-pattern $a #Pattern \kore-symbol-Lbl'Hash'EPROTOTYPE $.
IMP-symbol-59-is-sugar $a #Notation \kore-symbol-Lbl'Hash'EPROTOTYPE \kore-symbol-Lbl'Hash'EPROTOTYPE-symbol $.
IMP-symbol-59-sorting $a |- ( \in-sort \kore-symbol-Lbl'Hash'EPROTOTYPE \kore-sort-SortIOError ) $.

$c \kore-symbol-Lbl'Hash'ERANGE \kore-symbol-Lbl'Hash'ERANGE-symbol $.
IMP-symbol-60-is-symbol $a #Symbol \kore-symbol-Lbl'Hash'ERANGE-symbol $.
IMP-symbol-60-is-pattern $a #Pattern \kore-symbol-Lbl'Hash'ERANGE $.
IMP-symbol-60-is-sugar $a #Notation \kore-symbol-Lbl'Hash'ERANGE \kore-symbol-Lbl'Hash'ERANGE-symbol $.
IMP-symbol-60-sorting $a |- ( \in-sort \kore-symbol-Lbl'Hash'ERANGE \kore-sort-SortIOError ) $.

$c \kore-symbol-Lbl'Hash'EROFS \kore-symbol-Lbl'Hash'EROFS-symbol $.
IMP-symbol-61-is-symbol $a #Symbol \kore-symbol-Lbl'Hash'EROFS-symbol $.
IMP-symbol-61-is-pattern $a #Pattern \kore-symbol-Lbl'Hash'EROFS $.
IMP-symbol-61-is-sugar $a #Notation \kore-symbol-Lbl'Hash'EROFS \kore-symbol-Lbl'Hash'EROFS-symbol $.
IMP-symbol-61-sorting $a |- ( \in-sort \kore-symbol-Lbl'Hash'EROFS \kore-sort-SortIOError ) $.

$c \kore-symbol-Lbl'Hash'ESHUTDOWN \kore-symbol-Lbl'Hash'ESHUTDOWN-symbol $.
IMP-symbol-62-is-symbol $a #Symbol \kore-symbol-Lbl'Hash'ESHUTDOWN-symbol $.
IMP-symbol-62-is-pattern $a #Pattern \kore-symbol-Lbl'Hash'ESHUTDOWN $.
IMP-symbol-62-is-sugar $a #Notation \kore-symbol-Lbl'Hash'ESHUTDOWN \kore-symbol-Lbl'Hash'ESHUTDOWN-symbol $.
IMP-symbol-62-sorting $a |- ( \in-sort \kore-symbol-Lbl'Hash'ESHUTDOWN \kore-sort-SortIOError ) $.

$c \kore-symbol-Lbl'Hash'ESOCKTNOSUPPORT \kore-symbol-Lbl'Hash'ESOCKTNOSUPPORT-symbol $.
IMP-symbol-63-is-symbol $a #Symbol \kore-symbol-Lbl'Hash'ESOCKTNOSUPPORT-symbol $.
IMP-symbol-63-is-pattern $a #Pattern \kore-symbol-Lbl'Hash'ESOCKTNOSUPPORT $.
IMP-symbol-63-is-sugar $a #Notation \kore-symbol-Lbl'Hash'ESOCKTNOSUPPORT \kore-symbol-Lbl'Hash'ESOCKTNOSUPPORT-symbol $.
IMP-symbol-63-sorting $a |- ( \in-sort \kore-symbol-Lbl'Hash'ESOCKTNOSUPPORT \kore-sort-SortIOError ) $.

$c \kore-symbol-Lbl'Hash'ESPIPE \kore-symbol-Lbl'Hash'ESPIPE-symbol $.
IMP-symbol-64-is-symbol $a #Symbol \kore-symbol-Lbl'Hash'ESPIPE-symbol $.
IMP-symbol-64-is-pattern $a #Pattern \kore-symbol-Lbl'Hash'ESPIPE $.
IMP-symbol-64-is-sugar $a #Notation \kore-symbol-Lbl'Hash'ESPIPE \kore-symbol-Lbl'Hash'ESPIPE-symbol $.
IMP-symbol-64-sorting $a |- ( \in-sort \kore-symbol-Lbl'Hash'ESPIPE \kore-sort-SortIOError ) $.

$c \kore-symbol-Lbl'Hash'ESRCH \kore-symbol-Lbl'Hash'ESRCH-symbol $.
IMP-symbol-65-is-symbol $a #Symbol \kore-symbol-Lbl'Hash'ESRCH-symbol $.
IMP-symbol-65-is-pattern $a #Pattern \kore-symbol-Lbl'Hash'ESRCH $.
IMP-symbol-65-is-sugar $a #Notation \kore-symbol-Lbl'Hash'ESRCH \kore-symbol-Lbl'Hash'ESRCH-symbol $.
IMP-symbol-65-sorting $a |- ( \in-sort \kore-symbol-Lbl'Hash'ESRCH \kore-sort-SortIOError ) $.

$c \kore-symbol-Lbl'Hash'ETIMEDOUT \kore-symbol-Lbl'Hash'ETIMEDOUT-symbol $.
IMP-symbol-66-is-symbol $a #Symbol \kore-symbol-Lbl'Hash'ETIMEDOUT-symbol $.
IMP-symbol-66-is-pattern $a #Pattern \kore-symbol-Lbl'Hash'ETIMEDOUT $.
IMP-symbol-66-is-sugar $a #Notation \kore-symbol-Lbl'Hash'ETIMEDOUT \kore-symbol-Lbl'Hash'ETIMEDOUT-symbol $.
IMP-symbol-66-sorting $a |- ( \in-sort \kore-symbol-Lbl'Hash'ETIMEDOUT \kore-sort-SortIOError ) $.

$c \kore-symbol-Lbl'Hash'ETOOMANYREFS \kore-symbol-Lbl'Hash'ETOOMANYREFS-symbol $.
IMP-symbol-67-is-symbol $a #Symbol \kore-symbol-Lbl'Hash'ETOOMANYREFS-symbol $.
IMP-symbol-67-is-pattern $a #Pattern \kore-symbol-Lbl'Hash'ETOOMANYREFS $.
IMP-symbol-67-is-sugar $a #Notation \kore-symbol-Lbl'Hash'ETOOMANYREFS \kore-symbol-Lbl'Hash'ETOOMANYREFS-symbol $.
IMP-symbol-67-sorting $a |- ( \in-sort \kore-symbol-Lbl'Hash'ETOOMANYREFS \kore-sort-SortIOError ) $.

$c \kore-symbol-Lbl'Hash'EWOULDBLOCK \kore-symbol-Lbl'Hash'EWOULDBLOCK-symbol $.
IMP-symbol-68-is-symbol $a #Symbol \kore-symbol-Lbl'Hash'EWOULDBLOCK-symbol $.
IMP-symbol-68-is-pattern $a #Pattern \kore-symbol-Lbl'Hash'EWOULDBLOCK $.
IMP-symbol-68-is-sugar $a #Notation \kore-symbol-Lbl'Hash'EWOULDBLOCK \kore-symbol-Lbl'Hash'EWOULDBLOCK-symbol $.
IMP-symbol-68-sorting $a |- ( \in-sort \kore-symbol-Lbl'Hash'EWOULDBLOCK \kore-sort-SortIOError ) $.

$c \kore-symbol-Lbl'Hash'EXDEV \kore-symbol-Lbl'Hash'EXDEV-symbol $.
IMP-symbol-69-is-symbol $a #Symbol \kore-symbol-Lbl'Hash'EXDEV-symbol $.
IMP-symbol-69-is-pattern $a #Pattern \kore-symbol-Lbl'Hash'EXDEV $.
IMP-symbol-69-is-sugar $a #Notation \kore-symbol-Lbl'Hash'EXDEV \kore-symbol-Lbl'Hash'EXDEV-symbol $.
IMP-symbol-69-sorting $a |- ( \in-sort \kore-symbol-Lbl'Hash'EXDEV \kore-sort-SortIOError ) $.

$c \kore-symbol-Lbl'Hash'accept'LParUndsRParUnds'K-IO'Unds'IOInt'Unds'Int \kore-symbol-Lbl'Hash'accept'LParUndsRParUnds'K-IO'Unds'IOInt'Unds'Int-symbol $.
IMP-symbol-70-is-symbol $a #Symbol \kore-symbol-Lbl'Hash'accept'LParUndsRParUnds'K-IO'Unds'IOInt'Unds'Int-symbol $.
IMP-symbol-70-is-pattern $a #Pattern ( \kore-symbol-Lbl'Hash'accept'LParUndsRParUnds'K-IO'Unds'IOInt'Unds'Int ptn0 ) $.
IMP-symbol-70-is-sugar $a #Notation ( \kore-symbol-Lbl'Hash'accept'LParUndsRParUnds'K-IO'Unds'IOInt'Unds'Int ptn0 ) ( \app \kore-symbol-Lbl'Hash'accept'LParUndsRParUnds'K-IO'Unds'IOInt'Unds'Int-symbol ptn0 ) $.
IMP-symbol-70-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortInt ) ( \in-sort ( \kore-symbol-Lbl'Hash'accept'LParUndsRParUnds'K-IO'Unds'IOInt'Unds'Int ptn0 ) \kore-sort-SortIOInt ) ) $.

$c \kore-symbol-Lbl'Hash'buffer'LParUndsRParUnds'K-IO'Unds'Stream'Unds'K \kore-symbol-Lbl'Hash'buffer'LParUndsRParUnds'K-IO'Unds'Stream'Unds'K-symbol $.
IMP-symbol-71-is-symbol $a #Symbol \kore-symbol-Lbl'Hash'buffer'LParUndsRParUnds'K-IO'Unds'Stream'Unds'K-symbol $.
IMP-symbol-71-is-pattern $a #Pattern ( \kore-symbol-Lbl'Hash'buffer'LParUndsRParUnds'K-IO'Unds'Stream'Unds'K ptn0 ) $.
IMP-symbol-71-is-sugar $a #Notation ( \kore-symbol-Lbl'Hash'buffer'LParUndsRParUnds'K-IO'Unds'Stream'Unds'K ptn0 ) ( \app \kore-symbol-Lbl'Hash'buffer'LParUndsRParUnds'K-IO'Unds'Stream'Unds'K-symbol ptn0 ) $.
IMP-symbol-71-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ( \kore-symbol-Lbl'Hash'buffer'LParUndsRParUnds'K-IO'Unds'Stream'Unds'K ptn0 ) \kore-sort-SortStream ) ) $.

$c \kore-symbol-Lbl'Hash'close'LParUndsRParUnds'K-IO'Unds'K'Unds'Int \kore-symbol-Lbl'Hash'close'LParUndsRParUnds'K-IO'Unds'K'Unds'Int-symbol $.
IMP-symbol-72-is-symbol $a #Symbol \kore-symbol-Lbl'Hash'close'LParUndsRParUnds'K-IO'Unds'K'Unds'Int-symbol $.
IMP-symbol-72-is-pattern $a #Pattern ( \kore-symbol-Lbl'Hash'close'LParUndsRParUnds'K-IO'Unds'K'Unds'Int ptn0 ) $.
IMP-symbol-72-is-sugar $a #Notation ( \kore-symbol-Lbl'Hash'close'LParUndsRParUnds'K-IO'Unds'K'Unds'Int ptn0 ) ( \app \kore-symbol-Lbl'Hash'close'LParUndsRParUnds'K-IO'Unds'K'Unds'Int-symbol ptn0 ) $.
IMP-symbol-72-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortInt ) ( \in-sort ( \kore-symbol-Lbl'Hash'close'LParUndsRParUnds'K-IO'Unds'K'Unds'Int ptn0 ) \kore-sort-SortK ) ) $.

$c \kore-symbol-Lbl'Hash'freezer'BangUndsUnds'IMP-SYNTAX'Unds'BExp'Unds'BExp0'Unds' \kore-symbol-Lbl'Hash'freezer'BangUndsUnds'IMP-SYNTAX'Unds'BExp'Unds'BExp0'Unds'-symbol $.
IMP-symbol-73-is-symbol $a #Symbol \kore-symbol-Lbl'Hash'freezer'BangUndsUnds'IMP-SYNTAX'Unds'BExp'Unds'BExp0'Unds'-symbol $.
IMP-symbol-73-is-pattern $a #Pattern \kore-symbol-Lbl'Hash'freezer'BangUndsUnds'IMP-SYNTAX'Unds'BExp'Unds'BExp0'Unds' $.
IMP-symbol-73-is-sugar $a #Notation \kore-symbol-Lbl'Hash'freezer'BangUndsUnds'IMP-SYNTAX'Unds'BExp'Unds'BExp0'Unds' \kore-symbol-Lbl'Hash'freezer'BangUndsUnds'IMP-SYNTAX'Unds'BExp'Unds'BExp0'Unds'-symbol $.
IMP-symbol-73-sorting $a |- ( \in-sort \kore-symbol-Lbl'Hash'freezer'BangUndsUnds'IMP-SYNTAX'Unds'BExp'Unds'BExp0'Unds' \kore-sort-SortKItem ) $.

$c \kore-symbol-Lbl'Hash'freezer'UndsAnd-And-UndsUnds'IMP-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds' \kore-symbol-Lbl'Hash'freezer'UndsAnd-And-UndsUnds'IMP-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'-symbol $.
IMP-symbol-74-is-symbol $a #Symbol \kore-symbol-Lbl'Hash'freezer'UndsAnd-And-UndsUnds'IMP-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'-symbol $.
IMP-symbol-74-is-pattern $a #Pattern ( \kore-symbol-Lbl'Hash'freezer'UndsAnd-And-UndsUnds'IMP-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds' ptn0 ) $.
IMP-symbol-74-is-sugar $a #Notation ( \kore-symbol-Lbl'Hash'freezer'UndsAnd-And-UndsUnds'IMP-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds' ptn0 ) ( \app \kore-symbol-Lbl'Hash'freezer'UndsAnd-And-UndsUnds'IMP-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'-symbol ptn0 ) $.
IMP-symbol-74-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ( \kore-symbol-Lbl'Hash'freezer'UndsAnd-And-UndsUnds'IMP-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds' ptn0 ) \kore-sort-SortKItem ) ) $.

$c \kore-symbol-Lbl'Hash'freezer'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds' \kore-symbol-Lbl'Hash'freezer'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'-symbol $.
IMP-symbol-75-is-symbol $a #Symbol \kore-symbol-Lbl'Hash'freezer'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'-symbol $.
IMP-symbol-75-is-pattern $a #Pattern ( \kore-symbol-Lbl'Hash'freezer'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds' ptn0 ) $.
IMP-symbol-75-is-sugar $a #Notation ( \kore-symbol-Lbl'Hash'freezer'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds' ptn0 ) ( \app \kore-symbol-Lbl'Hash'freezer'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'-symbol ptn0 ) $.
IMP-symbol-75-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ( \kore-symbol-Lbl'Hash'freezer'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds' ptn0 ) \kore-sort-SortKItem ) ) $.

$c \kore-symbol-Lbl'Hash'freezer'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds' \kore-symbol-Lbl'Hash'freezer'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'-symbol $.
IMP-symbol-76-is-symbol $a #Symbol \kore-symbol-Lbl'Hash'freezer'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'-symbol $.
IMP-symbol-76-is-pattern $a #Pattern ( \kore-symbol-Lbl'Hash'freezer'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds' ptn0 ) $.
IMP-symbol-76-is-sugar $a #Notation ( \kore-symbol-Lbl'Hash'freezer'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds' ptn0 ) ( \app \kore-symbol-Lbl'Hash'freezer'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'-symbol ptn0 ) $.
IMP-symbol-76-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ( \kore-symbol-Lbl'Hash'freezer'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds' ptn0 ) \kore-sort-SortKItem ) ) $.

$c \kore-symbol-Lbl'Hash'freezer'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds' \kore-symbol-Lbl'Hash'freezer'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'-symbol $.
IMP-symbol-77-is-symbol $a #Symbol \kore-symbol-Lbl'Hash'freezer'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'-symbol $.
IMP-symbol-77-is-pattern $a #Pattern ( \kore-symbol-Lbl'Hash'freezer'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds' ptn0 ) $.
IMP-symbol-77-is-sugar $a #Notation ( \kore-symbol-Lbl'Hash'freezer'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds' ptn0 ) ( \app \kore-symbol-Lbl'Hash'freezer'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'-symbol ptn0 ) $.
IMP-symbol-77-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ( \kore-symbol-Lbl'Hash'freezer'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds' ptn0 ) \kore-sort-SortKItem ) ) $.

$c \kore-symbol-Lbl'Hash'freezer'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds' \kore-symbol-Lbl'Hash'freezer'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'-symbol $.
IMP-symbol-78-is-symbol $a #Symbol \kore-symbol-Lbl'Hash'freezer'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'-symbol $.
IMP-symbol-78-is-pattern $a #Pattern ( \kore-symbol-Lbl'Hash'freezer'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds' ptn0 ) $.
IMP-symbol-78-is-sugar $a #Notation ( \kore-symbol-Lbl'Hash'freezer'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds' ptn0 ) ( \app \kore-symbol-Lbl'Hash'freezer'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'-symbol ptn0 ) $.
IMP-symbol-78-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ( \kore-symbol-Lbl'Hash'freezer'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds' ptn0 ) \kore-sort-SortKItem ) ) $.

$c \kore-symbol-Lbl'Hash'freezer'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds' \kore-symbol-Lbl'Hash'freezer'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'-symbol $.
IMP-symbol-79-is-symbol $a #Symbol \kore-symbol-Lbl'Hash'freezer'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'-symbol $.
IMP-symbol-79-is-pattern $a #Pattern ( \kore-symbol-Lbl'Hash'freezer'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds' ptn0 ) $.
IMP-symbol-79-is-sugar $a #Notation ( \kore-symbol-Lbl'Hash'freezer'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds' ptn0 ) ( \app \kore-symbol-Lbl'Hash'freezer'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'-symbol ptn0 ) $.
IMP-symbol-79-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ( \kore-symbol-Lbl'Hash'freezer'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds' ptn0 ) \kore-sort-SortKItem ) ) $.

$c \kore-symbol-Lbl'Hash'freezer'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds' \kore-symbol-Lbl'Hash'freezer'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'-symbol $.
IMP-symbol-80-is-symbol $a #Symbol \kore-symbol-Lbl'Hash'freezer'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'-symbol $.
IMP-symbol-80-is-pattern $a #Pattern ( \kore-symbol-Lbl'Hash'freezer'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds' ptn0 ) $.
IMP-symbol-80-is-sugar $a #Notation ( \kore-symbol-Lbl'Hash'freezer'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds' ptn0 ) ( \app \kore-symbol-Lbl'Hash'freezer'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'-symbol ptn0 ) $.
IMP-symbol-80-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ( \kore-symbol-Lbl'Hash'freezer'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds' ptn0 ) \kore-sort-SortKItem ) ) $.

$c \kore-symbol-Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'IMP-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds' \kore-symbol-Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'IMP-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'-symbol $.
IMP-symbol-81-is-symbol $a #Symbol \kore-symbol-Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'IMP-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'-symbol $.
IMP-symbol-81-is-pattern $a #Pattern ( \kore-symbol-Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'IMP-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds' ptn0 ) $.
IMP-symbol-81-is-sugar $a #Notation ( \kore-symbol-Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'IMP-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds' ptn0 ) ( \app \kore-symbol-Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'IMP-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'-symbol ptn0 ) $.
IMP-symbol-81-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ( \kore-symbol-Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'IMP-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds' ptn0 ) \kore-sort-SortKItem ) ) $.

$c \kore-symbol-Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'IMP-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds' \kore-symbol-Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'IMP-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'-symbol $.
IMP-symbol-82-is-symbol $a #Symbol \kore-symbol-Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'IMP-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'-symbol $.
IMP-symbol-82-is-pattern $a #Pattern ( \kore-symbol-Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'IMP-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds' ptn0 ) $.
IMP-symbol-82-is-sugar $a #Notation ( \kore-symbol-Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'IMP-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds' ptn0 ) ( \app \kore-symbol-Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'IMP-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'-symbol ptn0 ) $.
IMP-symbol-82-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ( \kore-symbol-Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'IMP-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds' ptn0 ) \kore-sort-SortKItem ) ) $.

$c \kore-symbol-Lbl'Hash'freezer'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp1'Unds' \kore-symbol-Lbl'Hash'freezer'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp1'Unds'-symbol $.
IMP-symbol-83-is-symbol $a #Symbol \kore-symbol-Lbl'Hash'freezer'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp1'Unds'-symbol $.
IMP-symbol-83-is-pattern $a #Pattern ( \kore-symbol-Lbl'Hash'freezer'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp1'Unds' ptn0 ) $.
IMP-symbol-83-is-sugar $a #Notation ( \kore-symbol-Lbl'Hash'freezer'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp1'Unds' ptn0 ) ( \app \kore-symbol-Lbl'Hash'freezer'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp1'Unds'-symbol ptn0 ) $.
IMP-symbol-83-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ( \kore-symbol-Lbl'Hash'freezer'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp1'Unds' ptn0 ) \kore-sort-SortKItem ) ) $.

$c \kore-symbol-Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'IMP-SYNTAX'Unds'Stmt'Unds'BExp'Unds'Block'Unds'Block0'Unds' \kore-symbol-Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'IMP-SYNTAX'Unds'Stmt'Unds'BExp'Unds'Block'Unds'Block0'Unds'-symbol $.
IMP-symbol-84-is-symbol $a #Symbol \kore-symbol-Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'IMP-SYNTAX'Unds'Stmt'Unds'BExp'Unds'Block'Unds'Block0'Unds'-symbol $.
IMP-symbol-84-is-pattern $a #Pattern ( \kore-symbol-Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'IMP-SYNTAX'Unds'Stmt'Unds'BExp'Unds'Block'Unds'Block0'Unds' ptn0 ptn1 ) $.
IMP-symbol-84-is-sugar $a #Notation ( \kore-symbol-Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'IMP-SYNTAX'Unds'Stmt'Unds'BExp'Unds'Block'Unds'Block0'Unds' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'IMP-SYNTAX'Unds'Stmt'Unds'BExp'Unds'Block'Unds'Block0'Unds'-symbol ptn0 ) ptn1 ) $.
IMP-symbol-84-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ptn1 \kore-sort-SortK ) ) ( \in-sort ( \kore-symbol-Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'IMP-SYNTAX'Unds'Stmt'Unds'BExp'Unds'Block'Unds'Block0'Unds' ptn0 ptn1 ) \kore-sort-SortKItem ) ) $.

$c \kore-symbol-Lbl'Hash'getc'LParUndsRParUnds'K-IO'Unds'IOInt'Unds'Int \kore-symbol-Lbl'Hash'getc'LParUndsRParUnds'K-IO'Unds'IOInt'Unds'Int-symbol $.
IMP-symbol-85-is-symbol $a #Symbol \kore-symbol-Lbl'Hash'getc'LParUndsRParUnds'K-IO'Unds'IOInt'Unds'Int-symbol $.
IMP-symbol-85-is-pattern $a #Pattern ( \kore-symbol-Lbl'Hash'getc'LParUndsRParUnds'K-IO'Unds'IOInt'Unds'Int ptn0 ) $.
IMP-symbol-85-is-sugar $a #Notation ( \kore-symbol-Lbl'Hash'getc'LParUndsRParUnds'K-IO'Unds'IOInt'Unds'Int ptn0 ) ( \app \kore-symbol-Lbl'Hash'getc'LParUndsRParUnds'K-IO'Unds'IOInt'Unds'Int-symbol ptn0 ) $.
IMP-symbol-85-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortInt ) ( \in-sort ( \kore-symbol-Lbl'Hash'getc'LParUndsRParUnds'K-IO'Unds'IOInt'Unds'Int ptn0 ) \kore-sort-SortIOInt ) ) $.

$c \kore-symbol-Lbl'Hash'if'UndsHash'then'UndsHash'else'UndsHash'fi'Unds'K-EQUAL-SYNTAX'Unds'Sort'Unds'Bool'Unds'Sort'Unds'Sort \kore-symbol-Lbl'Hash'if'UndsHash'then'UndsHash'else'UndsHash'fi'Unds'K-EQUAL-SYNTAX'Unds'Sort'Unds'Bool'Unds'Sort'Unds'Sort-symbol $.
IMP-symbol-86-is-symbol $a #Symbol \kore-symbol-Lbl'Hash'if'UndsHash'then'UndsHash'else'UndsHash'fi'Unds'K-EQUAL-SYNTAX'Unds'Sort'Unds'Bool'Unds'Sort'Unds'Sort-symbol $.
IMP-symbol-86-is-pattern $a #Pattern ( \kore-symbol-Lbl'Hash'if'UndsHash'then'UndsHash'else'UndsHash'fi'Unds'K-EQUAL-SYNTAX'Unds'Sort'Unds'Bool'Unds'Sort'Unds'Sort ptn0 ptn1 ptn2 ptn3 ) $.
IMP-symbol-86-is-sugar $a #Notation ( \kore-symbol-Lbl'Hash'if'UndsHash'then'UndsHash'else'UndsHash'fi'Unds'K-EQUAL-SYNTAX'Unds'Sort'Unds'Bool'Unds'Sort'Unds'Sort ptn0 ptn1 ptn2 ptn3 ) ( \app ( \app ( \app ( \app \kore-symbol-Lbl'Hash'if'UndsHash'then'UndsHash'else'UndsHash'fi'Unds'K-EQUAL-SYNTAX'Unds'Sort'Unds'Bool'Unds'Sort'Unds'Sort-symbol ptn0 ) ptn1 ) ptn2 ) ptn3 ) $.
IMP-symbol-86-sorting $a |- ( \imp ( \and ( \and ( \and ( \kore-is-sort ptn0 ) ( \in-sort ptn1 \kore-sort-SortBool ) ) ( \in-sort ptn2 ptn0 ) ) ( \in-sort ptn3 ptn0 ) ) ( \in-sort ( \kore-symbol-Lbl'Hash'if'UndsHash'then'UndsHash'else'UndsHash'fi'Unds'K-EQUAL-SYNTAX'Unds'Sort'Unds'Bool'Unds'Sort'Unds'Sort ptn0 ptn1 ptn2 ptn3 ) ptn0 ) ) $.

$c \kore-symbol-Lbl'Hash'lock'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'Int \kore-symbol-Lbl'Hash'lock'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'Int-symbol $.
IMP-symbol-87-is-symbol $a #Symbol \kore-symbol-Lbl'Hash'lock'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'Int-symbol $.
IMP-symbol-87-is-pattern $a #Pattern ( \kore-symbol-Lbl'Hash'lock'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'Int ptn0 ptn1 ) $.
IMP-symbol-87-is-sugar $a #Notation ( \kore-symbol-Lbl'Hash'lock'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'Int ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'Hash'lock'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'Int-symbol ptn0 ) ptn1 ) $.
IMP-symbol-87-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortInt ) ( \in-sort ptn1 \kore-sort-SortInt ) ) ( \in-sort ( \kore-symbol-Lbl'Hash'lock'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'Int ptn0 ptn1 ) \kore-sort-SortK ) ) $.

$c \kore-symbol-Lbl'Hash'logToFile \kore-symbol-Lbl'Hash'logToFile-symbol $.
IMP-symbol-88-is-symbol $a #Symbol \kore-symbol-Lbl'Hash'logToFile-symbol $.
IMP-symbol-88-is-pattern $a #Pattern ( \kore-symbol-Lbl'Hash'logToFile ptn0 ptn1 ) $.
IMP-symbol-88-is-sugar $a #Notation ( \kore-symbol-Lbl'Hash'logToFile ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'Hash'logToFile-symbol ptn0 ) ptn1 ) $.
IMP-symbol-88-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortString ) ( \in-sort ptn1 \kore-sort-SortString ) ) ( \in-sort ( \kore-symbol-Lbl'Hash'logToFile ptn0 ptn1 ) \kore-sort-SortK ) ) $.

$c \kore-symbol-Lbl'Hash'mkstemp'LParUndsRParUnds'K-IO'Unds'IOFile'Unds'String \kore-symbol-Lbl'Hash'mkstemp'LParUndsRParUnds'K-IO'Unds'IOFile'Unds'String-symbol $.
IMP-symbol-89-is-symbol $a #Symbol \kore-symbol-Lbl'Hash'mkstemp'LParUndsRParUnds'K-IO'Unds'IOFile'Unds'String-symbol $.
IMP-symbol-89-is-pattern $a #Pattern ( \kore-symbol-Lbl'Hash'mkstemp'LParUndsRParUnds'K-IO'Unds'IOFile'Unds'String ptn0 ) $.
IMP-symbol-89-is-sugar $a #Notation ( \kore-symbol-Lbl'Hash'mkstemp'LParUndsRParUnds'K-IO'Unds'IOFile'Unds'String ptn0 ) ( \app \kore-symbol-Lbl'Hash'mkstemp'LParUndsRParUnds'K-IO'Unds'IOFile'Unds'String-symbol ptn0 ) $.
IMP-symbol-89-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortString ) ( \in-sort ( \kore-symbol-Lbl'Hash'mkstemp'LParUndsRParUnds'K-IO'Unds'IOFile'Unds'String ptn0 ) \kore-sort-SortIOFile ) ) $.

$c \kore-symbol-Lbl'Hash'open'LParUndsRParUnds'K-IO'Unds'IOInt'Unds'String \kore-symbol-Lbl'Hash'open'LParUndsRParUnds'K-IO'Unds'IOInt'Unds'String-symbol $.
IMP-symbol-90-is-symbol $a #Symbol \kore-symbol-Lbl'Hash'open'LParUndsRParUnds'K-IO'Unds'IOInt'Unds'String-symbol $.
IMP-symbol-90-is-pattern $a #Pattern ( \kore-symbol-Lbl'Hash'open'LParUndsRParUnds'K-IO'Unds'IOInt'Unds'String ptn0 ) $.
IMP-symbol-90-is-sugar $a #Notation ( \kore-symbol-Lbl'Hash'open'LParUndsRParUnds'K-IO'Unds'IOInt'Unds'String ptn0 ) ( \app \kore-symbol-Lbl'Hash'open'LParUndsRParUnds'K-IO'Unds'IOInt'Unds'String-symbol ptn0 ) $.
IMP-symbol-90-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortString ) ( \in-sort ( \kore-symbol-Lbl'Hash'open'LParUndsRParUnds'K-IO'Unds'IOInt'Unds'String ptn0 ) \kore-sort-SortIOInt ) ) $.

$c \kore-symbol-Lbl'Hash'open'LParUndsCommUndsRParUnds'K-IO'Unds'IOInt'Unds'String'Unds'String \kore-symbol-Lbl'Hash'open'LParUndsCommUndsRParUnds'K-IO'Unds'IOInt'Unds'String'Unds'String-symbol $.
IMP-symbol-91-is-symbol $a #Symbol \kore-symbol-Lbl'Hash'open'LParUndsCommUndsRParUnds'K-IO'Unds'IOInt'Unds'String'Unds'String-symbol $.
IMP-symbol-91-is-pattern $a #Pattern ( \kore-symbol-Lbl'Hash'open'LParUndsCommUndsRParUnds'K-IO'Unds'IOInt'Unds'String'Unds'String ptn0 ptn1 ) $.
IMP-symbol-91-is-sugar $a #Notation ( \kore-symbol-Lbl'Hash'open'LParUndsCommUndsRParUnds'K-IO'Unds'IOInt'Unds'String'Unds'String ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'Hash'open'LParUndsCommUndsRParUnds'K-IO'Unds'IOInt'Unds'String'Unds'String-symbol ptn0 ) ptn1 ) $.
IMP-symbol-91-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortString ) ( \in-sort ptn1 \kore-sort-SortString ) ) ( \in-sort ( \kore-symbol-Lbl'Hash'open'LParUndsCommUndsRParUnds'K-IO'Unds'IOInt'Unds'String'Unds'String ptn0 ptn1 ) \kore-sort-SortIOInt ) ) $.

$c \kore-symbol-Lbl'Hash'putc'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'Int \kore-symbol-Lbl'Hash'putc'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'Int-symbol $.
IMP-symbol-92-is-symbol $a #Symbol \kore-symbol-Lbl'Hash'putc'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'Int-symbol $.
IMP-symbol-92-is-pattern $a #Pattern ( \kore-symbol-Lbl'Hash'putc'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'Int ptn0 ptn1 ) $.
IMP-symbol-92-is-sugar $a #Notation ( \kore-symbol-Lbl'Hash'putc'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'Int ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'Hash'putc'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'Int-symbol ptn0 ) ptn1 ) $.
IMP-symbol-92-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortInt ) ( \in-sort ptn1 \kore-sort-SortInt ) ) ( \in-sort ( \kore-symbol-Lbl'Hash'putc'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'Int ptn0 ptn1 ) \kore-sort-SortK ) ) $.

$c \kore-symbol-Lbl'Hash'read'LParUndsCommUndsRParUnds'K-IO'Unds'IOString'Unds'Int'Unds'Int \kore-symbol-Lbl'Hash'read'LParUndsCommUndsRParUnds'K-IO'Unds'IOString'Unds'Int'Unds'Int-symbol $.
IMP-symbol-93-is-symbol $a #Symbol \kore-symbol-Lbl'Hash'read'LParUndsCommUndsRParUnds'K-IO'Unds'IOString'Unds'Int'Unds'Int-symbol $.
IMP-symbol-93-is-pattern $a #Pattern ( \kore-symbol-Lbl'Hash'read'LParUndsCommUndsRParUnds'K-IO'Unds'IOString'Unds'Int'Unds'Int ptn0 ptn1 ) $.
IMP-symbol-93-is-sugar $a #Notation ( \kore-symbol-Lbl'Hash'read'LParUndsCommUndsRParUnds'K-IO'Unds'IOString'Unds'Int'Unds'Int ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'Hash'read'LParUndsCommUndsRParUnds'K-IO'Unds'IOString'Unds'Int'Unds'Int-symbol ptn0 ) ptn1 ) $.
IMP-symbol-93-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortInt ) ( \in-sort ptn1 \kore-sort-SortInt ) ) ( \in-sort ( \kore-symbol-Lbl'Hash'read'LParUndsCommUndsRParUnds'K-IO'Unds'IOString'Unds'Int'Unds'Int ptn0 ptn1 ) \kore-sort-SortIOString ) ) $.

$c \kore-symbol-Lbl'Hash'remove'LParUndsRParUnds'K-IO'Unds'K'Unds'String \kore-symbol-Lbl'Hash'remove'LParUndsRParUnds'K-IO'Unds'K'Unds'String-symbol $.
IMP-symbol-94-is-symbol $a #Symbol \kore-symbol-Lbl'Hash'remove'LParUndsRParUnds'K-IO'Unds'K'Unds'String-symbol $.
IMP-symbol-94-is-pattern $a #Pattern ( \kore-symbol-Lbl'Hash'remove'LParUndsRParUnds'K-IO'Unds'K'Unds'String ptn0 ) $.
IMP-symbol-94-is-sugar $a #Notation ( \kore-symbol-Lbl'Hash'remove'LParUndsRParUnds'K-IO'Unds'K'Unds'String ptn0 ) ( \app \kore-symbol-Lbl'Hash'remove'LParUndsRParUnds'K-IO'Unds'K'Unds'String-symbol ptn0 ) $.
IMP-symbol-94-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortString ) ( \in-sort ( \kore-symbol-Lbl'Hash'remove'LParUndsRParUnds'K-IO'Unds'K'Unds'String ptn0 ) \kore-sort-SortK ) ) $.

$c \kore-symbol-Lbl'Hash'seek'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'Int \kore-symbol-Lbl'Hash'seek'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'Int-symbol $.
IMP-symbol-95-is-symbol $a #Symbol \kore-symbol-Lbl'Hash'seek'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'Int-symbol $.
IMP-symbol-95-is-pattern $a #Pattern ( \kore-symbol-Lbl'Hash'seek'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'Int ptn0 ptn1 ) $.
IMP-symbol-95-is-sugar $a #Notation ( \kore-symbol-Lbl'Hash'seek'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'Int ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'Hash'seek'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'Int-symbol ptn0 ) ptn1 ) $.
IMP-symbol-95-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortInt ) ( \in-sort ptn1 \kore-sort-SortInt ) ) ( \in-sort ( \kore-symbol-Lbl'Hash'seek'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'Int ptn0 ptn1 ) \kore-sort-SortK ) ) $.

$c \kore-symbol-Lbl'Hash'seekEnd'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'Int \kore-symbol-Lbl'Hash'seekEnd'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'Int-symbol $.
IMP-symbol-96-is-symbol $a #Symbol \kore-symbol-Lbl'Hash'seekEnd'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'Int-symbol $.
IMP-symbol-96-is-pattern $a #Pattern ( \kore-symbol-Lbl'Hash'seekEnd'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'Int ptn0 ptn1 ) $.
IMP-symbol-96-is-sugar $a #Notation ( \kore-symbol-Lbl'Hash'seekEnd'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'Int ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'Hash'seekEnd'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'Int-symbol ptn0 ) ptn1 ) $.
IMP-symbol-96-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortInt ) ( \in-sort ptn1 \kore-sort-SortInt ) ) ( \in-sort ( \kore-symbol-Lbl'Hash'seekEnd'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'Int ptn0 ptn1 ) \kore-sort-SortK ) ) $.

$c \kore-symbol-Lbl'Hash'shutdownWrite'LParUndsRParUnds'K-IO'Unds'K'Unds'Int \kore-symbol-Lbl'Hash'shutdownWrite'LParUndsRParUnds'K-IO'Unds'K'Unds'Int-symbol $.
IMP-symbol-97-is-symbol $a #Symbol \kore-symbol-Lbl'Hash'shutdownWrite'LParUndsRParUnds'K-IO'Unds'K'Unds'Int-symbol $.
IMP-symbol-97-is-pattern $a #Pattern ( \kore-symbol-Lbl'Hash'shutdownWrite'LParUndsRParUnds'K-IO'Unds'K'Unds'Int ptn0 ) $.
IMP-symbol-97-is-sugar $a #Notation ( \kore-symbol-Lbl'Hash'shutdownWrite'LParUndsRParUnds'K-IO'Unds'K'Unds'Int ptn0 ) ( \app \kore-symbol-Lbl'Hash'shutdownWrite'LParUndsRParUnds'K-IO'Unds'K'Unds'Int-symbol ptn0 ) $.
IMP-symbol-97-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortInt ) ( \in-sort ( \kore-symbol-Lbl'Hash'shutdownWrite'LParUndsRParUnds'K-IO'Unds'K'Unds'Int ptn0 ) \kore-sort-SortK ) ) $.

$c \kore-symbol-Lbl'Hash'stderr'Unds'K-IO'Unds'Int \kore-symbol-Lbl'Hash'stderr'Unds'K-IO'Unds'Int-symbol $.
IMP-symbol-98-is-symbol $a #Symbol \kore-symbol-Lbl'Hash'stderr'Unds'K-IO'Unds'Int-symbol $.
IMP-symbol-98-is-pattern $a #Pattern \kore-symbol-Lbl'Hash'stderr'Unds'K-IO'Unds'Int $.
IMP-symbol-98-is-sugar $a #Notation \kore-symbol-Lbl'Hash'stderr'Unds'K-IO'Unds'Int \kore-symbol-Lbl'Hash'stderr'Unds'K-IO'Unds'Int-symbol $.
IMP-symbol-98-sorting $a |- ( \in-sort \kore-symbol-Lbl'Hash'stderr'Unds'K-IO'Unds'Int \kore-sort-SortInt ) $.

$c \kore-symbol-Lbl'Hash'stdin'Unds'K-IO'Unds'Int \kore-symbol-Lbl'Hash'stdin'Unds'K-IO'Unds'Int-symbol $.
IMP-symbol-99-is-symbol $a #Symbol \kore-symbol-Lbl'Hash'stdin'Unds'K-IO'Unds'Int-symbol $.
IMP-symbol-99-is-pattern $a #Pattern \kore-symbol-Lbl'Hash'stdin'Unds'K-IO'Unds'Int $.
IMP-symbol-99-is-sugar $a #Notation \kore-symbol-Lbl'Hash'stdin'Unds'K-IO'Unds'Int \kore-symbol-Lbl'Hash'stdin'Unds'K-IO'Unds'Int-symbol $.
IMP-symbol-99-sorting $a |- ( \in-sort \kore-symbol-Lbl'Hash'stdin'Unds'K-IO'Unds'Int \kore-sort-SortInt ) $.

$c \kore-symbol-Lbl'Hash'stdout'Unds'K-IO'Unds'Int \kore-symbol-Lbl'Hash'stdout'Unds'K-IO'Unds'Int-symbol $.
IMP-symbol-100-is-symbol $a #Symbol \kore-symbol-Lbl'Hash'stdout'Unds'K-IO'Unds'Int-symbol $.
IMP-symbol-100-is-pattern $a #Pattern \kore-symbol-Lbl'Hash'stdout'Unds'K-IO'Unds'Int $.
IMP-symbol-100-is-sugar $a #Notation \kore-symbol-Lbl'Hash'stdout'Unds'K-IO'Unds'Int \kore-symbol-Lbl'Hash'stdout'Unds'K-IO'Unds'Int-symbol $.
IMP-symbol-100-sorting $a |- ( \in-sort \kore-symbol-Lbl'Hash'stdout'Unds'K-IO'Unds'Int \kore-sort-SortInt ) $.

$c \kore-symbol-Lbl'Hash'system'LParUndsRParUnds'K-IO'Unds'KItem'Unds'String \kore-symbol-Lbl'Hash'system'LParUndsRParUnds'K-IO'Unds'KItem'Unds'String-symbol $.
IMP-symbol-101-is-symbol $a #Symbol \kore-symbol-Lbl'Hash'system'LParUndsRParUnds'K-IO'Unds'KItem'Unds'String-symbol $.
IMP-symbol-101-is-pattern $a #Pattern ( \kore-symbol-Lbl'Hash'system'LParUndsRParUnds'K-IO'Unds'KItem'Unds'String ptn0 ) $.
IMP-symbol-101-is-sugar $a #Notation ( \kore-symbol-Lbl'Hash'system'LParUndsRParUnds'K-IO'Unds'KItem'Unds'String ptn0 ) ( \app \kore-symbol-Lbl'Hash'system'LParUndsRParUnds'K-IO'Unds'KItem'Unds'String-symbol ptn0 ) $.
IMP-symbol-101-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortString ) ( \in-sort ( \kore-symbol-Lbl'Hash'system'LParUndsRParUnds'K-IO'Unds'KItem'Unds'String ptn0 ) \kore-sort-SortKItem ) ) $.

$c \kore-symbol-Lbl'Hash'systemResult \kore-symbol-Lbl'Hash'systemResult-symbol $.
IMP-symbol-102-is-symbol $a #Symbol \kore-symbol-Lbl'Hash'systemResult-symbol $.
IMP-symbol-102-is-pattern $a #Pattern ( \kore-symbol-Lbl'Hash'systemResult ptn0 ptn1 ptn2 ) $.
IMP-symbol-102-is-sugar $a #Notation ( \kore-symbol-Lbl'Hash'systemResult ptn0 ptn1 ptn2 ) ( \app ( \app ( \app \kore-symbol-Lbl'Hash'systemResult-symbol ptn0 ) ptn1 ) ptn2 ) $.
IMP-symbol-102-sorting $a |- ( \imp ( \and ( \and ( \in-sort ptn0 \kore-sort-SortInt ) ( \in-sort ptn1 \kore-sort-SortString ) ) ( \in-sort ptn2 \kore-sort-SortString ) ) ( \in-sort ( \kore-symbol-Lbl'Hash'systemResult ptn0 ptn1 ptn2 ) \kore-sort-SortKItem ) ) $.

$c \kore-symbol-Lbl'Hash'tell'LParUndsRParUnds'K-IO'Unds'IOInt'Unds'Int \kore-symbol-Lbl'Hash'tell'LParUndsRParUnds'K-IO'Unds'IOInt'Unds'Int-symbol $.
IMP-symbol-103-is-symbol $a #Symbol \kore-symbol-Lbl'Hash'tell'LParUndsRParUnds'K-IO'Unds'IOInt'Unds'Int-symbol $.
IMP-symbol-103-is-pattern $a #Pattern ( \kore-symbol-Lbl'Hash'tell'LParUndsRParUnds'K-IO'Unds'IOInt'Unds'Int ptn0 ) $.
IMP-symbol-103-is-sugar $a #Notation ( \kore-symbol-Lbl'Hash'tell'LParUndsRParUnds'K-IO'Unds'IOInt'Unds'Int ptn0 ) ( \app \kore-symbol-Lbl'Hash'tell'LParUndsRParUnds'K-IO'Unds'IOInt'Unds'Int-symbol ptn0 ) $.
IMP-symbol-103-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortInt ) ( \in-sort ( \kore-symbol-Lbl'Hash'tell'LParUndsRParUnds'K-IO'Unds'IOInt'Unds'Int ptn0 ) \kore-sort-SortIOInt ) ) $.

$c \kore-symbol-Lbl'Hash'tempFile \kore-symbol-Lbl'Hash'tempFile-symbol $.
IMP-symbol-104-is-symbol $a #Symbol \kore-symbol-Lbl'Hash'tempFile-symbol $.
IMP-symbol-104-is-pattern $a #Pattern ( \kore-symbol-Lbl'Hash'tempFile ptn0 ptn1 ) $.
IMP-symbol-104-is-sugar $a #Notation ( \kore-symbol-Lbl'Hash'tempFile ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'Hash'tempFile-symbol ptn0 ) ptn1 ) $.
IMP-symbol-104-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortString ) ( \in-sort ptn1 \kore-sort-SortInt ) ) ( \in-sort ( \kore-symbol-Lbl'Hash'tempFile ptn0 ptn1 ) \kore-sort-SortIOFile ) ) $.

$c \kore-symbol-Lbl'Hash'time'LParRParUnds'K-IO'Unds'Int \kore-symbol-Lbl'Hash'time'LParRParUnds'K-IO'Unds'Int-symbol $.
IMP-symbol-105-is-symbol $a #Symbol \kore-symbol-Lbl'Hash'time'LParRParUnds'K-IO'Unds'Int-symbol $.
IMP-symbol-105-is-pattern $a #Pattern \kore-symbol-Lbl'Hash'time'LParRParUnds'K-IO'Unds'Int $.
IMP-symbol-105-is-sugar $a #Notation \kore-symbol-Lbl'Hash'time'LParRParUnds'K-IO'Unds'Int \kore-symbol-Lbl'Hash'time'LParRParUnds'K-IO'Unds'Int-symbol $.
IMP-symbol-105-sorting $a |- ( \in-sort \kore-symbol-Lbl'Hash'time'LParRParUnds'K-IO'Unds'Int \kore-sort-SortInt ) $.

$c \kore-symbol-Lbl'Hash'unknownIOError \kore-symbol-Lbl'Hash'unknownIOError-symbol $.
IMP-symbol-106-is-symbol $a #Symbol \kore-symbol-Lbl'Hash'unknownIOError-symbol $.
IMP-symbol-106-is-pattern $a #Pattern ( \kore-symbol-Lbl'Hash'unknownIOError ptn0 ) $.
IMP-symbol-106-is-sugar $a #Notation ( \kore-symbol-Lbl'Hash'unknownIOError ptn0 ) ( \app \kore-symbol-Lbl'Hash'unknownIOError-symbol ptn0 ) $.
IMP-symbol-106-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortInt ) ( \in-sort ( \kore-symbol-Lbl'Hash'unknownIOError ptn0 ) \kore-sort-SortIOError ) ) $.

$c \kore-symbol-Lbl'Hash'unlock'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'Int \kore-symbol-Lbl'Hash'unlock'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'Int-symbol $.
IMP-symbol-107-is-symbol $a #Symbol \kore-symbol-Lbl'Hash'unlock'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'Int-symbol $.
IMP-symbol-107-is-pattern $a #Pattern ( \kore-symbol-Lbl'Hash'unlock'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'Int ptn0 ptn1 ) $.
IMP-symbol-107-is-sugar $a #Notation ( \kore-symbol-Lbl'Hash'unlock'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'Int ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'Hash'unlock'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'Int-symbol ptn0 ) ptn1 ) $.
IMP-symbol-107-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortInt ) ( \in-sort ptn1 \kore-sort-SortInt ) ) ( \in-sort ( \kore-symbol-Lbl'Hash'unlock'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'Int ptn0 ptn1 ) \kore-sort-SortK ) ) $.

$c \kore-symbol-Lbl'Hash'write'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'String \kore-symbol-Lbl'Hash'write'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'String-symbol $.
IMP-symbol-108-is-symbol $a #Symbol \kore-symbol-Lbl'Hash'write'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'String-symbol $.
IMP-symbol-108-is-pattern $a #Pattern ( \kore-symbol-Lbl'Hash'write'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'String ptn0 ptn1 ) $.
IMP-symbol-108-is-sugar $a #Notation ( \kore-symbol-Lbl'Hash'write'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'String ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'Hash'write'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'String-symbol ptn0 ) ptn1 ) $.
IMP-symbol-108-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortInt ) ( \in-sort ptn1 \kore-sort-SortString ) ) ( \in-sort ( \kore-symbol-Lbl'Hash'write'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'String ptn0 ptn1 ) \kore-sort-SortK ) ) $.

$c \kore-symbol-Lbl-'UndsUnds'IMP-SYNTAX'Unds'AExp'Unds'Int \kore-symbol-Lbl-'UndsUnds'IMP-SYNTAX'Unds'AExp'Unds'Int-symbol $.
IMP-symbol-109-is-symbol $a #Symbol \kore-symbol-Lbl-'UndsUnds'IMP-SYNTAX'Unds'AExp'Unds'Int-symbol $.
IMP-symbol-109-is-pattern $a #Pattern ( \kore-symbol-Lbl-'UndsUnds'IMP-SYNTAX'Unds'AExp'Unds'Int ptn0 ) $.
IMP-symbol-109-is-sugar $a #Notation ( \kore-symbol-Lbl-'UndsUnds'IMP-SYNTAX'Unds'AExp'Unds'Int ptn0 ) ( \app \kore-symbol-Lbl-'UndsUnds'IMP-SYNTAX'Unds'AExp'Unds'Int-symbol ptn0 ) $.
IMP-symbol-109-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortInt ) ( \in-sort ( \kore-symbol-Lbl-'UndsUnds'IMP-SYNTAX'Unds'AExp'Unds'Int ptn0 ) \kore-sort-SortAExp ) ) $.

$c \kore-symbol-Lbl'Stop'List \kore-symbol-Lbl'Stop'List-symbol $.
IMP-symbol-110-is-symbol $a #Symbol \kore-symbol-Lbl'Stop'List-symbol $.
IMP-symbol-110-is-pattern $a #Pattern \kore-symbol-Lbl'Stop'List $.
IMP-symbol-110-is-sugar $a #Notation \kore-symbol-Lbl'Stop'List \kore-symbol-Lbl'Stop'List-symbol $.
IMP-symbol-110-sorting $a |- ( \in-sort \kore-symbol-Lbl'Stop'List \kore-sort-SortList ) $.

$c \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids-symbol $.
IMP-symbol-111-is-symbol $a #Symbol \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids-symbol $.
IMP-symbol-111-is-pattern $a #Pattern \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids $.
IMP-symbol-111-is-sugar $a #Notation \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids-symbol $.
IMP-symbol-111-sorting $a |- ( \in-sort \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids \kore-sort-SortIds ) $.

$c \kore-symbol-Lbl'Stop'Map \kore-symbol-Lbl'Stop'Map-symbol $.
IMP-symbol-112-is-symbol $a #Symbol \kore-symbol-Lbl'Stop'Map-symbol $.
IMP-symbol-112-is-pattern $a #Pattern \kore-symbol-Lbl'Stop'Map $.
IMP-symbol-112-is-sugar $a #Notation \kore-symbol-Lbl'Stop'Map \kore-symbol-Lbl'Stop'Map-symbol $.
IMP-symbol-112-sorting $a |- ( \in-sort \kore-symbol-Lbl'Stop'Map \kore-sort-SortMap ) $.

$c \kore-symbol-Lbl'Stop'Set \kore-symbol-Lbl'Stop'Set-symbol $.
IMP-symbol-113-is-symbol $a #Symbol \kore-symbol-Lbl'Stop'Set-symbol $.
IMP-symbol-113-is-pattern $a #Pattern \kore-symbol-Lbl'Stop'Set $.
IMP-symbol-113-is-sugar $a #Notation \kore-symbol-Lbl'Stop'Set \kore-symbol-Lbl'Stop'Set-symbol $.
IMP-symbol-113-sorting $a |- ( \in-sort \kore-symbol-Lbl'Stop'Set \kore-sort-SortSet ) $.

$c \kore-symbol-Lbl'-LT-'T'-GT-' \kore-symbol-Lbl'-LT-'T'-GT-'-symbol $.
IMP-symbol-114-is-symbol $a #Symbol \kore-symbol-Lbl'-LT-'T'-GT-'-symbol $.
IMP-symbol-114-is-pattern $a #Pattern ( \kore-symbol-Lbl'-LT-'T'-GT-' ptn0 ptn1 ) $.
IMP-symbol-114-is-sugar $a #Notation ( \kore-symbol-Lbl'-LT-'T'-GT-' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'-LT-'T'-GT-'-symbol ptn0 ) ptn1 ) $.
IMP-symbol-114-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortKCell ) ( \in-sort ptn1 \kore-sort-SortStateCell ) ) ( \in-sort ( \kore-symbol-Lbl'-LT-'T'-GT-' ptn0 ptn1 ) \kore-sort-SortTCell ) ) $.

$c \kore-symbol-Lbl'-LT-'T'-GT-'-fragment \kore-symbol-Lbl'-LT-'T'-GT-'-fragment-symbol $.
IMP-symbol-115-is-symbol $a #Symbol \kore-symbol-Lbl'-LT-'T'-GT-'-fragment-symbol $.
IMP-symbol-115-is-pattern $a #Pattern ( \kore-symbol-Lbl'-LT-'T'-GT-'-fragment ptn0 ptn1 ) $.
IMP-symbol-115-is-sugar $a #Notation ( \kore-symbol-Lbl'-LT-'T'-GT-'-fragment ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'-LT-'T'-GT-'-fragment-symbol ptn0 ) ptn1 ) $.
IMP-symbol-115-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortKCellOpt ) ( \in-sort ptn1 \kore-sort-SortStateCellOpt ) ) ( \in-sort ( \kore-symbol-Lbl'-LT-'T'-GT-'-fragment ptn0 ptn1 ) \kore-sort-SortTCellFragment ) ) $.

$c \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' \kore-symbol-Lbl'-LT-'generatedCounter'-GT-'-symbol $.
IMP-symbol-116-is-symbol $a #Symbol \kore-symbol-Lbl'-LT-'generatedCounter'-GT-'-symbol $.
IMP-symbol-116-is-pattern $a #Pattern ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' ptn0 ) $.
IMP-symbol-116-is-sugar $a #Notation ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' ptn0 ) ( \app \kore-symbol-Lbl'-LT-'generatedCounter'-GT-'-symbol ptn0 ) $.
IMP-symbol-116-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortInt ) ( \in-sort ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' ptn0 ) \kore-sort-SortGeneratedCounterCell ) ) $.

$c \kore-symbol-Lbl'-LT-'generatedTop'-GT-' \kore-symbol-Lbl'-LT-'generatedTop'-GT-'-symbol $.
IMP-symbol-117-is-symbol $a #Symbol \kore-symbol-Lbl'-LT-'generatedTop'-GT-'-symbol $.
IMP-symbol-117-is-pattern $a #Pattern ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ptn0 ptn1 ) $.
IMP-symbol-117-is-sugar $a #Notation ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'-LT-'generatedTop'-GT-'-symbol ptn0 ) ptn1 ) $.
IMP-symbol-117-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortTCell ) ( \in-sort ptn1 \kore-sort-SortGeneratedCounterCell ) ) ( \in-sort ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ptn0 ptn1 ) \kore-sort-SortGeneratedTopCell ) ) $.

$c \kore-symbol-Lbl'-LT-'generatedTop'-GT-'-fragment \kore-symbol-Lbl'-LT-'generatedTop'-GT-'-fragment-symbol $.
IMP-symbol-118-is-symbol $a #Symbol \kore-symbol-Lbl'-LT-'generatedTop'-GT-'-fragment-symbol $.
IMP-symbol-118-is-pattern $a #Pattern ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-'-fragment ptn0 ptn1 ) $.
IMP-symbol-118-is-sugar $a #Notation ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-'-fragment ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'-LT-'generatedTop'-GT-'-fragment-symbol ptn0 ) ptn1 ) $.
IMP-symbol-118-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortTCellOpt ) ( \in-sort ptn1 \kore-sort-SortGeneratedCounterCellOpt ) ) ( \in-sort ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-'-fragment ptn0 ptn1 ) \kore-sort-SortGeneratedTopCellFragment ) ) $.

$c \kore-symbol-Lbl'-LT-'k'-GT-' \kore-symbol-Lbl'-LT-'k'-GT-'-symbol $.
IMP-symbol-119-is-symbol $a #Symbol \kore-symbol-Lbl'-LT-'k'-GT-'-symbol $.
IMP-symbol-119-is-pattern $a #Pattern ( \kore-symbol-Lbl'-LT-'k'-GT-' ptn0 ) $.
IMP-symbol-119-is-sugar $a #Notation ( \kore-symbol-Lbl'-LT-'k'-GT-' ptn0 ) ( \app \kore-symbol-Lbl'-LT-'k'-GT-'-symbol ptn0 ) $.
IMP-symbol-119-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ( \kore-symbol-Lbl'-LT-'k'-GT-' ptn0 ) \kore-sort-SortKCell ) ) $.

$c \kore-symbol-Lbl'-LT-'state'-GT-' \kore-symbol-Lbl'-LT-'state'-GT-'-symbol $.
IMP-symbol-120-is-symbol $a #Symbol \kore-symbol-Lbl'-LT-'state'-GT-'-symbol $.
IMP-symbol-120-is-pattern $a #Pattern ( \kore-symbol-Lbl'-LT-'state'-GT-' ptn0 ) $.
IMP-symbol-120-is-sugar $a #Notation ( \kore-symbol-Lbl'-LT-'state'-GT-' ptn0 ) ( \app \kore-symbol-Lbl'-LT-'state'-GT-'-symbol ptn0 ) $.
IMP-symbol-120-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortMap ) ( \in-sort ( \kore-symbol-Lbl'-LT-'state'-GT-' ptn0 ) \kore-sort-SortStateCell ) ) $.

$c \kore-symbol-LblBase2String'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'Int'Unds'Int \kore-symbol-LblBase2String'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'Int'Unds'Int-symbol $.
IMP-symbol-121-is-symbol $a #Symbol \kore-symbol-LblBase2String'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'Int'Unds'Int-symbol $.
IMP-symbol-121-is-pattern $a #Pattern ( \kore-symbol-LblBase2String'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'Int'Unds'Int ptn0 ptn1 ) $.
IMP-symbol-121-is-sugar $a #Notation ( \kore-symbol-LblBase2String'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'Int'Unds'Int ptn0 ptn1 ) ( \app ( \app \kore-symbol-LblBase2String'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'Int'Unds'Int-symbol ptn0 ) ptn1 ) $.
IMP-symbol-121-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortInt ) ( \in-sort ptn1 \kore-sort-SortInt ) ) ( \in-sort ( \kore-symbol-LblBase2String'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'Int'Unds'Int ptn0 ptn1 ) \kore-sort-SortString ) ) $.

$c \kore-symbol-LblBool2String'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Bool \kore-symbol-LblBool2String'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Bool-symbol $.
IMP-symbol-122-is-symbol $a #Symbol \kore-symbol-LblBool2String'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Bool-symbol $.
IMP-symbol-122-is-pattern $a #Pattern ( \kore-symbol-LblBool2String'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Bool ptn0 ) $.
IMP-symbol-122-is-sugar $a #Notation ( \kore-symbol-LblBool2String'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Bool ptn0 ) ( \app \kore-symbol-LblBool2String'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Bool-symbol ptn0 ) $.
IMP-symbol-122-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortBool ) ( \in-sort ( \kore-symbol-LblBool2String'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Bool ptn0 ) \kore-sort-SortString ) ) $.

$c \kore-symbol-LblFloat2String'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Float \kore-symbol-LblFloat2String'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Float-symbol $.
IMP-symbol-123-is-symbol $a #Symbol \kore-symbol-LblFloat2String'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Float-symbol $.
IMP-symbol-123-is-pattern $a #Pattern ( \kore-symbol-LblFloat2String'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Float ptn0 ) $.
IMP-symbol-123-is-sugar $a #Notation ( \kore-symbol-LblFloat2String'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Float ptn0 ) ( \app \kore-symbol-LblFloat2String'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Float-symbol ptn0 ) $.
IMP-symbol-123-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortFloat ) ( \in-sort ( \kore-symbol-LblFloat2String'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Float ptn0 ) \kore-sort-SortString ) ) $.

$c \kore-symbol-LblFloat2String'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'Float'Unds'String \kore-symbol-LblFloat2String'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'Float'Unds'String-symbol $.
IMP-symbol-124-is-symbol $a #Symbol \kore-symbol-LblFloat2String'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'Float'Unds'String-symbol $.
IMP-symbol-124-is-pattern $a #Pattern ( \kore-symbol-LblFloat2String'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'Float'Unds'String ptn0 ptn1 ) $.
IMP-symbol-124-is-sugar $a #Notation ( \kore-symbol-LblFloat2String'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'Float'Unds'String ptn0 ptn1 ) ( \app ( \app \kore-symbol-LblFloat2String'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'Float'Unds'String-symbol ptn0 ) ptn1 ) $.
IMP-symbol-124-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortFloat ) ( \in-sort ptn1 \kore-sort-SortString ) ) ( \in-sort ( \kore-symbol-LblFloat2String'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'Float'Unds'String ptn0 ptn1 ) \kore-sort-SortString ) ) $.

$c \kore-symbol-LblId2String'LParUndsRParUnds'ID-COMMON'Unds'String'Unds'Id \kore-symbol-LblId2String'LParUndsRParUnds'ID-COMMON'Unds'String'Unds'Id-symbol $.
IMP-symbol-125-is-symbol $a #Symbol \kore-symbol-LblId2String'LParUndsRParUnds'ID-COMMON'Unds'String'Unds'Id-symbol $.
IMP-symbol-125-is-pattern $a #Pattern ( \kore-symbol-LblId2String'LParUndsRParUnds'ID-COMMON'Unds'String'Unds'Id ptn0 ) $.
IMP-symbol-125-is-sugar $a #Notation ( \kore-symbol-LblId2String'LParUndsRParUnds'ID-COMMON'Unds'String'Unds'Id ptn0 ) ( \app \kore-symbol-LblId2String'LParUndsRParUnds'ID-COMMON'Unds'String'Unds'Id-symbol ptn0 ) $.
IMP-symbol-125-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortId ) ( \in-sort ( \kore-symbol-LblId2String'LParUndsRParUnds'ID-COMMON'Unds'String'Unds'Id ptn0 ) \kore-sort-SortString ) ) $.

$c \kore-symbol-LblInt2String'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Int \kore-symbol-LblInt2String'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Int-symbol $.
IMP-symbol-126-is-symbol $a #Symbol \kore-symbol-LblInt2String'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Int-symbol $.
IMP-symbol-126-is-pattern $a #Pattern ( \kore-symbol-LblInt2String'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Int ptn0 ) $.
IMP-symbol-126-is-sugar $a #Notation ( \kore-symbol-LblInt2String'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Int ptn0 ) ( \app \kore-symbol-LblInt2String'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Int-symbol ptn0 ) $.
IMP-symbol-126-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortInt ) ( \in-sort ( \kore-symbol-LblInt2String'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Int ptn0 ) \kore-sort-SortString ) ) $.

$c \kore-symbol-LblList'Coln'get \kore-symbol-LblList'Coln'get-symbol $.
IMP-symbol-127-is-symbol $a #Symbol \kore-symbol-LblList'Coln'get-symbol $.
IMP-symbol-127-is-pattern $a #Pattern ( \kore-symbol-LblList'Coln'get ptn0 ptn1 ) $.
IMP-symbol-127-is-sugar $a #Notation ( \kore-symbol-LblList'Coln'get ptn0 ptn1 ) ( \app ( \app \kore-symbol-LblList'Coln'get-symbol ptn0 ) ptn1 ) $.
IMP-symbol-127-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortList ) ( \in-sort ptn1 \kore-sort-SortInt ) ) ( \in-sort ( \kore-symbol-LblList'Coln'get ptn0 ptn1 ) \kore-sort-SortKItem ) ) $.

$c \kore-symbol-LblList'Coln'range \kore-symbol-LblList'Coln'range-symbol $.
IMP-symbol-128-is-symbol $a #Symbol \kore-symbol-LblList'Coln'range-symbol $.
IMP-symbol-128-is-pattern $a #Pattern ( \kore-symbol-LblList'Coln'range ptn0 ptn1 ptn2 ) $.
IMP-symbol-128-is-sugar $a #Notation ( \kore-symbol-LblList'Coln'range ptn0 ptn1 ptn2 ) ( \app ( \app ( \app \kore-symbol-LblList'Coln'range-symbol ptn0 ) ptn1 ) ptn2 ) $.
IMP-symbol-128-sorting $a |- ( \imp ( \and ( \and ( \in-sort ptn0 \kore-sort-SortList ) ( \in-sort ptn1 \kore-sort-SortInt ) ) ( \in-sort ptn2 \kore-sort-SortInt ) ) ( \in-sort ( \kore-symbol-LblList'Coln'range ptn0 ptn1 ptn2 ) \kore-sort-SortList ) ) $.

$c \kore-symbol-LblListItem \kore-symbol-LblListItem-symbol $.
IMP-symbol-129-is-symbol $a #Symbol \kore-symbol-LblListItem-symbol $.
IMP-symbol-129-is-pattern $a #Pattern ( \kore-symbol-LblListItem ptn0 ) $.
IMP-symbol-129-is-sugar $a #Notation ( \kore-symbol-LblListItem ptn0 ) ( \app \kore-symbol-LblListItem-symbol ptn0 ) $.
IMP-symbol-129-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortKItem ) ( \in-sort ( \kore-symbol-LblListItem ptn0 ) \kore-sort-SortList ) ) $.

$c \kore-symbol-LblMap'Coln'lookup \kore-symbol-LblMap'Coln'lookup-symbol $.
IMP-symbol-130-is-symbol $a #Symbol \kore-symbol-LblMap'Coln'lookup-symbol $.
IMP-symbol-130-is-pattern $a #Pattern ( \kore-symbol-LblMap'Coln'lookup ptn0 ptn1 ) $.
IMP-symbol-130-is-sugar $a #Notation ( \kore-symbol-LblMap'Coln'lookup ptn0 ptn1 ) ( \app ( \app \kore-symbol-LblMap'Coln'lookup-symbol ptn0 ) ptn1 ) $.
IMP-symbol-130-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortMap ) ( \in-sort ptn1 \kore-sort-SortKItem ) ) ( \in-sort ( \kore-symbol-LblMap'Coln'lookup ptn0 ptn1 ) \kore-sort-SortKItem ) ) $.

$c \kore-symbol-LblMap'Coln'update \kore-symbol-LblMap'Coln'update-symbol $.
IMP-symbol-131-is-symbol $a #Symbol \kore-symbol-LblMap'Coln'update-symbol $.
IMP-symbol-131-is-pattern $a #Pattern ( \kore-symbol-LblMap'Coln'update ptn0 ptn1 ptn2 ) $.
IMP-symbol-131-is-sugar $a #Notation ( \kore-symbol-LblMap'Coln'update ptn0 ptn1 ptn2 ) ( \app ( \app ( \app \kore-symbol-LblMap'Coln'update-symbol ptn0 ) ptn1 ) ptn2 ) $.
IMP-symbol-131-sorting $a |- ( \imp ( \and ( \and ( \in-sort ptn0 \kore-sort-SortMap ) ( \in-sort ptn1 \kore-sort-SortKItem ) ) ( \in-sort ptn2 \kore-sort-SortKItem ) ) ( \in-sort ( \kore-symbol-LblMap'Coln'update ptn0 ptn1 ptn2 ) \kore-sort-SortMap ) ) $.

$c \kore-symbol-LblSet'Coln'difference \kore-symbol-LblSet'Coln'difference-symbol $.
IMP-symbol-132-is-symbol $a #Symbol \kore-symbol-LblSet'Coln'difference-symbol $.
IMP-symbol-132-is-pattern $a #Pattern ( \kore-symbol-LblSet'Coln'difference ptn0 ptn1 ) $.
IMP-symbol-132-is-sugar $a #Notation ( \kore-symbol-LblSet'Coln'difference ptn0 ptn1 ) ( \app ( \app \kore-symbol-LblSet'Coln'difference-symbol ptn0 ) ptn1 ) $.
IMP-symbol-132-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortSet ) ( \in-sort ptn1 \kore-sort-SortSet ) ) ( \in-sort ( \kore-symbol-LblSet'Coln'difference ptn0 ptn1 ) \kore-sort-SortSet ) ) $.

$c \kore-symbol-LblSet'Coln'in \kore-symbol-LblSet'Coln'in-symbol $.
IMP-symbol-133-is-symbol $a #Symbol \kore-symbol-LblSet'Coln'in-symbol $.
IMP-symbol-133-is-pattern $a #Pattern ( \kore-symbol-LblSet'Coln'in ptn0 ptn1 ) $.
IMP-symbol-133-is-sugar $a #Notation ( \kore-symbol-LblSet'Coln'in ptn0 ptn1 ) ( \app ( \app \kore-symbol-LblSet'Coln'in-symbol ptn0 ) ptn1 ) $.
IMP-symbol-133-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortKItem ) ( \in-sort ptn1 \kore-sort-SortSet ) ) ( \in-sort ( \kore-symbol-LblSet'Coln'in ptn0 ptn1 ) \kore-sort-SortBool ) ) $.

$c \kore-symbol-LblSetItem \kore-symbol-LblSetItem-symbol $.
IMP-symbol-134-is-symbol $a #Symbol \kore-symbol-LblSetItem-symbol $.
IMP-symbol-134-is-pattern $a #Pattern ( \kore-symbol-LblSetItem ptn0 ) $.
IMP-symbol-134-is-sugar $a #Notation ( \kore-symbol-LblSetItem ptn0 ) ( \app \kore-symbol-LblSetItem-symbol ptn0 ) $.
IMP-symbol-134-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortKItem ) ( \in-sort ( \kore-symbol-LblSetItem ptn0 ) \kore-sort-SortSet ) ) $.

$c \kore-symbol-LblString2Base'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'Int \kore-symbol-LblString2Base'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'Int-symbol $.
IMP-symbol-135-is-symbol $a #Symbol \kore-symbol-LblString2Base'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'Int-symbol $.
IMP-symbol-135-is-pattern $a #Pattern ( \kore-symbol-LblString2Base'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'Int ptn0 ptn1 ) $.
IMP-symbol-135-is-sugar $a #Notation ( \kore-symbol-LblString2Base'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'Int ptn0 ptn1 ) ( \app ( \app \kore-symbol-LblString2Base'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'Int-symbol ptn0 ) ptn1 ) $.
IMP-symbol-135-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortString ) ( \in-sort ptn1 \kore-sort-SortInt ) ) ( \in-sort ( \kore-symbol-LblString2Base'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'Int ptn0 ptn1 ) \kore-sort-SortInt ) ) $.

$c \kore-symbol-LblString2Bool'LParUndsRParUnds'STRING-COMMON'Unds'Bool'Unds'String \kore-symbol-LblString2Bool'LParUndsRParUnds'STRING-COMMON'Unds'Bool'Unds'String-symbol $.
IMP-symbol-136-is-symbol $a #Symbol \kore-symbol-LblString2Bool'LParUndsRParUnds'STRING-COMMON'Unds'Bool'Unds'String-symbol $.
IMP-symbol-136-is-pattern $a #Pattern ( \kore-symbol-LblString2Bool'LParUndsRParUnds'STRING-COMMON'Unds'Bool'Unds'String ptn0 ) $.
IMP-symbol-136-is-sugar $a #Notation ( \kore-symbol-LblString2Bool'LParUndsRParUnds'STRING-COMMON'Unds'Bool'Unds'String ptn0 ) ( \app \kore-symbol-LblString2Bool'LParUndsRParUnds'STRING-COMMON'Unds'Bool'Unds'String-symbol ptn0 ) $.
IMP-symbol-136-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortString ) ( \in-sort ( \kore-symbol-LblString2Bool'LParUndsRParUnds'STRING-COMMON'Unds'Bool'Unds'String ptn0 ) \kore-sort-SortBool ) ) $.

$c \kore-symbol-LblString2Float'LParUndsRParUnds'STRING-COMMON'Unds'Float'Unds'String \kore-symbol-LblString2Float'LParUndsRParUnds'STRING-COMMON'Unds'Float'Unds'String-symbol $.
IMP-symbol-137-is-symbol $a #Symbol \kore-symbol-LblString2Float'LParUndsRParUnds'STRING-COMMON'Unds'Float'Unds'String-symbol $.
IMP-symbol-137-is-pattern $a #Pattern ( \kore-symbol-LblString2Float'LParUndsRParUnds'STRING-COMMON'Unds'Float'Unds'String ptn0 ) $.
IMP-symbol-137-is-sugar $a #Notation ( \kore-symbol-LblString2Float'LParUndsRParUnds'STRING-COMMON'Unds'Float'Unds'String ptn0 ) ( \app \kore-symbol-LblString2Float'LParUndsRParUnds'STRING-COMMON'Unds'Float'Unds'String-symbol ptn0 ) $.
IMP-symbol-137-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortString ) ( \in-sort ( \kore-symbol-LblString2Float'LParUndsRParUnds'STRING-COMMON'Unds'Float'Unds'String ptn0 ) \kore-sort-SortFloat ) ) $.

$c \kore-symbol-LblString2Id'LParUndsRParUnds'ID-COMMON'Unds'Id'Unds'String \kore-symbol-LblString2Id'LParUndsRParUnds'ID-COMMON'Unds'Id'Unds'String-symbol $.
IMP-symbol-138-is-symbol $a #Symbol \kore-symbol-LblString2Id'LParUndsRParUnds'ID-COMMON'Unds'Id'Unds'String-symbol $.
IMP-symbol-138-is-pattern $a #Pattern ( \kore-symbol-LblString2Id'LParUndsRParUnds'ID-COMMON'Unds'Id'Unds'String ptn0 ) $.
IMP-symbol-138-is-sugar $a #Notation ( \kore-symbol-LblString2Id'LParUndsRParUnds'ID-COMMON'Unds'Id'Unds'String ptn0 ) ( \app \kore-symbol-LblString2Id'LParUndsRParUnds'ID-COMMON'Unds'Id'Unds'String-symbol ptn0 ) $.
IMP-symbol-138-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortString ) ( \in-sort ( \kore-symbol-LblString2Id'LParUndsRParUnds'ID-COMMON'Unds'Id'Unds'String ptn0 ) \kore-sort-SortId ) ) $.

$c \kore-symbol-LblString2Int'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String \kore-symbol-LblString2Int'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String-symbol $.
IMP-symbol-139-is-symbol $a #Symbol \kore-symbol-LblString2Int'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String-symbol $.
IMP-symbol-139-is-pattern $a #Pattern ( \kore-symbol-LblString2Int'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String ptn0 ) $.
IMP-symbol-139-is-sugar $a #Notation ( \kore-symbol-LblString2Int'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String ptn0 ) ( \app \kore-symbol-LblString2Int'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String-symbol ptn0 ) $.
IMP-symbol-139-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortString ) ( \in-sort ( \kore-symbol-LblString2Int'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String ptn0 ) \kore-sort-SortInt ) ) $.

$c \kore-symbol-Lbl'UndsPerc'Int'Unds' \kore-symbol-Lbl'UndsPerc'Int'Unds'-symbol $.
IMP-symbol-140-is-symbol $a #Symbol \kore-symbol-Lbl'UndsPerc'Int'Unds'-symbol $.
IMP-symbol-140-is-pattern $a #Pattern ( \kore-symbol-Lbl'UndsPerc'Int'Unds' ptn0 ptn1 ) $.
IMP-symbol-140-is-sugar $a #Notation ( \kore-symbol-Lbl'UndsPerc'Int'Unds' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'UndsPerc'Int'Unds'-symbol ptn0 ) ptn1 ) $.
IMP-symbol-140-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortInt ) ( \in-sort ptn1 \kore-sort-SortInt ) ) ( \in-sort ( \kore-symbol-Lbl'UndsPerc'Int'Unds' ptn0 ptn1 ) \kore-sort-SortInt ) ) $.

$c \kore-symbol-Lbl'UndsAnd-And-UndsUnds'IMP-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp \kore-symbol-Lbl'UndsAnd-And-UndsUnds'IMP-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp-symbol $.
IMP-symbol-141-is-symbol $a #Symbol \kore-symbol-Lbl'UndsAnd-And-UndsUnds'IMP-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp-symbol $.
IMP-symbol-141-is-pattern $a #Pattern ( \kore-symbol-Lbl'UndsAnd-And-UndsUnds'IMP-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp ptn0 ptn1 ) $.
IMP-symbol-141-is-sugar $a #Notation ( \kore-symbol-Lbl'UndsAnd-And-UndsUnds'IMP-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'UndsAnd-And-UndsUnds'IMP-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp-symbol ptn0 ) ptn1 ) $.
IMP-symbol-141-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortBExp ) ( \in-sort ptn1 \kore-sort-SortBExp ) ) ( \in-sort ( \kore-symbol-Lbl'UndsAnd-And-UndsUnds'IMP-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp ptn0 ptn1 ) \kore-sort-SortBExp ) ) $.

$c \kore-symbol-Lbl'UndsAnd-'Int'Unds' \kore-symbol-Lbl'UndsAnd-'Int'Unds'-symbol $.
IMP-symbol-142-is-symbol $a #Symbol \kore-symbol-Lbl'UndsAnd-'Int'Unds'-symbol $.
IMP-symbol-142-is-pattern $a #Pattern ( \kore-symbol-Lbl'UndsAnd-'Int'Unds' ptn0 ptn1 ) $.
IMP-symbol-142-is-sugar $a #Notation ( \kore-symbol-Lbl'UndsAnd-'Int'Unds' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'UndsAnd-'Int'Unds'-symbol ptn0 ) ptn1 ) $.
IMP-symbol-142-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortInt ) ( \in-sort ptn1 \kore-sort-SortInt ) ) ( \in-sort ( \kore-symbol-Lbl'UndsAnd-'Int'Unds' ptn0 ptn1 ) \kore-sort-SortInt ) ) $.

$c \kore-symbol-Lbl'UndsStar'Int'Unds' \kore-symbol-Lbl'UndsStar'Int'Unds'-symbol $.
IMP-symbol-143-is-symbol $a #Symbol \kore-symbol-Lbl'UndsStar'Int'Unds'-symbol $.
IMP-symbol-143-is-pattern $a #Pattern ( \kore-symbol-Lbl'UndsStar'Int'Unds' ptn0 ptn1 ) $.
IMP-symbol-143-is-sugar $a #Notation ( \kore-symbol-Lbl'UndsStar'Int'Unds' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'UndsStar'Int'Unds'-symbol ptn0 ) ptn1 ) $.
IMP-symbol-143-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortInt ) ( \in-sort ptn1 \kore-sort-SortInt ) ) ( \in-sort ( \kore-symbol-Lbl'UndsStar'Int'Unds' ptn0 ptn1 ) \kore-sort-SortInt ) ) $.

$c \kore-symbol-Lbl'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp \kore-symbol-Lbl'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp-symbol $.
IMP-symbol-144-is-symbol $a #Symbol \kore-symbol-Lbl'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp-symbol $.
IMP-symbol-144-is-pattern $a #Pattern ( \kore-symbol-Lbl'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp ptn0 ptn1 ) $.
IMP-symbol-144-is-sugar $a #Notation ( \kore-symbol-Lbl'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp-symbol ptn0 ) ptn1 ) $.
IMP-symbol-144-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortAExp ) ( \in-sort ptn1 \kore-sort-SortAExp ) ) ( \in-sort ( \kore-symbol-Lbl'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp ptn0 ptn1 ) \kore-sort-SortAExp ) ) $.

$c \kore-symbol-Lbl'UndsPlus'Int'Unds' \kore-symbol-Lbl'UndsPlus'Int'Unds'-symbol $.
IMP-symbol-145-is-symbol $a #Symbol \kore-symbol-Lbl'UndsPlus'Int'Unds'-symbol $.
IMP-symbol-145-is-pattern $a #Pattern ( \kore-symbol-Lbl'UndsPlus'Int'Unds' ptn0 ptn1 ) $.
IMP-symbol-145-is-sugar $a #Notation ( \kore-symbol-Lbl'UndsPlus'Int'Unds' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'UndsPlus'Int'Unds'-symbol ptn0 ) ptn1 ) $.
IMP-symbol-145-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortInt ) ( \in-sort ptn1 \kore-sort-SortInt ) ) ( \in-sort ( \kore-symbol-Lbl'UndsPlus'Int'Unds' ptn0 ptn1 ) \kore-sort-SortInt ) ) $.

$c \kore-symbol-Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String \kore-symbol-Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String-symbol $.
IMP-symbol-146-is-symbol $a #Symbol \kore-symbol-Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String-symbol $.
IMP-symbol-146-is-pattern $a #Pattern ( \kore-symbol-Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String ptn0 ptn1 ) $.
IMP-symbol-146-is-sugar $a #Notation ( \kore-symbol-Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String-symbol ptn0 ) ptn1 ) $.
IMP-symbol-146-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortString ) ( \in-sort ptn1 \kore-sort-SortString ) ) ( \in-sort ( \kore-symbol-Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String ptn0 ptn1 ) \kore-sort-SortString ) ) $.

$c \kore-symbol-Lbl'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp \kore-symbol-Lbl'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp-symbol $.
IMP-symbol-147-is-symbol $a #Symbol \kore-symbol-Lbl'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp-symbol $.
IMP-symbol-147-is-pattern $a #Pattern ( \kore-symbol-Lbl'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp ptn0 ptn1 ) $.
IMP-symbol-147-is-sugar $a #Notation ( \kore-symbol-Lbl'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp-symbol ptn0 ) ptn1 ) $.
IMP-symbol-147-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortAExp ) ( \in-sort ptn1 \kore-sort-SortAExp ) ) ( \in-sort ( \kore-symbol-Lbl'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp ptn0 ptn1 ) \kore-sort-SortAExp ) ) $.

$c \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids-symbol $.
IMP-symbol-148-is-symbol $a #Symbol \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids-symbol $.
IMP-symbol-148-is-pattern $a #Pattern ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ptn0 ptn1 ) $.
IMP-symbol-148-is-sugar $a #Notation ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids-symbol ptn0 ) ptn1 ) $.
IMP-symbol-148-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortId ) ( \in-sort ptn1 \kore-sort-SortIds ) ) ( \in-sort ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ptn0 ptn1 ) \kore-sort-SortIds ) ) $.

$c \kore-symbol-Lbl'Unds'-Int'Unds' \kore-symbol-Lbl'Unds'-Int'Unds'-symbol $.
IMP-symbol-149-is-symbol $a #Symbol \kore-symbol-Lbl'Unds'-Int'Unds'-symbol $.
IMP-symbol-149-is-pattern $a #Pattern ( \kore-symbol-Lbl'Unds'-Int'Unds' ptn0 ptn1 ) $.
IMP-symbol-149-is-sugar $a #Notation ( \kore-symbol-Lbl'Unds'-Int'Unds' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'Unds'-Int'Unds'-symbol ptn0 ) ptn1 ) $.
IMP-symbol-149-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortInt ) ( \in-sort ptn1 \kore-sort-SortInt ) ) ( \in-sort ( \kore-symbol-Lbl'Unds'-Int'Unds' ptn0 ptn1 ) \kore-sort-SortInt ) ) $.

$c \kore-symbol-Lbl'Unds'-Map'UndsUnds'MAP'Unds'Map'Unds'Map'Unds'Map \kore-symbol-Lbl'Unds'-Map'UndsUnds'MAP'Unds'Map'Unds'Map'Unds'Map-symbol $.
IMP-symbol-150-is-symbol $a #Symbol \kore-symbol-Lbl'Unds'-Map'UndsUnds'MAP'Unds'Map'Unds'Map'Unds'Map-symbol $.
IMP-symbol-150-is-pattern $a #Pattern ( \kore-symbol-Lbl'Unds'-Map'UndsUnds'MAP'Unds'Map'Unds'Map'Unds'Map ptn0 ptn1 ) $.
IMP-symbol-150-is-sugar $a #Notation ( \kore-symbol-Lbl'Unds'-Map'UndsUnds'MAP'Unds'Map'Unds'Map'Unds'Map ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'Unds'-Map'UndsUnds'MAP'Unds'Map'Unds'Map'Unds'Map-symbol ptn0 ) ptn1 ) $.
IMP-symbol-150-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortMap ) ( \in-sort ptn1 \kore-sort-SortMap ) ) ( \in-sort ( \kore-symbol-Lbl'Unds'-Map'UndsUnds'MAP'Unds'Map'Unds'Map'Unds'Map ptn0 ptn1 ) \kore-sort-SortMap ) ) $.

$c \kore-symbol-Lbl'UndsSlsh'Int'Unds' \kore-symbol-Lbl'UndsSlsh'Int'Unds'-symbol $.
IMP-symbol-151-is-symbol $a #Symbol \kore-symbol-Lbl'UndsSlsh'Int'Unds'-symbol $.
IMP-symbol-151-is-pattern $a #Pattern ( \kore-symbol-Lbl'UndsSlsh'Int'Unds' ptn0 ptn1 ) $.
IMP-symbol-151-is-sugar $a #Notation ( \kore-symbol-Lbl'UndsSlsh'Int'Unds' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'UndsSlsh'Int'Unds'-symbol ptn0 ) ptn1 ) $.
IMP-symbol-151-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortInt ) ( \in-sort ptn1 \kore-sort-SortInt ) ) ( \in-sort ( \kore-symbol-Lbl'UndsSlsh'Int'Unds' ptn0 ptn1 ) \kore-sort-SortInt ) ) $.

$c \kore-symbol-Lbl'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp \kore-symbol-Lbl'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp-symbol $.
IMP-symbol-152-is-symbol $a #Symbol \kore-symbol-Lbl'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp-symbol $.
IMP-symbol-152-is-pattern $a #Pattern ( \kore-symbol-Lbl'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp ptn0 ptn1 ) $.
IMP-symbol-152-is-sugar $a #Notation ( \kore-symbol-Lbl'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp-symbol ptn0 ) ptn1 ) $.
IMP-symbol-152-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortAExp ) ( \in-sort ptn1 \kore-sort-SortAExp ) ) ( \in-sort ( \kore-symbol-Lbl'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp ptn0 ptn1 ) \kore-sort-SortAExp ) ) $.

$c \kore-symbol-Lbl'Unds-LT--LT-'Int'Unds' \kore-symbol-Lbl'Unds-LT--LT-'Int'Unds'-symbol $.
IMP-symbol-153-is-symbol $a #Symbol \kore-symbol-Lbl'Unds-LT--LT-'Int'Unds'-symbol $.
IMP-symbol-153-is-pattern $a #Pattern ( \kore-symbol-Lbl'Unds-LT--LT-'Int'Unds' ptn0 ptn1 ) $.
IMP-symbol-153-is-sugar $a #Notation ( \kore-symbol-Lbl'Unds-LT--LT-'Int'Unds' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'Unds-LT--LT-'Int'Unds'-symbol ptn0 ) ptn1 ) $.
IMP-symbol-153-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortInt ) ( \in-sort ptn1 \kore-sort-SortInt ) ) ( \in-sort ( \kore-symbol-Lbl'Unds-LT--LT-'Int'Unds' ptn0 ptn1 ) \kore-sort-SortInt ) ) $.

$c \kore-symbol-Lbl'Unds-LT-Eqls'Int'Unds' \kore-symbol-Lbl'Unds-LT-Eqls'Int'Unds'-symbol $.
IMP-symbol-154-is-symbol $a #Symbol \kore-symbol-Lbl'Unds-LT-Eqls'Int'Unds'-symbol $.
IMP-symbol-154-is-pattern $a #Pattern ( \kore-symbol-Lbl'Unds-LT-Eqls'Int'Unds' ptn0 ptn1 ) $.
IMP-symbol-154-is-sugar $a #Notation ( \kore-symbol-Lbl'Unds-LT-Eqls'Int'Unds' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'Unds-LT-Eqls'Int'Unds'-symbol ptn0 ) ptn1 ) $.
IMP-symbol-154-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortInt ) ( \in-sort ptn1 \kore-sort-SortInt ) ) ( \in-sort ( \kore-symbol-Lbl'Unds-LT-Eqls'Int'Unds' ptn0 ptn1 ) \kore-sort-SortBool ) ) $.

$c \kore-symbol-Lbl'Unds-LT-Eqls'Map'UndsUnds'MAP'Unds'Bool'Unds'Map'Unds'Map \kore-symbol-Lbl'Unds-LT-Eqls'Map'UndsUnds'MAP'Unds'Bool'Unds'Map'Unds'Map-symbol $.
IMP-symbol-155-is-symbol $a #Symbol \kore-symbol-Lbl'Unds-LT-Eqls'Map'UndsUnds'MAP'Unds'Bool'Unds'Map'Unds'Map-symbol $.
IMP-symbol-155-is-pattern $a #Pattern ( \kore-symbol-Lbl'Unds-LT-Eqls'Map'UndsUnds'MAP'Unds'Bool'Unds'Map'Unds'Map ptn0 ptn1 ) $.
IMP-symbol-155-is-sugar $a #Notation ( \kore-symbol-Lbl'Unds-LT-Eqls'Map'UndsUnds'MAP'Unds'Bool'Unds'Map'Unds'Map ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'Unds-LT-Eqls'Map'UndsUnds'MAP'Unds'Bool'Unds'Map'Unds'Map-symbol ptn0 ) ptn1 ) $.
IMP-symbol-155-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortMap ) ( \in-sort ptn1 \kore-sort-SortMap ) ) ( \in-sort ( \kore-symbol-Lbl'Unds-LT-Eqls'Map'UndsUnds'MAP'Unds'Bool'Unds'Map'Unds'Map ptn0 ptn1 ) \kore-sort-SortBool ) ) $.

$c \kore-symbol-Lbl'Unds-LT-Eqls'Set'UndsUnds'SET'Unds'Bool'Unds'Set'Unds'Set \kore-symbol-Lbl'Unds-LT-Eqls'Set'UndsUnds'SET'Unds'Bool'Unds'Set'Unds'Set-symbol $.
IMP-symbol-156-is-symbol $a #Symbol \kore-symbol-Lbl'Unds-LT-Eqls'Set'UndsUnds'SET'Unds'Bool'Unds'Set'Unds'Set-symbol $.
IMP-symbol-156-is-pattern $a #Pattern ( \kore-symbol-Lbl'Unds-LT-Eqls'Set'UndsUnds'SET'Unds'Bool'Unds'Set'Unds'Set ptn0 ptn1 ) $.
IMP-symbol-156-is-sugar $a #Notation ( \kore-symbol-Lbl'Unds-LT-Eqls'Set'UndsUnds'SET'Unds'Bool'Unds'Set'Unds'Set ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'Unds-LT-Eqls'Set'UndsUnds'SET'Unds'Bool'Unds'Set'Unds'Set-symbol ptn0 ) ptn1 ) $.
IMP-symbol-156-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortSet ) ( \in-sort ptn1 \kore-sort-SortSet ) ) ( \in-sort ( \kore-symbol-Lbl'Unds-LT-Eqls'Set'UndsUnds'SET'Unds'Bool'Unds'Set'Unds'Set ptn0 ptn1 ) \kore-sort-SortBool ) ) $.

$c \kore-symbol-Lbl'Unds-LT-Eqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String \kore-symbol-Lbl'Unds-LT-Eqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String-symbol $.
IMP-symbol-157-is-symbol $a #Symbol \kore-symbol-Lbl'Unds-LT-Eqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String-symbol $.
IMP-symbol-157-is-pattern $a #Pattern ( \kore-symbol-Lbl'Unds-LT-Eqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String ptn0 ptn1 ) $.
IMP-symbol-157-is-sugar $a #Notation ( \kore-symbol-Lbl'Unds-LT-Eqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'Unds-LT-Eqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String-symbol ptn0 ) ptn1 ) $.
IMP-symbol-157-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortString ) ( \in-sort ptn1 \kore-sort-SortString ) ) ( \in-sort ( \kore-symbol-Lbl'Unds-LT-Eqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String ptn0 ptn1 ) \kore-sort-SortBool ) ) $.

$c \kore-symbol-Lbl'Unds-LT-EqlsUndsUnds'IMP-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp \kore-symbol-Lbl'Unds-LT-EqlsUndsUnds'IMP-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp-symbol $.
IMP-symbol-158-is-symbol $a #Symbol \kore-symbol-Lbl'Unds-LT-EqlsUndsUnds'IMP-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp-symbol $.
IMP-symbol-158-is-pattern $a #Pattern ( \kore-symbol-Lbl'Unds-LT-EqlsUndsUnds'IMP-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp ptn0 ptn1 ) $.
IMP-symbol-158-is-sugar $a #Notation ( \kore-symbol-Lbl'Unds-LT-EqlsUndsUnds'IMP-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'Unds-LT-EqlsUndsUnds'IMP-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp-symbol ptn0 ) ptn1 ) $.
IMP-symbol-158-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortAExp ) ( \in-sort ptn1 \kore-sort-SortAExp ) ) ( \in-sort ( \kore-symbol-Lbl'Unds-LT-EqlsUndsUnds'IMP-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp ptn0 ptn1 ) \kore-sort-SortBExp ) ) $.

$c \kore-symbol-Lbl'Unds-LT-'Int'Unds' \kore-symbol-Lbl'Unds-LT-'Int'Unds'-symbol $.
IMP-symbol-159-is-symbol $a #Symbol \kore-symbol-Lbl'Unds-LT-'Int'Unds'-symbol $.
IMP-symbol-159-is-pattern $a #Pattern ( \kore-symbol-Lbl'Unds-LT-'Int'Unds' ptn0 ptn1 ) $.
IMP-symbol-159-is-sugar $a #Notation ( \kore-symbol-Lbl'Unds-LT-'Int'Unds' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'Unds-LT-'Int'Unds'-symbol ptn0 ) ptn1 ) $.
IMP-symbol-159-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortInt ) ( \in-sort ptn1 \kore-sort-SortInt ) ) ( \in-sort ( \kore-symbol-Lbl'Unds-LT-'Int'Unds' ptn0 ptn1 ) \kore-sort-SortBool ) ) $.

$c \kore-symbol-Lbl'Unds-LT-'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String \kore-symbol-Lbl'Unds-LT-'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String-symbol $.
IMP-symbol-160-is-symbol $a #Symbol \kore-symbol-Lbl'Unds-LT-'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String-symbol $.
IMP-symbol-160-is-pattern $a #Pattern ( \kore-symbol-Lbl'Unds-LT-'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String ptn0 ptn1 ) $.
IMP-symbol-160-is-sugar $a #Notation ( \kore-symbol-Lbl'Unds-LT-'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'Unds-LT-'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String-symbol ptn0 ) ptn1 ) $.
IMP-symbol-160-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortString ) ( \in-sort ptn1 \kore-sort-SortString ) ) ( \in-sort ( \kore-symbol-Lbl'Unds-LT-'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String ptn0 ptn1 ) \kore-sort-SortBool ) ) $.

$c \kore-symbol-Lbl'UndsEqlsSlshEqls'Bool'Unds' \kore-symbol-Lbl'UndsEqlsSlshEqls'Bool'Unds'-symbol $.
IMP-symbol-161-is-symbol $a #Symbol \kore-symbol-Lbl'UndsEqlsSlshEqls'Bool'Unds'-symbol $.
IMP-symbol-161-is-pattern $a #Pattern ( \kore-symbol-Lbl'UndsEqlsSlshEqls'Bool'Unds' ptn0 ptn1 ) $.
IMP-symbol-161-is-sugar $a #Notation ( \kore-symbol-Lbl'UndsEqlsSlshEqls'Bool'Unds' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'UndsEqlsSlshEqls'Bool'Unds'-symbol ptn0 ) ptn1 ) $.
IMP-symbol-161-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortBool ) ( \in-sort ptn1 \kore-sort-SortBool ) ) ( \in-sort ( \kore-symbol-Lbl'UndsEqlsSlshEqls'Bool'Unds' ptn0 ptn1 ) \kore-sort-SortBool ) ) $.

$c \kore-symbol-Lbl'UndsEqlsSlshEqls'Int'Unds' \kore-symbol-Lbl'UndsEqlsSlshEqls'Int'Unds'-symbol $.
IMP-symbol-162-is-symbol $a #Symbol \kore-symbol-Lbl'UndsEqlsSlshEqls'Int'Unds'-symbol $.
IMP-symbol-162-is-pattern $a #Pattern ( \kore-symbol-Lbl'UndsEqlsSlshEqls'Int'Unds' ptn0 ptn1 ) $.
IMP-symbol-162-is-sugar $a #Notation ( \kore-symbol-Lbl'UndsEqlsSlshEqls'Int'Unds' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'UndsEqlsSlshEqls'Int'Unds'-symbol ptn0 ) ptn1 ) $.
IMP-symbol-162-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortInt ) ( \in-sort ptn1 \kore-sort-SortInt ) ) ( \in-sort ( \kore-symbol-Lbl'UndsEqlsSlshEqls'Int'Unds' ptn0 ptn1 ) \kore-sort-SortBool ) ) $.

$c \kore-symbol-Lbl'UndsEqlsSlshEqls'K'Unds' \kore-symbol-Lbl'UndsEqlsSlshEqls'K'Unds'-symbol $.
IMP-symbol-163-is-symbol $a #Symbol \kore-symbol-Lbl'UndsEqlsSlshEqls'K'Unds'-symbol $.
IMP-symbol-163-is-pattern $a #Pattern ( \kore-symbol-Lbl'UndsEqlsSlshEqls'K'Unds' ptn0 ptn1 ) $.
IMP-symbol-163-is-sugar $a #Notation ( \kore-symbol-Lbl'UndsEqlsSlshEqls'K'Unds' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'UndsEqlsSlshEqls'K'Unds'-symbol ptn0 ) ptn1 ) $.
IMP-symbol-163-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ptn1 \kore-sort-SortK ) ) ( \in-sort ( \kore-symbol-Lbl'UndsEqlsSlshEqls'K'Unds' ptn0 ptn1 ) \kore-sort-SortBool ) ) $.

$c \kore-symbol-Lbl'UndsEqlsSlshEqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String \kore-symbol-Lbl'UndsEqlsSlshEqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String-symbol $.
IMP-symbol-164-is-symbol $a #Symbol \kore-symbol-Lbl'UndsEqlsSlshEqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String-symbol $.
IMP-symbol-164-is-pattern $a #Pattern ( \kore-symbol-Lbl'UndsEqlsSlshEqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String ptn0 ptn1 ) $.
IMP-symbol-164-is-sugar $a #Notation ( \kore-symbol-Lbl'UndsEqlsSlshEqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'UndsEqlsSlshEqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String-symbol ptn0 ) ptn1 ) $.
IMP-symbol-164-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortString ) ( \in-sort ptn1 \kore-sort-SortString ) ) ( \in-sort ( \kore-symbol-Lbl'UndsEqlsSlshEqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String ptn0 ptn1 ) \kore-sort-SortBool ) ) $.

$c \kore-symbol-Lbl'UndsEqlsEqls'Bool'Unds' \kore-symbol-Lbl'UndsEqlsEqls'Bool'Unds'-symbol $.
IMP-symbol-165-is-symbol $a #Symbol \kore-symbol-Lbl'UndsEqlsEqls'Bool'Unds'-symbol $.
IMP-symbol-165-is-pattern $a #Pattern ( \kore-symbol-Lbl'UndsEqlsEqls'Bool'Unds' ptn0 ptn1 ) $.
IMP-symbol-165-is-sugar $a #Notation ( \kore-symbol-Lbl'UndsEqlsEqls'Bool'Unds' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'UndsEqlsEqls'Bool'Unds'-symbol ptn0 ) ptn1 ) $.
IMP-symbol-165-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortBool ) ( \in-sort ptn1 \kore-sort-SortBool ) ) ( \in-sort ( \kore-symbol-Lbl'UndsEqlsEqls'Bool'Unds' ptn0 ptn1 ) \kore-sort-SortBool ) ) $.

$c \kore-symbol-Lbl'UndsEqlsEqls'Int'Unds' \kore-symbol-Lbl'UndsEqlsEqls'Int'Unds'-symbol $.
IMP-symbol-166-is-symbol $a #Symbol \kore-symbol-Lbl'UndsEqlsEqls'Int'Unds'-symbol $.
IMP-symbol-166-is-pattern $a #Pattern ( \kore-symbol-Lbl'UndsEqlsEqls'Int'Unds' ptn0 ptn1 ) $.
IMP-symbol-166-is-sugar $a #Notation ( \kore-symbol-Lbl'UndsEqlsEqls'Int'Unds' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'UndsEqlsEqls'Int'Unds'-symbol ptn0 ) ptn1 ) $.
IMP-symbol-166-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortInt ) ( \in-sort ptn1 \kore-sort-SortInt ) ) ( \in-sort ( \kore-symbol-Lbl'UndsEqlsEqls'Int'Unds' ptn0 ptn1 ) \kore-sort-SortBool ) ) $.

$c \kore-symbol-Lbl'UndsEqlsEqls'K'Unds' \kore-symbol-Lbl'UndsEqlsEqls'K'Unds'-symbol $.
IMP-symbol-167-is-symbol $a #Symbol \kore-symbol-Lbl'UndsEqlsEqls'K'Unds'-symbol $.
IMP-symbol-167-is-pattern $a #Pattern ( \kore-symbol-Lbl'UndsEqlsEqls'K'Unds' ptn0 ptn1 ) $.
IMP-symbol-167-is-sugar $a #Notation ( \kore-symbol-Lbl'UndsEqlsEqls'K'Unds' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'UndsEqlsEqls'K'Unds'-symbol ptn0 ) ptn1 ) $.
IMP-symbol-167-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ptn1 \kore-sort-SortK ) ) ( \in-sort ( \kore-symbol-Lbl'UndsEqlsEqls'K'Unds' ptn0 ptn1 ) \kore-sort-SortBool ) ) $.

$c \kore-symbol-Lbl'UndsEqlsEqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String \kore-symbol-Lbl'UndsEqlsEqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String-symbol $.
IMP-symbol-168-is-symbol $a #Symbol \kore-symbol-Lbl'UndsEqlsEqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String-symbol $.
IMP-symbol-168-is-pattern $a #Pattern ( \kore-symbol-Lbl'UndsEqlsEqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String ptn0 ptn1 ) $.
IMP-symbol-168-is-sugar $a #Notation ( \kore-symbol-Lbl'UndsEqlsEqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'UndsEqlsEqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String-symbol ptn0 ) ptn1 ) $.
IMP-symbol-168-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortString ) ( \in-sort ptn1 \kore-sort-SortString ) ) ( \in-sort ( \kore-symbol-Lbl'UndsEqlsEqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String ptn0 ptn1 ) \kore-sort-SortBool ) ) $.

$c \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp-symbol $.
IMP-symbol-169-is-symbol $a #Symbol \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp-symbol $.
IMP-symbol-169-is-pattern $a #Pattern ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ptn0 ptn1 ) $.
IMP-symbol-169-is-sugar $a #Notation ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp-symbol ptn0 ) ptn1 ) $.
IMP-symbol-169-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortId ) ( \in-sort ptn1 \kore-sort-SortAExp ) ) ( \in-sort ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ptn0 ptn1 ) \kore-sort-SortStmt ) ) $.

$c \kore-symbol-Lbl'Unds-GT-Eqls'Int'Unds' \kore-symbol-Lbl'Unds-GT-Eqls'Int'Unds'-symbol $.
IMP-symbol-170-is-symbol $a #Symbol \kore-symbol-Lbl'Unds-GT-Eqls'Int'Unds'-symbol $.
IMP-symbol-170-is-pattern $a #Pattern ( \kore-symbol-Lbl'Unds-GT-Eqls'Int'Unds' ptn0 ptn1 ) $.
IMP-symbol-170-is-sugar $a #Notation ( \kore-symbol-Lbl'Unds-GT-Eqls'Int'Unds' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'Unds-GT-Eqls'Int'Unds'-symbol ptn0 ) ptn1 ) $.
IMP-symbol-170-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortInt ) ( \in-sort ptn1 \kore-sort-SortInt ) ) ( \in-sort ( \kore-symbol-Lbl'Unds-GT-Eqls'Int'Unds' ptn0 ptn1 ) \kore-sort-SortBool ) ) $.

$c \kore-symbol-Lbl'Unds-GT-Eqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String \kore-symbol-Lbl'Unds-GT-Eqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String-symbol $.
IMP-symbol-171-is-symbol $a #Symbol \kore-symbol-Lbl'Unds-GT-Eqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String-symbol $.
IMP-symbol-171-is-pattern $a #Pattern ( \kore-symbol-Lbl'Unds-GT-Eqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String ptn0 ptn1 ) $.
IMP-symbol-171-is-sugar $a #Notation ( \kore-symbol-Lbl'Unds-GT-Eqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'Unds-GT-Eqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String-symbol ptn0 ) ptn1 ) $.
IMP-symbol-171-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortString ) ( \in-sort ptn1 \kore-sort-SortString ) ) ( \in-sort ( \kore-symbol-Lbl'Unds-GT-Eqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String ptn0 ptn1 ) \kore-sort-SortBool ) ) $.

$c \kore-symbol-Lbl'Unds-GT--GT-'Int'Unds' \kore-symbol-Lbl'Unds-GT--GT-'Int'Unds'-symbol $.
IMP-symbol-172-is-symbol $a #Symbol \kore-symbol-Lbl'Unds-GT--GT-'Int'Unds'-symbol $.
IMP-symbol-172-is-pattern $a #Pattern ( \kore-symbol-Lbl'Unds-GT--GT-'Int'Unds' ptn0 ptn1 ) $.
IMP-symbol-172-is-sugar $a #Notation ( \kore-symbol-Lbl'Unds-GT--GT-'Int'Unds' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'Unds-GT--GT-'Int'Unds'-symbol ptn0 ) ptn1 ) $.
IMP-symbol-172-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortInt ) ( \in-sort ptn1 \kore-sort-SortInt ) ) ( \in-sort ( \kore-symbol-Lbl'Unds-GT--GT-'Int'Unds' ptn0 ptn1 ) \kore-sort-SortInt ) ) $.

$c \kore-symbol-Lbl'Unds-GT-'Int'Unds' \kore-symbol-Lbl'Unds-GT-'Int'Unds'-symbol $.
IMP-symbol-173-is-symbol $a #Symbol \kore-symbol-Lbl'Unds-GT-'Int'Unds'-symbol $.
IMP-symbol-173-is-pattern $a #Pattern ( \kore-symbol-Lbl'Unds-GT-'Int'Unds' ptn0 ptn1 ) $.
IMP-symbol-173-is-sugar $a #Notation ( \kore-symbol-Lbl'Unds-GT-'Int'Unds' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'Unds-GT-'Int'Unds'-symbol ptn0 ) ptn1 ) $.
IMP-symbol-173-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortInt ) ( \in-sort ptn1 \kore-sort-SortInt ) ) ( \in-sort ( \kore-symbol-Lbl'Unds-GT-'Int'Unds' ptn0 ptn1 ) \kore-sort-SortBool ) ) $.

$c \kore-symbol-Lbl'Unds-GT-'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String \kore-symbol-Lbl'Unds-GT-'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String-symbol $.
IMP-symbol-174-is-symbol $a #Symbol \kore-symbol-Lbl'Unds-GT-'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String-symbol $.
IMP-symbol-174-is-pattern $a #Pattern ( \kore-symbol-Lbl'Unds-GT-'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String ptn0 ptn1 ) $.
IMP-symbol-174-is-sugar $a #Notation ( \kore-symbol-Lbl'Unds-GT-'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'Unds-GT-'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String-symbol ptn0 ) ptn1 ) $.
IMP-symbol-174-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortString ) ( \in-sort ptn1 \kore-sort-SortString ) ) ( \in-sort ( \kore-symbol-Lbl'Unds-GT-'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String ptn0 ptn1 ) \kore-sort-SortBool ) ) $.

$c \kore-symbol-Lbl'Unds'List'Unds' \kore-symbol-Lbl'Unds'List'Unds'-symbol $.
IMP-symbol-175-is-symbol $a #Symbol \kore-symbol-Lbl'Unds'List'Unds'-symbol $.
IMP-symbol-175-is-pattern $a #Pattern ( \kore-symbol-Lbl'Unds'List'Unds' ptn0 ptn1 ) $.
IMP-symbol-175-is-sugar $a #Notation ( \kore-symbol-Lbl'Unds'List'Unds' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'Unds'List'Unds'-symbol ptn0 ) ptn1 ) $.
IMP-symbol-175-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortList ) ( \in-sort ptn1 \kore-sort-SortList ) ) ( \in-sort ( \kore-symbol-Lbl'Unds'List'Unds' ptn0 ptn1 ) \kore-sort-SortList ) ) $.

$c \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Unds'Map'Unds'-symbol $.
IMP-symbol-176-is-symbol $a #Symbol \kore-symbol-Lbl'Unds'Map'Unds'-symbol $.
IMP-symbol-176-is-pattern $a #Pattern ( \kore-symbol-Lbl'Unds'Map'Unds' ptn0 ptn1 ) $.
IMP-symbol-176-is-sugar $a #Notation ( \kore-symbol-Lbl'Unds'Map'Unds' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'Unds'Map'Unds'-symbol ptn0 ) ptn1 ) $.
IMP-symbol-176-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortMap ) ( \in-sort ptn1 \kore-sort-SortMap ) ) ( \in-sort ( \kore-symbol-Lbl'Unds'Map'Unds' ptn0 ptn1 ) \kore-sort-SortMap ) ) $.

$c \kore-symbol-Lbl'Unds'Set'Unds' \kore-symbol-Lbl'Unds'Set'Unds'-symbol $.
IMP-symbol-177-is-symbol $a #Symbol \kore-symbol-Lbl'Unds'Set'Unds'-symbol $.
IMP-symbol-177-is-pattern $a #Pattern ( \kore-symbol-Lbl'Unds'Set'Unds' ptn0 ptn1 ) $.
IMP-symbol-177-is-sugar $a #Notation ( \kore-symbol-Lbl'Unds'Set'Unds' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'Unds'Set'Unds'-symbol ptn0 ) ptn1 ) $.
IMP-symbol-177-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortSet ) ( \in-sort ptn1 \kore-sort-SortSet ) ) ( \in-sort ( \kore-symbol-Lbl'Unds'Set'Unds' ptn0 ptn1 ) \kore-sort-SortSet ) ) $.

$c \kore-symbol-Lbl'UndsLSqBUnds-LT-'-'UndsRSqBUnds'LIST'Unds'List'Unds'List'Unds'Int'Unds'KItem \kore-symbol-Lbl'UndsLSqBUnds-LT-'-'UndsRSqBUnds'LIST'Unds'List'Unds'List'Unds'Int'Unds'KItem-symbol $.
IMP-symbol-178-is-symbol $a #Symbol \kore-symbol-Lbl'UndsLSqBUnds-LT-'-'UndsRSqBUnds'LIST'Unds'List'Unds'List'Unds'Int'Unds'KItem-symbol $.
IMP-symbol-178-is-pattern $a #Pattern ( \kore-symbol-Lbl'UndsLSqBUnds-LT-'-'UndsRSqBUnds'LIST'Unds'List'Unds'List'Unds'Int'Unds'KItem ptn0 ptn1 ptn2 ) $.
IMP-symbol-178-is-sugar $a #Notation ( \kore-symbol-Lbl'UndsLSqBUnds-LT-'-'UndsRSqBUnds'LIST'Unds'List'Unds'List'Unds'Int'Unds'KItem ptn0 ptn1 ptn2 ) ( \app ( \app ( \app \kore-symbol-Lbl'UndsLSqBUnds-LT-'-'UndsRSqBUnds'LIST'Unds'List'Unds'List'Unds'Int'Unds'KItem-symbol ptn0 ) ptn1 ) ptn2 ) $.
IMP-symbol-178-sorting $a |- ( \imp ( \and ( \and ( \in-sort ptn0 \kore-sort-SortList ) ( \in-sort ptn1 \kore-sort-SortInt ) ) ( \in-sort ptn2 \kore-sort-SortKItem ) ) ( \in-sort ( \kore-symbol-Lbl'UndsLSqBUnds-LT-'-'UndsRSqBUnds'LIST'Unds'List'Unds'List'Unds'Int'Unds'KItem ptn0 ptn1 ptn2 ) \kore-sort-SortList ) ) $.

$c \kore-symbol-Lbl'UndsLSqBUnds-LT-'-undef'RSqB' \kore-symbol-Lbl'UndsLSqBUnds-LT-'-undef'RSqB'-symbol $.
IMP-symbol-179-is-symbol $a #Symbol \kore-symbol-Lbl'UndsLSqBUnds-LT-'-undef'RSqB'-symbol $.
IMP-symbol-179-is-pattern $a #Pattern ( \kore-symbol-Lbl'UndsLSqBUnds-LT-'-undef'RSqB' ptn0 ptn1 ) $.
IMP-symbol-179-is-sugar $a #Notation ( \kore-symbol-Lbl'UndsLSqBUnds-LT-'-undef'RSqB' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'UndsLSqBUnds-LT-'-undef'RSqB'-symbol ptn0 ) ptn1 ) $.
IMP-symbol-179-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortMap ) ( \in-sort ptn1 \kore-sort-SortKItem ) ) ( \in-sort ( \kore-symbol-Lbl'UndsLSqBUnds-LT-'-undef'RSqB' ptn0 ptn1 ) \kore-sort-SortMap ) ) $.

$c \kore-symbol-Lbl'UndsLSqBUndsRSqB'orDefault'UndsUnds'MAP'Unds'KItem'Unds'Map'Unds'KItem'Unds'KItem \kore-symbol-Lbl'UndsLSqBUndsRSqB'orDefault'UndsUnds'MAP'Unds'KItem'Unds'Map'Unds'KItem'Unds'KItem-symbol $.
IMP-symbol-180-is-symbol $a #Symbol \kore-symbol-Lbl'UndsLSqBUndsRSqB'orDefault'UndsUnds'MAP'Unds'KItem'Unds'Map'Unds'KItem'Unds'KItem-symbol $.
IMP-symbol-180-is-pattern $a #Pattern ( \kore-symbol-Lbl'UndsLSqBUndsRSqB'orDefault'UndsUnds'MAP'Unds'KItem'Unds'Map'Unds'KItem'Unds'KItem ptn0 ptn1 ptn2 ) $.
IMP-symbol-180-is-sugar $a #Notation ( \kore-symbol-Lbl'UndsLSqBUndsRSqB'orDefault'UndsUnds'MAP'Unds'KItem'Unds'Map'Unds'KItem'Unds'KItem ptn0 ptn1 ptn2 ) ( \app ( \app ( \app \kore-symbol-Lbl'UndsLSqBUndsRSqB'orDefault'UndsUnds'MAP'Unds'KItem'Unds'Map'Unds'KItem'Unds'KItem-symbol ptn0 ) ptn1 ) ptn2 ) $.
IMP-symbol-180-sorting $a |- ( \imp ( \and ( \and ( \in-sort ptn0 \kore-sort-SortMap ) ( \in-sort ptn1 \kore-sort-SortKItem ) ) ( \in-sort ptn2 \kore-sort-SortKItem ) ) ( \in-sort ( \kore-symbol-Lbl'UndsLSqBUndsRSqB'orDefault'UndsUnds'MAP'Unds'KItem'Unds'Map'Unds'KItem'Unds'KItem ptn0 ptn1 ptn2 ) \kore-sort-SortKItem ) ) $.

$c \kore-symbol-Lbl'UndsXor-Perc'Int'UndsUnds' \kore-symbol-Lbl'UndsXor-Perc'Int'UndsUnds'-symbol $.
IMP-symbol-181-is-symbol $a #Symbol \kore-symbol-Lbl'UndsXor-Perc'Int'UndsUnds'-symbol $.
IMP-symbol-181-is-pattern $a #Pattern ( \kore-symbol-Lbl'UndsXor-Perc'Int'UndsUnds' ptn0 ptn1 ptn2 ) $.
IMP-symbol-181-is-sugar $a #Notation ( \kore-symbol-Lbl'UndsXor-Perc'Int'UndsUnds' ptn0 ptn1 ptn2 ) ( \app ( \app ( \app \kore-symbol-Lbl'UndsXor-Perc'Int'UndsUnds'-symbol ptn0 ) ptn1 ) ptn2 ) $.
IMP-symbol-181-sorting $a |- ( \imp ( \and ( \and ( \in-sort ptn0 \kore-sort-SortInt ) ( \in-sort ptn1 \kore-sort-SortInt ) ) ( \in-sort ptn2 \kore-sort-SortInt ) ) ( \in-sort ( \kore-symbol-Lbl'UndsXor-Perc'Int'UndsUnds' ptn0 ptn1 ptn2 ) \kore-sort-SortInt ) ) $.

$c \kore-symbol-Lbl'UndsXor-'Int'Unds' \kore-symbol-Lbl'UndsXor-'Int'Unds'-symbol $.
IMP-symbol-182-is-symbol $a #Symbol \kore-symbol-Lbl'UndsXor-'Int'Unds'-symbol $.
IMP-symbol-182-is-pattern $a #Pattern ( \kore-symbol-Lbl'UndsXor-'Int'Unds' ptn0 ptn1 ) $.
IMP-symbol-182-is-sugar $a #Notation ( \kore-symbol-Lbl'UndsXor-'Int'Unds' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'UndsXor-'Int'Unds'-symbol ptn0 ) ptn1 ) $.
IMP-symbol-182-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortInt ) ( \in-sort ptn1 \kore-sort-SortInt ) ) ( \in-sort ( \kore-symbol-Lbl'UndsXor-'Int'Unds' ptn0 ptn1 ) \kore-sort-SortInt ) ) $.

$c \kore-symbol-Lbl'UndsUndsUnds'IMP-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt \kore-symbol-Lbl'UndsUndsUnds'IMP-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt-symbol $.
IMP-symbol-183-is-symbol $a #Symbol \kore-symbol-Lbl'UndsUndsUnds'IMP-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt-symbol $.
IMP-symbol-183-is-pattern $a #Pattern ( \kore-symbol-Lbl'UndsUndsUnds'IMP-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt ptn0 ptn1 ) $.
IMP-symbol-183-is-sugar $a #Notation ( \kore-symbol-Lbl'UndsUndsUnds'IMP-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'UndsUndsUnds'IMP-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt-symbol ptn0 ) ptn1 ) $.
IMP-symbol-183-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortStmt ) ( \in-sort ptn1 \kore-sort-SortStmt ) ) ( \in-sort ( \kore-symbol-Lbl'UndsUndsUnds'IMP-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt ptn0 ptn1 ) \kore-sort-SortStmt ) ) $.

$c \kore-symbol-Lbl'Unds'andBool'Unds' \kore-symbol-Lbl'Unds'andBool'Unds'-symbol $.
IMP-symbol-184-is-symbol $a #Symbol \kore-symbol-Lbl'Unds'andBool'Unds'-symbol $.
IMP-symbol-184-is-pattern $a #Pattern ( \kore-symbol-Lbl'Unds'andBool'Unds' ptn0 ptn1 ) $.
IMP-symbol-184-is-sugar $a #Notation ( \kore-symbol-Lbl'Unds'andBool'Unds' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'Unds'andBool'Unds'-symbol ptn0 ) ptn1 ) $.
IMP-symbol-184-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortBool ) ( \in-sort ptn1 \kore-sort-SortBool ) ) ( \in-sort ( \kore-symbol-Lbl'Unds'andBool'Unds' ptn0 ptn1 ) \kore-sort-SortBool ) ) $.

$c \kore-symbol-Lbl'Unds'andThenBool'Unds' \kore-symbol-Lbl'Unds'andThenBool'Unds'-symbol $.
IMP-symbol-185-is-symbol $a #Symbol \kore-symbol-Lbl'Unds'andThenBool'Unds'-symbol $.
IMP-symbol-185-is-pattern $a #Pattern ( \kore-symbol-Lbl'Unds'andThenBool'Unds' ptn0 ptn1 ) $.
IMP-symbol-185-is-sugar $a #Notation ( \kore-symbol-Lbl'Unds'andThenBool'Unds' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'Unds'andThenBool'Unds'-symbol ptn0 ) ptn1 ) $.
IMP-symbol-185-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortBool ) ( \in-sort ptn1 \kore-sort-SortBool ) ) ( \in-sort ( \kore-symbol-Lbl'Unds'andThenBool'Unds' ptn0 ptn1 ) \kore-sort-SortBool ) ) $.

$c \kore-symbol-Lbl'Unds'divInt'Unds' \kore-symbol-Lbl'Unds'divInt'Unds'-symbol $.
IMP-symbol-186-is-symbol $a #Symbol \kore-symbol-Lbl'Unds'divInt'Unds'-symbol $.
IMP-symbol-186-is-pattern $a #Pattern ( \kore-symbol-Lbl'Unds'divInt'Unds' ptn0 ptn1 ) $.
IMP-symbol-186-is-sugar $a #Notation ( \kore-symbol-Lbl'Unds'divInt'Unds' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'Unds'divInt'Unds'-symbol ptn0 ) ptn1 ) $.
IMP-symbol-186-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortInt ) ( \in-sort ptn1 \kore-sort-SortInt ) ) ( \in-sort ( \kore-symbol-Lbl'Unds'divInt'Unds' ptn0 ptn1 ) \kore-sort-SortInt ) ) $.

$c \kore-symbol-Lbl'Unds'dividesInt'UndsUnds'INT-COMMON'Unds'Bool'Unds'Int'Unds'Int \kore-symbol-Lbl'Unds'dividesInt'UndsUnds'INT-COMMON'Unds'Bool'Unds'Int'Unds'Int-symbol $.
IMP-symbol-187-is-symbol $a #Symbol \kore-symbol-Lbl'Unds'dividesInt'UndsUnds'INT-COMMON'Unds'Bool'Unds'Int'Unds'Int-symbol $.
IMP-symbol-187-is-pattern $a #Pattern ( \kore-symbol-Lbl'Unds'dividesInt'UndsUnds'INT-COMMON'Unds'Bool'Unds'Int'Unds'Int ptn0 ptn1 ) $.
IMP-symbol-187-is-sugar $a #Notation ( \kore-symbol-Lbl'Unds'dividesInt'UndsUnds'INT-COMMON'Unds'Bool'Unds'Int'Unds'Int ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'Unds'dividesInt'UndsUnds'INT-COMMON'Unds'Bool'Unds'Int'Unds'Int-symbol ptn0 ) ptn1 ) $.
IMP-symbol-187-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortInt ) ( \in-sort ptn1 \kore-sort-SortInt ) ) ( \in-sort ( \kore-symbol-Lbl'Unds'dividesInt'UndsUnds'INT-COMMON'Unds'Bool'Unds'Int'Unds'Int ptn0 ptn1 ) \kore-sort-SortBool ) ) $.

$c \kore-symbol-Lbl'Unds'impliesBool'Unds' \kore-symbol-Lbl'Unds'impliesBool'Unds'-symbol $.
IMP-symbol-188-is-symbol $a #Symbol \kore-symbol-Lbl'Unds'impliesBool'Unds'-symbol $.
IMP-symbol-188-is-pattern $a #Pattern ( \kore-symbol-Lbl'Unds'impliesBool'Unds' ptn0 ptn1 ) $.
IMP-symbol-188-is-sugar $a #Notation ( \kore-symbol-Lbl'Unds'impliesBool'Unds' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'Unds'impliesBool'Unds'-symbol ptn0 ) ptn1 ) $.
IMP-symbol-188-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortBool ) ( \in-sort ptn1 \kore-sort-SortBool ) ) ( \in-sort ( \kore-symbol-Lbl'Unds'impliesBool'Unds' ptn0 ptn1 ) \kore-sort-SortBool ) ) $.

$c \kore-symbol-Lbl'Unds'in'UndsUnds'LIST'Unds'Bool'Unds'KItem'Unds'List \kore-symbol-Lbl'Unds'in'UndsUnds'LIST'Unds'Bool'Unds'KItem'Unds'List-symbol $.
IMP-symbol-189-is-symbol $a #Symbol \kore-symbol-Lbl'Unds'in'UndsUnds'LIST'Unds'Bool'Unds'KItem'Unds'List-symbol $.
IMP-symbol-189-is-pattern $a #Pattern ( \kore-symbol-Lbl'Unds'in'UndsUnds'LIST'Unds'Bool'Unds'KItem'Unds'List ptn0 ptn1 ) $.
IMP-symbol-189-is-sugar $a #Notation ( \kore-symbol-Lbl'Unds'in'UndsUnds'LIST'Unds'Bool'Unds'KItem'Unds'List ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'Unds'in'UndsUnds'LIST'Unds'Bool'Unds'KItem'Unds'List-symbol ptn0 ) ptn1 ) $.
IMP-symbol-189-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortKItem ) ( \in-sort ptn1 \kore-sort-SortList ) ) ( \in-sort ( \kore-symbol-Lbl'Unds'in'UndsUnds'LIST'Unds'Bool'Unds'KItem'Unds'List ptn0 ptn1 ) \kore-sort-SortBool ) ) $.

$c \kore-symbol-Lbl'Unds'in'Unds'keys'LParUndsRParUnds'MAP'Unds'Bool'Unds'KItem'Unds'Map \kore-symbol-Lbl'Unds'in'Unds'keys'LParUndsRParUnds'MAP'Unds'Bool'Unds'KItem'Unds'Map-symbol $.
IMP-symbol-190-is-symbol $a #Symbol \kore-symbol-Lbl'Unds'in'Unds'keys'LParUndsRParUnds'MAP'Unds'Bool'Unds'KItem'Unds'Map-symbol $.
IMP-symbol-190-is-pattern $a #Pattern ( \kore-symbol-Lbl'Unds'in'Unds'keys'LParUndsRParUnds'MAP'Unds'Bool'Unds'KItem'Unds'Map ptn0 ptn1 ) $.
IMP-symbol-190-is-sugar $a #Notation ( \kore-symbol-Lbl'Unds'in'Unds'keys'LParUndsRParUnds'MAP'Unds'Bool'Unds'KItem'Unds'Map ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'Unds'in'Unds'keys'LParUndsRParUnds'MAP'Unds'Bool'Unds'KItem'Unds'Map-symbol ptn0 ) ptn1 ) $.
IMP-symbol-190-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortKItem ) ( \in-sort ptn1 \kore-sort-SortMap ) ) ( \in-sort ( \kore-symbol-Lbl'Unds'in'Unds'keys'LParUndsRParUnds'MAP'Unds'Bool'Unds'KItem'Unds'Map ptn0 ptn1 ) \kore-sort-SortBool ) ) $.

$c \kore-symbol-Lbl'Unds'modInt'Unds' \kore-symbol-Lbl'Unds'modInt'Unds'-symbol $.
IMP-symbol-191-is-symbol $a #Symbol \kore-symbol-Lbl'Unds'modInt'Unds'-symbol $.
IMP-symbol-191-is-pattern $a #Pattern ( \kore-symbol-Lbl'Unds'modInt'Unds' ptn0 ptn1 ) $.
IMP-symbol-191-is-sugar $a #Notation ( \kore-symbol-Lbl'Unds'modInt'Unds' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'Unds'modInt'Unds'-symbol ptn0 ) ptn1 ) $.
IMP-symbol-191-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortInt ) ( \in-sort ptn1 \kore-sort-SortInt ) ) ( \in-sort ( \kore-symbol-Lbl'Unds'modInt'Unds' ptn0 ptn1 ) \kore-sort-SortInt ) ) $.

$c \kore-symbol-Lbl'Unds'orBool'Unds' \kore-symbol-Lbl'Unds'orBool'Unds'-symbol $.
IMP-symbol-192-is-symbol $a #Symbol \kore-symbol-Lbl'Unds'orBool'Unds'-symbol $.
IMP-symbol-192-is-pattern $a #Pattern ( \kore-symbol-Lbl'Unds'orBool'Unds' ptn0 ptn1 ) $.
IMP-symbol-192-is-sugar $a #Notation ( \kore-symbol-Lbl'Unds'orBool'Unds' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'Unds'orBool'Unds'-symbol ptn0 ) ptn1 ) $.
IMP-symbol-192-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortBool ) ( \in-sort ptn1 \kore-sort-SortBool ) ) ( \in-sort ( \kore-symbol-Lbl'Unds'orBool'Unds' ptn0 ptn1 ) \kore-sort-SortBool ) ) $.

$c \kore-symbol-Lbl'Unds'orElseBool'Unds' \kore-symbol-Lbl'Unds'orElseBool'Unds'-symbol $.
IMP-symbol-193-is-symbol $a #Symbol \kore-symbol-Lbl'Unds'orElseBool'Unds'-symbol $.
IMP-symbol-193-is-pattern $a #Pattern ( \kore-symbol-Lbl'Unds'orElseBool'Unds' ptn0 ptn1 ) $.
IMP-symbol-193-is-sugar $a #Notation ( \kore-symbol-Lbl'Unds'orElseBool'Unds' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'Unds'orElseBool'Unds'-symbol ptn0 ) ptn1 ) $.
IMP-symbol-193-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortBool ) ( \in-sort ptn1 \kore-sort-SortBool ) ) ( \in-sort ( \kore-symbol-Lbl'Unds'orElseBool'Unds' ptn0 ptn1 ) \kore-sort-SortBool ) ) $.

$c \kore-symbol-Lbl'Unds'xorBool'Unds' \kore-symbol-Lbl'Unds'xorBool'Unds'-symbol $.
IMP-symbol-194-is-symbol $a #Symbol \kore-symbol-Lbl'Unds'xorBool'Unds'-symbol $.
IMP-symbol-194-is-pattern $a #Pattern ( \kore-symbol-Lbl'Unds'xorBool'Unds' ptn0 ptn1 ) $.
IMP-symbol-194-is-sugar $a #Notation ( \kore-symbol-Lbl'Unds'xorBool'Unds' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'Unds'xorBool'Unds'-symbol ptn0 ) ptn1 ) $.
IMP-symbol-194-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortBool ) ( \in-sort ptn1 \kore-sort-SortBool ) ) ( \in-sort ( \kore-symbol-Lbl'Unds'xorBool'Unds' ptn0 ptn1 ) \kore-sort-SortBool ) ) $.

$c \kore-symbol-Lbl'Unds'xorInt'Unds' \kore-symbol-Lbl'Unds'xorInt'Unds'-symbol $.
IMP-symbol-195-is-symbol $a #Symbol \kore-symbol-Lbl'Unds'xorInt'Unds'-symbol $.
IMP-symbol-195-is-pattern $a #Pattern ( \kore-symbol-Lbl'Unds'xorInt'Unds' ptn0 ptn1 ) $.
IMP-symbol-195-is-sugar $a #Notation ( \kore-symbol-Lbl'Unds'xorInt'Unds' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'Unds'xorInt'Unds'-symbol ptn0 ) ptn1 ) $.
IMP-symbol-195-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortInt ) ( \in-sort ptn1 \kore-sort-SortInt ) ) ( \in-sort ( \kore-symbol-Lbl'Unds'xorInt'Unds' ptn0 ptn1 ) \kore-sort-SortInt ) ) $.

$c \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' \kore-symbol-Lbl'UndsPipe'-'-GT-Unds'-symbol $.
IMP-symbol-196-is-symbol $a #Symbol \kore-symbol-Lbl'UndsPipe'-'-GT-Unds'-symbol $.
IMP-symbol-196-is-pattern $a #Pattern ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ptn0 ptn1 ) $.
IMP-symbol-196-is-sugar $a #Notation ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'UndsPipe'-'-GT-Unds'-symbol ptn0 ) ptn1 ) $.
IMP-symbol-196-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortKItem ) ( \in-sort ptn1 \kore-sort-SortKItem ) ) ( \in-sort ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ptn0 ptn1 ) \kore-sort-SortMap ) ) $.

$c \kore-symbol-Lbl'UndsPipe'Int'Unds' \kore-symbol-Lbl'UndsPipe'Int'Unds'-symbol $.
IMP-symbol-197-is-symbol $a #Symbol \kore-symbol-Lbl'UndsPipe'Int'Unds'-symbol $.
IMP-symbol-197-is-pattern $a #Pattern ( \kore-symbol-Lbl'UndsPipe'Int'Unds' ptn0 ptn1 ) $.
IMP-symbol-197-is-sugar $a #Notation ( \kore-symbol-Lbl'UndsPipe'Int'Unds' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'UndsPipe'Int'Unds'-symbol ptn0 ) ptn1 ) $.
IMP-symbol-197-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortInt ) ( \in-sort ptn1 \kore-sort-SortInt ) ) ( \in-sort ( \kore-symbol-Lbl'UndsPipe'Int'Unds' ptn0 ptn1 ) \kore-sort-SortInt ) ) $.

$c \kore-symbol-Lbl'UndsPipe'Set'UndsUnds'SET'Unds'Set'Unds'Set'Unds'Set \kore-symbol-Lbl'UndsPipe'Set'UndsUnds'SET'Unds'Set'Unds'Set'Unds'Set-symbol $.
IMP-symbol-198-is-symbol $a #Symbol \kore-symbol-Lbl'UndsPipe'Set'UndsUnds'SET'Unds'Set'Unds'Set'Unds'Set-symbol $.
IMP-symbol-198-is-pattern $a #Pattern ( \kore-symbol-Lbl'UndsPipe'Set'UndsUnds'SET'Unds'Set'Unds'Set'Unds'Set ptn0 ptn1 ) $.
IMP-symbol-198-is-sugar $a #Notation ( \kore-symbol-Lbl'UndsPipe'Set'UndsUnds'SET'Unds'Set'Unds'Set'Unds'Set ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'UndsPipe'Set'UndsUnds'SET'Unds'Set'Unds'Set'Unds'Set-symbol ptn0 ) ptn1 ) $.
IMP-symbol-198-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortSet ) ( \in-sort ptn1 \kore-sort-SortSet ) ) ( \in-sort ( \kore-symbol-Lbl'UndsPipe'Set'UndsUnds'SET'Unds'Set'Unds'Set'Unds'Set ptn0 ptn1 ) \kore-sort-SortSet ) ) $.

$c \kore-symbol-LblabsInt'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int \kore-symbol-LblabsInt'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int-symbol $.
IMP-symbol-199-is-symbol $a #Symbol \kore-symbol-LblabsInt'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int-symbol $.
IMP-symbol-199-is-pattern $a #Pattern ( \kore-symbol-LblabsInt'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int ptn0 ) $.
IMP-symbol-199-is-sugar $a #Notation ( \kore-symbol-LblabsInt'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int ptn0 ) ( \app \kore-symbol-LblabsInt'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int-symbol ptn0 ) $.
IMP-symbol-199-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortInt ) ( \in-sort ( \kore-symbol-LblabsInt'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int ptn0 ) \kore-sort-SortInt ) ) $.

$c \kore-symbol-LblbitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int'Unds'Int \kore-symbol-LblbitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int'Unds'Int-symbol $.
IMP-symbol-200-is-symbol $a #Symbol \kore-symbol-LblbitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int'Unds'Int-symbol $.
IMP-symbol-200-is-pattern $a #Pattern ( \kore-symbol-LblbitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int'Unds'Int ptn0 ptn1 ptn2 ) $.
IMP-symbol-200-is-sugar $a #Notation ( \kore-symbol-LblbitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int'Unds'Int ptn0 ptn1 ptn2 ) ( \app ( \app ( \app \kore-symbol-LblbitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int'Unds'Int-symbol ptn0 ) ptn1 ) ptn2 ) $.
IMP-symbol-200-sorting $a |- ( \imp ( \and ( \and ( \in-sort ptn0 \kore-sort-SortInt ) ( \in-sort ptn1 \kore-sort-SortInt ) ) ( \in-sort ptn2 \kore-sort-SortInt ) ) ( \in-sort ( \kore-symbol-LblbitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int'Unds'Int ptn0 ptn1 ptn2 ) \kore-sort-SortInt ) ) $.

$c \kore-symbol-LblcategoryChar'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'String \kore-symbol-LblcategoryChar'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'String-symbol $.
IMP-symbol-201-is-symbol $a #Symbol \kore-symbol-LblcategoryChar'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'String-symbol $.
IMP-symbol-201-is-pattern $a #Pattern ( \kore-symbol-LblcategoryChar'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'String ptn0 ) $.
IMP-symbol-201-is-sugar $a #Notation ( \kore-symbol-LblcategoryChar'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'String ptn0 ) ( \app \kore-symbol-LblcategoryChar'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'String-symbol ptn0 ) $.
IMP-symbol-201-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortString ) ( \in-sort ( \kore-symbol-LblcategoryChar'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'String ptn0 ) \kore-sort-SortString ) ) $.

$c \kore-symbol-Lblchoice'LParUndsRParUnds'MAP'Unds'KItem'Unds'Map \kore-symbol-Lblchoice'LParUndsRParUnds'MAP'Unds'KItem'Unds'Map-symbol $.
IMP-symbol-202-is-symbol $a #Symbol \kore-symbol-Lblchoice'LParUndsRParUnds'MAP'Unds'KItem'Unds'Map-symbol $.
IMP-symbol-202-is-pattern $a #Pattern ( \kore-symbol-Lblchoice'LParUndsRParUnds'MAP'Unds'KItem'Unds'Map ptn0 ) $.
IMP-symbol-202-is-sugar $a #Notation ( \kore-symbol-Lblchoice'LParUndsRParUnds'MAP'Unds'KItem'Unds'Map ptn0 ) ( \app \kore-symbol-Lblchoice'LParUndsRParUnds'MAP'Unds'KItem'Unds'Map-symbol ptn0 ) $.
IMP-symbol-202-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortMap ) ( \in-sort ( \kore-symbol-Lblchoice'LParUndsRParUnds'MAP'Unds'KItem'Unds'Map ptn0 ) \kore-sort-SortKItem ) ) $.

$c \kore-symbol-Lblchoice'LParUndsRParUnds'SET'Unds'KItem'Unds'Set \kore-symbol-Lblchoice'LParUndsRParUnds'SET'Unds'KItem'Unds'Set-symbol $.
IMP-symbol-203-is-symbol $a #Symbol \kore-symbol-Lblchoice'LParUndsRParUnds'SET'Unds'KItem'Unds'Set-symbol $.
IMP-symbol-203-is-pattern $a #Pattern ( \kore-symbol-Lblchoice'LParUndsRParUnds'SET'Unds'KItem'Unds'Set ptn0 ) $.
IMP-symbol-203-is-sugar $a #Notation ( \kore-symbol-Lblchoice'LParUndsRParUnds'SET'Unds'KItem'Unds'Set ptn0 ) ( \app \kore-symbol-Lblchoice'LParUndsRParUnds'SET'Unds'KItem'Unds'Set-symbol ptn0 ) $.
IMP-symbol-203-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortSet ) ( \in-sort ( \kore-symbol-Lblchoice'LParUndsRParUnds'SET'Unds'KItem'Unds'Set ptn0 ) \kore-sort-SortKItem ) ) $.

$c \kore-symbol-LblchrChar'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Int \kore-symbol-LblchrChar'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Int-symbol $.
IMP-symbol-204-is-symbol $a #Symbol \kore-symbol-LblchrChar'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Int-symbol $.
IMP-symbol-204-is-pattern $a #Pattern ( \kore-symbol-LblchrChar'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Int ptn0 ) $.
IMP-symbol-204-is-sugar $a #Notation ( \kore-symbol-LblchrChar'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Int ptn0 ) ( \app \kore-symbol-LblchrChar'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Int-symbol ptn0 ) $.
IMP-symbol-204-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortInt ) ( \in-sort ( \kore-symbol-LblchrChar'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Int ptn0 ) \kore-sort-SortString ) ) $.

$c \kore-symbol-LblcountAllOccurrences'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String \kore-symbol-LblcountAllOccurrences'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String-symbol $.
IMP-symbol-205-is-symbol $a #Symbol \kore-symbol-LblcountAllOccurrences'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String-symbol $.
IMP-symbol-205-is-pattern $a #Pattern ( \kore-symbol-LblcountAllOccurrences'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String ptn0 ptn1 ) $.
IMP-symbol-205-is-sugar $a #Notation ( \kore-symbol-LblcountAllOccurrences'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String ptn0 ptn1 ) ( \app ( \app \kore-symbol-LblcountAllOccurrences'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String-symbol ptn0 ) ptn1 ) $.
IMP-symbol-205-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortString ) ( \in-sort ptn1 \kore-sort-SortString ) ) ( \in-sort ( \kore-symbol-LblcountAllOccurrences'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String ptn0 ptn1 ) \kore-sort-SortInt ) ) $.

$c \kore-symbol-LbldirectionalityChar'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'String \kore-symbol-LbldirectionalityChar'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'String-symbol $.
IMP-symbol-206-is-symbol $a #Symbol \kore-symbol-LbldirectionalityChar'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'String-symbol $.
IMP-symbol-206-is-pattern $a #Pattern ( \kore-symbol-LbldirectionalityChar'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'String ptn0 ) $.
IMP-symbol-206-is-sugar $a #Notation ( \kore-symbol-LbldirectionalityChar'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'String ptn0 ) ( \app \kore-symbol-LbldirectionalityChar'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'String-symbol ptn0 ) $.
IMP-symbol-206-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortString ) ( \in-sort ( \kore-symbol-LbldirectionalityChar'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'String ptn0 ) \kore-sort-SortString ) ) $.

$c \kore-symbol-Lblexp'LParUndsCommUndsRParUnds'VERIFICAITON'Unds'Int'Unds'Int'Unds'Int \kore-symbol-Lblexp'LParUndsCommUndsRParUnds'VERIFICAITON'Unds'Int'Unds'Int'Unds'Int-symbol $.
IMP-symbol-207-is-symbol $a #Symbol \kore-symbol-Lblexp'LParUndsCommUndsRParUnds'VERIFICAITON'Unds'Int'Unds'Int'Unds'Int-symbol $.
IMP-symbol-207-is-pattern $a #Pattern ( \kore-symbol-Lblexp'LParUndsCommUndsRParUnds'VERIFICAITON'Unds'Int'Unds'Int'Unds'Int ptn0 ptn1 ) $.
IMP-symbol-207-is-sugar $a #Notation ( \kore-symbol-Lblexp'LParUndsCommUndsRParUnds'VERIFICAITON'Unds'Int'Unds'Int'Unds'Int ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lblexp'LParUndsCommUndsRParUnds'VERIFICAITON'Unds'Int'Unds'Int'Unds'Int-symbol ptn0 ) ptn1 ) $.
IMP-symbol-207-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortInt ) ( \in-sort ptn1 \kore-sort-SortInt ) ) ( \in-sort ( \kore-symbol-Lblexp'LParUndsCommUndsRParUnds'VERIFICAITON'Unds'Int'Unds'Int'Unds'Int ptn0 ptn1 ) \kore-sort-SortInt ) ) $.

$c \kore-symbol-LblfillList'LParUndsCommUndsCommUndsCommUndsRParUnds'LIST'Unds'List'Unds'List'Unds'Int'Unds'Int'Unds'KItem \kore-symbol-LblfillList'LParUndsCommUndsCommUndsCommUndsRParUnds'LIST'Unds'List'Unds'List'Unds'Int'Unds'Int'Unds'KItem-symbol $.
IMP-symbol-208-is-symbol $a #Symbol \kore-symbol-LblfillList'LParUndsCommUndsCommUndsCommUndsRParUnds'LIST'Unds'List'Unds'List'Unds'Int'Unds'Int'Unds'KItem-symbol $.
IMP-symbol-208-is-pattern $a #Pattern ( \kore-symbol-LblfillList'LParUndsCommUndsCommUndsCommUndsRParUnds'LIST'Unds'List'Unds'List'Unds'Int'Unds'Int'Unds'KItem ptn0 ptn1 ptn2 ptn3 ) $.
IMP-symbol-208-is-sugar $a #Notation ( \kore-symbol-LblfillList'LParUndsCommUndsCommUndsCommUndsRParUnds'LIST'Unds'List'Unds'List'Unds'Int'Unds'Int'Unds'KItem ptn0 ptn1 ptn2 ptn3 ) ( \app ( \app ( \app ( \app \kore-symbol-LblfillList'LParUndsCommUndsCommUndsCommUndsRParUnds'LIST'Unds'List'Unds'List'Unds'Int'Unds'Int'Unds'KItem-symbol ptn0 ) ptn1 ) ptn2 ) ptn3 ) $.
IMP-symbol-208-sorting $a |- ( \imp ( \and ( \and ( \and ( \in-sort ptn0 \kore-sort-SortList ) ( \in-sort ptn1 \kore-sort-SortInt ) ) ( \in-sort ptn2 \kore-sort-SortInt ) ) ( \in-sort ptn3 \kore-sort-SortKItem ) ) ( \in-sort ( \kore-symbol-LblfillList'LParUndsCommUndsCommUndsCommUndsRParUnds'LIST'Unds'List'Unds'List'Unds'Int'Unds'Int'Unds'KItem ptn0 ptn1 ptn2 ptn3 ) \kore-sort-SortList ) ) $.

$c \kore-symbol-LblfindChar'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int \kore-symbol-LblfindChar'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int-symbol $.
IMP-symbol-209-is-symbol $a #Symbol \kore-symbol-LblfindChar'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int-symbol $.
IMP-symbol-209-is-pattern $a #Pattern ( \kore-symbol-LblfindChar'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int ptn0 ptn1 ptn2 ) $.
IMP-symbol-209-is-sugar $a #Notation ( \kore-symbol-LblfindChar'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int ptn0 ptn1 ptn2 ) ( \app ( \app ( \app \kore-symbol-LblfindChar'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int-symbol ptn0 ) ptn1 ) ptn2 ) $.
IMP-symbol-209-sorting $a |- ( \imp ( \and ( \and ( \in-sort ptn0 \kore-sort-SortString ) ( \in-sort ptn1 \kore-sort-SortString ) ) ( \in-sort ptn2 \kore-sort-SortInt ) ) ( \in-sort ( \kore-symbol-LblfindChar'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int ptn0 ptn1 ptn2 ) \kore-sort-SortInt ) ) $.

$c \kore-symbol-LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int \kore-symbol-LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int-symbol $.
IMP-symbol-210-is-symbol $a #Symbol \kore-symbol-LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int-symbol $.
IMP-symbol-210-is-pattern $a #Pattern ( \kore-symbol-LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int ptn0 ptn1 ptn2 ) $.
IMP-symbol-210-is-sugar $a #Notation ( \kore-symbol-LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int ptn0 ptn1 ptn2 ) ( \app ( \app ( \app \kore-symbol-LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int-symbol ptn0 ) ptn1 ) ptn2 ) $.
IMP-symbol-210-sorting $a |- ( \imp ( \and ( \and ( \in-sort ptn0 \kore-sort-SortString ) ( \in-sort ptn1 \kore-sort-SortString ) ) ( \in-sort ptn2 \kore-sort-SortInt ) ) ( \in-sort ( \kore-symbol-LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int ptn0 ptn1 ptn2 ) \kore-sort-SortInt ) ) $.

$c \kore-symbol-LblfreshId'LParUndsRParUnds'ID-COMMON'Unds'Id'Unds'Int \kore-symbol-LblfreshId'LParUndsRParUnds'ID-COMMON'Unds'Id'Unds'Int-symbol $.
IMP-symbol-211-is-symbol $a #Symbol \kore-symbol-LblfreshId'LParUndsRParUnds'ID-COMMON'Unds'Id'Unds'Int-symbol $.
IMP-symbol-211-is-pattern $a #Pattern ( \kore-symbol-LblfreshId'LParUndsRParUnds'ID-COMMON'Unds'Id'Unds'Int ptn0 ) $.
IMP-symbol-211-is-sugar $a #Notation ( \kore-symbol-LblfreshId'LParUndsRParUnds'ID-COMMON'Unds'Id'Unds'Int ptn0 ) ( \app \kore-symbol-LblfreshId'LParUndsRParUnds'ID-COMMON'Unds'Id'Unds'Int-symbol ptn0 ) $.
IMP-symbol-211-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortInt ) ( \in-sort ( \kore-symbol-LblfreshId'LParUndsRParUnds'ID-COMMON'Unds'Id'Unds'Int ptn0 ) \kore-sort-SortId ) ) $.

$c \kore-symbol-LblfreshInt'LParUndsRParUnds'INT'Unds'Int'Unds'Int \kore-symbol-LblfreshInt'LParUndsRParUnds'INT'Unds'Int'Unds'Int-symbol $.
IMP-symbol-212-is-symbol $a #Symbol \kore-symbol-LblfreshInt'LParUndsRParUnds'INT'Unds'Int'Unds'Int-symbol $.
IMP-symbol-212-is-pattern $a #Pattern ( \kore-symbol-LblfreshInt'LParUndsRParUnds'INT'Unds'Int'Unds'Int ptn0 ) $.
IMP-symbol-212-is-sugar $a #Notation ( \kore-symbol-LblfreshInt'LParUndsRParUnds'INT'Unds'Int'Unds'Int ptn0 ) ( \app \kore-symbol-LblfreshInt'LParUndsRParUnds'INT'Unds'Int'Unds'Int-symbol ptn0 ) $.
IMP-symbol-212-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortInt ) ( \in-sort ( \kore-symbol-LblfreshInt'LParUndsRParUnds'INT'Unds'Int'Unds'Int ptn0 ) \kore-sort-SortInt ) ) $.

$c \kore-symbol-LblgetGeneratedCounterCell \kore-symbol-LblgetGeneratedCounterCell-symbol $.
IMP-symbol-213-is-symbol $a #Symbol \kore-symbol-LblgetGeneratedCounterCell-symbol $.
IMP-symbol-213-is-pattern $a #Pattern ( \kore-symbol-LblgetGeneratedCounterCell ptn0 ) $.
IMP-symbol-213-is-sugar $a #Notation ( \kore-symbol-LblgetGeneratedCounterCell ptn0 ) ( \app \kore-symbol-LblgetGeneratedCounterCell-symbol ptn0 ) $.
IMP-symbol-213-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortGeneratedTopCell ) ( \in-sort ( \kore-symbol-LblgetGeneratedCounterCell ptn0 ) \kore-sort-SortGeneratedCounterCell ) ) $.

$c \kore-symbol-Lblif'LParUndsRParUnds'else'UndsUnds'IMP-SYNTAX'Unds'Stmt'Unds'BExp'Unds'Block'Unds'Block \kore-symbol-Lblif'LParUndsRParUnds'else'UndsUnds'IMP-SYNTAX'Unds'Stmt'Unds'BExp'Unds'Block'Unds'Block-symbol $.
IMP-symbol-214-is-symbol $a #Symbol \kore-symbol-Lblif'LParUndsRParUnds'else'UndsUnds'IMP-SYNTAX'Unds'Stmt'Unds'BExp'Unds'Block'Unds'Block-symbol $.
IMP-symbol-214-is-pattern $a #Pattern ( \kore-symbol-Lblif'LParUndsRParUnds'else'UndsUnds'IMP-SYNTAX'Unds'Stmt'Unds'BExp'Unds'Block'Unds'Block ptn0 ptn1 ptn2 ) $.
IMP-symbol-214-is-sugar $a #Notation ( \kore-symbol-Lblif'LParUndsRParUnds'else'UndsUnds'IMP-SYNTAX'Unds'Stmt'Unds'BExp'Unds'Block'Unds'Block ptn0 ptn1 ptn2 ) ( \app ( \app ( \app \kore-symbol-Lblif'LParUndsRParUnds'else'UndsUnds'IMP-SYNTAX'Unds'Stmt'Unds'BExp'Unds'Block'Unds'Block-symbol ptn0 ) ptn1 ) ptn2 ) $.
IMP-symbol-214-sorting $a |- ( \imp ( \and ( \and ( \in-sort ptn0 \kore-sort-SortBExp ) ( \in-sort ptn1 \kore-sort-SortBlock ) ) ( \in-sort ptn2 \kore-sort-SortBlock ) ) ( \in-sort ( \kore-symbol-Lblif'LParUndsRParUnds'else'UndsUnds'IMP-SYNTAX'Unds'Stmt'Unds'BExp'Unds'Block'Unds'Block ptn0 ptn1 ptn2 ) \kore-sort-SortStmt ) ) $.

$c \kore-symbol-LblinitGeneratedCounterCell \kore-symbol-LblinitGeneratedCounterCell-symbol $.
IMP-symbol-215-is-symbol $a #Symbol \kore-symbol-LblinitGeneratedCounterCell-symbol $.
IMP-symbol-215-is-pattern $a #Pattern \kore-symbol-LblinitGeneratedCounterCell $.
IMP-symbol-215-is-sugar $a #Notation \kore-symbol-LblinitGeneratedCounterCell \kore-symbol-LblinitGeneratedCounterCell-symbol $.
IMP-symbol-215-sorting $a |- ( \in-sort \kore-symbol-LblinitGeneratedCounterCell \kore-sort-SortGeneratedCounterCell ) $.

$c \kore-symbol-LblinitGeneratedTopCell \kore-symbol-LblinitGeneratedTopCell-symbol $.
IMP-symbol-216-is-symbol $a #Symbol \kore-symbol-LblinitGeneratedTopCell-symbol $.
IMP-symbol-216-is-pattern $a #Pattern ( \kore-symbol-LblinitGeneratedTopCell ptn0 ) $.
IMP-symbol-216-is-sugar $a #Notation ( \kore-symbol-LblinitGeneratedTopCell ptn0 ) ( \app \kore-symbol-LblinitGeneratedTopCell-symbol ptn0 ) $.
IMP-symbol-216-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortMap ) ( \in-sort ( \kore-symbol-LblinitGeneratedTopCell ptn0 ) \kore-sort-SortGeneratedTopCell ) ) $.

$c \kore-symbol-LblinitKCell \kore-symbol-LblinitKCell-symbol $.
IMP-symbol-217-is-symbol $a #Symbol \kore-symbol-LblinitKCell-symbol $.
IMP-symbol-217-is-pattern $a #Pattern ( \kore-symbol-LblinitKCell ptn0 ) $.
IMP-symbol-217-is-sugar $a #Notation ( \kore-symbol-LblinitKCell ptn0 ) ( \app \kore-symbol-LblinitKCell-symbol ptn0 ) $.
IMP-symbol-217-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortMap ) ( \in-sort ( \kore-symbol-LblinitKCell ptn0 ) \kore-sort-SortKCell ) ) $.

$c \kore-symbol-LblinitStateCell \kore-symbol-LblinitStateCell-symbol $.
IMP-symbol-218-is-symbol $a #Symbol \kore-symbol-LblinitStateCell-symbol $.
IMP-symbol-218-is-pattern $a #Pattern \kore-symbol-LblinitStateCell $.
IMP-symbol-218-is-sugar $a #Notation \kore-symbol-LblinitStateCell \kore-symbol-LblinitStateCell-symbol $.
IMP-symbol-218-sorting $a |- ( \in-sort \kore-symbol-LblinitStateCell \kore-sort-SortStateCell ) $.

$c \kore-symbol-LblinitTCell \kore-symbol-LblinitTCell-symbol $.
IMP-symbol-219-is-symbol $a #Symbol \kore-symbol-LblinitTCell-symbol $.
IMP-symbol-219-is-pattern $a #Pattern ( \kore-symbol-LblinitTCell ptn0 ) $.
IMP-symbol-219-is-sugar $a #Notation ( \kore-symbol-LblinitTCell ptn0 ) ( \app \kore-symbol-LblinitTCell-symbol ptn0 ) $.
IMP-symbol-219-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortMap ) ( \in-sort ( \kore-symbol-LblinitTCell ptn0 ) \kore-sort-SortTCell ) ) $.

$c \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt-symbol $.
IMP-symbol-220-is-symbol $a #Symbol \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt-symbol $.
IMP-symbol-220-is-pattern $a #Pattern ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ptn0 ptn1 ) $.
IMP-symbol-220-is-sugar $a #Notation ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt-symbol ptn0 ) ptn1 ) $.
IMP-symbol-220-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortIds ) ( \in-sort ptn1 \kore-sort-SortStmt ) ) ( \in-sort ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ptn0 ptn1 ) \kore-sort-SortPgm ) ) $.

$c \kore-symbol-LblintersectSet'LParUndsCommUndsRParUnds'SET'Unds'Set'Unds'Set'Unds'Set \kore-symbol-LblintersectSet'LParUndsCommUndsRParUnds'SET'Unds'Set'Unds'Set'Unds'Set-symbol $.
IMP-symbol-221-is-symbol $a #Symbol \kore-symbol-LblintersectSet'LParUndsCommUndsRParUnds'SET'Unds'Set'Unds'Set'Unds'Set-symbol $.
IMP-symbol-221-is-pattern $a #Pattern ( \kore-symbol-LblintersectSet'LParUndsCommUndsRParUnds'SET'Unds'Set'Unds'Set'Unds'Set ptn0 ptn1 ) $.
IMP-symbol-221-is-sugar $a #Notation ( \kore-symbol-LblintersectSet'LParUndsCommUndsRParUnds'SET'Unds'Set'Unds'Set'Unds'Set ptn0 ptn1 ) ( \app ( \app \kore-symbol-LblintersectSet'LParUndsCommUndsRParUnds'SET'Unds'Set'Unds'Set'Unds'Set-symbol ptn0 ) ptn1 ) $.
IMP-symbol-221-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortSet ) ( \in-sort ptn1 \kore-sort-SortSet ) ) ( \in-sort ( \kore-symbol-LblintersectSet'LParUndsCommUndsRParUnds'SET'Unds'Set'Unds'Set'Unds'Set ptn0 ptn1 ) \kore-sort-SortSet ) ) $.

$c \kore-symbol-LblisAExp \kore-symbol-LblisAExp-symbol $.
IMP-symbol-222-is-symbol $a #Symbol \kore-symbol-LblisAExp-symbol $.
IMP-symbol-222-is-pattern $a #Pattern ( \kore-symbol-LblisAExp ptn0 ) $.
IMP-symbol-222-is-sugar $a #Notation ( \kore-symbol-LblisAExp ptn0 ) ( \app \kore-symbol-LblisAExp-symbol ptn0 ) $.
IMP-symbol-222-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ( \kore-symbol-LblisAExp ptn0 ) \kore-sort-SortBool ) ) $.

$c \kore-symbol-LblisBExp \kore-symbol-LblisBExp-symbol $.
IMP-symbol-223-is-symbol $a #Symbol \kore-symbol-LblisBExp-symbol $.
IMP-symbol-223-is-pattern $a #Pattern ( \kore-symbol-LblisBExp ptn0 ) $.
IMP-symbol-223-is-sugar $a #Notation ( \kore-symbol-LblisBExp ptn0 ) ( \app \kore-symbol-LblisBExp-symbol ptn0 ) $.
IMP-symbol-223-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ( \kore-symbol-LblisBExp ptn0 ) \kore-sort-SortBool ) ) $.

$c \kore-symbol-LblisBlock \kore-symbol-LblisBlock-symbol $.
IMP-symbol-224-is-symbol $a #Symbol \kore-symbol-LblisBlock-symbol $.
IMP-symbol-224-is-pattern $a #Pattern ( \kore-symbol-LblisBlock ptn0 ) $.
IMP-symbol-224-is-sugar $a #Notation ( \kore-symbol-LblisBlock ptn0 ) ( \app \kore-symbol-LblisBlock-symbol ptn0 ) $.
IMP-symbol-224-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ( \kore-symbol-LblisBlock ptn0 ) \kore-sort-SortBool ) ) $.

$c \kore-symbol-LblisBool \kore-symbol-LblisBool-symbol $.
IMP-symbol-225-is-symbol $a #Symbol \kore-symbol-LblisBool-symbol $.
IMP-symbol-225-is-pattern $a #Pattern ( \kore-symbol-LblisBool ptn0 ) $.
IMP-symbol-225-is-sugar $a #Notation ( \kore-symbol-LblisBool ptn0 ) ( \app \kore-symbol-LblisBool-symbol ptn0 ) $.
IMP-symbol-225-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ( \kore-symbol-LblisBool ptn0 ) \kore-sort-SortBool ) ) $.

$c \kore-symbol-LblisFloat \kore-symbol-LblisFloat-symbol $.
IMP-symbol-226-is-symbol $a #Symbol \kore-symbol-LblisFloat-symbol $.
IMP-symbol-226-is-pattern $a #Pattern ( \kore-symbol-LblisFloat ptn0 ) $.
IMP-symbol-226-is-sugar $a #Notation ( \kore-symbol-LblisFloat ptn0 ) ( \app \kore-symbol-LblisFloat-symbol ptn0 ) $.
IMP-symbol-226-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ( \kore-symbol-LblisFloat ptn0 ) \kore-sort-SortBool ) ) $.

$c \kore-symbol-LblisGeneratedCounterCell \kore-symbol-LblisGeneratedCounterCell-symbol $.
IMP-symbol-227-is-symbol $a #Symbol \kore-symbol-LblisGeneratedCounterCell-symbol $.
IMP-symbol-227-is-pattern $a #Pattern ( \kore-symbol-LblisGeneratedCounterCell ptn0 ) $.
IMP-symbol-227-is-sugar $a #Notation ( \kore-symbol-LblisGeneratedCounterCell ptn0 ) ( \app \kore-symbol-LblisGeneratedCounterCell-symbol ptn0 ) $.
IMP-symbol-227-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ( \kore-symbol-LblisGeneratedCounterCell ptn0 ) \kore-sort-SortBool ) ) $.

$c \kore-symbol-LblisGeneratedCounterCellOpt \kore-symbol-LblisGeneratedCounterCellOpt-symbol $.
IMP-symbol-228-is-symbol $a #Symbol \kore-symbol-LblisGeneratedCounterCellOpt-symbol $.
IMP-symbol-228-is-pattern $a #Pattern ( \kore-symbol-LblisGeneratedCounterCellOpt ptn0 ) $.
IMP-symbol-228-is-sugar $a #Notation ( \kore-symbol-LblisGeneratedCounterCellOpt ptn0 ) ( \app \kore-symbol-LblisGeneratedCounterCellOpt-symbol ptn0 ) $.
IMP-symbol-228-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ( \kore-symbol-LblisGeneratedCounterCellOpt ptn0 ) \kore-sort-SortBool ) ) $.

$c \kore-symbol-LblisGeneratedTopCell \kore-symbol-LblisGeneratedTopCell-symbol $.
IMP-symbol-229-is-symbol $a #Symbol \kore-symbol-LblisGeneratedTopCell-symbol $.
IMP-symbol-229-is-pattern $a #Pattern ( \kore-symbol-LblisGeneratedTopCell ptn0 ) $.
IMP-symbol-229-is-sugar $a #Notation ( \kore-symbol-LblisGeneratedTopCell ptn0 ) ( \app \kore-symbol-LblisGeneratedTopCell-symbol ptn0 ) $.
IMP-symbol-229-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ( \kore-symbol-LblisGeneratedTopCell ptn0 ) \kore-sort-SortBool ) ) $.

$c \kore-symbol-LblisGeneratedTopCellFragment \kore-symbol-LblisGeneratedTopCellFragment-symbol $.
IMP-symbol-230-is-symbol $a #Symbol \kore-symbol-LblisGeneratedTopCellFragment-symbol $.
IMP-symbol-230-is-pattern $a #Pattern ( \kore-symbol-LblisGeneratedTopCellFragment ptn0 ) $.
IMP-symbol-230-is-sugar $a #Notation ( \kore-symbol-LblisGeneratedTopCellFragment ptn0 ) ( \app \kore-symbol-LblisGeneratedTopCellFragment-symbol ptn0 ) $.
IMP-symbol-230-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ( \kore-symbol-LblisGeneratedTopCellFragment ptn0 ) \kore-sort-SortBool ) ) $.

$c \kore-symbol-LblisIOError \kore-symbol-LblisIOError-symbol $.
IMP-symbol-231-is-symbol $a #Symbol \kore-symbol-LblisIOError-symbol $.
IMP-symbol-231-is-pattern $a #Pattern ( \kore-symbol-LblisIOError ptn0 ) $.
IMP-symbol-231-is-sugar $a #Notation ( \kore-symbol-LblisIOError ptn0 ) ( \app \kore-symbol-LblisIOError-symbol ptn0 ) $.
IMP-symbol-231-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ( \kore-symbol-LblisIOError ptn0 ) \kore-sort-SortBool ) ) $.

$c \kore-symbol-LblisIOFile \kore-symbol-LblisIOFile-symbol $.
IMP-symbol-232-is-symbol $a #Symbol \kore-symbol-LblisIOFile-symbol $.
IMP-symbol-232-is-pattern $a #Pattern ( \kore-symbol-LblisIOFile ptn0 ) $.
IMP-symbol-232-is-sugar $a #Notation ( \kore-symbol-LblisIOFile ptn0 ) ( \app \kore-symbol-LblisIOFile-symbol ptn0 ) $.
IMP-symbol-232-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ( \kore-symbol-LblisIOFile ptn0 ) \kore-sort-SortBool ) ) $.

$c \kore-symbol-LblisIOInt \kore-symbol-LblisIOInt-symbol $.
IMP-symbol-233-is-symbol $a #Symbol \kore-symbol-LblisIOInt-symbol $.
IMP-symbol-233-is-pattern $a #Pattern ( \kore-symbol-LblisIOInt ptn0 ) $.
IMP-symbol-233-is-sugar $a #Notation ( \kore-symbol-LblisIOInt ptn0 ) ( \app \kore-symbol-LblisIOInt-symbol ptn0 ) $.
IMP-symbol-233-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ( \kore-symbol-LblisIOInt ptn0 ) \kore-sort-SortBool ) ) $.

$c \kore-symbol-LblisIOString \kore-symbol-LblisIOString-symbol $.
IMP-symbol-234-is-symbol $a #Symbol \kore-symbol-LblisIOString-symbol $.
IMP-symbol-234-is-pattern $a #Pattern ( \kore-symbol-LblisIOString ptn0 ) $.
IMP-symbol-234-is-sugar $a #Notation ( \kore-symbol-LblisIOString ptn0 ) ( \app \kore-symbol-LblisIOString-symbol ptn0 ) $.
IMP-symbol-234-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ( \kore-symbol-LblisIOString ptn0 ) \kore-sort-SortBool ) ) $.

$c \kore-symbol-LblisId \kore-symbol-LblisId-symbol $.
IMP-symbol-235-is-symbol $a #Symbol \kore-symbol-LblisId-symbol $.
IMP-symbol-235-is-pattern $a #Pattern ( \kore-symbol-LblisId ptn0 ) $.
IMP-symbol-235-is-sugar $a #Notation ( \kore-symbol-LblisId ptn0 ) ( \app \kore-symbol-LblisId-symbol ptn0 ) $.
IMP-symbol-235-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ( \kore-symbol-LblisId ptn0 ) \kore-sort-SortBool ) ) $.

$c \kore-symbol-LblisIds \kore-symbol-LblisIds-symbol $.
IMP-symbol-236-is-symbol $a #Symbol \kore-symbol-LblisIds-symbol $.
IMP-symbol-236-is-pattern $a #Pattern ( \kore-symbol-LblisIds ptn0 ) $.
IMP-symbol-236-is-sugar $a #Notation ( \kore-symbol-LblisIds ptn0 ) ( \app \kore-symbol-LblisIds-symbol ptn0 ) $.
IMP-symbol-236-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ( \kore-symbol-LblisIds ptn0 ) \kore-sort-SortBool ) ) $.

$c \kore-symbol-LblisInt \kore-symbol-LblisInt-symbol $.
IMP-symbol-237-is-symbol $a #Symbol \kore-symbol-LblisInt-symbol $.
IMP-symbol-237-is-pattern $a #Pattern ( \kore-symbol-LblisInt ptn0 ) $.
IMP-symbol-237-is-sugar $a #Notation ( \kore-symbol-LblisInt ptn0 ) ( \app \kore-symbol-LblisInt-symbol ptn0 ) $.
IMP-symbol-237-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ( \kore-symbol-LblisInt ptn0 ) \kore-sort-SortBool ) ) $.

$c \kore-symbol-LblisK \kore-symbol-LblisK-symbol $.
IMP-symbol-238-is-symbol $a #Symbol \kore-symbol-LblisK-symbol $.
IMP-symbol-238-is-pattern $a #Pattern ( \kore-symbol-LblisK ptn0 ) $.
IMP-symbol-238-is-sugar $a #Notation ( \kore-symbol-LblisK ptn0 ) ( \app \kore-symbol-LblisK-symbol ptn0 ) $.
IMP-symbol-238-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ( \kore-symbol-LblisK ptn0 ) \kore-sort-SortBool ) ) $.

$c \kore-symbol-LblisKCell \kore-symbol-LblisKCell-symbol $.
IMP-symbol-239-is-symbol $a #Symbol \kore-symbol-LblisKCell-symbol $.
IMP-symbol-239-is-pattern $a #Pattern ( \kore-symbol-LblisKCell ptn0 ) $.
IMP-symbol-239-is-sugar $a #Notation ( \kore-symbol-LblisKCell ptn0 ) ( \app \kore-symbol-LblisKCell-symbol ptn0 ) $.
IMP-symbol-239-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ( \kore-symbol-LblisKCell ptn0 ) \kore-sort-SortBool ) ) $.

$c \kore-symbol-LblisKCellOpt \kore-symbol-LblisKCellOpt-symbol $.
IMP-symbol-240-is-symbol $a #Symbol \kore-symbol-LblisKCellOpt-symbol $.
IMP-symbol-240-is-pattern $a #Pattern ( \kore-symbol-LblisKCellOpt ptn0 ) $.
IMP-symbol-240-is-sugar $a #Notation ( \kore-symbol-LblisKCellOpt ptn0 ) ( \app \kore-symbol-LblisKCellOpt-symbol ptn0 ) $.
IMP-symbol-240-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ( \kore-symbol-LblisKCellOpt ptn0 ) \kore-sort-SortBool ) ) $.

$c \kore-symbol-LblisKConfigVar \kore-symbol-LblisKConfigVar-symbol $.
IMP-symbol-241-is-symbol $a #Symbol \kore-symbol-LblisKConfigVar-symbol $.
IMP-symbol-241-is-pattern $a #Pattern ( \kore-symbol-LblisKConfigVar ptn0 ) $.
IMP-symbol-241-is-sugar $a #Notation ( \kore-symbol-LblisKConfigVar ptn0 ) ( \app \kore-symbol-LblisKConfigVar-symbol ptn0 ) $.
IMP-symbol-241-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ( \kore-symbol-LblisKConfigVar ptn0 ) \kore-sort-SortBool ) ) $.

$c \kore-symbol-LblisKItem \kore-symbol-LblisKItem-symbol $.
IMP-symbol-242-is-symbol $a #Symbol \kore-symbol-LblisKItem-symbol $.
IMP-symbol-242-is-pattern $a #Pattern ( \kore-symbol-LblisKItem ptn0 ) $.
IMP-symbol-242-is-sugar $a #Notation ( \kore-symbol-LblisKItem ptn0 ) ( \app \kore-symbol-LblisKItem-symbol ptn0 ) $.
IMP-symbol-242-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ( \kore-symbol-LblisKItem ptn0 ) \kore-sort-SortBool ) ) $.

$c \kore-symbol-LblisKResult \kore-symbol-LblisKResult-symbol $.
IMP-symbol-243-is-symbol $a #Symbol \kore-symbol-LblisKResult-symbol $.
IMP-symbol-243-is-pattern $a #Pattern ( \kore-symbol-LblisKResult ptn0 ) $.
IMP-symbol-243-is-sugar $a #Notation ( \kore-symbol-LblisKResult ptn0 ) ( \app \kore-symbol-LblisKResult-symbol ptn0 ) $.
IMP-symbol-243-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ( \kore-symbol-LblisKResult ptn0 ) \kore-sort-SortBool ) ) $.

$c \kore-symbol-LblisList \kore-symbol-LblisList-symbol $.
IMP-symbol-244-is-symbol $a #Symbol \kore-symbol-LblisList-symbol $.
IMP-symbol-244-is-pattern $a #Pattern ( \kore-symbol-LblisList ptn0 ) $.
IMP-symbol-244-is-sugar $a #Notation ( \kore-symbol-LblisList ptn0 ) ( \app \kore-symbol-LblisList-symbol ptn0 ) $.
IMP-symbol-244-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ( \kore-symbol-LblisList ptn0 ) \kore-sort-SortBool ) ) $.

$c \kore-symbol-LblisMap \kore-symbol-LblisMap-symbol $.
IMP-symbol-245-is-symbol $a #Symbol \kore-symbol-LblisMap-symbol $.
IMP-symbol-245-is-pattern $a #Pattern ( \kore-symbol-LblisMap ptn0 ) $.
IMP-symbol-245-is-sugar $a #Notation ( \kore-symbol-LblisMap ptn0 ) ( \app \kore-symbol-LblisMap-symbol ptn0 ) $.
IMP-symbol-245-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ( \kore-symbol-LblisMap ptn0 ) \kore-sort-SortBool ) ) $.

$c \kore-symbol-LblisPgm \kore-symbol-LblisPgm-symbol $.
IMP-symbol-246-is-symbol $a #Symbol \kore-symbol-LblisPgm-symbol $.
IMP-symbol-246-is-pattern $a #Pattern ( \kore-symbol-LblisPgm ptn0 ) $.
IMP-symbol-246-is-sugar $a #Notation ( \kore-symbol-LblisPgm ptn0 ) ( \app \kore-symbol-LblisPgm-symbol ptn0 ) $.
IMP-symbol-246-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ( \kore-symbol-LblisPgm ptn0 ) \kore-sort-SortBool ) ) $.

$c \kore-symbol-LblisSet \kore-symbol-LblisSet-symbol $.
IMP-symbol-247-is-symbol $a #Symbol \kore-symbol-LblisSet-symbol $.
IMP-symbol-247-is-pattern $a #Pattern ( \kore-symbol-LblisSet ptn0 ) $.
IMP-symbol-247-is-sugar $a #Notation ( \kore-symbol-LblisSet ptn0 ) ( \app \kore-symbol-LblisSet-symbol ptn0 ) $.
IMP-symbol-247-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ( \kore-symbol-LblisSet ptn0 ) \kore-sort-SortBool ) ) $.

$c \kore-symbol-LblisStateCell \kore-symbol-LblisStateCell-symbol $.
IMP-symbol-248-is-symbol $a #Symbol \kore-symbol-LblisStateCell-symbol $.
IMP-symbol-248-is-pattern $a #Pattern ( \kore-symbol-LblisStateCell ptn0 ) $.
IMP-symbol-248-is-sugar $a #Notation ( \kore-symbol-LblisStateCell ptn0 ) ( \app \kore-symbol-LblisStateCell-symbol ptn0 ) $.
IMP-symbol-248-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ( \kore-symbol-LblisStateCell ptn0 ) \kore-sort-SortBool ) ) $.

$c \kore-symbol-LblisStateCellOpt \kore-symbol-LblisStateCellOpt-symbol $.
IMP-symbol-249-is-symbol $a #Symbol \kore-symbol-LblisStateCellOpt-symbol $.
IMP-symbol-249-is-pattern $a #Pattern ( \kore-symbol-LblisStateCellOpt ptn0 ) $.
IMP-symbol-249-is-sugar $a #Notation ( \kore-symbol-LblisStateCellOpt ptn0 ) ( \app \kore-symbol-LblisStateCellOpt-symbol ptn0 ) $.
IMP-symbol-249-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ( \kore-symbol-LblisStateCellOpt ptn0 ) \kore-sort-SortBool ) ) $.

$c \kore-symbol-LblisStmt \kore-symbol-LblisStmt-symbol $.
IMP-symbol-250-is-symbol $a #Symbol \kore-symbol-LblisStmt-symbol $.
IMP-symbol-250-is-pattern $a #Pattern ( \kore-symbol-LblisStmt ptn0 ) $.
IMP-symbol-250-is-sugar $a #Notation ( \kore-symbol-LblisStmt ptn0 ) ( \app \kore-symbol-LblisStmt-symbol ptn0 ) $.
IMP-symbol-250-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ( \kore-symbol-LblisStmt ptn0 ) \kore-sort-SortBool ) ) $.

$c \kore-symbol-LblisStream \kore-symbol-LblisStream-symbol $.
IMP-symbol-251-is-symbol $a #Symbol \kore-symbol-LblisStream-symbol $.
IMP-symbol-251-is-pattern $a #Pattern ( \kore-symbol-LblisStream ptn0 ) $.
IMP-symbol-251-is-sugar $a #Notation ( \kore-symbol-LblisStream ptn0 ) ( \app \kore-symbol-LblisStream-symbol ptn0 ) $.
IMP-symbol-251-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ( \kore-symbol-LblisStream ptn0 ) \kore-sort-SortBool ) ) $.

$c \kore-symbol-LblisString \kore-symbol-LblisString-symbol $.
IMP-symbol-252-is-symbol $a #Symbol \kore-symbol-LblisString-symbol $.
IMP-symbol-252-is-pattern $a #Pattern ( \kore-symbol-LblisString ptn0 ) $.
IMP-symbol-252-is-sugar $a #Notation ( \kore-symbol-LblisString ptn0 ) ( \app \kore-symbol-LblisString-symbol ptn0 ) $.
IMP-symbol-252-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ( \kore-symbol-LblisString ptn0 ) \kore-sort-SortBool ) ) $.

$c \kore-symbol-LblisTCell \kore-symbol-LblisTCell-symbol $.
IMP-symbol-253-is-symbol $a #Symbol \kore-symbol-LblisTCell-symbol $.
IMP-symbol-253-is-pattern $a #Pattern ( \kore-symbol-LblisTCell ptn0 ) $.
IMP-symbol-253-is-sugar $a #Notation ( \kore-symbol-LblisTCell ptn0 ) ( \app \kore-symbol-LblisTCell-symbol ptn0 ) $.
IMP-symbol-253-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ( \kore-symbol-LblisTCell ptn0 ) \kore-sort-SortBool ) ) $.

$c \kore-symbol-LblisTCellFragment \kore-symbol-LblisTCellFragment-symbol $.
IMP-symbol-254-is-symbol $a #Symbol \kore-symbol-LblisTCellFragment-symbol $.
IMP-symbol-254-is-pattern $a #Pattern ( \kore-symbol-LblisTCellFragment ptn0 ) $.
IMP-symbol-254-is-sugar $a #Notation ( \kore-symbol-LblisTCellFragment ptn0 ) ( \app \kore-symbol-LblisTCellFragment-symbol ptn0 ) $.
IMP-symbol-254-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ( \kore-symbol-LblisTCellFragment ptn0 ) \kore-sort-SortBool ) ) $.

$c \kore-symbol-LblisTCellOpt \kore-symbol-LblisTCellOpt-symbol $.
IMP-symbol-255-is-symbol $a #Symbol \kore-symbol-LblisTCellOpt-symbol $.
IMP-symbol-255-is-pattern $a #Pattern ( \kore-symbol-LblisTCellOpt ptn0 ) $.
IMP-symbol-255-is-sugar $a #Notation ( \kore-symbol-LblisTCellOpt ptn0 ) ( \app \kore-symbol-LblisTCellOpt-symbol ptn0 ) $.
IMP-symbol-255-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ( \kore-symbol-LblisTCellOpt ptn0 ) \kore-sort-SortBool ) ) $.

$c \kore-symbol-Lblkeys'LParUndsRParUnds'MAP'Unds'Set'Unds'Map \kore-symbol-Lblkeys'LParUndsRParUnds'MAP'Unds'Set'Unds'Map-symbol $.
IMP-symbol-256-is-symbol $a #Symbol \kore-symbol-Lblkeys'LParUndsRParUnds'MAP'Unds'Set'Unds'Map-symbol $.
IMP-symbol-256-is-pattern $a #Pattern ( \kore-symbol-Lblkeys'LParUndsRParUnds'MAP'Unds'Set'Unds'Map ptn0 ) $.
IMP-symbol-256-is-sugar $a #Notation ( \kore-symbol-Lblkeys'LParUndsRParUnds'MAP'Unds'Set'Unds'Map ptn0 ) ( \app \kore-symbol-Lblkeys'LParUndsRParUnds'MAP'Unds'Set'Unds'Map-symbol ptn0 ) $.
IMP-symbol-256-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortMap ) ( \in-sort ( \kore-symbol-Lblkeys'LParUndsRParUnds'MAP'Unds'Set'Unds'Map ptn0 ) \kore-sort-SortSet ) ) $.

$c \kore-symbol-Lblkeys'Unds'list'LParUndsRParUnds'MAP'Unds'List'Unds'Map \kore-symbol-Lblkeys'Unds'list'LParUndsRParUnds'MAP'Unds'List'Unds'Map-symbol $.
IMP-symbol-257-is-symbol $a #Symbol \kore-symbol-Lblkeys'Unds'list'LParUndsRParUnds'MAP'Unds'List'Unds'Map-symbol $.
IMP-symbol-257-is-pattern $a #Pattern ( \kore-symbol-Lblkeys'Unds'list'LParUndsRParUnds'MAP'Unds'List'Unds'Map ptn0 ) $.
IMP-symbol-257-is-sugar $a #Notation ( \kore-symbol-Lblkeys'Unds'list'LParUndsRParUnds'MAP'Unds'List'Unds'Map ptn0 ) ( \app \kore-symbol-Lblkeys'Unds'list'LParUndsRParUnds'MAP'Unds'List'Unds'Map-symbol ptn0 ) $.
IMP-symbol-257-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortMap ) ( \in-sort ( \kore-symbol-Lblkeys'Unds'list'LParUndsRParUnds'MAP'Unds'List'Unds'Map ptn0 ) \kore-sort-SortList ) ) $.

$c \kore-symbol-LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String \kore-symbol-LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String-symbol $.
IMP-symbol-258-is-symbol $a #Symbol \kore-symbol-LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String-symbol $.
IMP-symbol-258-is-pattern $a #Pattern ( \kore-symbol-LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String ptn0 ) $.
IMP-symbol-258-is-sugar $a #Notation ( \kore-symbol-LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String ptn0 ) ( \app \kore-symbol-LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String-symbol ptn0 ) $.
IMP-symbol-258-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortString ) ( \in-sort ( \kore-symbol-LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String ptn0 ) \kore-sort-SortInt ) ) $.

$c \kore-symbol-Lbllog2Int'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int \kore-symbol-Lbllog2Int'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int-symbol $.
IMP-symbol-259-is-symbol $a #Symbol \kore-symbol-Lbllog2Int'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int-symbol $.
IMP-symbol-259-is-pattern $a #Pattern ( \kore-symbol-Lbllog2Int'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int ptn0 ) $.
IMP-symbol-259-is-sugar $a #Notation ( \kore-symbol-Lbllog2Int'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int ptn0 ) ( \app \kore-symbol-Lbllog2Int'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int-symbol ptn0 ) $.
IMP-symbol-259-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortInt ) ( \in-sort ( \kore-symbol-Lbllog2Int'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int ptn0 ) \kore-sort-SortInt ) ) $.

$c \kore-symbol-LblmakeList'LParUndsCommUndsRParUnds'LIST'Unds'List'Unds'Int'Unds'KItem \kore-symbol-LblmakeList'LParUndsCommUndsRParUnds'LIST'Unds'List'Unds'Int'Unds'KItem-symbol $.
IMP-symbol-260-is-symbol $a #Symbol \kore-symbol-LblmakeList'LParUndsCommUndsRParUnds'LIST'Unds'List'Unds'Int'Unds'KItem-symbol $.
IMP-symbol-260-is-pattern $a #Pattern ( \kore-symbol-LblmakeList'LParUndsCommUndsRParUnds'LIST'Unds'List'Unds'Int'Unds'KItem ptn0 ptn1 ) $.
IMP-symbol-260-is-sugar $a #Notation ( \kore-symbol-LblmakeList'LParUndsCommUndsRParUnds'LIST'Unds'List'Unds'Int'Unds'KItem ptn0 ptn1 ) ( \app ( \app \kore-symbol-LblmakeList'LParUndsCommUndsRParUnds'LIST'Unds'List'Unds'Int'Unds'KItem-symbol ptn0 ) ptn1 ) $.
IMP-symbol-260-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortInt ) ( \in-sort ptn1 \kore-sort-SortKItem ) ) ( \in-sort ( \kore-symbol-LblmakeList'LParUndsCommUndsRParUnds'LIST'Unds'List'Unds'Int'Unds'KItem ptn0 ptn1 ) \kore-sort-SortList ) ) $.

$c \kore-symbol-LblmaxInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int \kore-symbol-LblmaxInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int-symbol $.
IMP-symbol-261-is-symbol $a #Symbol \kore-symbol-LblmaxInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int-symbol $.
IMP-symbol-261-is-pattern $a #Pattern ( \kore-symbol-LblmaxInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int ptn0 ptn1 ) $.
IMP-symbol-261-is-sugar $a #Notation ( \kore-symbol-LblmaxInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int ptn0 ptn1 ) ( \app ( \app \kore-symbol-LblmaxInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int-symbol ptn0 ) ptn1 ) $.
IMP-symbol-261-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortInt ) ( \in-sort ptn1 \kore-sort-SortInt ) ) ( \in-sort ( \kore-symbol-LblmaxInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int ptn0 ptn1 ) \kore-sort-SortInt ) ) $.

$c \kore-symbol-LblminInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int \kore-symbol-LblminInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int-symbol $.
IMP-symbol-262-is-symbol $a #Symbol \kore-symbol-LblminInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int-symbol $.
IMP-symbol-262-is-pattern $a #Pattern ( \kore-symbol-LblminInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int ptn0 ptn1 ) $.
IMP-symbol-262-is-sugar $a #Notation ( \kore-symbol-LblminInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int ptn0 ptn1 ) ( \app ( \app \kore-symbol-LblminInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int-symbol ptn0 ) ptn1 ) $.
IMP-symbol-262-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortInt ) ( \in-sort ptn1 \kore-sort-SortInt ) ) ( \in-sort ( \kore-symbol-LblminInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int ptn0 ptn1 ) \kore-sort-SortInt ) ) $.

$c \kore-symbol-LblnewUUID'Unds'STRING-COMMON'Unds'String \kore-symbol-LblnewUUID'Unds'STRING-COMMON'Unds'String-symbol $.
IMP-symbol-263-is-symbol $a #Symbol \kore-symbol-LblnewUUID'Unds'STRING-COMMON'Unds'String-symbol $.
IMP-symbol-263-is-pattern $a #Pattern \kore-symbol-LblnewUUID'Unds'STRING-COMMON'Unds'String $.
IMP-symbol-263-is-sugar $a #Notation \kore-symbol-LblnewUUID'Unds'STRING-COMMON'Unds'String \kore-symbol-LblnewUUID'Unds'STRING-COMMON'Unds'String-symbol $.
IMP-symbol-263-sorting $a |- ( \in-sort \kore-symbol-LblnewUUID'Unds'STRING-COMMON'Unds'String \kore-sort-SortString ) $.

$c \kore-symbol-LblnoGeneratedCounterCell \kore-symbol-LblnoGeneratedCounterCell-symbol $.
IMP-symbol-264-is-symbol $a #Symbol \kore-symbol-LblnoGeneratedCounterCell-symbol $.
IMP-symbol-264-is-pattern $a #Pattern \kore-symbol-LblnoGeneratedCounterCell $.
IMP-symbol-264-is-sugar $a #Notation \kore-symbol-LblnoGeneratedCounterCell \kore-symbol-LblnoGeneratedCounterCell-symbol $.
IMP-symbol-264-sorting $a |- ( \in-sort \kore-symbol-LblnoGeneratedCounterCell \kore-sort-SortGeneratedCounterCellOpt ) $.

$c \kore-symbol-LblnoKCell \kore-symbol-LblnoKCell-symbol $.
IMP-symbol-265-is-symbol $a #Symbol \kore-symbol-LblnoKCell-symbol $.
IMP-symbol-265-is-pattern $a #Pattern \kore-symbol-LblnoKCell $.
IMP-symbol-265-is-sugar $a #Notation \kore-symbol-LblnoKCell \kore-symbol-LblnoKCell-symbol $.
IMP-symbol-265-sorting $a |- ( \in-sort \kore-symbol-LblnoKCell \kore-sort-SortKCellOpt ) $.

$c \kore-symbol-LblnoStateCell \kore-symbol-LblnoStateCell-symbol $.
IMP-symbol-266-is-symbol $a #Symbol \kore-symbol-LblnoStateCell-symbol $.
IMP-symbol-266-is-pattern $a #Pattern \kore-symbol-LblnoStateCell $.
IMP-symbol-266-is-sugar $a #Notation \kore-symbol-LblnoStateCell \kore-symbol-LblnoStateCell-symbol $.
IMP-symbol-266-sorting $a |- ( \in-sort \kore-symbol-LblnoStateCell \kore-sort-SortStateCellOpt ) $.

$c \kore-symbol-LblnoTCell \kore-symbol-LblnoTCell-symbol $.
IMP-symbol-267-is-symbol $a #Symbol \kore-symbol-LblnoTCell-symbol $.
IMP-symbol-267-is-pattern $a #Pattern \kore-symbol-LblnoTCell $.
IMP-symbol-267-is-sugar $a #Notation \kore-symbol-LblnoTCell \kore-symbol-LblnoTCell-symbol $.
IMP-symbol-267-sorting $a |- ( \in-sort \kore-symbol-LblnoTCell \kore-sort-SortTCellOpt ) $.

$c \kore-symbol-LblnotBool'Unds' \kore-symbol-LblnotBool'Unds'-symbol $.
IMP-symbol-268-is-symbol $a #Symbol \kore-symbol-LblnotBool'Unds'-symbol $.
IMP-symbol-268-is-pattern $a #Pattern ( \kore-symbol-LblnotBool'Unds' ptn0 ) $.
IMP-symbol-268-is-sugar $a #Notation ( \kore-symbol-LblnotBool'Unds' ptn0 ) ( \app \kore-symbol-LblnotBool'Unds'-symbol ptn0 ) $.
IMP-symbol-268-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortBool ) ( \in-sort ( \kore-symbol-LblnotBool'Unds' ptn0 ) \kore-sort-SortBool ) ) $.

$c \kore-symbol-LblordChar'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String \kore-symbol-LblordChar'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String-symbol $.
IMP-symbol-269-is-symbol $a #Symbol \kore-symbol-LblordChar'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String-symbol $.
IMP-symbol-269-is-pattern $a #Pattern ( \kore-symbol-LblordChar'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String ptn0 ) $.
IMP-symbol-269-is-sugar $a #Notation ( \kore-symbol-LblordChar'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String ptn0 ) ( \app \kore-symbol-LblordChar'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String-symbol ptn0 ) $.
IMP-symbol-269-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortString ) ( \in-sort ( \kore-symbol-LblordChar'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String ptn0 ) \kore-sort-SortInt ) ) $.

$c \kore-symbol-Lblproject'ColnHash'tempFile'Coln'fd \kore-symbol-Lblproject'ColnHash'tempFile'Coln'fd-symbol $.
IMP-symbol-270-is-symbol $a #Symbol \kore-symbol-Lblproject'ColnHash'tempFile'Coln'fd-symbol $.
IMP-symbol-270-is-pattern $a #Pattern ( \kore-symbol-Lblproject'ColnHash'tempFile'Coln'fd ptn0 ) $.
IMP-symbol-270-is-sugar $a #Notation ( \kore-symbol-Lblproject'ColnHash'tempFile'Coln'fd ptn0 ) ( \app \kore-symbol-Lblproject'ColnHash'tempFile'Coln'fd-symbol ptn0 ) $.
IMP-symbol-270-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortIOFile ) ( \in-sort ( \kore-symbol-Lblproject'ColnHash'tempFile'Coln'fd ptn0 ) \kore-sort-SortInt ) ) $.

$c \kore-symbol-Lblproject'ColnHash'tempFile'Coln'path \kore-symbol-Lblproject'ColnHash'tempFile'Coln'path-symbol $.
IMP-symbol-271-is-symbol $a #Symbol \kore-symbol-Lblproject'ColnHash'tempFile'Coln'path-symbol $.
IMP-symbol-271-is-pattern $a #Pattern ( \kore-symbol-Lblproject'ColnHash'tempFile'Coln'path ptn0 ) $.
IMP-symbol-271-is-sugar $a #Notation ( \kore-symbol-Lblproject'ColnHash'tempFile'Coln'path ptn0 ) ( \app \kore-symbol-Lblproject'ColnHash'tempFile'Coln'path-symbol ptn0 ) $.
IMP-symbol-271-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortIOFile ) ( \in-sort ( \kore-symbol-Lblproject'ColnHash'tempFile'Coln'path ptn0 ) \kore-sort-SortString ) ) $.

$c \kore-symbol-Lblproject'ColnHash'unknownIOError'Coln'errno \kore-symbol-Lblproject'ColnHash'unknownIOError'Coln'errno-symbol $.
IMP-symbol-272-is-symbol $a #Symbol \kore-symbol-Lblproject'ColnHash'unknownIOError'Coln'errno-symbol $.
IMP-symbol-272-is-pattern $a #Pattern ( \kore-symbol-Lblproject'ColnHash'unknownIOError'Coln'errno ptn0 ) $.
IMP-symbol-272-is-sugar $a #Notation ( \kore-symbol-Lblproject'ColnHash'unknownIOError'Coln'errno ptn0 ) ( \app \kore-symbol-Lblproject'ColnHash'unknownIOError'Coln'errno-symbol ptn0 ) $.
IMP-symbol-272-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortIOError ) ( \in-sort ( \kore-symbol-Lblproject'ColnHash'unknownIOError'Coln'errno ptn0 ) \kore-sort-SortInt ) ) $.

$c \kore-symbol-Lblproject'Coln'AExp \kore-symbol-Lblproject'Coln'AExp-symbol $.
IMP-symbol-273-is-symbol $a #Symbol \kore-symbol-Lblproject'Coln'AExp-symbol $.
IMP-symbol-273-is-pattern $a #Pattern ( \kore-symbol-Lblproject'Coln'AExp ptn0 ) $.
IMP-symbol-273-is-sugar $a #Notation ( \kore-symbol-Lblproject'Coln'AExp ptn0 ) ( \app \kore-symbol-Lblproject'Coln'AExp-symbol ptn0 ) $.
IMP-symbol-273-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ( \kore-symbol-Lblproject'Coln'AExp ptn0 ) \kore-sort-SortAExp ) ) $.

$c \kore-symbol-Lblproject'Coln'BExp \kore-symbol-Lblproject'Coln'BExp-symbol $.
IMP-symbol-274-is-symbol $a #Symbol \kore-symbol-Lblproject'Coln'BExp-symbol $.
IMP-symbol-274-is-pattern $a #Pattern ( \kore-symbol-Lblproject'Coln'BExp ptn0 ) $.
IMP-symbol-274-is-sugar $a #Notation ( \kore-symbol-Lblproject'Coln'BExp ptn0 ) ( \app \kore-symbol-Lblproject'Coln'BExp-symbol ptn0 ) $.
IMP-symbol-274-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ( \kore-symbol-Lblproject'Coln'BExp ptn0 ) \kore-sort-SortBExp ) ) $.

$c \kore-symbol-Lblproject'Coln'Block \kore-symbol-Lblproject'Coln'Block-symbol $.
IMP-symbol-275-is-symbol $a #Symbol \kore-symbol-Lblproject'Coln'Block-symbol $.
IMP-symbol-275-is-pattern $a #Pattern ( \kore-symbol-Lblproject'Coln'Block ptn0 ) $.
IMP-symbol-275-is-sugar $a #Notation ( \kore-symbol-Lblproject'Coln'Block ptn0 ) ( \app \kore-symbol-Lblproject'Coln'Block-symbol ptn0 ) $.
IMP-symbol-275-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ( \kore-symbol-Lblproject'Coln'Block ptn0 ) \kore-sort-SortBlock ) ) $.

$c \kore-symbol-Lblproject'Coln'Bool \kore-symbol-Lblproject'Coln'Bool-symbol $.
IMP-symbol-276-is-symbol $a #Symbol \kore-symbol-Lblproject'Coln'Bool-symbol $.
IMP-symbol-276-is-pattern $a #Pattern ( \kore-symbol-Lblproject'Coln'Bool ptn0 ) $.
IMP-symbol-276-is-sugar $a #Notation ( \kore-symbol-Lblproject'Coln'Bool ptn0 ) ( \app \kore-symbol-Lblproject'Coln'Bool-symbol ptn0 ) $.
IMP-symbol-276-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ( \kore-symbol-Lblproject'Coln'Bool ptn0 ) \kore-sort-SortBool ) ) $.

$c \kore-symbol-Lblproject'Coln'Float \kore-symbol-Lblproject'Coln'Float-symbol $.
IMP-symbol-277-is-symbol $a #Symbol \kore-symbol-Lblproject'Coln'Float-symbol $.
IMP-symbol-277-is-pattern $a #Pattern ( \kore-symbol-Lblproject'Coln'Float ptn0 ) $.
IMP-symbol-277-is-sugar $a #Notation ( \kore-symbol-Lblproject'Coln'Float ptn0 ) ( \app \kore-symbol-Lblproject'Coln'Float-symbol ptn0 ) $.
IMP-symbol-277-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ( \kore-symbol-Lblproject'Coln'Float ptn0 ) \kore-sort-SortFloat ) ) $.

$c \kore-symbol-Lblproject'Coln'GeneratedCounterCell \kore-symbol-Lblproject'Coln'GeneratedCounterCell-symbol $.
IMP-symbol-278-is-symbol $a #Symbol \kore-symbol-Lblproject'Coln'GeneratedCounterCell-symbol $.
IMP-symbol-278-is-pattern $a #Pattern ( \kore-symbol-Lblproject'Coln'GeneratedCounterCell ptn0 ) $.
IMP-symbol-278-is-sugar $a #Notation ( \kore-symbol-Lblproject'Coln'GeneratedCounterCell ptn0 ) ( \app \kore-symbol-Lblproject'Coln'GeneratedCounterCell-symbol ptn0 ) $.
IMP-symbol-278-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ( \kore-symbol-Lblproject'Coln'GeneratedCounterCell ptn0 ) \kore-sort-SortGeneratedCounterCell ) ) $.

$c \kore-symbol-Lblproject'Coln'GeneratedCounterCellOpt \kore-symbol-Lblproject'Coln'GeneratedCounterCellOpt-symbol $.
IMP-symbol-279-is-symbol $a #Symbol \kore-symbol-Lblproject'Coln'GeneratedCounterCellOpt-symbol $.
IMP-symbol-279-is-pattern $a #Pattern ( \kore-symbol-Lblproject'Coln'GeneratedCounterCellOpt ptn0 ) $.
IMP-symbol-279-is-sugar $a #Notation ( \kore-symbol-Lblproject'Coln'GeneratedCounterCellOpt ptn0 ) ( \app \kore-symbol-Lblproject'Coln'GeneratedCounterCellOpt-symbol ptn0 ) $.
IMP-symbol-279-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ( \kore-symbol-Lblproject'Coln'GeneratedCounterCellOpt ptn0 ) \kore-sort-SortGeneratedCounterCellOpt ) ) $.

$c \kore-symbol-Lblproject'Coln'GeneratedTopCell \kore-symbol-Lblproject'Coln'GeneratedTopCell-symbol $.
IMP-symbol-280-is-symbol $a #Symbol \kore-symbol-Lblproject'Coln'GeneratedTopCell-symbol $.
IMP-symbol-280-is-pattern $a #Pattern ( \kore-symbol-Lblproject'Coln'GeneratedTopCell ptn0 ) $.
IMP-symbol-280-is-sugar $a #Notation ( \kore-symbol-Lblproject'Coln'GeneratedTopCell ptn0 ) ( \app \kore-symbol-Lblproject'Coln'GeneratedTopCell-symbol ptn0 ) $.
IMP-symbol-280-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ( \kore-symbol-Lblproject'Coln'GeneratedTopCell ptn0 ) \kore-sort-SortGeneratedTopCell ) ) $.

$c \kore-symbol-Lblproject'Coln'GeneratedTopCellFragment \kore-symbol-Lblproject'Coln'GeneratedTopCellFragment-symbol $.
IMP-symbol-281-is-symbol $a #Symbol \kore-symbol-Lblproject'Coln'GeneratedTopCellFragment-symbol $.
IMP-symbol-281-is-pattern $a #Pattern ( \kore-symbol-Lblproject'Coln'GeneratedTopCellFragment ptn0 ) $.
IMP-symbol-281-is-sugar $a #Notation ( \kore-symbol-Lblproject'Coln'GeneratedTopCellFragment ptn0 ) ( \app \kore-symbol-Lblproject'Coln'GeneratedTopCellFragment-symbol ptn0 ) $.
IMP-symbol-281-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ( \kore-symbol-Lblproject'Coln'GeneratedTopCellFragment ptn0 ) \kore-sort-SortGeneratedTopCellFragment ) ) $.

$c \kore-symbol-Lblproject'Coln'IOError \kore-symbol-Lblproject'Coln'IOError-symbol $.
IMP-symbol-282-is-symbol $a #Symbol \kore-symbol-Lblproject'Coln'IOError-symbol $.
IMP-symbol-282-is-pattern $a #Pattern ( \kore-symbol-Lblproject'Coln'IOError ptn0 ) $.
IMP-symbol-282-is-sugar $a #Notation ( \kore-symbol-Lblproject'Coln'IOError ptn0 ) ( \app \kore-symbol-Lblproject'Coln'IOError-symbol ptn0 ) $.
IMP-symbol-282-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ( \kore-symbol-Lblproject'Coln'IOError ptn0 ) \kore-sort-SortIOError ) ) $.

$c \kore-symbol-Lblproject'Coln'IOFile \kore-symbol-Lblproject'Coln'IOFile-symbol $.
IMP-symbol-283-is-symbol $a #Symbol \kore-symbol-Lblproject'Coln'IOFile-symbol $.
IMP-symbol-283-is-pattern $a #Pattern ( \kore-symbol-Lblproject'Coln'IOFile ptn0 ) $.
IMP-symbol-283-is-sugar $a #Notation ( \kore-symbol-Lblproject'Coln'IOFile ptn0 ) ( \app \kore-symbol-Lblproject'Coln'IOFile-symbol ptn0 ) $.
IMP-symbol-283-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ( \kore-symbol-Lblproject'Coln'IOFile ptn0 ) \kore-sort-SortIOFile ) ) $.

$c \kore-symbol-Lblproject'Coln'IOInt \kore-symbol-Lblproject'Coln'IOInt-symbol $.
IMP-symbol-284-is-symbol $a #Symbol \kore-symbol-Lblproject'Coln'IOInt-symbol $.
IMP-symbol-284-is-pattern $a #Pattern ( \kore-symbol-Lblproject'Coln'IOInt ptn0 ) $.
IMP-symbol-284-is-sugar $a #Notation ( \kore-symbol-Lblproject'Coln'IOInt ptn0 ) ( \app \kore-symbol-Lblproject'Coln'IOInt-symbol ptn0 ) $.
IMP-symbol-284-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ( \kore-symbol-Lblproject'Coln'IOInt ptn0 ) \kore-sort-SortIOInt ) ) $.

$c \kore-symbol-Lblproject'Coln'IOString \kore-symbol-Lblproject'Coln'IOString-symbol $.
IMP-symbol-285-is-symbol $a #Symbol \kore-symbol-Lblproject'Coln'IOString-symbol $.
IMP-symbol-285-is-pattern $a #Pattern ( \kore-symbol-Lblproject'Coln'IOString ptn0 ) $.
IMP-symbol-285-is-sugar $a #Notation ( \kore-symbol-Lblproject'Coln'IOString ptn0 ) ( \app \kore-symbol-Lblproject'Coln'IOString-symbol ptn0 ) $.
IMP-symbol-285-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ( \kore-symbol-Lblproject'Coln'IOString ptn0 ) \kore-sort-SortIOString ) ) $.

$c \kore-symbol-Lblproject'Coln'Id \kore-symbol-Lblproject'Coln'Id-symbol $.
IMP-symbol-286-is-symbol $a #Symbol \kore-symbol-Lblproject'Coln'Id-symbol $.
IMP-symbol-286-is-pattern $a #Pattern ( \kore-symbol-Lblproject'Coln'Id ptn0 ) $.
IMP-symbol-286-is-sugar $a #Notation ( \kore-symbol-Lblproject'Coln'Id ptn0 ) ( \app \kore-symbol-Lblproject'Coln'Id-symbol ptn0 ) $.
IMP-symbol-286-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ( \kore-symbol-Lblproject'Coln'Id ptn0 ) \kore-sort-SortId ) ) $.

$c \kore-symbol-Lblproject'Coln'Ids \kore-symbol-Lblproject'Coln'Ids-symbol $.
IMP-symbol-287-is-symbol $a #Symbol \kore-symbol-Lblproject'Coln'Ids-symbol $.
IMP-symbol-287-is-pattern $a #Pattern ( \kore-symbol-Lblproject'Coln'Ids ptn0 ) $.
IMP-symbol-287-is-sugar $a #Notation ( \kore-symbol-Lblproject'Coln'Ids ptn0 ) ( \app \kore-symbol-Lblproject'Coln'Ids-symbol ptn0 ) $.
IMP-symbol-287-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ( \kore-symbol-Lblproject'Coln'Ids ptn0 ) \kore-sort-SortIds ) ) $.

$c \kore-symbol-Lblproject'Coln'Int \kore-symbol-Lblproject'Coln'Int-symbol $.
IMP-symbol-288-is-symbol $a #Symbol \kore-symbol-Lblproject'Coln'Int-symbol $.
IMP-symbol-288-is-pattern $a #Pattern ( \kore-symbol-Lblproject'Coln'Int ptn0 ) $.
IMP-symbol-288-is-sugar $a #Notation ( \kore-symbol-Lblproject'Coln'Int ptn0 ) ( \app \kore-symbol-Lblproject'Coln'Int-symbol ptn0 ) $.
IMP-symbol-288-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ( \kore-symbol-Lblproject'Coln'Int ptn0 ) \kore-sort-SortInt ) ) $.

$c \kore-symbol-Lblproject'Coln'K \kore-symbol-Lblproject'Coln'K-symbol $.
IMP-symbol-289-is-symbol $a #Symbol \kore-symbol-Lblproject'Coln'K-symbol $.
IMP-symbol-289-is-pattern $a #Pattern ( \kore-symbol-Lblproject'Coln'K ptn0 ) $.
IMP-symbol-289-is-sugar $a #Notation ( \kore-symbol-Lblproject'Coln'K ptn0 ) ( \app \kore-symbol-Lblproject'Coln'K-symbol ptn0 ) $.
IMP-symbol-289-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ( \kore-symbol-Lblproject'Coln'K ptn0 ) \kore-sort-SortK ) ) $.

$c \kore-symbol-Lblproject'Coln'KCell \kore-symbol-Lblproject'Coln'KCell-symbol $.
IMP-symbol-290-is-symbol $a #Symbol \kore-symbol-Lblproject'Coln'KCell-symbol $.
IMP-symbol-290-is-pattern $a #Pattern ( \kore-symbol-Lblproject'Coln'KCell ptn0 ) $.
IMP-symbol-290-is-sugar $a #Notation ( \kore-symbol-Lblproject'Coln'KCell ptn0 ) ( \app \kore-symbol-Lblproject'Coln'KCell-symbol ptn0 ) $.
IMP-symbol-290-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ( \kore-symbol-Lblproject'Coln'KCell ptn0 ) \kore-sort-SortKCell ) ) $.

$c \kore-symbol-Lblproject'Coln'KCellOpt \kore-symbol-Lblproject'Coln'KCellOpt-symbol $.
IMP-symbol-291-is-symbol $a #Symbol \kore-symbol-Lblproject'Coln'KCellOpt-symbol $.
IMP-symbol-291-is-pattern $a #Pattern ( \kore-symbol-Lblproject'Coln'KCellOpt ptn0 ) $.
IMP-symbol-291-is-sugar $a #Notation ( \kore-symbol-Lblproject'Coln'KCellOpt ptn0 ) ( \app \kore-symbol-Lblproject'Coln'KCellOpt-symbol ptn0 ) $.
IMP-symbol-291-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ( \kore-symbol-Lblproject'Coln'KCellOpt ptn0 ) \kore-sort-SortKCellOpt ) ) $.

$c \kore-symbol-Lblproject'Coln'KItem \kore-symbol-Lblproject'Coln'KItem-symbol $.
IMP-symbol-292-is-symbol $a #Symbol \kore-symbol-Lblproject'Coln'KItem-symbol $.
IMP-symbol-292-is-pattern $a #Pattern ( \kore-symbol-Lblproject'Coln'KItem ptn0 ) $.
IMP-symbol-292-is-sugar $a #Notation ( \kore-symbol-Lblproject'Coln'KItem ptn0 ) ( \app \kore-symbol-Lblproject'Coln'KItem-symbol ptn0 ) $.
IMP-symbol-292-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ( \kore-symbol-Lblproject'Coln'KItem ptn0 ) \kore-sort-SortKItem ) ) $.

$c \kore-symbol-Lblproject'Coln'KResult \kore-symbol-Lblproject'Coln'KResult-symbol $.
IMP-symbol-293-is-symbol $a #Symbol \kore-symbol-Lblproject'Coln'KResult-symbol $.
IMP-symbol-293-is-pattern $a #Pattern ( \kore-symbol-Lblproject'Coln'KResult ptn0 ) $.
IMP-symbol-293-is-sugar $a #Notation ( \kore-symbol-Lblproject'Coln'KResult ptn0 ) ( \app \kore-symbol-Lblproject'Coln'KResult-symbol ptn0 ) $.
IMP-symbol-293-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ( \kore-symbol-Lblproject'Coln'KResult ptn0 ) \kore-sort-SortKResult ) ) $.

$c \kore-symbol-Lblproject'Coln'List \kore-symbol-Lblproject'Coln'List-symbol $.
IMP-symbol-294-is-symbol $a #Symbol \kore-symbol-Lblproject'Coln'List-symbol $.
IMP-symbol-294-is-pattern $a #Pattern ( \kore-symbol-Lblproject'Coln'List ptn0 ) $.
IMP-symbol-294-is-sugar $a #Notation ( \kore-symbol-Lblproject'Coln'List ptn0 ) ( \app \kore-symbol-Lblproject'Coln'List-symbol ptn0 ) $.
IMP-symbol-294-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ( \kore-symbol-Lblproject'Coln'List ptn0 ) \kore-sort-SortList ) ) $.

$c \kore-symbol-Lblproject'Coln'Map \kore-symbol-Lblproject'Coln'Map-symbol $.
IMP-symbol-295-is-symbol $a #Symbol \kore-symbol-Lblproject'Coln'Map-symbol $.
IMP-symbol-295-is-pattern $a #Pattern ( \kore-symbol-Lblproject'Coln'Map ptn0 ) $.
IMP-symbol-295-is-sugar $a #Notation ( \kore-symbol-Lblproject'Coln'Map ptn0 ) ( \app \kore-symbol-Lblproject'Coln'Map-symbol ptn0 ) $.
IMP-symbol-295-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ( \kore-symbol-Lblproject'Coln'Map ptn0 ) \kore-sort-SortMap ) ) $.

$c \kore-symbol-Lblproject'Coln'Pgm \kore-symbol-Lblproject'Coln'Pgm-symbol $.
IMP-symbol-296-is-symbol $a #Symbol \kore-symbol-Lblproject'Coln'Pgm-symbol $.
IMP-symbol-296-is-pattern $a #Pattern ( \kore-symbol-Lblproject'Coln'Pgm ptn0 ) $.
IMP-symbol-296-is-sugar $a #Notation ( \kore-symbol-Lblproject'Coln'Pgm ptn0 ) ( \app \kore-symbol-Lblproject'Coln'Pgm-symbol ptn0 ) $.
IMP-symbol-296-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ( \kore-symbol-Lblproject'Coln'Pgm ptn0 ) \kore-sort-SortPgm ) ) $.

$c \kore-symbol-Lblproject'Coln'Set \kore-symbol-Lblproject'Coln'Set-symbol $.
IMP-symbol-297-is-symbol $a #Symbol \kore-symbol-Lblproject'Coln'Set-symbol $.
IMP-symbol-297-is-pattern $a #Pattern ( \kore-symbol-Lblproject'Coln'Set ptn0 ) $.
IMP-symbol-297-is-sugar $a #Notation ( \kore-symbol-Lblproject'Coln'Set ptn0 ) ( \app \kore-symbol-Lblproject'Coln'Set-symbol ptn0 ) $.
IMP-symbol-297-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ( \kore-symbol-Lblproject'Coln'Set ptn0 ) \kore-sort-SortSet ) ) $.

$c \kore-symbol-Lblproject'Coln'StateCell \kore-symbol-Lblproject'Coln'StateCell-symbol $.
IMP-symbol-298-is-symbol $a #Symbol \kore-symbol-Lblproject'Coln'StateCell-symbol $.
IMP-symbol-298-is-pattern $a #Pattern ( \kore-symbol-Lblproject'Coln'StateCell ptn0 ) $.
IMP-symbol-298-is-sugar $a #Notation ( \kore-symbol-Lblproject'Coln'StateCell ptn0 ) ( \app \kore-symbol-Lblproject'Coln'StateCell-symbol ptn0 ) $.
IMP-symbol-298-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ( \kore-symbol-Lblproject'Coln'StateCell ptn0 ) \kore-sort-SortStateCell ) ) $.

$c \kore-symbol-Lblproject'Coln'StateCellOpt \kore-symbol-Lblproject'Coln'StateCellOpt-symbol $.
IMP-symbol-299-is-symbol $a #Symbol \kore-symbol-Lblproject'Coln'StateCellOpt-symbol $.
IMP-symbol-299-is-pattern $a #Pattern ( \kore-symbol-Lblproject'Coln'StateCellOpt ptn0 ) $.
IMP-symbol-299-is-sugar $a #Notation ( \kore-symbol-Lblproject'Coln'StateCellOpt ptn0 ) ( \app \kore-symbol-Lblproject'Coln'StateCellOpt-symbol ptn0 ) $.
IMP-symbol-299-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ( \kore-symbol-Lblproject'Coln'StateCellOpt ptn0 ) \kore-sort-SortStateCellOpt ) ) $.

$c \kore-symbol-Lblproject'Coln'Stmt \kore-symbol-Lblproject'Coln'Stmt-symbol $.
IMP-symbol-300-is-symbol $a #Symbol \kore-symbol-Lblproject'Coln'Stmt-symbol $.
IMP-symbol-300-is-pattern $a #Pattern ( \kore-symbol-Lblproject'Coln'Stmt ptn0 ) $.
IMP-symbol-300-is-sugar $a #Notation ( \kore-symbol-Lblproject'Coln'Stmt ptn0 ) ( \app \kore-symbol-Lblproject'Coln'Stmt-symbol ptn0 ) $.
IMP-symbol-300-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ( \kore-symbol-Lblproject'Coln'Stmt ptn0 ) \kore-sort-SortStmt ) ) $.

$c \kore-symbol-Lblproject'Coln'Stream \kore-symbol-Lblproject'Coln'Stream-symbol $.
IMP-symbol-301-is-symbol $a #Symbol \kore-symbol-Lblproject'Coln'Stream-symbol $.
IMP-symbol-301-is-pattern $a #Pattern ( \kore-symbol-Lblproject'Coln'Stream ptn0 ) $.
IMP-symbol-301-is-sugar $a #Notation ( \kore-symbol-Lblproject'Coln'Stream ptn0 ) ( \app \kore-symbol-Lblproject'Coln'Stream-symbol ptn0 ) $.
IMP-symbol-301-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ( \kore-symbol-Lblproject'Coln'Stream ptn0 ) \kore-sort-SortStream ) ) $.

$c \kore-symbol-Lblproject'Coln'String \kore-symbol-Lblproject'Coln'String-symbol $.
IMP-symbol-302-is-symbol $a #Symbol \kore-symbol-Lblproject'Coln'String-symbol $.
IMP-symbol-302-is-pattern $a #Pattern ( \kore-symbol-Lblproject'Coln'String ptn0 ) $.
IMP-symbol-302-is-sugar $a #Notation ( \kore-symbol-Lblproject'Coln'String ptn0 ) ( \app \kore-symbol-Lblproject'Coln'String-symbol ptn0 ) $.
IMP-symbol-302-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ( \kore-symbol-Lblproject'Coln'String ptn0 ) \kore-sort-SortString ) ) $.

$c \kore-symbol-Lblproject'Coln'TCell \kore-symbol-Lblproject'Coln'TCell-symbol $.
IMP-symbol-303-is-symbol $a #Symbol \kore-symbol-Lblproject'Coln'TCell-symbol $.
IMP-symbol-303-is-pattern $a #Pattern ( \kore-symbol-Lblproject'Coln'TCell ptn0 ) $.
IMP-symbol-303-is-sugar $a #Notation ( \kore-symbol-Lblproject'Coln'TCell ptn0 ) ( \app \kore-symbol-Lblproject'Coln'TCell-symbol ptn0 ) $.
IMP-symbol-303-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ( \kore-symbol-Lblproject'Coln'TCell ptn0 ) \kore-sort-SortTCell ) ) $.

$c \kore-symbol-Lblproject'Coln'TCellFragment \kore-symbol-Lblproject'Coln'TCellFragment-symbol $.
IMP-symbol-304-is-symbol $a #Symbol \kore-symbol-Lblproject'Coln'TCellFragment-symbol $.
IMP-symbol-304-is-pattern $a #Pattern ( \kore-symbol-Lblproject'Coln'TCellFragment ptn0 ) $.
IMP-symbol-304-is-sugar $a #Notation ( \kore-symbol-Lblproject'Coln'TCellFragment ptn0 ) ( \app \kore-symbol-Lblproject'Coln'TCellFragment-symbol ptn0 ) $.
IMP-symbol-304-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ( \kore-symbol-Lblproject'Coln'TCellFragment ptn0 ) \kore-sort-SortTCellFragment ) ) $.

$c \kore-symbol-Lblproject'Coln'TCellOpt \kore-symbol-Lblproject'Coln'TCellOpt-symbol $.
IMP-symbol-305-is-symbol $a #Symbol \kore-symbol-Lblproject'Coln'TCellOpt-symbol $.
IMP-symbol-305-is-pattern $a #Pattern ( \kore-symbol-Lblproject'Coln'TCellOpt ptn0 ) $.
IMP-symbol-305-is-sugar $a #Notation ( \kore-symbol-Lblproject'Coln'TCellOpt ptn0 ) ( \app \kore-symbol-Lblproject'Coln'TCellOpt-symbol ptn0 ) $.
IMP-symbol-305-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ( \kore-symbol-Lblproject'Coln'TCellOpt ptn0 ) \kore-sort-SortTCellOpt ) ) $.

$c \kore-symbol-LblrandInt'LParUndsRParUnds'INT'Unds'Int'Unds'Int \kore-symbol-LblrandInt'LParUndsRParUnds'INT'Unds'Int'Unds'Int-symbol $.
IMP-symbol-306-is-symbol $a #Symbol \kore-symbol-LblrandInt'LParUndsRParUnds'INT'Unds'Int'Unds'Int-symbol $.
IMP-symbol-306-is-pattern $a #Pattern ( \kore-symbol-LblrandInt'LParUndsRParUnds'INT'Unds'Int'Unds'Int ptn0 ) $.
IMP-symbol-306-is-sugar $a #Notation ( \kore-symbol-LblrandInt'LParUndsRParUnds'INT'Unds'Int'Unds'Int ptn0 ) ( \app \kore-symbol-LblrandInt'LParUndsRParUnds'INT'Unds'Int'Unds'Int-symbol ptn0 ) $.
IMP-symbol-306-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortInt ) ( \in-sort ( \kore-symbol-LblrandInt'LParUndsRParUnds'INT'Unds'Int'Unds'Int ptn0 ) \kore-sort-SortInt ) ) $.

$c \kore-symbol-LblremoveAll'LParUndsCommUndsRParUnds'MAP'Unds'Map'Unds'Map'Unds'Set \kore-symbol-LblremoveAll'LParUndsCommUndsRParUnds'MAP'Unds'Map'Unds'Map'Unds'Set-symbol $.
IMP-symbol-307-is-symbol $a #Symbol \kore-symbol-LblremoveAll'LParUndsCommUndsRParUnds'MAP'Unds'Map'Unds'Map'Unds'Set-symbol $.
IMP-symbol-307-is-pattern $a #Pattern ( \kore-symbol-LblremoveAll'LParUndsCommUndsRParUnds'MAP'Unds'Map'Unds'Map'Unds'Set ptn0 ptn1 ) $.
IMP-symbol-307-is-sugar $a #Notation ( \kore-symbol-LblremoveAll'LParUndsCommUndsRParUnds'MAP'Unds'Map'Unds'Map'Unds'Set ptn0 ptn1 ) ( \app ( \app \kore-symbol-LblremoveAll'LParUndsCommUndsRParUnds'MAP'Unds'Map'Unds'Map'Unds'Set-symbol ptn0 ) ptn1 ) $.
IMP-symbol-307-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortMap ) ( \in-sort ptn1 \kore-sort-SortSet ) ) ( \in-sort ( \kore-symbol-LblremoveAll'LParUndsCommUndsRParUnds'MAP'Unds'Map'Unds'Map'Unds'Set ptn0 ptn1 ) \kore-sort-SortMap ) ) $.

$c \kore-symbol-Lblreplace'LParUndsCommUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String'Unds'Int \kore-symbol-Lblreplace'LParUndsCommUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String'Unds'Int-symbol $.
IMP-symbol-308-is-symbol $a #Symbol \kore-symbol-Lblreplace'LParUndsCommUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String'Unds'Int-symbol $.
IMP-symbol-308-is-pattern $a #Pattern ( \kore-symbol-Lblreplace'LParUndsCommUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String'Unds'Int ptn0 ptn1 ptn2 ptn3 ) $.
IMP-symbol-308-is-sugar $a #Notation ( \kore-symbol-Lblreplace'LParUndsCommUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String'Unds'Int ptn0 ptn1 ptn2 ptn3 ) ( \app ( \app ( \app ( \app \kore-symbol-Lblreplace'LParUndsCommUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String'Unds'Int-symbol ptn0 ) ptn1 ) ptn2 ) ptn3 ) $.
IMP-symbol-308-sorting $a |- ( \imp ( \and ( \and ( \and ( \in-sort ptn0 \kore-sort-SortString ) ( \in-sort ptn1 \kore-sort-SortString ) ) ( \in-sort ptn2 \kore-sort-SortString ) ) ( \in-sort ptn3 \kore-sort-SortInt ) ) ( \in-sort ( \kore-symbol-Lblreplace'LParUndsCommUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String'Unds'Int ptn0 ptn1 ptn2 ptn3 ) \kore-sort-SortString ) ) $.

$c \kore-symbol-LblreplaceAll'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String \kore-symbol-LblreplaceAll'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String-symbol $.
IMP-symbol-309-is-symbol $a #Symbol \kore-symbol-LblreplaceAll'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String-symbol $.
IMP-symbol-309-is-pattern $a #Pattern ( \kore-symbol-LblreplaceAll'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String ptn0 ptn1 ptn2 ) $.
IMP-symbol-309-is-sugar $a #Notation ( \kore-symbol-LblreplaceAll'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String ptn0 ptn1 ptn2 ) ( \app ( \app ( \app \kore-symbol-LblreplaceAll'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String-symbol ptn0 ) ptn1 ) ptn2 ) $.
IMP-symbol-309-sorting $a |- ( \imp ( \and ( \and ( \in-sort ptn0 \kore-sort-SortString ) ( \in-sort ptn1 \kore-sort-SortString ) ) ( \in-sort ptn2 \kore-sort-SortString ) ) ( \in-sort ( \kore-symbol-LblreplaceAll'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String ptn0 ptn1 ptn2 ) \kore-sort-SortString ) ) $.

$c \kore-symbol-LblreplaceFirst'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String \kore-symbol-LblreplaceFirst'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String-symbol $.
IMP-symbol-310-is-symbol $a #Symbol \kore-symbol-LblreplaceFirst'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String-symbol $.
IMP-symbol-310-is-pattern $a #Pattern ( \kore-symbol-LblreplaceFirst'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String ptn0 ptn1 ptn2 ) $.
IMP-symbol-310-is-sugar $a #Notation ( \kore-symbol-LblreplaceFirst'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String ptn0 ptn1 ptn2 ) ( \app ( \app ( \app \kore-symbol-LblreplaceFirst'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String-symbol ptn0 ) ptn1 ) ptn2 ) $.
IMP-symbol-310-sorting $a |- ( \imp ( \and ( \and ( \in-sort ptn0 \kore-sort-SortString ) ( \in-sort ptn1 \kore-sort-SortString ) ) ( \in-sort ptn2 \kore-sort-SortString ) ) ( \in-sort ( \kore-symbol-LblreplaceFirst'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String ptn0 ptn1 ptn2 ) \kore-sort-SortString ) ) $.

$c \kore-symbol-LblrfindChar'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int \kore-symbol-LblrfindChar'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int-symbol $.
IMP-symbol-311-is-symbol $a #Symbol \kore-symbol-LblrfindChar'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int-symbol $.
IMP-symbol-311-is-pattern $a #Pattern ( \kore-symbol-LblrfindChar'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int ptn0 ptn1 ptn2 ) $.
IMP-symbol-311-is-sugar $a #Notation ( \kore-symbol-LblrfindChar'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int ptn0 ptn1 ptn2 ) ( \app ( \app ( \app \kore-symbol-LblrfindChar'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int-symbol ptn0 ) ptn1 ) ptn2 ) $.
IMP-symbol-311-sorting $a |- ( \imp ( \and ( \and ( \in-sort ptn0 \kore-sort-SortString ) ( \in-sort ptn1 \kore-sort-SortString ) ) ( \in-sort ptn2 \kore-sort-SortInt ) ) ( \in-sort ( \kore-symbol-LblrfindChar'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int ptn0 ptn1 ptn2 ) \kore-sort-SortInt ) ) $.

$c \kore-symbol-LblrfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int \kore-symbol-LblrfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int-symbol $.
IMP-symbol-312-is-symbol $a #Symbol \kore-symbol-LblrfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int-symbol $.
IMP-symbol-312-is-pattern $a #Pattern ( \kore-symbol-LblrfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int ptn0 ptn1 ptn2 ) $.
IMP-symbol-312-is-sugar $a #Notation ( \kore-symbol-LblrfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int ptn0 ptn1 ptn2 ) ( \app ( \app ( \app \kore-symbol-LblrfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int-symbol ptn0 ) ptn1 ) ptn2 ) $.
IMP-symbol-312-sorting $a |- ( \imp ( \and ( \and ( \in-sort ptn0 \kore-sort-SortString ) ( \in-sort ptn1 \kore-sort-SortString ) ) ( \in-sort ptn2 \kore-sort-SortInt ) ) ( \in-sort ( \kore-symbol-LblrfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int ptn0 ptn1 ptn2 ) \kore-sort-SortInt ) ) $.

$c \kore-symbol-LblsignExtendBitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int'Unds'Int \kore-symbol-LblsignExtendBitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int'Unds'Int-symbol $.
IMP-symbol-313-is-symbol $a #Symbol \kore-symbol-LblsignExtendBitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int'Unds'Int-symbol $.
IMP-symbol-313-is-pattern $a #Pattern ( \kore-symbol-LblsignExtendBitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int'Unds'Int ptn0 ptn1 ptn2 ) $.
IMP-symbol-313-is-sugar $a #Notation ( \kore-symbol-LblsignExtendBitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int'Unds'Int ptn0 ptn1 ptn2 ) ( \app ( \app ( \app \kore-symbol-LblsignExtendBitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int'Unds'Int-symbol ptn0 ) ptn1 ) ptn2 ) $.
IMP-symbol-313-sorting $a |- ( \imp ( \and ( \and ( \in-sort ptn0 \kore-sort-SortInt ) ( \in-sort ptn1 \kore-sort-SortInt ) ) ( \in-sort ptn2 \kore-sort-SortInt ) ) ( \in-sort ( \kore-symbol-LblsignExtendBitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int'Unds'Int ptn0 ptn1 ptn2 ) \kore-sort-SortInt ) ) $.

$c \kore-symbol-Lblsize'LParUndsRParUnds'LIST'Unds'Int'Unds'List \kore-symbol-Lblsize'LParUndsRParUnds'LIST'Unds'Int'Unds'List-symbol $.
IMP-symbol-314-is-symbol $a #Symbol \kore-symbol-Lblsize'LParUndsRParUnds'LIST'Unds'Int'Unds'List-symbol $.
IMP-symbol-314-is-pattern $a #Pattern ( \kore-symbol-Lblsize'LParUndsRParUnds'LIST'Unds'Int'Unds'List ptn0 ) $.
IMP-symbol-314-is-sugar $a #Notation ( \kore-symbol-Lblsize'LParUndsRParUnds'LIST'Unds'Int'Unds'List ptn0 ) ( \app \kore-symbol-Lblsize'LParUndsRParUnds'LIST'Unds'Int'Unds'List-symbol ptn0 ) $.
IMP-symbol-314-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortList ) ( \in-sort ( \kore-symbol-Lblsize'LParUndsRParUnds'LIST'Unds'Int'Unds'List ptn0 ) \kore-sort-SortInt ) ) $.

$c \kore-symbol-Lblsize'LParUndsRParUnds'MAP'Unds'Int'Unds'Map \kore-symbol-Lblsize'LParUndsRParUnds'MAP'Unds'Int'Unds'Map-symbol $.
IMP-symbol-315-is-symbol $a #Symbol \kore-symbol-Lblsize'LParUndsRParUnds'MAP'Unds'Int'Unds'Map-symbol $.
IMP-symbol-315-is-pattern $a #Pattern ( \kore-symbol-Lblsize'LParUndsRParUnds'MAP'Unds'Int'Unds'Map ptn0 ) $.
IMP-symbol-315-is-sugar $a #Notation ( \kore-symbol-Lblsize'LParUndsRParUnds'MAP'Unds'Int'Unds'Map ptn0 ) ( \app \kore-symbol-Lblsize'LParUndsRParUnds'MAP'Unds'Int'Unds'Map-symbol ptn0 ) $.
IMP-symbol-315-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortMap ) ( \in-sort ( \kore-symbol-Lblsize'LParUndsRParUnds'MAP'Unds'Int'Unds'Map ptn0 ) \kore-sort-SortInt ) ) $.

$c \kore-symbol-Lblsize'LParUndsRParUnds'SET'Unds'Int'Unds'Set \kore-symbol-Lblsize'LParUndsRParUnds'SET'Unds'Int'Unds'Set-symbol $.
IMP-symbol-316-is-symbol $a #Symbol \kore-symbol-Lblsize'LParUndsRParUnds'SET'Unds'Int'Unds'Set-symbol $.
IMP-symbol-316-is-pattern $a #Pattern ( \kore-symbol-Lblsize'LParUndsRParUnds'SET'Unds'Int'Unds'Set ptn0 ) $.
IMP-symbol-316-is-sugar $a #Notation ( \kore-symbol-Lblsize'LParUndsRParUnds'SET'Unds'Int'Unds'Set ptn0 ) ( \app \kore-symbol-Lblsize'LParUndsRParUnds'SET'Unds'Int'Unds'Set-symbol ptn0 ) $.
IMP-symbol-316-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortSet ) ( \in-sort ( \kore-symbol-Lblsize'LParUndsRParUnds'SET'Unds'Int'Unds'Set ptn0 ) \kore-sort-SortInt ) ) $.

$c \kore-symbol-LblsrandInt'LParUndsRParUnds'INT'Unds'K'Unds'Int \kore-symbol-LblsrandInt'LParUndsRParUnds'INT'Unds'K'Unds'Int-symbol $.
IMP-symbol-317-is-symbol $a #Symbol \kore-symbol-LblsrandInt'LParUndsRParUnds'INT'Unds'K'Unds'Int-symbol $.
IMP-symbol-317-is-pattern $a #Pattern ( \kore-symbol-LblsrandInt'LParUndsRParUnds'INT'Unds'K'Unds'Int ptn0 ) $.
IMP-symbol-317-is-sugar $a #Notation ( \kore-symbol-LblsrandInt'LParUndsRParUnds'INT'Unds'K'Unds'Int ptn0 ) ( \app \kore-symbol-LblsrandInt'LParUndsRParUnds'INT'Unds'K'Unds'Int-symbol ptn0 ) $.
IMP-symbol-317-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortInt ) ( \in-sort ( \kore-symbol-LblsrandInt'LParUndsRParUnds'INT'Unds'K'Unds'Int ptn0 ) \kore-sort-SortK ) ) $.

$c \kore-symbol-LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int \kore-symbol-LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int-symbol $.
IMP-symbol-318-is-symbol $a #Symbol \kore-symbol-LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int-symbol $.
IMP-symbol-318-is-pattern $a #Pattern ( \kore-symbol-LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int ptn0 ptn1 ptn2 ) $.
IMP-symbol-318-is-sugar $a #Notation ( \kore-symbol-LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int ptn0 ptn1 ptn2 ) ( \app ( \app ( \app \kore-symbol-LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int-symbol ptn0 ) ptn1 ) ptn2 ) $.
IMP-symbol-318-sorting $a |- ( \imp ( \and ( \and ( \in-sort ptn0 \kore-sort-SortString ) ( \in-sort ptn1 \kore-sort-SortInt ) ) ( \in-sort ptn2 \kore-sort-SortInt ) ) ( \in-sort ( \kore-symbol-LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int ptn0 ptn1 ptn2 ) \kore-sort-SortString ) ) $.

$c \kore-symbol-LblupdateList'LParUndsCommUndsCommUndsRParUnds'LIST'Unds'List'Unds'List'Unds'Int'Unds'List \kore-symbol-LblupdateList'LParUndsCommUndsCommUndsRParUnds'LIST'Unds'List'Unds'List'Unds'Int'Unds'List-symbol $.
IMP-symbol-319-is-symbol $a #Symbol \kore-symbol-LblupdateList'LParUndsCommUndsCommUndsRParUnds'LIST'Unds'List'Unds'List'Unds'Int'Unds'List-symbol $.
IMP-symbol-319-is-pattern $a #Pattern ( \kore-symbol-LblupdateList'LParUndsCommUndsCommUndsRParUnds'LIST'Unds'List'Unds'List'Unds'Int'Unds'List ptn0 ptn1 ptn2 ) $.
IMP-symbol-319-is-sugar $a #Notation ( \kore-symbol-LblupdateList'LParUndsCommUndsCommUndsRParUnds'LIST'Unds'List'Unds'List'Unds'Int'Unds'List ptn0 ptn1 ptn2 ) ( \app ( \app ( \app \kore-symbol-LblupdateList'LParUndsCommUndsCommUndsRParUnds'LIST'Unds'List'Unds'List'Unds'Int'Unds'List-symbol ptn0 ) ptn1 ) ptn2 ) $.
IMP-symbol-319-sorting $a |- ( \imp ( \and ( \and ( \in-sort ptn0 \kore-sort-SortList ) ( \in-sort ptn1 \kore-sort-SortInt ) ) ( \in-sort ptn2 \kore-sort-SortList ) ) ( \in-sort ( \kore-symbol-LblupdateList'LParUndsCommUndsCommUndsRParUnds'LIST'Unds'List'Unds'List'Unds'Int'Unds'List ptn0 ptn1 ptn2 ) \kore-sort-SortList ) ) $.

$c \kore-symbol-LblupdateMap'LParUndsCommUndsRParUnds'MAP'Unds'Map'Unds'Map'Unds'Map \kore-symbol-LblupdateMap'LParUndsCommUndsRParUnds'MAP'Unds'Map'Unds'Map'Unds'Map-symbol $.
IMP-symbol-320-is-symbol $a #Symbol \kore-symbol-LblupdateMap'LParUndsCommUndsRParUnds'MAP'Unds'Map'Unds'Map'Unds'Map-symbol $.
IMP-symbol-320-is-pattern $a #Pattern ( \kore-symbol-LblupdateMap'LParUndsCommUndsRParUnds'MAP'Unds'Map'Unds'Map'Unds'Map ptn0 ptn1 ) $.
IMP-symbol-320-is-sugar $a #Notation ( \kore-symbol-LblupdateMap'LParUndsCommUndsRParUnds'MAP'Unds'Map'Unds'Map'Unds'Map ptn0 ptn1 ) ( \app ( \app \kore-symbol-LblupdateMap'LParUndsCommUndsRParUnds'MAP'Unds'Map'Unds'Map'Unds'Map-symbol ptn0 ) ptn1 ) $.
IMP-symbol-320-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortMap ) ( \in-sort ptn1 \kore-sort-SortMap ) ) ( \in-sort ( \kore-symbol-LblupdateMap'LParUndsCommUndsRParUnds'MAP'Unds'Map'Unds'Map'Unds'Map ptn0 ptn1 ) \kore-sort-SortMap ) ) $.

$c \kore-symbol-Lblvalues'LParUndsRParUnds'MAP'Unds'List'Unds'Map \kore-symbol-Lblvalues'LParUndsRParUnds'MAP'Unds'List'Unds'Map-symbol $.
IMP-symbol-321-is-symbol $a #Symbol \kore-symbol-Lblvalues'LParUndsRParUnds'MAP'Unds'List'Unds'Map-symbol $.
IMP-symbol-321-is-pattern $a #Pattern ( \kore-symbol-Lblvalues'LParUndsRParUnds'MAP'Unds'List'Unds'Map ptn0 ) $.
IMP-symbol-321-is-sugar $a #Notation ( \kore-symbol-Lblvalues'LParUndsRParUnds'MAP'Unds'List'Unds'Map ptn0 ) ( \app \kore-symbol-Lblvalues'LParUndsRParUnds'MAP'Unds'List'Unds'Map-symbol ptn0 ) $.
IMP-symbol-321-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortMap ) ( \in-sort ( \kore-symbol-Lblvalues'LParUndsRParUnds'MAP'Unds'List'Unds'Map ptn0 ) \kore-sort-SortList ) ) $.

$c \kore-symbol-Lblwhile'LParUndsRParUndsUnds'IMP-SYNTAX'Unds'Stmt'Unds'BExp'Unds'Block \kore-symbol-Lblwhile'LParUndsRParUndsUnds'IMP-SYNTAX'Unds'Stmt'Unds'BExp'Unds'Block-symbol $.
IMP-symbol-322-is-symbol $a #Symbol \kore-symbol-Lblwhile'LParUndsRParUndsUnds'IMP-SYNTAX'Unds'Stmt'Unds'BExp'Unds'Block-symbol $.
IMP-symbol-322-is-pattern $a #Pattern ( \kore-symbol-Lblwhile'LParUndsRParUndsUnds'IMP-SYNTAX'Unds'Stmt'Unds'BExp'Unds'Block ptn0 ptn1 ) $.
IMP-symbol-322-is-sugar $a #Notation ( \kore-symbol-Lblwhile'LParUndsRParUndsUnds'IMP-SYNTAX'Unds'Stmt'Unds'BExp'Unds'Block ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lblwhile'LParUndsRParUndsUnds'IMP-SYNTAX'Unds'Stmt'Unds'BExp'Unds'Block-symbol ptn0 ) ptn1 ) $.
IMP-symbol-322-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortBExp ) ( \in-sort ptn1 \kore-sort-SortBlock ) ) ( \in-sort ( \kore-symbol-Lblwhile'LParUndsRParUndsUnds'IMP-SYNTAX'Unds'Stmt'Unds'BExp'Unds'Block ptn0 ptn1 ) \kore-sort-SortStmt ) ) $.

$c \kore-symbol-Lbl'LBraUndsRBraUnds'IMP-SYNTAX'Unds'Block'Unds'Stmt \kore-symbol-Lbl'LBraUndsRBraUnds'IMP-SYNTAX'Unds'Block'Unds'Stmt-symbol $.
IMP-symbol-323-is-symbol $a #Symbol \kore-symbol-Lbl'LBraUndsRBraUnds'IMP-SYNTAX'Unds'Block'Unds'Stmt-symbol $.
IMP-symbol-323-is-pattern $a #Pattern ( \kore-symbol-Lbl'LBraUndsRBraUnds'IMP-SYNTAX'Unds'Block'Unds'Stmt ptn0 ) $.
IMP-symbol-323-is-sugar $a #Notation ( \kore-symbol-Lbl'LBraUndsRBraUnds'IMP-SYNTAX'Unds'Block'Unds'Stmt ptn0 ) ( \app \kore-symbol-Lbl'LBraUndsRBraUnds'IMP-SYNTAX'Unds'Block'Unds'Stmt-symbol ptn0 ) $.
IMP-symbol-323-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortStmt ) ( \in-sort ( \kore-symbol-Lbl'LBraUndsRBraUnds'IMP-SYNTAX'Unds'Block'Unds'Stmt ptn0 ) \kore-sort-SortBlock ) ) $.

$c \kore-symbol-Lbl'LBraRBraUnds'IMP-SYNTAX'Unds'Block \kore-symbol-Lbl'LBraRBraUnds'IMP-SYNTAX'Unds'Block-symbol $.
IMP-symbol-324-is-symbol $a #Symbol \kore-symbol-Lbl'LBraRBraUnds'IMP-SYNTAX'Unds'Block-symbol $.
IMP-symbol-324-is-pattern $a #Pattern \kore-symbol-Lbl'LBraRBraUnds'IMP-SYNTAX'Unds'Block $.
IMP-symbol-324-is-sugar $a #Notation \kore-symbol-Lbl'LBraRBraUnds'IMP-SYNTAX'Unds'Block \kore-symbol-Lbl'LBraRBraUnds'IMP-SYNTAX'Unds'Block-symbol $.
IMP-symbol-324-sorting $a |- ( \in-sort \kore-symbol-Lbl'LBraRBraUnds'IMP-SYNTAX'Unds'Block \kore-sort-SortBlock ) $.

$c \kore-symbol-Lbl'Tild'Int'Unds' \kore-symbol-Lbl'Tild'Int'Unds'-symbol $.
IMP-symbol-325-is-symbol $a #Symbol \kore-symbol-Lbl'Tild'Int'Unds'-symbol $.
IMP-symbol-325-is-pattern $a #Pattern ( \kore-symbol-Lbl'Tild'Int'Unds' ptn0 ) $.
IMP-symbol-325-is-sugar $a #Notation ( \kore-symbol-Lbl'Tild'Int'Unds' ptn0 ) ( \app \kore-symbol-Lbl'Tild'Int'Unds'-symbol ptn0 ) $.
IMP-symbol-325-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortInt ) ( \in-sort ( \kore-symbol-Lbl'Tild'Int'Unds' ptn0 ) \kore-sort-SortInt ) ) $.

$c "true" "true"-symbol $.
string-literal-0-is-symbol $a #Symbol "true"-symbol $.
string-literal-0-is-pattern $a #Pattern "true" $.
string-literal-0-is-sugar $a #Notation "true" "true"-symbol $.

domain-value-0-functional $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-x0 ) \top ) ( \kore-valid kore-sort-var-x0 ( \kore-exists \kore-sort-SortBool kore-sort-var-x0 kore-element-var-x1 ( \kore-equals \kore-sort-SortBool kore-sort-var-x0 kore-element-var-x1 ( \kore-dv \kore-sort-SortBool "true" ) ) ) ) ) $.

$c "0" "0"-symbol $.
string-literal-1-is-symbol $a #Symbol "0"-symbol $.
string-literal-1-is-pattern $a #Pattern "0" $.
string-literal-1-is-sugar $a #Notation "0" "0"-symbol $.

domain-value-1-functional $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-x0 ) \top ) ( \kore-valid kore-sort-var-x0 ( \kore-exists \kore-sort-SortInt kore-sort-var-x0 kore-element-var-x1 ( \kore-equals \kore-sort-SortInt kore-sort-var-x0 kore-element-var-x1 ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) $.

$c "r%2B" "r%2B"-symbol $.
string-literal-2-is-symbol $a #Symbol "r%2B"-symbol $.
string-literal-2-is-pattern $a #Pattern "r%2B" $.
string-literal-2-is-sugar $a #Notation "r%2B" "r%2B"-symbol $.

domain-value-2-functional $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-x0 ) \top ) ( \kore-valid kore-sort-var-x0 ( \kore-exists \kore-sort-SortString kore-sort-var-x0 kore-element-var-x1 ( \kore-equals \kore-sort-SortString kore-sort-var-x0 kore-element-var-x1 ( \kore-dv \kore-sort-SortString "r%2B" ) ) ) ) ) $.

$c "2" "2"-symbol $.
string-literal-3-is-symbol $a #Symbol "2"-symbol $.
string-literal-3-is-pattern $a #Pattern "2" $.
string-literal-3-is-sugar $a #Notation "2" "2"-symbol $.

domain-value-3-functional $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-x0 ) \top ) ( \kore-valid kore-sort-var-x0 ( \kore-exists \kore-sort-SortInt kore-sort-var-x0 kore-element-var-x1 ( \kore-equals \kore-sort-SortInt kore-sort-var-x0 kore-element-var-x1 ( \kore-dv \kore-sort-SortInt "2" ) ) ) ) ) $.

$c "1" "1"-symbol $.
string-literal-4-is-symbol $a #Symbol "1"-symbol $.
string-literal-4-is-pattern $a #Pattern "1" $.
string-literal-4-is-sugar $a #Notation "1" "1"-symbol $.

domain-value-4-functional $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-x0 ) \top ) ( \kore-valid kore-sort-var-x0 ( \kore-exists \kore-sort-SortInt kore-sort-var-x0 kore-element-var-x1 ( \kore-equals \kore-sort-SortInt kore-sort-var-x0 kore-element-var-x1 ( \kore-dv \kore-sort-SortInt "1" ) ) ) ) ) $.

$c "false" "false"-symbol $.
string-literal-5-is-symbol $a #Symbol "false"-symbol $.
string-literal-5-is-pattern $a #Pattern "false" $.
string-literal-5-is-sugar $a #Notation "false" "false"-symbol $.

domain-value-5-functional $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-x0 ) \top ) ( \kore-valid kore-sort-var-x0 ( \kore-exists \kore-sort-SortBool kore-sort-var-x0 kore-element-var-x1 ( \kore-equals \kore-sort-SortBool kore-sort-var-x0 kore-element-var-x1 ( \kore-dv \kore-sort-SortBool "false" ) ) ) ) ) $.

domain-value-6-functional $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-x0 ) \top ) ( \kore-valid kore-sort-var-x0 ( \kore-exists \kore-sort-SortString kore-sort-var-x0 kore-element-var-x1 ( \kore-equals \kore-sort-SortString kore-sort-var-x0 kore-element-var-x1 ( \kore-dv \kore-sort-SortString "false" ) ) ) ) ) $.

domain-value-7-functional $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-x0 ) \top ) ( \kore-valid kore-sort-var-x0 ( \kore-exists \kore-sort-SortString kore-sort-var-x0 kore-element-var-x1 ( \kore-equals \kore-sort-SortString kore-sort-var-x0 kore-element-var-x1 ( \kore-dv \kore-sort-SortString "true" ) ) ) ) ) $.

$c "-1" "-1"-symbol $.
string-literal-6-is-symbol $a #Symbol "-1"-symbol $.
string-literal-6-is-pattern $a #Pattern "-1" $.
string-literal-6-is-sugar $a #Notation "-1" "-1"-symbol $.

domain-value-8-functional $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-x0 ) \top ) ( \kore-valid kore-sort-var-x0 ( \kore-exists \kore-sort-SortInt kore-sort-var-x0 kore-element-var-x1 ( \kore-equals \kore-sort-SortInt kore-sort-var-x0 kore-element-var-x1 ( \kore-dv \kore-sort-SortInt "-1" ) ) ) ) ) $.

$c "" ""-symbol $.
string-literal-7-is-symbol $a #Symbol ""-symbol $.
string-literal-7-is-pattern $a #Pattern "" $.
string-literal-7-is-sugar $a #Notation "" ""-symbol $.

domain-value-9-functional $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-x0 ) \top ) ( \kore-valid kore-sort-var-x0 ( \kore-exists \kore-sort-SortString kore-sort-var-x0 kore-element-var-x1 ( \kore-equals \kore-sort-SortString kore-sort-var-x0 kore-element-var-x1 ( \kore-dv \kore-sort-SortString "" ) ) ) ) ) $.

$c "_" "_"-symbol $.
string-literal-8-is-symbol $a #Symbol "_"-symbol $.
string-literal-8-is-pattern $a #Pattern "_" $.
string-literal-8-is-sugar $a #Notation "_" "_"-symbol $.

domain-value-10-functional $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-x0 ) \top ) ( \kore-valid kore-sort-var-x0 ( \kore-exists \kore-sort-SortString kore-sort-var-x0 kore-element-var-x1 ( \kore-equals \kore-sort-SortString kore-sort-var-x0 kore-element-var-x1 ( \kore-dv \kore-sort-SortString "_" ) ) ) ) ) $.

$c "%24PGM" "%24PGM"-symbol $.
string-literal-9-is-symbol $a #Symbol "%24PGM"-symbol $.
string-literal-9-is-pattern $a #Pattern "%24PGM" $.
string-literal-9-is-sugar $a #Notation "%24PGM" "%24PGM"-symbol $.

domain-value-11-functional $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-x0 ) \top ) ( \kore-valid kore-sort-var-x0 ( \kore-exists \kore-sort-SortKConfigVar kore-sort-var-x0 kore-element-var-x1 ( \kore-equals \kore-sort-SortKConfigVar kore-sort-var-x0 kore-element-var-x1 ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ) ) ) $.

$c "10" "10"-symbol $.
string-literal-10-is-symbol $a #Symbol "10"-symbol $.
string-literal-10-is-pattern $a #Pattern "10" $.
string-literal-10-is-sugar $a #Notation "10" "10"-symbol $.

domain-value-12-functional $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-x0 ) \top ) ( \kore-valid kore-sort-var-x0 ( \kore-exists \kore-sort-SortInt kore-sort-var-x0 kore-element-var-x1 ( \kore-equals \kore-sort-SortInt kore-sort-var-x0 kore-element-var-x1 ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) $.

$c "a" "a"-symbol $.
string-literal-11-is-symbol $a #Symbol "a"-symbol $.
string-literal-11-is-pattern $a #Pattern "a" $.
string-literal-11-is-sugar $a #Notation "a" "a"-symbol $.

domain-value-13-functional $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-x0 ) \top ) ( \kore-valid kore-sort-var-x0 ( \kore-exists \kore-sort-SortId kore-sort-var-x0 kore-element-var-x1 ( \kore-equals \kore-sort-SortId kore-sort-var-x0 kore-element-var-x1 ( \kore-dv \kore-sort-SortId "a" ) ) ) ) ) $.

LblMapColnlookup-domain-fact-0 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-equals \kore-sort-SortKItem kore-sort-var-R ( \kore-symbol-LblMap'Coln'lookup ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) ) ) ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ) ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) ) ) ) $.

KSEQ-axiom-0 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortK ) \top ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 \kore-symbol-dotk ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE2 kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortK kore-sort-var-R ( \kore-symbol-append kore-element-var-VE0 kore-element-var-VE2 ) kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

KSEQ-axiom-1 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortKItem ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortK ) \top ) ) ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE2 ( \kore-symbol-kseq kore-element-var-VE1 kore-element-var-VE4 ) ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE3 kore-element-var-VE0 ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortK kore-sort-var-R ( \kore-symbol-append kore-element-var-VE2 kore-element-var-VE3 ) ( \kore-symbol-kseq kore-element-var-VE1 ( \kore-symbol-append kore-element-var-VE4 kore-element-var-VE0 ) ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

KSEQ-axiom-2 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-V1 \kore-sort-SortKItem ) ( \and ( \in-sort kore-element-var-V2 \kore-sort-SortK ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortK kore-sort-var-R kore-element-var-V0 ( \kore-equals \kore-sort-SortK kore-sort-var-R kore-element-var-V0 ( \kore-symbol-kseq kore-element-var-V1 kore-element-var-V2 ) ) ) ) ) $.

KSEQ-axiom-3 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortK kore-sort-var-R kore-element-var-V0 ( \kore-equals \kore-sort-SortK kore-sort-var-R kore-element-var-V0 \kore-symbol-dotk ) ) ) ) $.

IMP-axiom-0 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-From \kore-sort-SortIOString ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortIOString \kore-sort-SortKItem kore-element-var-From ) ) ) ) ) $.

IMP-axiom-1 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-From \kore-sort-SortString ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortString \kore-sort-SortKItem kore-element-var-From ) ) ) ) ) $.

IMP-axiom-2 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-From \kore-sort-SortInt ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortKResult kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortKResult kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortInt \kore-sort-SortKResult kore-element-var-From ) ) ) ) ) $.

IMP-axiom-3 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-From \kore-sort-SortAExp ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem kore-element-var-From ) ) ) ) ) $.

IMP-axiom-4 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-From \kore-sort-SortTCell ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortTCell \kore-sort-SortKItem kore-element-var-From ) ) ) ) ) $.

IMP-axiom-5 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-From \kore-sort-SortKCellOpt ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortKCellOpt \kore-sort-SortKItem kore-element-var-From ) ) ) ) ) $.

IMP-axiom-6 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-From \kore-sort-SortStateCell ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortStateCell \kore-sort-SortKItem kore-element-var-From ) ) ) ) ) $.

IMP-axiom-7 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-From \kore-sort-SortIds ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortIds \kore-sort-SortKItem kore-element-var-From ) ) ) ) ) $.

IMP-axiom-8 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-From \kore-sort-SortGeneratedCounterCellOpt ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortGeneratedCounterCellOpt \kore-sort-SortKItem kore-element-var-From ) ) ) ) ) $.

IMP-axiom-9 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-From \kore-sort-SortKResult ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortKResult \kore-sort-SortKItem kore-element-var-From ) ) ) ) ) $.

IMP-axiom-10 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-From \kore-sort-SortGeneratedCounterCell ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortGeneratedCounterCellOpt kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortGeneratedCounterCellOpt kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortGeneratedCounterCell \kore-sort-SortGeneratedCounterCellOpt kore-element-var-From ) ) ) ) ) $.

IMP-axiom-11 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-From \kore-sort-SortBool ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortBExp kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortBExp kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortBool \kore-sort-SortBExp kore-element-var-From ) ) ) ) ) $.

IMP-axiom-12 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-From \kore-sort-SortKCell ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortKCell \kore-sort-SortKItem kore-element-var-From ) ) ) ) ) $.

IMP-axiom-13 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-From \kore-sort-SortTCellOpt ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortTCellOpt \kore-sort-SortKItem kore-element-var-From ) ) ) ) ) $.

IMP-axiom-14 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-From \kore-sort-SortIOError ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortIOInt kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortIOInt kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortIOError \kore-sort-SortIOInt kore-element-var-From ) ) ) ) ) $.

IMP-axiom-15 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-From \kore-sort-SortKCell ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortKCellOpt kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortKCellOpt kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortKCell \kore-sort-SortKCellOpt kore-element-var-From ) ) ) ) ) $.

IMP-axiom-16 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-From \kore-sort-SortSet ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortSet \kore-sort-SortKItem kore-element-var-From ) ) ) ) ) $.

IMP-axiom-17 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-From \kore-sort-SortIOError ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortIOError \kore-sort-SortKItem kore-element-var-From ) ) ) ) ) $.

IMP-axiom-18 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-From \kore-sort-SortBlock ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortBlock \kore-sort-SortKItem kore-element-var-From ) ) ) ) ) $.

IMP-axiom-19 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-From \kore-sort-SortGeneratedCounterCell ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortGeneratedCounterCell \kore-sort-SortKItem kore-element-var-From ) ) ) ) ) $.

IMP-axiom-20 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-From \kore-sort-SortInt ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortIOInt kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortIOInt kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortInt \kore-sort-SortIOInt kore-element-var-From ) ) ) ) ) $.

IMP-axiom-21 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-From \kore-sort-SortTCell ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortTCellOpt kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortTCellOpt kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortTCell \kore-sort-SortTCellOpt kore-element-var-From ) ) ) ) ) $.

IMP-axiom-22 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-From \kore-sort-SortTCellFragment ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortTCellFragment \kore-sort-SortKItem kore-element-var-From ) ) ) ) ) $.

IMP-axiom-23 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-From \kore-sort-SortStateCell ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortStateCellOpt kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortStateCellOpt kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortStateCell \kore-sort-SortStateCellOpt kore-element-var-From ) ) ) ) ) $.

IMP-axiom-24 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-From \kore-sort-SortStream ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortStream \kore-sort-SortKItem kore-element-var-From ) ) ) ) ) $.

IMP-axiom-25 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-From \kore-sort-SortIOFile ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortIOFile \kore-sort-SortKItem kore-element-var-From ) ) ) ) ) $.

IMP-axiom-26 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-From \kore-sort-SortGeneratedTopCell ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortGeneratedTopCell \kore-sort-SortKItem kore-element-var-From ) ) ) ) ) $.

IMP-axiom-27 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-From \kore-sort-SortInt ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortAExp kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortAExp kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp kore-element-var-From ) ) ) ) ) $.

IMP-axiom-28 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-From \kore-sort-SortIOInt ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortIOInt \kore-sort-SortKItem kore-element-var-From ) ) ) ) ) $.

IMP-axiom-29 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-From \kore-sort-SortList ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortList \kore-sort-SortKItem kore-element-var-From ) ) ) ) ) $.

IMP-axiom-30 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-From \kore-sort-SortString ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortIOString kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortIOString kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortString \kore-sort-SortIOString kore-element-var-From ) ) ) ) ) $.

IMP-axiom-31 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-From \kore-sort-SortBlock ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortStmt kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortStmt kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortBlock \kore-sort-SortStmt kore-element-var-From ) ) ) ) ) $.

IMP-axiom-32 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-From \kore-sort-SortId ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem kore-element-var-From ) ) ) ) ) $.

IMP-axiom-33 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-From \kore-sort-SortFloat ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortFloat \kore-sort-SortKItem kore-element-var-From ) ) ) ) ) $.

IMP-axiom-34 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-From \kore-sort-SortBool ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortBool \kore-sort-SortKItem kore-element-var-From ) ) ) ) ) $.

IMP-axiom-35 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-From \kore-sort-SortId ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortAExp kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortAExp kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortId \kore-sort-SortAExp kore-element-var-From ) ) ) ) ) $.

IMP-axiom-36 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-From \kore-sort-SortStateCellOpt ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortStateCellOpt \kore-sort-SortKItem kore-element-var-From ) ) ) ) ) $.

IMP-axiom-37 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-From \kore-sort-SortInt ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortInt \kore-sort-SortKItem kore-element-var-From ) ) ) ) ) $.

IMP-axiom-38 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-From \kore-sort-SortGeneratedTopCellFragment ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortGeneratedTopCellFragment \kore-sort-SortKItem kore-element-var-From ) ) ) ) ) $.

IMP-axiom-39 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-From \kore-sort-SortPgm ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem kore-element-var-From ) ) ) ) ) $.

IMP-axiom-40 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-From \kore-sort-SortBExp ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortBExp \kore-sort-SortKItem kore-element-var-From ) ) ) ) ) $.

IMP-axiom-41 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-From \kore-sort-SortStmt ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem kore-element-var-From ) ) ) ) ) $.

IMP-axiom-42 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-From \kore-sort-SortMap ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortMap \kore-sort-SortKItem kore-element-var-From ) ) ) ) ) $.

IMP-axiom-43 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-From \kore-sort-SortBool ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortKResult kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortKResult kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortBool \kore-sort-SortKResult kore-element-var-From ) ) ) ) ) $.

IMP-axiom-44 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-From \kore-sort-SortIOError ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortIOString kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortIOString kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortIOError \kore-sort-SortIOString kore-element-var-From ) ) ) ) ) $.

IMP-axiom-45 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-From \kore-sort-SortIOError ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortIOFile kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortIOFile kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortIOError \kore-sort-SortIOFile kore-element-var-From ) ) ) ) ) $.

IMP-axiom-46 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortBExp ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortBExp kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortBExp kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'BangUndsUnds'IMP-SYNTAX'Unds'BExp'Unds'BExp kore-element-var-K0 ) ) ) ) ) $.

IMP-axiom-50 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortIOError kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortIOError kore-sort-var-R kore-element-var-Val \kore-symbol-Lbl'Hash'E2BIG ) ) ) ) $.

IMP-axiom-120 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortIOError kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortIOError kore-sort-var-R kore-element-var-Val \kore-symbol-Lbl'Hash'EACCES ) ) ) ) $.

IMP-axiom-189 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortIOError kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortIOError kore-sort-var-R kore-element-var-Val \kore-symbol-Lbl'Hash'EADDRINUSE ) ) ) ) $.

IMP-axiom-257 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortIOError kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortIOError kore-sort-var-R kore-element-var-Val \kore-symbol-Lbl'Hash'EADDRNOTAVAIL ) ) ) ) $.

IMP-axiom-324 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortIOError kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortIOError kore-sort-var-R kore-element-var-Val \kore-symbol-Lbl'Hash'EAFNOSUPPORT ) ) ) ) $.

IMP-axiom-390 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortIOError kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortIOError kore-sort-var-R kore-element-var-Val \kore-symbol-Lbl'Hash'EAGAIN ) ) ) ) $.

IMP-axiom-455 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortIOError kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortIOError kore-sort-var-R kore-element-var-Val \kore-symbol-Lbl'Hash'EALREADY ) ) ) ) $.

IMP-axiom-519 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortIOError kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortIOError kore-sort-var-R kore-element-var-Val \kore-symbol-Lbl'Hash'EBADF ) ) ) ) $.

IMP-axiom-582 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortIOError kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortIOError kore-sort-var-R kore-element-var-Val \kore-symbol-Lbl'Hash'EBUSY ) ) ) ) $.

IMP-axiom-644 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortIOError kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortIOError kore-sort-var-R kore-element-var-Val \kore-symbol-Lbl'Hash'ECHILD ) ) ) ) $.

IMP-axiom-705 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortIOError kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortIOError kore-sort-var-R kore-element-var-Val \kore-symbol-Lbl'Hash'ECONNABORTED ) ) ) ) $.

IMP-axiom-765 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortIOError kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortIOError kore-sort-var-R kore-element-var-Val \kore-symbol-Lbl'Hash'ECONNREFUSED ) ) ) ) $.

IMP-axiom-824 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortIOError kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortIOError kore-sort-var-R kore-element-var-Val \kore-symbol-Lbl'Hash'ECONNRESET ) ) ) ) $.

IMP-axiom-882 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortIOError kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortIOError kore-sort-var-R kore-element-var-Val \kore-symbol-Lbl'Hash'EDEADLK ) ) ) ) $.

IMP-axiom-939 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortIOError kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortIOError kore-sort-var-R kore-element-var-Val \kore-symbol-Lbl'Hash'EDESTADDRREQ ) ) ) ) $.

IMP-axiom-995 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortIOError kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortIOError kore-sort-var-R kore-element-var-Val \kore-symbol-Lbl'Hash'EDOM ) ) ) ) $.

IMP-axiom-1050 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortIOError kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortIOError kore-sort-var-R kore-element-var-Val \kore-symbol-Lbl'Hash'EEXIST ) ) ) ) $.

IMP-axiom-1104 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortIOError kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortIOError kore-sort-var-R kore-element-var-Val \kore-symbol-Lbl'Hash'EFAULT ) ) ) ) $.

IMP-axiom-1157 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortIOError kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortIOError kore-sort-var-R kore-element-var-Val \kore-symbol-Lbl'Hash'EFBIG ) ) ) ) $.

IMP-axiom-1209 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortIOError kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortIOError kore-sort-var-R kore-element-var-Val \kore-symbol-Lbl'Hash'EHOSTDOWN ) ) ) ) $.

IMP-axiom-1260 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortIOError kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortIOError kore-sort-var-R kore-element-var-Val \kore-symbol-Lbl'Hash'EHOSTUNREACH ) ) ) ) $.

IMP-axiom-1310 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortIOError kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortIOError kore-sort-var-R kore-element-var-Val \kore-symbol-Lbl'Hash'EINPROGRESS ) ) ) ) $.

IMP-axiom-1359 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortIOError kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortIOError kore-sort-var-R kore-element-var-Val \kore-symbol-Lbl'Hash'EINTR ) ) ) ) $.

IMP-axiom-1407 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortIOError kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortIOError kore-sort-var-R kore-element-var-Val \kore-symbol-Lbl'Hash'EINVAL ) ) ) ) $.

IMP-axiom-1454 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortIOError kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortIOError kore-sort-var-R kore-element-var-Val \kore-symbol-Lbl'Hash'EIO ) ) ) ) $.

IMP-axiom-1500 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortIOError kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortIOError kore-sort-var-R kore-element-var-Val \kore-symbol-Lbl'Hash'EISCONN ) ) ) ) $.

IMP-axiom-1545 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortIOError kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortIOError kore-sort-var-R kore-element-var-Val \kore-symbol-Lbl'Hash'EISDIR ) ) ) ) $.

IMP-axiom-1589 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortIOError kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortIOError kore-sort-var-R kore-element-var-Val \kore-symbol-Lbl'Hash'ELOOP ) ) ) ) $.

IMP-axiom-1632 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortIOError kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortIOError kore-sort-var-R kore-element-var-Val \kore-symbol-Lbl'Hash'EMFILE ) ) ) ) $.

IMP-axiom-1674 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortIOError kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortIOError kore-sort-var-R kore-element-var-Val \kore-symbol-Lbl'Hash'EMLINK ) ) ) ) $.

IMP-axiom-1715 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortIOError kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortIOError kore-sort-var-R kore-element-var-Val \kore-symbol-Lbl'Hash'EMSGSIZE ) ) ) ) $.

IMP-axiom-1755 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortIOError kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortIOError kore-sort-var-R kore-element-var-Val \kore-symbol-Lbl'Hash'ENAMETOOLONG ) ) ) ) $.

IMP-axiom-1794 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortIOError kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortIOError kore-sort-var-R kore-element-var-Val \kore-symbol-Lbl'Hash'ENETDOWN ) ) ) ) $.

IMP-axiom-1832 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortIOError kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortIOError kore-sort-var-R kore-element-var-Val \kore-symbol-Lbl'Hash'ENETRESET ) ) ) ) $.

IMP-axiom-1869 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortIOError kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortIOError kore-sort-var-R kore-element-var-Val \kore-symbol-Lbl'Hash'ENETUNREACH ) ) ) ) $.

IMP-axiom-1905 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortIOError kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortIOError kore-sort-var-R kore-element-var-Val \kore-symbol-Lbl'Hash'ENFILE ) ) ) ) $.

IMP-axiom-1940 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortIOError kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortIOError kore-sort-var-R kore-element-var-Val \kore-symbol-Lbl'Hash'ENOBUFS ) ) ) ) $.

IMP-axiom-1974 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortIOError kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortIOError kore-sort-var-R kore-element-var-Val \kore-symbol-Lbl'Hash'ENODEV ) ) ) ) $.

IMP-axiom-2007 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortIOError kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortIOError kore-sort-var-R kore-element-var-Val \kore-symbol-Lbl'Hash'ENOENT ) ) ) ) $.

IMP-axiom-2039 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortIOError kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortIOError kore-sort-var-R kore-element-var-Val \kore-symbol-Lbl'Hash'ENOEXEC ) ) ) ) $.

IMP-axiom-2070 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortIOError kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortIOError kore-sort-var-R kore-element-var-Val \kore-symbol-Lbl'Hash'ENOLCK ) ) ) ) $.

IMP-axiom-2100 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortIOError kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortIOError kore-sort-var-R kore-element-var-Val \kore-symbol-Lbl'Hash'ENOMEM ) ) ) ) $.

IMP-axiom-2129 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortIOError kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortIOError kore-sort-var-R kore-element-var-Val \kore-symbol-Lbl'Hash'ENOPROTOOPT ) ) ) ) $.

IMP-axiom-2157 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortIOError kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortIOError kore-sort-var-R kore-element-var-Val \kore-symbol-Lbl'Hash'ENOSPC ) ) ) ) $.

IMP-axiom-2184 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortIOError kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortIOError kore-sort-var-R kore-element-var-Val \kore-symbol-Lbl'Hash'ENOSYS ) ) ) ) $.

IMP-axiom-2210 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortIOError kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortIOError kore-sort-var-R kore-element-var-Val \kore-symbol-Lbl'Hash'ENOTCONN ) ) ) ) $.

IMP-axiom-2235 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortIOError kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortIOError kore-sort-var-R kore-element-var-Val \kore-symbol-Lbl'Hash'ENOTDIR ) ) ) ) $.

IMP-axiom-2259 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortIOError kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortIOError kore-sort-var-R kore-element-var-Val \kore-symbol-Lbl'Hash'ENOTEMPTY ) ) ) ) $.

IMP-axiom-2282 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortIOError kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortIOError kore-sort-var-R kore-element-var-Val \kore-symbol-Lbl'Hash'ENOTSOCK ) ) ) ) $.

IMP-axiom-2304 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortIOError kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortIOError kore-sort-var-R kore-element-var-Val \kore-symbol-Lbl'Hash'ENOTTY ) ) ) ) $.

IMP-axiom-2325 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortIOError kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortIOError kore-sort-var-R kore-element-var-Val \kore-symbol-Lbl'Hash'ENXIO ) ) ) ) $.

IMP-axiom-2345 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortIOError kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortIOError kore-sort-var-R kore-element-var-Val \kore-symbol-Lbl'Hash'EOF ) ) ) ) $.

IMP-axiom-2364 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortIOError kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortIOError kore-sort-var-R kore-element-var-Val \kore-symbol-Lbl'Hash'EOPNOTSUPP ) ) ) ) $.

IMP-axiom-2382 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortIOError kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortIOError kore-sort-var-R kore-element-var-Val \kore-symbol-Lbl'Hash'EOVERFLOW ) ) ) ) $.

IMP-axiom-2399 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortIOError kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortIOError kore-sort-var-R kore-element-var-Val \kore-symbol-Lbl'Hash'EPERM ) ) ) ) $.

IMP-axiom-2415 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortIOError kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortIOError kore-sort-var-R kore-element-var-Val \kore-symbol-Lbl'Hash'EPFNOSUPPORT ) ) ) ) $.

IMP-axiom-2430 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortIOError kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortIOError kore-sort-var-R kore-element-var-Val \kore-symbol-Lbl'Hash'EPIPE ) ) ) ) $.

IMP-axiom-2444 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortIOError kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortIOError kore-sort-var-R kore-element-var-Val \kore-symbol-Lbl'Hash'EPROTONOSUPPORT ) ) ) ) $.

IMP-axiom-2457 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortIOError kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortIOError kore-sort-var-R kore-element-var-Val \kore-symbol-Lbl'Hash'EPROTOTYPE ) ) ) ) $.

IMP-axiom-2469 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortIOError kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortIOError kore-sort-var-R kore-element-var-Val \kore-symbol-Lbl'Hash'ERANGE ) ) ) ) $.

IMP-axiom-2480 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortIOError kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortIOError kore-sort-var-R kore-element-var-Val \kore-symbol-Lbl'Hash'EROFS ) ) ) ) $.

IMP-axiom-2490 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortIOError kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortIOError kore-sort-var-R kore-element-var-Val \kore-symbol-Lbl'Hash'ESHUTDOWN ) ) ) ) $.

IMP-axiom-2499 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortIOError kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortIOError kore-sort-var-R kore-element-var-Val \kore-symbol-Lbl'Hash'ESOCKTNOSUPPORT ) ) ) ) $.

IMP-axiom-2507 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortIOError kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortIOError kore-sort-var-R kore-element-var-Val \kore-symbol-Lbl'Hash'ESPIPE ) ) ) ) $.

IMP-axiom-2514 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortIOError kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortIOError kore-sort-var-R kore-element-var-Val \kore-symbol-Lbl'Hash'ESRCH ) ) ) ) $.

IMP-axiom-2520 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortIOError kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortIOError kore-sort-var-R kore-element-var-Val \kore-symbol-Lbl'Hash'ETIMEDOUT ) ) ) ) $.

IMP-axiom-2525 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortIOError kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortIOError kore-sort-var-R kore-element-var-Val \kore-symbol-Lbl'Hash'ETOOMANYREFS ) ) ) ) $.

IMP-axiom-2529 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortIOError kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortIOError kore-sort-var-R kore-element-var-Val \kore-symbol-Lbl'Hash'EWOULDBLOCK ) ) ) ) $.

IMP-axiom-2532 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortIOError kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortIOError kore-sort-var-R kore-element-var-Val \kore-symbol-Lbl'Hash'EXDEV ) ) ) ) $.

IMP-axiom-2534 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortK ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortStream kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortStream kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'Hash'buffer'LParUndsRParUnds'K-IO'Unds'Stream'Unds'K kore-element-var-K0 ) ) ) ) ) $.

IMP-axiom-2536 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val \kore-symbol-Lbl'Hash'freezer'BangUndsUnds'IMP-SYNTAX'Unds'BExp'Unds'BExp0'Unds' ) ) ) ) $.

IMP-axiom-2549 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortK ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'Hash'freezer'UndsAnd-And-UndsUnds'IMP-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds' kore-element-var-K0 ) ) ) ) ) $.

IMP-axiom-2562 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortK ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'Hash'freezer'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds' kore-element-var-K0 ) ) ) ) ) $.

IMP-axiom-2574 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortK ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'Hash'freezer'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds' kore-element-var-K0 ) ) ) ) ) $.

IMP-axiom-2585 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortK ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'Hash'freezer'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds' kore-element-var-K0 ) ) ) ) ) $.

IMP-axiom-2595 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortK ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'Hash'freezer'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds' kore-element-var-K0 ) ) ) ) ) $.

IMP-axiom-2604 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortK ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'Hash'freezer'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds' kore-element-var-K0 ) ) ) ) ) $.

IMP-axiom-2612 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortK ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'Hash'freezer'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds' kore-element-var-K0 ) ) ) ) ) $.

IMP-axiom-2619 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortK ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'IMP-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds' kore-element-var-K0 ) ) ) ) ) $.

IMP-axiom-2625 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortK ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'IMP-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds' kore-element-var-K0 ) ) ) ) ) $.

IMP-axiom-2630 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortK ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'Hash'freezer'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp1'Unds' kore-element-var-K0 ) ) ) ) ) $.

IMP-axiom-2634 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortK ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'IMP-SYNTAX'Unds'Stmt'Unds'BExp'Unds'Block'Unds'Block0'Unds' kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) $.

IMP-axiom-2637 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \kore-is-sort kore-sort-var-SortSort ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortBool ) ( \and ( \in-sort kore-element-var-K1 kore-sort-var-SortSort ) ( \and ( \in-sort kore-element-var-K2 kore-sort-var-SortSort ) \top ) ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists kore-sort-var-SortSort kore-sort-var-R kore-element-var-Val ( \kore-equals kore-sort-var-SortSort kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'Hash'if'UndsHash'then'UndsHash'else'UndsHash'fi'Unds'K-EQUAL-SYNTAX'Unds'Sort'Unds'Bool'Unds'Sort'Unds'Sort kore-sort-var-SortSort kore-element-var-K0 kore-element-var-K1 kore-element-var-K2 ) ) ) ) ) $.

IMP-axiom-2638 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortString ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortString ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortK kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortK kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'Hash'logToFile kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) $.

IMP-axiom-2639 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortString ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortK kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortK kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'Hash'remove'LParUndsRParUnds'K-IO'Unds'K'Unds'String kore-element-var-K0 ) ) ) ) ) $.

IMP-axiom-2640 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortInt kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortInt kore-sort-var-R kore-element-var-Val \kore-symbol-Lbl'Hash'stderr'Unds'K-IO'Unds'Int ) ) ) ) $.

IMP-axiom-2641 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortInt kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortInt kore-sort-var-R kore-element-var-Val \kore-symbol-Lbl'Hash'stdin'Unds'K-IO'Unds'Int ) ) ) ) $.

IMP-axiom-2642 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortInt kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortInt kore-sort-var-R kore-element-var-Val \kore-symbol-Lbl'Hash'stdout'Unds'K-IO'Unds'Int ) ) ) ) $.

IMP-axiom-2643 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortString ) ( \and ( \in-sort kore-element-var-K2 \kore-sort-SortString ) \top ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'Hash'systemResult kore-element-var-K0 kore-element-var-K1 kore-element-var-K2 ) ) ) ) ) $.

IMP-axiom-2645 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortString ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortInt ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortIOFile kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortIOFile kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'Hash'tempFile kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) $.

IMP-axiom-2647 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortInt ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortIOError kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortIOError kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'Hash'unknownIOError kore-element-var-K0 ) ) ) ) ) $.

IMP-axiom-2649 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortInt ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortAExp kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortAExp kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl-'UndsUnds'IMP-SYNTAX'Unds'AExp'Unds'Int kore-element-var-K0 ) ) ) ) ) $.

IMP-axiom-2654 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortList kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortList kore-sort-var-R kore-element-var-Val \kore-symbol-Lbl'Stop'List ) ) ) ) $.

IMP-axiom-2655 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortIds kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortIds kore-sort-var-R kore-element-var-Val \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) ) ) ) $.

IMP-axiom-2657 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortMap kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortMap kore-sort-var-R kore-element-var-Val \kore-symbol-Lbl'Stop'Map ) ) ) ) $.

IMP-axiom-2658 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortSet kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortSet kore-sort-var-R kore-element-var-Val \kore-symbol-Lbl'Stop'Set ) ) ) ) $.

IMP-axiom-2659 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortKCell ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortStateCell ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortTCell kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortTCell kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'-LT-'T'-GT-' kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) $.

IMP-axiom-2661 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortKCellOpt ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortStateCellOpt ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortTCellFragment kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortTCellFragment kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'-LT-'T'-GT-'-fragment kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) $.

IMP-axiom-2663 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortInt ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortGeneratedCounterCell kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortGeneratedCounterCell kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' kore-element-var-K0 ) ) ) ) ) $.

IMP-axiom-2665 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortTCell ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortGeneratedCounterCell ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortGeneratedTopCell kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortGeneratedTopCell kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) $.

IMP-axiom-2667 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortTCellOpt ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortGeneratedCounterCellOpt ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortGeneratedTopCellFragment kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortGeneratedTopCellFragment kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-'-fragment kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) $.

IMP-axiom-2669 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortK ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortKCell kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortKCell kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'-LT-'k'-GT-' kore-element-var-K0 ) ) ) ) ) $.

IMP-axiom-2671 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortMap ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortStateCell kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortStateCell kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'-LT-'state'-GT-' kore-element-var-K0 ) ) ) ) ) $.

IMP-axiom-2673 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortBool ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortString kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortString kore-sort-var-R kore-element-var-Val ( \kore-symbol-LblBool2String'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Bool kore-element-var-K0 ) ) ) ) ) $.

IMP-axiom-2674 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortFloat ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortString kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortString kore-sort-var-R kore-element-var-Val ( \kore-symbol-LblFloat2String'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Float kore-element-var-K0 ) ) ) ) ) $.

IMP-axiom-2675 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortId ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortString kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortString kore-sort-var-R kore-element-var-Val ( \kore-symbol-LblId2String'LParUndsRParUnds'ID-COMMON'Unds'String'Unds'Id kore-element-var-K0 ) ) ) ) ) $.

IMP-axiom-2676 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortInt ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortString kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortString kore-sort-var-R kore-element-var-Val ( \kore-symbol-LblInt2String'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Int kore-element-var-K0 ) ) ) ) ) $.

IMP-axiom-2677 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortKItem ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortList kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortList kore-sort-var-R kore-element-var-Val ( \kore-symbol-LblListItem kore-element-var-K0 ) ) ) ) ) $.

IMP-axiom-2678 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortMap ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortKItem ) ( \and ( \in-sort kore-element-var-K2 \kore-sort-SortKItem ) \top ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortMap kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortMap kore-sort-var-R kore-element-var-Val ( \kore-symbol-LblMap'Coln'update kore-element-var-K0 kore-element-var-K1 kore-element-var-K2 ) ) ) ) ) $.

IMP-axiom-2679 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortSet ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortSet ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortSet kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortSet kore-sort-var-R kore-element-var-Val ( \kore-symbol-LblSet'Coln'difference kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) $.

IMP-axiom-2680 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortKItem ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortSet ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortBool kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortBool kore-sort-var-R kore-element-var-Val ( \kore-symbol-LblSet'Coln'in kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) $.

IMP-axiom-2681 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortKItem ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortSet kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortSet kore-sort-var-R kore-element-var-Val ( \kore-symbol-LblSetItem kore-element-var-K0 ) ) ) ) ) $.

IMP-axiom-2682 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortString ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortId kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortId kore-sort-var-R kore-element-var-Val ( \kore-symbol-LblString2Id'LParUndsRParUnds'ID-COMMON'Unds'Id'Unds'String kore-element-var-K0 ) ) ) ) ) $.

IMP-axiom-2683 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortBExp ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortBExp ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortBExp kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortBExp kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsAnd-And-UndsUnds'IMP-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) $.

IMP-axiom-2686 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortInt ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortInt kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortInt kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsAnd-'Int'Unds' kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) $.

IMP-axiom-2687 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortInt ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortInt kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortInt kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsStar'Int'Unds' kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) $.

IMP-axiom-2688 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortAExp ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortAExp ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortAExp kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortAExp kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) $.

IMP-axiom-2692 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortInt ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortInt kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortInt kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsPlus'Int'Unds' kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) $.

IMP-axiom-2693 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortString ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortString ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortString kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortString kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) $.

IMP-axiom-2694 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortAExp ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortAExp ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortAExp kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortAExp kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) $.

IMP-axiom-2697 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortId ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortIds ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortIds kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortIds kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) $.

IMP-axiom-2699 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortInt ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortInt kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortInt kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'Unds'-Int'Unds' kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) $.

IMP-axiom-2700 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortMap ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortMap ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortMap kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortMap kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'Unds'-Map'UndsUnds'MAP'Unds'Map'Unds'Map'Unds'Map kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) $.

IMP-axiom-2701 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortAExp ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortAExp ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortAExp kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortAExp kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) $.

IMP-axiom-2703 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortInt ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortBool kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortBool kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'Unds-LT-Eqls'Int'Unds' kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) $.

IMP-axiom-2704 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortMap ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortMap ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortBool kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortBool kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'Unds-LT-Eqls'Map'UndsUnds'MAP'Unds'Bool'Unds'Map'Unds'Map kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) $.

IMP-axiom-2705 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortSet ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortSet ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortBool kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortBool kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'Unds-LT-Eqls'Set'UndsUnds'SET'Unds'Bool'Unds'Set'Unds'Set kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) $.

IMP-axiom-2706 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortString ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortString ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortBool kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortBool kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'Unds-LT-Eqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) $.

IMP-axiom-2707 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortAExp ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortAExp ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortBExp kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortBExp kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'Unds-LT-EqlsUndsUnds'IMP-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) $.

IMP-axiom-2709 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortInt ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortBool kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortBool kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'Unds-LT-'Int'Unds' kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) $.

IMP-axiom-2710 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortString ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortString ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortBool kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortBool kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'Unds-LT-'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) $.

IMP-axiom-2711 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortBool ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortBool ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortBool kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortBool kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsEqlsSlshEqls'Bool'Unds' kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) $.

IMP-axiom-2712 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortInt ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortBool kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortBool kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsEqlsSlshEqls'Int'Unds' kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) $.

IMP-axiom-2713 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortK ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortBool kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortBool kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsEqlsSlshEqls'K'Unds' kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) $.

IMP-axiom-2714 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortString ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortString ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortBool kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortBool kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsEqlsSlshEqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) $.

IMP-axiom-2715 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortBool ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortBool ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortBool kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortBool kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsEqlsEqls'Bool'Unds' kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) $.

IMP-axiom-2716 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortInt ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortBool kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortBool kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsEqlsEqls'Int'Unds' kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) $.

IMP-axiom-2717 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortK ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortBool kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortBool kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsEqlsEqls'K'Unds' kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) $.

IMP-axiom-2718 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortString ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortString ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortBool kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortBool kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsEqlsEqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) $.

IMP-axiom-2719 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortId ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortAExp ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortStmt kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortStmt kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) $.

IMP-axiom-2724 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortInt ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortBool kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortBool kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'Unds-GT-Eqls'Int'Unds' kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) $.

IMP-axiom-2725 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortString ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortString ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortBool kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortBool kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'Unds-GT-Eqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) $.

IMP-axiom-2726 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortInt ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortBool kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortBool kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'Unds-GT-'Int'Unds' kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) $.

IMP-axiom-2727 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortString ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortString ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortBool kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortBool kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'Unds-GT-'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) $.

IMP-axiom-2731 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortList ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortList ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortList kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortList kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'Unds'List'Unds' kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) $.

IMP-axiom-2732 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortMap ) ( \and ( \in-sort kore-element-var-K2 \kore-sort-SortMap ) ( \and ( \in-sort kore-element-var-K3 \kore-sort-SortMap ) \top ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-equals \kore-sort-SortMap kore-sort-var-R ( \kore-symbol-Lbl'Unds'Map'Unds' ( \kore-symbol-Lbl'Unds'Map'Unds' kore-element-var-K1 kore-element-var-K2 ) kore-element-var-K3 ) ( \kore-symbol-Lbl'Unds'Map'Unds' kore-element-var-K1 ( \kore-symbol-Lbl'Unds'Map'Unds' kore-element-var-K2 kore-element-var-K3 ) ) ) ) ) $.

IMP-axiom-2733 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortMap ) ( \and ( \in-sort kore-element-var-K2 \kore-sort-SortMap ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-equals \kore-sort-SortMap kore-sort-var-R ( \kore-symbol-Lbl'Unds'Map'Unds' kore-element-var-K1 kore-element-var-K2 ) ( \kore-symbol-Lbl'Unds'Map'Unds' kore-element-var-K2 kore-element-var-K1 ) ) ) ) $.

IMP-axiom-2734 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K \kore-sort-SortMap ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-equals \kore-sort-SortMap kore-sort-var-R ( \kore-symbol-Lbl'Unds'Map'Unds' kore-element-var-K \kore-symbol-Lbl'Stop'Map ) kore-element-var-K ) ) ) $.

IMP-axiom-2741 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortSet ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortSet ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortSet kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortSet kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'Unds'Set'Unds' kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) $.

IMP-axiom-2742 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortMap ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortKItem ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortMap kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortMap kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsLSqBUnds-LT-'-undef'RSqB' kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) $.

IMP-axiom-2743 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortMap ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortKItem ) ( \and ( \in-sort kore-element-var-K2 \kore-sort-SortKItem ) \top ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsLSqBUndsRSqB'orDefault'UndsUnds'MAP'Unds'KItem'Unds'Map'Unds'KItem'Unds'KItem kore-element-var-K0 kore-element-var-K1 kore-element-var-K2 ) ) ) ) ) $.

IMP-axiom-2744 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortStmt ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortStmt ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortStmt kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortStmt kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsUndsUnds'IMP-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) $.

IMP-axiom-2748 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortBool ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortBool ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortBool kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortBool kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'Unds'andBool'Unds' kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) $.

IMP-axiom-2749 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortBool ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortBool ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortBool kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortBool kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'Unds'andThenBool'Unds' kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) $.

IMP-axiom-2750 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortBool ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortBool ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortBool kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortBool kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'Unds'impliesBool'Unds' kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) $.

IMP-axiom-2751 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortKItem ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortList ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortBool kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortBool kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'Unds'in'UndsUnds'LIST'Unds'Bool'Unds'KItem'Unds'List kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) $.

IMP-axiom-2752 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortKItem ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortMap ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortBool kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortBool kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'Unds'in'Unds'keys'LParUndsRParUnds'MAP'Unds'Bool'Unds'KItem'Unds'Map kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) $.

IMP-axiom-2753 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortBool ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortBool ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortBool kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortBool kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'Unds'orBool'Unds' kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) $.

IMP-axiom-2754 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortBool ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortBool ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortBool kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortBool kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'Unds'orElseBool'Unds' kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) $.

IMP-axiom-2755 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortBool ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortBool ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortBool kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortBool kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'Unds'xorBool'Unds' kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) $.

IMP-axiom-2756 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortInt ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortInt kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortInt kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'Unds'xorInt'Unds' kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) $.

IMP-axiom-2757 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortKItem ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortKItem ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortMap kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortMap kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) $.

IMP-axiom-2758 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortInt ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortInt kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortInt kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsPipe'Int'Unds' kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) $.

IMP-axiom-2759 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortSet ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortSet ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortSet kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortSet kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsPipe'Set'UndsUnds'SET'Unds'Set'Unds'Set'Unds'Set kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) $.

IMP-axiom-2760 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortInt ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortInt kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortInt kore-sort-var-R kore-element-var-Val ( \kore-symbol-LblabsInt'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int kore-element-var-K0 ) ) ) ) ) $.

IMP-axiom-2761 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortString ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortString ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortInt kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortInt kore-sort-var-R kore-element-var-Val ( \kore-symbol-LblcountAllOccurrences'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) $.

IMP-axiom-2762 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortInt ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortId kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortId kore-sort-var-R kore-element-var-Val ( \kore-symbol-LblfreshId'LParUndsRParUnds'ID-COMMON'Unds'Id'Unds'Int kore-element-var-K0 ) ) ) ) ) $.

IMP-axiom-2763 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortInt ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortInt kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortInt kore-sort-var-R kore-element-var-Val ( \kore-symbol-LblfreshInt'LParUndsRParUnds'INT'Unds'Int'Unds'Int kore-element-var-K0 ) ) ) ) ) $.

IMP-axiom-2764 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortBExp ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortBlock ) ( \and ( \in-sort kore-element-var-K2 \kore-sort-SortBlock ) \top ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortStmt kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortStmt kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lblif'LParUndsRParUnds'else'UndsUnds'IMP-SYNTAX'Unds'Stmt'Unds'BExp'Unds'Block'Unds'Block kore-element-var-K0 kore-element-var-K1 kore-element-var-K2 ) ) ) ) ) $.

IMP-axiom-2767 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortIds ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortStmt ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortPgm kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortPgm kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) $.

IMP-axiom-2769 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortSet ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortSet ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortSet kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortSet kore-sort-var-R kore-element-var-Val ( \kore-symbol-LblintersectSet'LParUndsCommUndsRParUnds'SET'Unds'Set'Unds'Set'Unds'Set kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) $.

IMP-axiom-2770 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortMap ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortSet kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortSet kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lblkeys'LParUndsRParUnds'MAP'Unds'Set'Unds'Map kore-element-var-K0 ) ) ) ) ) $.

IMP-axiom-2771 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortString ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortInt kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortInt kore-sort-var-R kore-element-var-Val ( \kore-symbol-LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String kore-element-var-K0 ) ) ) ) ) $.

IMP-axiom-2772 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortInt ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortInt kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortInt kore-sort-var-R kore-element-var-Val ( \kore-symbol-LblmaxInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) $.

IMP-axiom-2773 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortInt ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortInt kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortInt kore-sort-var-R kore-element-var-Val ( \kore-symbol-LblminInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) $.

IMP-axiom-2774 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortGeneratedCounterCellOpt kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortGeneratedCounterCellOpt kore-sort-var-R kore-element-var-Val \kore-symbol-LblnoGeneratedCounterCell ) ) ) ) $.

IMP-axiom-2775 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortKCellOpt kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortKCellOpt kore-sort-var-R kore-element-var-Val \kore-symbol-LblnoKCell ) ) ) ) $.

IMP-axiom-2776 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortStateCellOpt kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortStateCellOpt kore-sort-var-R kore-element-var-Val \kore-symbol-LblnoStateCell ) ) ) ) $.

IMP-axiom-2777 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortTCellOpt kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortTCellOpt kore-sort-var-R kore-element-var-Val \kore-symbol-LblnoTCell ) ) ) ) $.

IMP-axiom-2778 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortBool ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortBool kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortBool kore-sort-var-R kore-element-var-Val ( \kore-symbol-LblnotBool'Unds' kore-element-var-K0 ) ) ) ) ) $.

IMP-axiom-2779 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortMap ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortSet ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortMap kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortMap kore-sort-var-R kore-element-var-Val ( \kore-symbol-LblremoveAll'LParUndsCommUndsRParUnds'MAP'Unds'Map'Unds'Map'Unds'Set kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) $.

IMP-axiom-2780 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortString ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortString ) ( \and ( \in-sort kore-element-var-K2 \kore-sort-SortString ) \top ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortString kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortString kore-sort-var-R kore-element-var-Val ( \kore-symbol-LblreplaceAll'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String kore-element-var-K0 kore-element-var-K1 kore-element-var-K2 ) ) ) ) ) $.

IMP-axiom-2781 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortString ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortString ) ( \and ( \in-sort kore-element-var-K2 \kore-sort-SortString ) \top ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortString kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortString kore-sort-var-R kore-element-var-Val ( \kore-symbol-LblreplaceFirst'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String kore-element-var-K0 kore-element-var-K1 kore-element-var-K2 ) ) ) ) ) $.

IMP-axiom-2782 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortList ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortInt kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortInt kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lblsize'LParUndsRParUnds'LIST'Unds'Int'Unds'List kore-element-var-K0 ) ) ) ) ) $.

IMP-axiom-2783 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortMap ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortInt kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortInt kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lblsize'LParUndsRParUnds'MAP'Unds'Int'Unds'Map kore-element-var-K0 ) ) ) ) ) $.

IMP-axiom-2784 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortSet ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortInt kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortInt kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lblsize'LParUndsRParUnds'SET'Unds'Int'Unds'Set kore-element-var-K0 ) ) ) ) ) $.

IMP-axiom-2785 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortString ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-K2 \kore-sort-SortInt ) \top ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortString kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortString kore-sort-var-R kore-element-var-Val ( \kore-symbol-LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int kore-element-var-K0 kore-element-var-K1 kore-element-var-K2 ) ) ) ) ) $.

IMP-axiom-2786 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortMap ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortMap ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortMap kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortMap kore-sort-var-R kore-element-var-Val ( \kore-symbol-LblupdateMap'LParUndsCommUndsRParUnds'MAP'Unds'Map'Unds'Map'Unds'Map kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) $.

IMP-axiom-2787 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortBExp ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortBlock ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortStmt kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortStmt kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lblwhile'LParUndsRParUndsUnds'IMP-SYNTAX'Unds'Stmt'Unds'BExp'Unds'Block kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) $.

IMP-axiom-2789 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortStmt ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortBlock kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortBlock kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'LBraUndsRBraUnds'IMP-SYNTAX'Unds'Block'Unds'Stmt kore-element-var-K0 ) ) ) ) ) $.

IMP-axiom-2792 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortBlock kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortBlock kore-sort-var-R kore-element-var-Val \kore-symbol-Lbl'LBraRBraUnds'IMP-SYNTAX'Unds'Block ) ) ) ) $.

IMP-axiom-2793 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortInt ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortInt kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortInt kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'Tild'Int'Unds' kore-element-var-K0 ) ) ) ) ) $.

IMP-axiom-2828 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-Q0 ) ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VS0 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VS1 \kore-sort-SortInt ) \top ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-equals kore-sort-var-Q0 kore-sort-var-R ( \kore-ceil \kore-sort-SortInt kore-sort-var-Q0 ( \kore-symbol-Lbl'UndsPerc'Int'Unds' kore-element-var-VS1 kore-element-var-VS0 ) ) ( \kore-and kore-sort-var-Q0 ( \kore-and kore-sort-var-Q0 ( \kore-equals \kore-sort-SortBool kore-sort-var-Q0 ( \kore-symbol-Lbl'UndsEqlsSlshEqls'Int'Unds' kore-element-var-VS0 ( \kore-dv \kore-sort-SortInt "0" ) ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-ceil \kore-sort-SortInt kore-sort-var-Q0 kore-element-var-VS1 ) ) ( \kore-ceil \kore-sort-SortInt kore-sort-var-Q0 kore-element-var-VS0 ) ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-2829 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-Q0 ) ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VS0 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VS1 \kore-sort-SortInt ) \top ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-equals kore-sort-var-Q0 kore-sort-var-R ( \kore-ceil \kore-sort-SortInt kore-sort-var-Q0 ( \kore-symbol-Lbl'UndsSlsh'Int'Unds' kore-element-var-VS1 kore-element-var-VS0 ) ) ( \kore-and kore-sort-var-Q0 ( \kore-and kore-sort-var-Q0 ( \kore-equals \kore-sort-SortBool kore-sort-var-Q0 ( \kore-symbol-Lbl'UndsEqlsSlshEqls'Int'Unds' kore-element-var-VS0 ( \kore-dv \kore-sort-SortInt "0" ) ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-ceil \kore-sort-SortInt kore-sort-var-Q0 kore-element-var-VS1 ) ) ( \kore-ceil \kore-sort-SortInt kore-sort-var-Q0 kore-element-var-VS0 ) ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-2830 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-Q0 ) ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VS0 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VS1 \kore-sort-SortInt ) \top ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-equals kore-sort-var-Q0 kore-sort-var-R ( \kore-ceil \kore-sort-SortInt kore-sort-var-Q0 ( \kore-symbol-Lbl'Unds-LT--LT-'Int'Unds' kore-element-var-VS1 kore-element-var-VS0 ) ) ( \kore-and kore-sort-var-Q0 ( \kore-and kore-sort-var-Q0 ( \kore-equals \kore-sort-SortBool kore-sort-var-Q0 ( \kore-symbol-Lbl'Unds-GT-Eqls'Int'Unds' kore-element-var-VS0 ( \kore-dv \kore-sort-SortInt "0" ) ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-ceil \kore-sort-SortInt kore-sort-var-Q0 kore-element-var-VS1 ) ) ( \kore-ceil \kore-sort-SortInt kore-sort-var-Q0 kore-element-var-VS0 ) ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-2831 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-Q0 ) ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VS0 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VS1 \kore-sort-SortInt ) \top ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-equals kore-sort-var-Q0 kore-sort-var-R ( \kore-ceil \kore-sort-SortInt kore-sort-var-Q0 ( \kore-symbol-Lbl'Unds-GT--GT-'Int'Unds' kore-element-var-VS1 kore-element-var-VS0 ) ) ( \kore-and kore-sort-var-Q0 ( \kore-and kore-sort-var-Q0 ( \kore-equals \kore-sort-SortBool kore-sort-var-Q0 ( \kore-symbol-Lbl'Unds-GT-Eqls'Int'Unds' kore-element-var-VS0 ( \kore-dv \kore-sort-SortInt "0" ) ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-ceil \kore-sort-SortInt kore-sort-var-Q0 kore-element-var-VS1 ) ) ( \kore-ceil \kore-sort-SortInt kore-sort-var-Q0 kore-element-var-VS0 ) ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-2832 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-Q0 ) ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VS0 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VS1 \kore-sort-SortInt ) \top ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-equals kore-sort-var-Q0 kore-sort-var-R ( \kore-ceil \kore-sort-SortInt kore-sort-var-Q0 ( \kore-symbol-Lbl'Unds'modInt'Unds' kore-element-var-VS1 kore-element-var-VS0 ) ) ( \kore-and kore-sort-var-Q0 ( \kore-and kore-sort-var-Q0 ( \kore-equals \kore-sort-SortBool kore-sort-var-Q0 ( \kore-symbol-Lbl'UndsEqlsSlshEqls'Int'Unds' kore-element-var-VS0 ( \kore-dv \kore-sort-SortInt "0" ) ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-ceil \kore-sort-SortInt kore-sort-var-Q0 kore-element-var-VS1 ) ) ( \kore-ceil \kore-sort-SortInt kore-sort-var-Q0 kore-element-var-VS0 ) ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-2833 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortBool ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortBool ) ( \and ( \in-sort kore-element-var-VE5 \kore-sort-SortK ) \top ) ) ) ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R kore-element-var-VE2 ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortBool kore-sort-var-R kore-element-var-VE4 kore-element-var-VE2 ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE5 kore-element-var-VE0 ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE1 kore-element-var-VE3 ) ( \kore-top kore-sort-var-R ) ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortK kore-sort-var-R ( \kore-symbol-Lbl'Hash'if'UndsHash'then'UndsHash'else'UndsHash'fi'Unds'K-EQUAL-SYNTAX'Unds'Sort'Unds'Bool'Unds'Sort'Unds'Sort \kore-sort-SortK kore-element-var-VE4 kore-element-var-VE5 kore-element-var-VE1 ) kore-element-var-VE0 ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-2834 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortBool ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortBool ) ( \and ( \in-sort kore-element-var-VE5 \kore-sort-SortK ) \top ) ) ) ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblnotBool'Unds' kore-element-var-VE2 ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortBool kore-sort-var-R kore-element-var-VE4 kore-element-var-VE2 ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE5 kore-element-var-VE3 ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE1 kore-element-var-VE0 ) ( \kore-top kore-sort-var-R ) ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortK kore-sort-var-R ( \kore-symbol-Lbl'Hash'if'UndsHash'then'UndsHash'else'UndsHash'fi'Unds'K-EQUAL-SYNTAX'Unds'Sort'Unds'Bool'Unds'Sort'Unds'Sort \kore-sort-SortK kore-element-var-VE4 kore-element-var-VE5 kore-element-var-VE1 ) kore-element-var-VE0 ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-2835 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortString ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortString ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortString kore-sort-var-R kore-element-var-VE0 kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortIOInt kore-sort-var-R ( \kore-symbol-Lbl'Hash'open'LParUndsRParUnds'K-IO'Unds'IOInt'Unds'String kore-element-var-VE0 ) ( \kore-symbol-Lbl'Hash'open'LParUndsCommUndsRParUnds'K-IO'Unds'IOInt'Unds'String'Unds'String kore-element-var-VE1 ( \kore-dv \kore-sort-SortString "r%2B" ) ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-2836 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-top kore-sort-var-R ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortInt kore-sort-var-R \kore-symbol-Lbl'Hash'stderr'Unds'K-IO'Unds'Int ( \kore-dv \kore-sort-SortInt "2" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-2837 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-top kore-sort-var-R ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortInt kore-sort-var-R \kore-symbol-Lbl'Hash'stdin'Unds'K-IO'Unds'Int ( \kore-dv \kore-sort-SortInt "0" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-2838 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-top kore-sort-var-R ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortInt kore-sort-var-R \kore-symbol-Lbl'Hash'stdout'Unds'K-IO'Unds'Int ( \kore-dv \kore-sort-SortInt "1" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-2839 $a |- ( \imp ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortKItem ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortBExp ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortStateCell ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortGeneratedCounterCell ) \top ) ) ) ) ) ( \kore-valid \kore-sort-SortGeneratedTopCell ( \kore-rewrites \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-equals \kore-sort-SortBool \kore-sort-SortGeneratedTopCell ( \kore-symbol-Lbl'Unds'andBool'Unds' ( \kore-dv \kore-sort-SortBool "true" ) ( \kore-symbol-LblisKResult ( \kore-symbol-kseq kore-element-var-VE0 \kore-symbol-dotk ) ) ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-and \kore-sort-SortKItem ( \kore-inj \kore-sort-SortBExp \kore-sort-SortKItem kore-element-var-VE1 ) kore-element-var-VE0 ) ( \kore-symbol-kseq \kore-symbol-Lbl'Hash'freezer'BangUndsUnds'IMP-SYNTAX'Unds'BExp'Unds'BExp0'Unds' kore-element-var-VE3 ) ) ) kore-element-var-VE2 ) kore-element-var-VE4 ) ) ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortBExp \kore-sort-SortKItem ( \kore-symbol-Lbl'BangUndsUnds'IMP-SYNTAX'Unds'BExp'Unds'BExp kore-element-var-VE1 ) ) kore-element-var-VE3 ) ) kore-element-var-VE2 ) kore-element-var-VE4 ) ) ) ) ) $.

IMP-axiom-2840 $a |- ( \imp ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortKItem ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortBExp ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortStateCell ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortGeneratedCounterCell ) ( \and ( \in-sort kore-element-var-VE5 \kore-sort-SortBExp ) \top ) ) ) ) ) ) ( \kore-valid \kore-sort-SortGeneratedTopCell ( \kore-rewrites \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-equals \kore-sort-SortBool \kore-sort-SortGeneratedTopCell ( \kore-symbol-Lbl'Unds'andBool'Unds' ( \kore-dv \kore-sort-SortBool "true" ) ( \kore-symbol-LblisKResult ( \kore-symbol-kseq kore-element-var-VE0 \kore-symbol-dotk ) ) ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-and \kore-sort-SortKItem ( \kore-inj \kore-sort-SortBExp \kore-sort-SortKItem kore-element-var-VE1 ) kore-element-var-VE0 ) ( \kore-symbol-kseq ( \kore-symbol-Lbl'Hash'freezer'UndsAnd-And-UndsUnds'IMP-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortBExp \kore-sort-SortKItem kore-element-var-VE5 ) \kore-symbol-dotk ) ) kore-element-var-VE3 ) ) ) kore-element-var-VE2 ) kore-element-var-VE4 ) ) ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortBExp \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsAnd-And-UndsUnds'IMP-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp kore-element-var-VE1 kore-element-var-VE5 ) ) kore-element-var-VE3 ) ) kore-element-var-VE2 ) kore-element-var-VE4 ) ) ) ) ) $.

IMP-axiom-2841 $a |- ( \imp ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortKItem ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortAExp ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortStateCell ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortGeneratedCounterCell ) ( \and ( \in-sort kore-element-var-VE5 \kore-sort-SortAExp ) \top ) ) ) ) ) ) ( \kore-valid \kore-sort-SortGeneratedTopCell ( \kore-rewrites \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-equals \kore-sort-SortBool \kore-sort-SortGeneratedTopCell ( \kore-symbol-Lbl'Unds'andBool'Unds' ( \kore-dv \kore-sort-SortBool "true" ) ( \kore-symbol-LblisKResult ( \kore-symbol-kseq kore-element-var-VE0 \kore-symbol-dotk ) ) ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-and \kore-sort-SortKItem ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem kore-element-var-VE1 ) kore-element-var-VE0 ) ( \kore-symbol-kseq ( \kore-symbol-Lbl'Hash'freezer'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem kore-element-var-VE5 ) \kore-symbol-dotk ) ) kore-element-var-VE3 ) ) ) kore-element-var-VE2 ) kore-element-var-VE4 ) ) ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp kore-element-var-VE1 kore-element-var-VE5 ) ) kore-element-var-VE3 ) ) kore-element-var-VE2 ) kore-element-var-VE4 ) ) ) ) ) $.

IMP-axiom-2842 $a |- ( \imp ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortKItem ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortAExp ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortAExp ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortStateCell ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE5 \kore-sort-SortGeneratedCounterCell ) \top ) ) ) ) ) ) ( \kore-valid \kore-sort-SortGeneratedTopCell ( \kore-rewrites \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-equals \kore-sort-SortBool \kore-sort-SortGeneratedTopCell ( \kore-symbol-Lbl'Unds'andBool'Unds' ( \kore-dv \kore-sort-SortBool "true" ) ( \kore-symbol-LblisKResult ( \kore-symbol-kseq kore-element-var-VE0 \kore-symbol-dotk ) ) ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-and \kore-sort-SortKItem ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem kore-element-var-VE2 ) kore-element-var-VE0 ) ( \kore-symbol-kseq ( \kore-symbol-Lbl'Hash'freezer'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem kore-element-var-VE1 ) \kore-symbol-dotk ) ) kore-element-var-VE4 ) ) ) kore-element-var-VE3 ) kore-element-var-VE5 ) ) ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp kore-element-var-VE1 kore-element-var-VE2 ) ) kore-element-var-VE4 ) ) kore-element-var-VE3 ) kore-element-var-VE5 ) ) ) ) ) $.

IMP-axiom-2843 $a |- ( \imp ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortKItem ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortAExp ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortStateCell ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortGeneratedCounterCell ) ( \and ( \in-sort kore-element-var-VE5 \kore-sort-SortAExp ) \top ) ) ) ) ) ) ( \kore-valid \kore-sort-SortGeneratedTopCell ( \kore-rewrites \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-equals \kore-sort-SortBool \kore-sort-SortGeneratedTopCell ( \kore-symbol-Lbl'Unds'andBool'Unds' ( \kore-dv \kore-sort-SortBool "true" ) ( \kore-symbol-LblisKResult ( \kore-symbol-kseq kore-element-var-VE0 \kore-symbol-dotk ) ) ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-and \kore-sort-SortKItem ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem kore-element-var-VE1 ) kore-element-var-VE0 ) ( \kore-symbol-kseq ( \kore-symbol-Lbl'Hash'freezer'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem kore-element-var-VE5 ) \kore-symbol-dotk ) ) kore-element-var-VE3 ) ) ) kore-element-var-VE2 ) kore-element-var-VE4 ) ) ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp kore-element-var-VE1 kore-element-var-VE5 ) ) kore-element-var-VE3 ) ) kore-element-var-VE2 ) kore-element-var-VE4 ) ) ) ) ) $.

IMP-axiom-2844 $a |- ( \imp ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortKItem ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortAExp ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortAExp ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortStateCell ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE5 \kore-sort-SortGeneratedCounterCell ) \top ) ) ) ) ) ) ( \kore-valid \kore-sort-SortGeneratedTopCell ( \kore-rewrites \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-equals \kore-sort-SortBool \kore-sort-SortGeneratedTopCell ( \kore-symbol-Lbl'Unds'andBool'Unds' ( \kore-dv \kore-sort-SortBool "true" ) ( \kore-symbol-LblisKResult ( \kore-symbol-kseq kore-element-var-VE0 \kore-symbol-dotk ) ) ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-and \kore-sort-SortKItem ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem kore-element-var-VE2 ) kore-element-var-VE0 ) ( \kore-symbol-kseq ( \kore-symbol-Lbl'Hash'freezer'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem kore-element-var-VE1 ) \kore-symbol-dotk ) ) kore-element-var-VE4 ) ) ) kore-element-var-VE3 ) kore-element-var-VE5 ) ) ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp kore-element-var-VE1 kore-element-var-VE2 ) ) kore-element-var-VE4 ) ) kore-element-var-VE3 ) kore-element-var-VE5 ) ) ) ) ) $.

IMP-axiom-2845 $a |- ( \imp ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortKItem ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortAExp ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortStateCell ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortGeneratedCounterCell ) ( \and ( \in-sort kore-element-var-VE5 \kore-sort-SortAExp ) \top ) ) ) ) ) ) ( \kore-valid \kore-sort-SortGeneratedTopCell ( \kore-rewrites \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-equals \kore-sort-SortBool \kore-sort-SortGeneratedTopCell ( \kore-symbol-Lbl'Unds'andBool'Unds' ( \kore-dv \kore-sort-SortBool "true" ) ( \kore-symbol-LblisKResult ( \kore-symbol-kseq kore-element-var-VE0 \kore-symbol-dotk ) ) ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-and \kore-sort-SortKItem ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem kore-element-var-VE1 ) kore-element-var-VE0 ) ( \kore-symbol-kseq ( \kore-symbol-Lbl'Hash'freezer'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem kore-element-var-VE5 ) \kore-symbol-dotk ) ) kore-element-var-VE3 ) ) ) kore-element-var-VE2 ) kore-element-var-VE4 ) ) ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp kore-element-var-VE1 kore-element-var-VE5 ) ) kore-element-var-VE3 ) ) kore-element-var-VE2 ) kore-element-var-VE4 ) ) ) ) ) $.

IMP-axiom-2846 $a |- ( \imp ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortKItem ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortAExp ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortAExp ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortStateCell ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE5 \kore-sort-SortGeneratedCounterCell ) \top ) ) ) ) ) ) ( \kore-valid \kore-sort-SortGeneratedTopCell ( \kore-rewrites \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-equals \kore-sort-SortBool \kore-sort-SortGeneratedTopCell ( \kore-symbol-Lbl'Unds'andBool'Unds' ( \kore-dv \kore-sort-SortBool "true" ) ( \kore-symbol-LblisKResult ( \kore-symbol-kseq kore-element-var-VE0 \kore-symbol-dotk ) ) ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-and \kore-sort-SortKItem ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem kore-element-var-VE2 ) kore-element-var-VE0 ) ( \kore-symbol-kseq ( \kore-symbol-Lbl'Hash'freezer'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem kore-element-var-VE1 ) \kore-symbol-dotk ) ) kore-element-var-VE4 ) ) ) kore-element-var-VE3 ) kore-element-var-VE5 ) ) ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp kore-element-var-VE1 kore-element-var-VE2 ) ) kore-element-var-VE4 ) ) kore-element-var-VE3 ) kore-element-var-VE5 ) ) ) ) ) $.

IMP-axiom-2847 $a |- ( \imp ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortKItem ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortAExp ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortStateCell ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortGeneratedCounterCell ) ( \and ( \in-sort kore-element-var-VE5 \kore-sort-SortAExp ) \top ) ) ) ) ) ) ( \kore-valid \kore-sort-SortGeneratedTopCell ( \kore-rewrites \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-equals \kore-sort-SortBool \kore-sort-SortGeneratedTopCell ( \kore-symbol-Lbl'Unds'andBool'Unds' ( \kore-dv \kore-sort-SortBool "true" ) ( \kore-symbol-LblisKResult ( \kore-symbol-kseq kore-element-var-VE0 \kore-symbol-dotk ) ) ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-and \kore-sort-SortKItem ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem kore-element-var-VE1 ) kore-element-var-VE0 ) ( \kore-symbol-kseq ( \kore-symbol-Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'IMP-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem kore-element-var-VE5 ) \kore-symbol-dotk ) ) kore-element-var-VE3 ) ) ) kore-element-var-VE2 ) kore-element-var-VE4 ) ) ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortBExp \kore-sort-SortKItem ( \kore-symbol-Lbl'Unds-LT-EqlsUndsUnds'IMP-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp kore-element-var-VE1 kore-element-var-VE5 ) ) kore-element-var-VE3 ) ) kore-element-var-VE2 ) kore-element-var-VE4 ) ) ) ) ) $.

IMP-axiom-2848 $a |- ( \imp ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortKItem ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortAExp ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortAExp ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortStateCell ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE5 \kore-sort-SortGeneratedCounterCell ) \top ) ) ) ) ) ) ( \kore-valid \kore-sort-SortGeneratedTopCell ( \kore-rewrites \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-equals \kore-sort-SortBool \kore-sort-SortGeneratedTopCell ( \kore-symbol-Lbl'Unds'andBool'Unds' ( \kore-dv \kore-sort-SortBool "true" ) ( \kore-symbol-LblisKResult ( \kore-symbol-kseq kore-element-var-VE0 \kore-symbol-dotk ) ) ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-and \kore-sort-SortKItem ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem kore-element-var-VE2 ) kore-element-var-VE0 ) ( \kore-symbol-kseq ( \kore-symbol-Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'IMP-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem kore-element-var-VE1 ) \kore-symbol-dotk ) ) kore-element-var-VE4 ) ) ) kore-element-var-VE3 ) kore-element-var-VE5 ) ) ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortBExp \kore-sort-SortKItem ( \kore-symbol-Lbl'Unds-LT-EqlsUndsUnds'IMP-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp kore-element-var-VE1 kore-element-var-VE2 ) ) kore-element-var-VE4 ) ) kore-element-var-VE3 ) kore-element-var-VE5 ) ) ) ) ) $.

IMP-axiom-2849 $a |- ( \imp ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortKItem ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortId ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortAExp ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortStateCell ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE5 \kore-sort-SortGeneratedCounterCell ) \top ) ) ) ) ) ) ( \kore-valid \kore-sort-SortGeneratedTopCell ( \kore-rewrites \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-equals \kore-sort-SortBool \kore-sort-SortGeneratedTopCell ( \kore-symbol-Lbl'Unds'andBool'Unds' ( \kore-dv \kore-sort-SortBool "true" ) ( \kore-symbol-LblisKResult ( \kore-symbol-kseq kore-element-var-VE0 \kore-symbol-dotk ) ) ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-and \kore-sort-SortKItem ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem kore-element-var-VE2 ) kore-element-var-VE0 ) ( \kore-symbol-kseq ( \kore-symbol-Lbl'Hash'freezer'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp1'Unds' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem kore-element-var-VE1 ) \kore-symbol-dotk ) ) kore-element-var-VE4 ) ) ) kore-element-var-VE3 ) kore-element-var-VE5 ) ) ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp kore-element-var-VE1 kore-element-var-VE2 ) ) kore-element-var-VE4 ) ) kore-element-var-VE3 ) kore-element-var-VE5 ) ) ) ) ) $.

IMP-axiom-2850 $a |- ( \imp ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortKItem ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortBlock ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortBExp ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortStateCell ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortBlock ) ( \and ( \in-sort kore-element-var-VE5 \kore-sort-SortGeneratedCounterCell ) ( \and ( \in-sort kore-element-var-VE6 \kore-sort-SortK ) \top ) ) ) ) ) ) ) ( \kore-valid \kore-sort-SortGeneratedTopCell ( \kore-rewrites \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-equals \kore-sort-SortBool \kore-sort-SortGeneratedTopCell ( \kore-symbol-Lbl'Unds'andBool'Unds' ( \kore-dv \kore-sort-SortBool "true" ) ( \kore-symbol-LblisKResult ( \kore-symbol-kseq kore-element-var-VE0 \kore-symbol-dotk ) ) ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-and \kore-sort-SortKItem ( \kore-inj \kore-sort-SortBExp \kore-sort-SortKItem kore-element-var-VE2 ) kore-element-var-VE0 ) ( \kore-symbol-kseq ( \kore-symbol-Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'IMP-SYNTAX'Unds'Stmt'Unds'BExp'Unds'Block'Unds'Block0'Unds' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortBlock \kore-sort-SortKItem kore-element-var-VE1 ) \kore-symbol-dotk ) ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortBlock \kore-sort-SortKItem kore-element-var-VE4 ) \kore-symbol-dotk ) ) kore-element-var-VE6 ) ) ) kore-element-var-VE3 ) kore-element-var-VE5 ) ) ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lblif'LParUndsRParUnds'else'UndsUnds'IMP-SYNTAX'Unds'Stmt'Unds'BExp'Unds'Block'Unds'Block kore-element-var-VE2 kore-element-var-VE1 kore-element-var-VE4 ) ) kore-element-var-VE6 ) ) kore-element-var-VE3 ) kore-element-var-VE5 ) ) ) ) ) $.

IMP-axiom-2851 $a |- ( \imp ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortStmt ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortStateCell ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortBExp ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortBlock ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortGeneratedCounterCell ) ( \and ( \in-sort kore-element-var-VE5 \kore-sort-SortK ) \top ) ) ) ) ) ) ( \kore-valid \kore-sort-SortGeneratedTopCell ( \kore-rewrites \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-and \kore-sort-SortStmt ( \kore-symbol-Lblwhile'LParUndsRParUndsUnds'IMP-SYNTAX'Unds'Stmt'Unds'BExp'Unds'Block kore-element-var-VE2 kore-element-var-VE3 ) kore-element-var-VE0 ) ) kore-element-var-VE5 ) ) kore-element-var-VE1 ) kore-element-var-VE4 ) ) ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lblif'LParUndsRParUnds'else'UndsUnds'IMP-SYNTAX'Unds'Stmt'Unds'BExp'Unds'Block'Unds'Block kore-element-var-VE2 ( \kore-symbol-Lbl'LBraUndsRBraUnds'IMP-SYNTAX'Unds'Block'Unds'Stmt ( \kore-symbol-Lbl'UndsUndsUnds'IMP-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt ( \kore-inj \kore-sort-SortBlock \kore-sort-SortStmt kore-element-var-VE3 ) kore-element-var-VE0 ) ) \kore-symbol-Lbl'LBraRBraUnds'IMP-SYNTAX'Unds'Block ) ) kore-element-var-VE5 ) ) kore-element-var-VE1 ) kore-element-var-VE4 ) ) ) ) ) $.

IMP-axiom-2852 $a |- ( \imp ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortId ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortMap ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortStateCell ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortKItem ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortGeneratedCounterCell ) ( \and ( \in-sort kore-element-var-VE5 \kore-sort-SortK ) \top ) ) ) ) ) ) ( \kore-valid \kore-sort-SortGeneratedTopCell ( \kore-rewrites \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem kore-element-var-VE0 ) kore-element-var-VE5 ) ) ( \kore-and \kore-sort-SortStateCell ( \kore-symbol-Lbl'-LT-'state'-GT-' ( \kore-symbol-Lbl'Unds'Map'Unds' ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem kore-element-var-VE0 ) kore-element-var-VE3 ) kore-element-var-VE1 ) ) kore-element-var-VE2 ) ) kore-element-var-VE4 ) ) ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq kore-element-var-VE3 kore-element-var-VE5 ) ) kore-element-var-VE2 ) kore-element-var-VE4 ) ) ) ) ) $.

IMP-axiom-2853 $a |- ( \imp ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortStateCell ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortGeneratedCounterCell ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortBExp ) \top ) ) ) ) ( \kore-valid \kore-sort-SortGeneratedTopCell ( \kore-rewrites \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-equals \kore-sort-SortBool \kore-sort-SortGeneratedTopCell ( \kore-symbol-Lbl'Unds'andBool'Unds' ( \kore-dv \kore-sort-SortBool "true" ) ( \kore-symbol-LblnotBool'Unds' ( \kore-symbol-LblisKResult ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortBExp \kore-sort-SortKItem kore-element-var-VE3 ) \kore-symbol-dotk ) ) ) ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortBExp \kore-sort-SortKItem ( \kore-symbol-Lbl'BangUndsUnds'IMP-SYNTAX'Unds'BExp'Unds'BExp kore-element-var-VE3 ) ) kore-element-var-VE1 ) ) kore-element-var-VE0 ) kore-element-var-VE2 ) ) ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortBExp \kore-sort-SortKItem kore-element-var-VE3 ) ( \kore-symbol-kseq \kore-symbol-Lbl'Hash'freezer'BangUndsUnds'IMP-SYNTAX'Unds'BExp'Unds'BExp0'Unds' kore-element-var-VE1 ) ) ) kore-element-var-VE0 ) kore-element-var-VE2 ) ) ) ) ) $.

IMP-axiom-2854 $a |- ( \imp ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortStateCell ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortBool ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortGeneratedCounterCell ) \top ) ) ) ) ( \kore-valid \kore-sort-SortGeneratedTopCell ( \kore-rewrites \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortBExp \kore-sort-SortKItem ( \kore-symbol-Lbl'BangUndsUnds'IMP-SYNTAX'Unds'BExp'Unds'BExp ( \kore-inj \kore-sort-SortBool \kore-sort-SortBExp kore-element-var-VE2 ) ) ) kore-element-var-VE1 ) ) kore-element-var-VE0 ) kore-element-var-VE3 ) ) ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortBool \kore-sort-SortKItem ( \kore-symbol-LblnotBool'Unds' kore-element-var-VE2 ) ) kore-element-var-VE1 ) ) kore-element-var-VE0 ) kore-element-var-VE3 ) ) ) ) ) $.

IMP-axiom-2855 $a |- ( \imp ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortStateCell ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortGeneratedCounterCell ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortK ) \top ) ) ) ) ( \kore-valid \kore-sort-SortGeneratedTopCell ( \kore-rewrites \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem ( \kore-symbol-Lbl-'UndsUnds'IMP-SYNTAX'Unds'AExp'Unds'Int kore-element-var-VE1 ) ) kore-element-var-VE3 ) ) kore-element-var-VE0 ) kore-element-var-VE2 ) ) ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortInt \kore-sort-SortKItem ( \kore-symbol-Lbl'Unds'-Int'Unds' ( \kore-dv \kore-sort-SortInt "0" ) kore-element-var-VE1 ) ) kore-element-var-VE3 ) ) kore-element-var-VE0 ) kore-element-var-VE2 ) ) ) ) ) $.

IMP-axiom-2856 $a |- ( \imp ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortBExp ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortStateCell ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortGeneratedCounterCell ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortBExp ) \top ) ) ) ) ) ( \kore-valid \kore-sort-SortGeneratedTopCell ( \kore-rewrites \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-equals \kore-sort-SortBool \kore-sort-SortGeneratedTopCell ( \kore-symbol-Lbl'Unds'andBool'Unds' ( \kore-dv \kore-sort-SortBool "true" ) ( \kore-symbol-LblnotBool'Unds' ( \kore-symbol-LblisKResult ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortBExp \kore-sort-SortKItem kore-element-var-VE0 ) \kore-symbol-dotk ) ) ) ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortBExp \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsAnd-And-UndsUnds'IMP-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp kore-element-var-VE0 kore-element-var-VE4 ) ) kore-element-var-VE2 ) ) kore-element-var-VE1 ) kore-element-var-VE3 ) ) ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortBExp \kore-sort-SortKItem kore-element-var-VE0 ) ( \kore-symbol-kseq ( \kore-symbol-Lbl'Hash'freezer'UndsAnd-And-UndsUnds'IMP-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortBExp \kore-sort-SortKItem kore-element-var-VE4 ) \kore-symbol-dotk ) ) kore-element-var-VE2 ) ) ) kore-element-var-VE1 ) kore-element-var-VE3 ) ) ) ) ) $.

IMP-axiom-2857 $a |- ( \imp ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortStateCell ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortBool ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortBExp ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortGeneratedCounterCell ) \top ) ) ) ) ) ( \kore-valid \kore-sort-SortGeneratedTopCell ( \kore-rewrites \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-equals \kore-sort-SortBool \kore-sort-SortGeneratedTopCell kore-element-var-VE1 ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortBExp \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsAnd-And-UndsUnds'IMP-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp ( \kore-inj \kore-sort-SortBool \kore-sort-SortBExp kore-element-var-VE1 ) kore-element-var-VE2 ) ) kore-element-var-VE3 ) ) kore-element-var-VE0 ) kore-element-var-VE4 ) ) ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortBExp \kore-sort-SortKItem kore-element-var-VE2 ) kore-element-var-VE3 ) ) kore-element-var-VE0 ) kore-element-var-VE4 ) ) ) ) ) $.

IMP-axiom-2858 $a |- ( \imp ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortBool ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortStateCell ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortGeneratedCounterCell ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortBExp ) \top ) ) ) ) ) ( \kore-valid \kore-sort-SortGeneratedTopCell ( \kore-rewrites \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-equals \kore-sort-SortBool \kore-sort-SortGeneratedTopCell ( \kore-symbol-LblnotBool'Unds' kore-element-var-VE0 ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortBExp \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsAnd-And-UndsUnds'IMP-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp ( \kore-inj \kore-sort-SortBool \kore-sort-SortBExp kore-element-var-VE0 ) kore-element-var-VE4 ) ) kore-element-var-VE2 ) ) kore-element-var-VE1 ) kore-element-var-VE3 ) ) ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortBool \kore-sort-SortKItem ( \kore-dv \kore-sort-SortBool "false" ) ) kore-element-var-VE2 ) ) kore-element-var-VE1 ) kore-element-var-VE3 ) ) ) ) ) $.

IMP-axiom-2859 $a |- ( \imp ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortAExp ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortStateCell ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortGeneratedCounterCell ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortAExp ) \top ) ) ) ) ) ( \kore-valid \kore-sort-SortGeneratedTopCell ( \kore-rewrites \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-equals \kore-sort-SortBool \kore-sort-SortGeneratedTopCell ( \kore-symbol-Lbl'Unds'andBool'Unds' ( \kore-dv \kore-sort-SortBool "true" ) ( \kore-symbol-LblnotBool'Unds' ( \kore-symbol-LblisKResult ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem kore-element-var-VE0 ) \kore-symbol-dotk ) ) ) ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp kore-element-var-VE0 kore-element-var-VE4 ) ) kore-element-var-VE2 ) ) kore-element-var-VE1 ) kore-element-var-VE3 ) ) ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem kore-element-var-VE0 ) ( \kore-symbol-kseq ( \kore-symbol-Lbl'Hash'freezer'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem kore-element-var-VE4 ) \kore-symbol-dotk ) ) kore-element-var-VE2 ) ) ) kore-element-var-VE1 ) kore-element-var-VE3 ) ) ) ) ) $.

IMP-axiom-2860 $a |- ( \imp ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortAExp ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortAExp ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortStateCell ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortGeneratedCounterCell ) \top ) ) ) ) ) ( \kore-valid \kore-sort-SortGeneratedTopCell ( \kore-rewrites \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-equals \kore-sort-SortBool \kore-sort-SortGeneratedTopCell ( \kore-symbol-Lbl'Unds'andBool'Unds' ( \kore-symbol-Lbl'Unds'andBool'Unds' ( \kore-symbol-LblisKResult ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem kore-element-var-VE0 ) \kore-symbol-dotk ) ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-symbol-LblnotBool'Unds' ( \kore-symbol-LblisKResult ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem kore-element-var-VE1 ) \kore-symbol-dotk ) ) ) ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp kore-element-var-VE0 kore-element-var-VE1 ) ) kore-element-var-VE3 ) ) kore-element-var-VE2 ) kore-element-var-VE4 ) ) ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem kore-element-var-VE1 ) ( \kore-symbol-kseq ( \kore-symbol-Lbl'Hash'freezer'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem kore-element-var-VE0 ) \kore-symbol-dotk ) ) kore-element-var-VE3 ) ) ) kore-element-var-VE2 ) kore-element-var-VE4 ) ) ) ) ) $.

IMP-axiom-2861 $a |- ( \imp ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortStateCell ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortGeneratedCounterCell ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortK ) \top ) ) ) ) ) ( \kore-valid \kore-sort-SortGeneratedTopCell ( \kore-rewrites \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp kore-element-var-VE1 ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp kore-element-var-VE3 ) ) ) kore-element-var-VE4 ) ) kore-element-var-VE0 ) kore-element-var-VE2 ) ) ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortInt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsStar'Int'Unds' kore-element-var-VE1 kore-element-var-VE3 ) ) kore-element-var-VE4 ) ) kore-element-var-VE0 ) kore-element-var-VE2 ) ) ) ) ) $.

IMP-axiom-2862 $a |- ( \imp ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortAExp ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortStateCell ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortGeneratedCounterCell ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortAExp ) \top ) ) ) ) ) ( \kore-valid \kore-sort-SortGeneratedTopCell ( \kore-rewrites \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-equals \kore-sort-SortBool \kore-sort-SortGeneratedTopCell ( \kore-symbol-Lbl'Unds'andBool'Unds' ( \kore-dv \kore-sort-SortBool "true" ) ( \kore-symbol-LblnotBool'Unds' ( \kore-symbol-LblisKResult ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem kore-element-var-VE0 ) \kore-symbol-dotk ) ) ) ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp kore-element-var-VE0 kore-element-var-VE4 ) ) kore-element-var-VE2 ) ) kore-element-var-VE1 ) kore-element-var-VE3 ) ) ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem kore-element-var-VE0 ) ( \kore-symbol-kseq ( \kore-symbol-Lbl'Hash'freezer'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem kore-element-var-VE4 ) \kore-symbol-dotk ) ) kore-element-var-VE2 ) ) ) kore-element-var-VE1 ) kore-element-var-VE3 ) ) ) ) ) $.

IMP-axiom-2863 $a |- ( \imp ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortAExp ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortAExp ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortStateCell ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortGeneratedCounterCell ) \top ) ) ) ) ) ( \kore-valid \kore-sort-SortGeneratedTopCell ( \kore-rewrites \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-equals \kore-sort-SortBool \kore-sort-SortGeneratedTopCell ( \kore-symbol-Lbl'Unds'andBool'Unds' ( \kore-symbol-Lbl'Unds'andBool'Unds' ( \kore-symbol-LblisKResult ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem kore-element-var-VE0 ) \kore-symbol-dotk ) ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-symbol-LblnotBool'Unds' ( \kore-symbol-LblisKResult ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem kore-element-var-VE1 ) \kore-symbol-dotk ) ) ) ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp kore-element-var-VE0 kore-element-var-VE1 ) ) kore-element-var-VE3 ) ) kore-element-var-VE2 ) kore-element-var-VE4 ) ) ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem kore-element-var-VE1 ) ( \kore-symbol-kseq ( \kore-symbol-Lbl'Hash'freezer'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem kore-element-var-VE0 ) \kore-symbol-dotk ) ) kore-element-var-VE3 ) ) ) kore-element-var-VE2 ) kore-element-var-VE4 ) ) ) ) ) $.

IMP-axiom-2864 $a |- ( \imp ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortStateCell ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortGeneratedCounterCell ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortK ) \top ) ) ) ) ) ( \kore-valid \kore-sort-SortGeneratedTopCell ( \kore-rewrites \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp kore-element-var-VE1 ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp kore-element-var-VE3 ) ) ) kore-element-var-VE4 ) ) kore-element-var-VE0 ) kore-element-var-VE2 ) ) ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortInt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsPlus'Int'Unds' kore-element-var-VE1 kore-element-var-VE3 ) ) kore-element-var-VE4 ) ) kore-element-var-VE0 ) kore-element-var-VE2 ) ) ) ) ) $.

IMP-axiom-2865 $a |- ( \imp ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortAExp ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortStateCell ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortGeneratedCounterCell ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortAExp ) \top ) ) ) ) ) ( \kore-valid \kore-sort-SortGeneratedTopCell ( \kore-rewrites \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-equals \kore-sort-SortBool \kore-sort-SortGeneratedTopCell ( \kore-symbol-Lbl'Unds'andBool'Unds' ( \kore-dv \kore-sort-SortBool "true" ) ( \kore-symbol-LblnotBool'Unds' ( \kore-symbol-LblisKResult ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem kore-element-var-VE0 ) \kore-symbol-dotk ) ) ) ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp kore-element-var-VE0 kore-element-var-VE4 ) ) kore-element-var-VE2 ) ) kore-element-var-VE1 ) kore-element-var-VE3 ) ) ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem kore-element-var-VE0 ) ( \kore-symbol-kseq ( \kore-symbol-Lbl'Hash'freezer'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem kore-element-var-VE4 ) \kore-symbol-dotk ) ) kore-element-var-VE2 ) ) ) kore-element-var-VE1 ) kore-element-var-VE3 ) ) ) ) ) $.

IMP-axiom-2866 $a |- ( \imp ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortAExp ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortAExp ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortStateCell ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortGeneratedCounterCell ) \top ) ) ) ) ) ( \kore-valid \kore-sort-SortGeneratedTopCell ( \kore-rewrites \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-equals \kore-sort-SortBool \kore-sort-SortGeneratedTopCell ( \kore-symbol-Lbl'Unds'andBool'Unds' ( \kore-symbol-Lbl'Unds'andBool'Unds' ( \kore-symbol-LblisKResult ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem kore-element-var-VE0 ) \kore-symbol-dotk ) ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-symbol-LblnotBool'Unds' ( \kore-symbol-LblisKResult ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem kore-element-var-VE1 ) \kore-symbol-dotk ) ) ) ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp kore-element-var-VE0 kore-element-var-VE1 ) ) kore-element-var-VE3 ) ) kore-element-var-VE2 ) kore-element-var-VE4 ) ) ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem kore-element-var-VE1 ) ( \kore-symbol-kseq ( \kore-symbol-Lbl'Hash'freezer'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem kore-element-var-VE0 ) \kore-symbol-dotk ) ) kore-element-var-VE3 ) ) ) kore-element-var-VE2 ) kore-element-var-VE4 ) ) ) ) ) $.

IMP-axiom-2867 $a |- ( \imp ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortStateCell ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortGeneratedCounterCell ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortK ) \top ) ) ) ) ) ( \kore-valid \kore-sort-SortGeneratedTopCell ( \kore-rewrites \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-equals \kore-sort-SortBool \kore-sort-SortGeneratedTopCell ( \kore-symbol-Lbl'UndsEqlsSlshEqls'Int'Unds' kore-element-var-VE3 ( \kore-dv \kore-sort-SortInt "0" ) ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp kore-element-var-VE1 ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp kore-element-var-VE3 ) ) ) kore-element-var-VE4 ) ) kore-element-var-VE0 ) kore-element-var-VE2 ) ) ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortInt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsSlsh'Int'Unds' kore-element-var-VE1 kore-element-var-VE3 ) ) kore-element-var-VE4 ) ) kore-element-var-VE0 ) kore-element-var-VE2 ) ) ) ) ) $.

IMP-axiom-2868 $a |- ( \imp ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortAExp ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortStateCell ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortGeneratedCounterCell ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortAExp ) \top ) ) ) ) ) ( \kore-valid \kore-sort-SortGeneratedTopCell ( \kore-rewrites \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-equals \kore-sort-SortBool \kore-sort-SortGeneratedTopCell ( \kore-symbol-Lbl'Unds'andBool'Unds' ( \kore-dv \kore-sort-SortBool "true" ) ( \kore-symbol-LblnotBool'Unds' ( \kore-symbol-LblisKResult ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem kore-element-var-VE0 ) \kore-symbol-dotk ) ) ) ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortBExp \kore-sort-SortKItem ( \kore-symbol-Lbl'Unds-LT-EqlsUndsUnds'IMP-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp kore-element-var-VE0 kore-element-var-VE4 ) ) kore-element-var-VE2 ) ) kore-element-var-VE1 ) kore-element-var-VE3 ) ) ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem kore-element-var-VE0 ) ( \kore-symbol-kseq ( \kore-symbol-Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'IMP-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem kore-element-var-VE4 ) \kore-symbol-dotk ) ) kore-element-var-VE2 ) ) ) kore-element-var-VE1 ) kore-element-var-VE3 ) ) ) ) ) $.

IMP-axiom-2869 $a |- ( \imp ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortAExp ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortAExp ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortStateCell ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortGeneratedCounterCell ) \top ) ) ) ) ) ( \kore-valid \kore-sort-SortGeneratedTopCell ( \kore-rewrites \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-equals \kore-sort-SortBool \kore-sort-SortGeneratedTopCell ( \kore-symbol-Lbl'Unds'andBool'Unds' ( \kore-symbol-Lbl'Unds'andBool'Unds' ( \kore-symbol-LblisKResult ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem kore-element-var-VE0 ) \kore-symbol-dotk ) ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-symbol-LblnotBool'Unds' ( \kore-symbol-LblisKResult ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem kore-element-var-VE1 ) \kore-symbol-dotk ) ) ) ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortBExp \kore-sort-SortKItem ( \kore-symbol-Lbl'Unds-LT-EqlsUndsUnds'IMP-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp kore-element-var-VE0 kore-element-var-VE1 ) ) kore-element-var-VE3 ) ) kore-element-var-VE2 ) kore-element-var-VE4 ) ) ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem kore-element-var-VE1 ) ( \kore-symbol-kseq ( \kore-symbol-Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'IMP-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem kore-element-var-VE0 ) \kore-symbol-dotk ) ) kore-element-var-VE3 ) ) ) kore-element-var-VE2 ) kore-element-var-VE4 ) ) ) ) ) $.

IMP-axiom-2870 $a |- ( \imp ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortStateCell ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortGeneratedCounterCell ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortK ) \top ) ) ) ) ) ( \kore-valid \kore-sort-SortGeneratedTopCell ( \kore-rewrites \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortBExp \kore-sort-SortKItem ( \kore-symbol-Lbl'Unds-LT-EqlsUndsUnds'IMP-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp kore-element-var-VE1 ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp kore-element-var-VE3 ) ) ) kore-element-var-VE4 ) ) kore-element-var-VE0 ) kore-element-var-VE2 ) ) ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortBool \kore-sort-SortKItem ( \kore-symbol-Lbl'Unds-LT-Eqls'Int'Unds' kore-element-var-VE1 kore-element-var-VE3 ) ) kore-element-var-VE4 ) ) kore-element-var-VE0 ) kore-element-var-VE2 ) ) ) ) ) $.

IMP-axiom-2871 $a |- ( \imp ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortId ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortAExp ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortStateCell ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortGeneratedCounterCell ) \top ) ) ) ) ) ( \kore-valid \kore-sort-SortGeneratedTopCell ( \kore-rewrites \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-equals \kore-sort-SortBool \kore-sort-SortGeneratedTopCell ( \kore-symbol-Lbl'Unds'andBool'Unds' ( \kore-dv \kore-sort-SortBool "true" ) ( \kore-symbol-LblnotBool'Unds' ( \kore-symbol-LblisKResult ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem kore-element-var-VE1 ) \kore-symbol-dotk ) ) ) ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp kore-element-var-VE0 kore-element-var-VE1 ) ) kore-element-var-VE3 ) ) kore-element-var-VE2 ) kore-element-var-VE4 ) ) ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem kore-element-var-VE1 ) ( \kore-symbol-kseq ( \kore-symbol-Lbl'Hash'freezer'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp1'Unds' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem kore-element-var-VE0 ) \kore-symbol-dotk ) ) kore-element-var-VE3 ) ) ) kore-element-var-VE2 ) kore-element-var-VE4 ) ) ) ) ) $.

IMP-axiom-2872 $a |- ( \imp ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortId ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortMap ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortKItem ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE5 \kore-sort-SortGeneratedCounterCell ) \top ) ) ) ) ) ) ( \kore-valid \kore-sort-SortGeneratedTopCell ( \kore-rewrites \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp kore-element-var-VE0 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp kore-element-var-VE4 ) ) ) kore-element-var-VE3 ) ) ( \kore-symbol-Lbl'-LT-'state'-GT-' ( \kore-symbol-Lbl'Unds'Map'Unds' ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem kore-element-var-VE0 ) kore-element-var-VE2 ) kore-element-var-VE1 ) ) ) kore-element-var-VE5 ) ) ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' kore-element-var-VE3 ) ( \kore-symbol-Lbl'-LT-'state'-GT-' ( \kore-symbol-Lbl'Unds'Map'Unds' ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem kore-element-var-VE0 ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortKItem kore-element-var-VE4 ) ) kore-element-var-VE1 ) ) ) kore-element-var-VE5 ) ) ) ) ) $.

IMP-axiom-2873 $a |- ( \imp ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortStateCell ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortStmt ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortStmt ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortGeneratedCounterCell ) \top ) ) ) ) ) ( \kore-valid \kore-sort-SortGeneratedTopCell ( \kore-rewrites \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsUndsUnds'IMP-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt kore-element-var-VE3 kore-element-var-VE2 ) ) kore-element-var-VE1 ) ) kore-element-var-VE0 ) kore-element-var-VE4 ) ) ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem kore-element-var-VE3 ) ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem kore-element-var-VE2 ) kore-element-var-VE1 ) ) ) kore-element-var-VE0 ) kore-element-var-VE4 ) ) ) ) ) $.

IMP-axiom-2874 $a |- ( \imp ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortBlock ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortBExp ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortStateCell ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortBlock ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortGeneratedCounterCell ) ( \and ( \in-sort kore-element-var-VE5 \kore-sort-SortK ) \top ) ) ) ) ) ) ( \kore-valid \kore-sort-SortGeneratedTopCell ( \kore-rewrites \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-equals \kore-sort-SortBool \kore-sort-SortGeneratedTopCell ( \kore-symbol-Lbl'Unds'andBool'Unds' ( \kore-dv \kore-sort-SortBool "true" ) ( \kore-symbol-LblnotBool'Unds' ( \kore-symbol-LblisKResult ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortBExp \kore-sort-SortKItem kore-element-var-VE1 ) \kore-symbol-dotk ) ) ) ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lblif'LParUndsRParUnds'else'UndsUnds'IMP-SYNTAX'Unds'Stmt'Unds'BExp'Unds'Block'Unds'Block kore-element-var-VE1 kore-element-var-VE0 kore-element-var-VE3 ) ) kore-element-var-VE5 ) ) kore-element-var-VE2 ) kore-element-var-VE4 ) ) ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortBExp \kore-sort-SortKItem kore-element-var-VE1 ) ( \kore-symbol-kseq ( \kore-symbol-Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'IMP-SYNTAX'Unds'Stmt'Unds'BExp'Unds'Block'Unds'Block0'Unds' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortBlock \kore-sort-SortKItem kore-element-var-VE0 ) \kore-symbol-dotk ) ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortBlock \kore-sort-SortKItem kore-element-var-VE3 ) \kore-symbol-dotk ) ) kore-element-var-VE5 ) ) ) kore-element-var-VE2 ) kore-element-var-VE4 ) ) ) ) ) $.

IMP-axiom-2875 $a |- ( \imp ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortStateCell ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortBlock ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortGeneratedCounterCell ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortBlock ) \top ) ) ) ) ) ( \kore-valid \kore-sort-SortGeneratedTopCell ( \kore-rewrites \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lblif'LParUndsRParUnds'else'UndsUnds'IMP-SYNTAX'Unds'Stmt'Unds'BExp'Unds'Block'Unds'Block ( \kore-inj \kore-sort-SortBool \kore-sort-SortBExp ( \kore-dv \kore-sort-SortBool "false" ) ) kore-element-var-VE1 kore-element-var-VE4 ) ) kore-element-var-VE2 ) ) kore-element-var-VE0 ) kore-element-var-VE3 ) ) ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortBlock \kore-sort-SortKItem kore-element-var-VE4 ) kore-element-var-VE2 ) ) kore-element-var-VE0 ) kore-element-var-VE3 ) ) ) ) ) $.

IMP-axiom-2876 $a |- ( \imp ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortStateCell ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortBlock ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortGeneratedCounterCell ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortBlock ) \top ) ) ) ) ) ( \kore-valid \kore-sort-SortGeneratedTopCell ( \kore-rewrites \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lblif'LParUndsRParUnds'else'UndsUnds'IMP-SYNTAX'Unds'Stmt'Unds'BExp'Unds'Block'Unds'Block ( \kore-inj \kore-sort-SortBool \kore-sort-SortBExp ( \kore-dv \kore-sort-SortBool "true" ) ) kore-element-var-VE4 kore-element-var-VE1 ) ) kore-element-var-VE2 ) ) kore-element-var-VE0 ) kore-element-var-VE3 ) ) ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortBlock \kore-sort-SortKItem kore-element-var-VE4 ) kore-element-var-VE2 ) ) kore-element-var-VE0 ) kore-element-var-VE3 ) ) ) ) ) $.

IMP-axiom-2877 $a |- ( \imp ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortStateCell ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortGeneratedCounterCell ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortStmt ) \top ) ) ) ) ( \kore-valid \kore-sort-SortGeneratedTopCell ( \kore-rewrites \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids kore-element-var-VE3 ) ) kore-element-var-VE1 ) ) kore-element-var-VE0 ) kore-element-var-VE2 ) ) ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem kore-element-var-VE3 ) kore-element-var-VE1 ) ) kore-element-var-VE0 ) kore-element-var-VE2 ) ) ) ) ) $.

IMP-axiom-2878 $a |- ( \imp ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortIds ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortId ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortStmt ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortGeneratedCounterCell ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortMap ) \top ) ) ) ) ) ( \kore-valid \kore-sort-SortGeneratedTopCell ( \kore-rewrites \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids kore-element-var-VE1 kore-element-var-VE0 ) kore-element-var-VE2 ) ) \kore-symbol-dotk ) ) ( \kore-symbol-Lbl'-LT-'state'-GT-' ( \kore-symbol-Lbl'Unds'Map'Unds' kore-element-var-VE4 \kore-symbol-Lbl'Stop'Map ) ) ) kore-element-var-VE3 ) ) ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt kore-element-var-VE0 kore-element-var-VE2 ) ) \kore-symbol-dotk ) ) ( \kore-symbol-Lbl'-LT-'state'-GT-' ( \kore-symbol-Lbl'Unds'Map'Unds' kore-element-var-VE4 ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem kore-element-var-VE1 ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortKItem ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) kore-element-var-VE3 ) ) ) ) ) $.

IMP-axiom-2879 $a |- ( \imp ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortStateCell ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortGeneratedCounterCell ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortStmt ) \top ) ) ) ) ( \kore-valid \kore-sort-SortGeneratedTopCell ( \kore-rewrites \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortBlock \kore-sort-SortKItem ( \kore-symbol-Lbl'LBraUndsRBraUnds'IMP-SYNTAX'Unds'Block'Unds'Stmt kore-element-var-VE3 ) ) kore-element-var-VE1 ) ) kore-element-var-VE0 ) kore-element-var-VE2 ) ) ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem kore-element-var-VE3 ) kore-element-var-VE1 ) ) kore-element-var-VE0 ) kore-element-var-VE2 ) ) ) ) ) $.

IMP-axiom-2880 $a |- ( \imp ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortStateCell ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortGeneratedCounterCell ) \top ) ) ) ( \kore-valid \kore-sort-SortGeneratedTopCell ( \kore-rewrites \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortBlock \kore-sort-SortKItem \kore-symbol-Lbl'LBraRBraUnds'IMP-SYNTAX'Unds'Block ) kore-element-var-VE1 ) ) kore-element-var-VE0 ) kore-element-var-VE2 ) ) ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' kore-element-var-VE1 ) kore-element-var-VE0 ) kore-element-var-VE2 ) ) ) ) ) $.

IMP-axiom-2881 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortBool ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortBool kore-sort-var-R kore-element-var-VE0 ( \kore-dv \kore-sort-SortBool "false" ) ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortString kore-sort-var-R ( \kore-symbol-LblBool2String'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Bool kore-element-var-VE0 ) ( \kore-dv \kore-sort-SortString "false" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-2882 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortBool ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortBool kore-sort-var-R kore-element-var-VE0 ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortString kore-sort-var-R ( \kore-symbol-LblBool2String'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Bool kore-element-var-VE0 ) ( \kore-dv \kore-sort-SortString "true" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-2883 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortString ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortString kore-sort-var-R kore-element-var-VE0 ( \kore-dv \kore-sort-SortString "false" ) ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblString2Bool'LParUndsRParUnds'STRING-COMMON'Unds'Bool'Unds'String kore-element-var-VE0 ) ( \kore-dv \kore-sort-SortBool "false" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-2884 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortString ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortString kore-sort-var-R kore-element-var-VE0 ( \kore-dv \kore-sort-SortString "true" ) ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblString2Bool'LParUndsRParUnds'STRING-COMMON'Unds'Bool'Unds'String kore-element-var-VE0 ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-2885 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortInt ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-Lbl'Unds'andBool'Unds' ( \kore-symbol-Lbl'Unds-LT-Eqls'Int'Unds' ( \kore-dv \kore-sort-SortInt "0" ) kore-element-var-VE1 ) ( \kore-symbol-Lbl'Unds-LT-'Int'Unds' kore-element-var-VE1 kore-element-var-VE0 ) ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortInt kore-sort-var-R ( \kore-symbol-Lbl'UndsPerc'Int'Unds' kore-element-var-VE1 kore-element-var-VE0 ) kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-2886 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortInt ) \top ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortInt kore-sort-var-R ( \kore-symbol-Lbl'UndsAnd-'Int'Unds' kore-element-var-VE1 ( \kore-symbol-Lbl'UndsAnd-'Int'Unds' kore-element-var-VE0 kore-element-var-VE2 ) ) ( \kore-symbol-Lbl'UndsAnd-'Int'Unds' ( \kore-symbol-Lbl'UndsAnd-'Int'Unds' kore-element-var-VE1 kore-element-var-VE0 ) kore-element-var-VE2 ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-2887 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortInt ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortInt kore-sort-var-R ( \kore-symbol-Lbl'UndsPlus'Int'Unds' kore-element-var-VE1 kore-element-var-VE0 ) ( \kore-symbol-Lbl'UndsPlus'Int'Unds' kore-element-var-VE0 kore-element-var-VE1 ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-2888 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortInt ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortInt kore-sort-var-R ( \kore-symbol-Lbl'UndsPlus'Int'Unds' kore-element-var-VE0 ( \kore-dv \kore-sort-SortInt "0" ) ) kore-element-var-VE0 ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-2889 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortInt ) \top ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortInt kore-sort-var-R ( \kore-symbol-Lbl'UndsPlus'Int'Unds' kore-element-var-VE2 ( \kore-symbol-Lbl'UndsPlus'Int'Unds' kore-element-var-VE0 kore-element-var-VE1 ) ) ( \kore-symbol-Lbl'UndsPlus'Int'Unds' kore-element-var-VE0 ( \kore-symbol-Lbl'UndsPlus'Int'Unds' kore-element-var-VE2 kore-element-var-VE1 ) ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-2890 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortInt ) \top ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortInt kore-sort-var-R ( \kore-symbol-Lbl'UndsPlus'Int'Unds' kore-element-var-VE1 ( \kore-symbol-Lbl'UndsPlus'Int'Unds' kore-element-var-VE0 kore-element-var-VE2 ) ) ( \kore-symbol-Lbl'UndsPlus'Int'Unds' ( \kore-symbol-Lbl'UndsPlus'Int'Unds' kore-element-var-VE1 kore-element-var-VE0 ) kore-element-var-VE2 ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-2891 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortInt ) \top ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortInt kore-sort-var-R ( \kore-symbol-Lbl'UndsPlus'Int'Unds' kore-element-var-VE1 ( \kore-symbol-Lbl'Unds'-Int'Unds' kore-element-var-VE0 kore-element-var-VE2 ) ) ( \kore-symbol-Lbl'Unds'-Int'Unds' ( \kore-symbol-Lbl'UndsPlus'Int'Unds' kore-element-var-VE1 kore-element-var-VE0 ) kore-element-var-VE2 ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-2892 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortInt ) \top ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortInt kore-sort-var-R ( \kore-symbol-Lbl'UndsPlus'Int'Unds' ( \kore-symbol-Lbl'UndsPlus'Int'Unds' kore-element-var-VE2 kore-element-var-VE0 ) kore-element-var-VE1 ) ( \kore-symbol-Lbl'UndsPlus'Int'Unds' kore-element-var-VE2 ( \kore-symbol-Lbl'UndsPlus'Int'Unds' kore-element-var-VE0 kore-element-var-VE1 ) ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-2893 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortInt ) \top ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortInt kore-sort-var-R ( \kore-symbol-Lbl'UndsPlus'Int'Unds' ( \kore-symbol-Lbl'Unds'-Int'Unds' kore-element-var-VE2 kore-element-var-VE0 ) kore-element-var-VE1 ) ( \kore-symbol-Lbl'Unds'-Int'Unds' ( \kore-symbol-Lbl'UndsPlus'Int'Unds' kore-element-var-VE2 kore-element-var-VE1 ) kore-element-var-VE0 ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-2894 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortInt ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortInt kore-sort-var-R ( \kore-symbol-Lbl'Unds'-Int'Unds' kore-element-var-VE1 kore-element-var-VE0 ) ( \kore-symbol-Lbl'UndsPlus'Int'Unds' kore-element-var-VE1 ( \kore-symbol-Lbl'Unds'-Int'Unds' ( \kore-dv \kore-sort-SortInt "0" ) kore-element-var-VE0 ) ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-2895 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortInt ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortInt kore-sort-var-R ( \kore-symbol-Lbl'Unds'-Int'Unds' kore-element-var-VE0 ( \kore-dv \kore-sort-SortInt "0" ) ) kore-element-var-VE0 ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-2896 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortInt ) \top ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortInt kore-sort-var-R ( \kore-symbol-Lbl'Unds'-Int'Unds' kore-element-var-VE2 ( \kore-symbol-Lbl'UndsPlus'Int'Unds' kore-element-var-VE0 kore-element-var-VE1 ) ) ( \kore-symbol-Lbl'Unds'-Int'Unds' ( \kore-symbol-Lbl'Unds'-Int'Unds' kore-element-var-VE2 kore-element-var-VE1 ) kore-element-var-VE0 ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-2897 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortInt ) \top ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortInt kore-sort-var-R ( \kore-symbol-Lbl'Unds'-Int'Unds' kore-element-var-VE1 ( \kore-symbol-Lbl'UndsPlus'Int'Unds' kore-element-var-VE0 kore-element-var-VE2 ) ) ( \kore-symbol-Lbl'Unds'-Int'Unds' ( \kore-symbol-Lbl'Unds'-Int'Unds' kore-element-var-VE1 kore-element-var-VE0 ) kore-element-var-VE2 ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-2898 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortInt ) \top ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortInt kore-sort-var-R ( \kore-symbol-Lbl'Unds'-Int'Unds' kore-element-var-VE1 ( \kore-symbol-Lbl'Unds'-Int'Unds' kore-element-var-VE0 kore-element-var-VE2 ) ) ( \kore-symbol-Lbl'UndsPlus'Int'Unds' ( \kore-symbol-Lbl'Unds'-Int'Unds' kore-element-var-VE1 kore-element-var-VE0 ) kore-element-var-VE2 ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-2899 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortInt ) \top ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortInt kore-sort-var-R ( \kore-symbol-Lbl'Unds'-Int'Unds' ( \kore-symbol-Lbl'Unds'-Int'Unds' kore-element-var-VE2 kore-element-var-VE0 ) kore-element-var-VE1 ) ( \kore-symbol-Lbl'Unds'-Int'Unds' kore-element-var-VE2 ( \kore-symbol-Lbl'UndsPlus'Int'Unds' kore-element-var-VE0 kore-element-var-VE1 ) ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-2900 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortInt ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortInt kore-sort-var-R ( \kore-symbol-Lbl'Unds-LT--LT-'Int'Unds' kore-element-var-VE0 ( \kore-dv \kore-sort-SortInt "0" ) ) kore-element-var-VE0 ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-2901 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortInt ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortInt kore-sort-var-R ( \kore-symbol-Lbl'Unds-LT--LT-'Int'Unds' ( \kore-dv \kore-sort-SortInt "0" ) kore-element-var-VE0 ) ( \kore-dv \kore-sort-SortInt "0" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-2902 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortString ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortString ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortString ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortString ) \top ) ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortString kore-sort-var-R kore-element-var-VE0 kore-element-var-VE3 ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortString kore-sort-var-R kore-element-var-VE1 kore-element-var-VE2 ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-Lbl'Unds-LT-Eqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String kore-element-var-VE0 kore-element-var-VE1 ) ( \kore-symbol-LblnotBool'Unds' ( \kore-symbol-Lbl'Unds-LT-'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String kore-element-var-VE2 kore-element-var-VE3 ) ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-2903 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortBool ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortBool ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortBool ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortBool ) \top ) ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortBool kore-sort-var-R kore-element-var-VE0 kore-element-var-VE3 ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortBool kore-sort-var-R kore-element-var-VE2 kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-Lbl'UndsEqlsSlshEqls'Bool'Unds' kore-element-var-VE0 kore-element-var-VE2 ) ( \kore-symbol-LblnotBool'Unds' ( \kore-symbol-Lbl'UndsEqlsEqls'Bool'Unds' kore-element-var-VE3 kore-element-var-VE1 ) ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-2904 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortInt ) \top ) ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortInt kore-sort-var-R kore-element-var-VE0 kore-element-var-VE1 ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortInt kore-sort-var-R kore-element-var-VE2 kore-element-var-VE3 ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-Lbl'UndsEqlsSlshEqls'Int'Unds' kore-element-var-VE0 kore-element-var-VE2 ) ( \kore-symbol-LblnotBool'Unds' ( \kore-symbol-Lbl'UndsEqlsEqls'Int'Unds' kore-element-var-VE1 kore-element-var-VE3 ) ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-2905 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortK ) \top ) ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 kore-element-var-VE3 ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE2 kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-Lbl'UndsEqlsSlshEqls'K'Unds' kore-element-var-VE0 kore-element-var-VE2 ) ( \kore-symbol-LblnotBool'Unds' ( \kore-symbol-Lbl'UndsEqlsEqls'K'Unds' kore-element-var-VE3 kore-element-var-VE1 ) ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-2906 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortString ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortString ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortString ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortString ) \top ) ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortString kore-sort-var-R kore-element-var-VE0 kore-element-var-VE3 ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortString kore-sort-var-R kore-element-var-VE1 kore-element-var-VE2 ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-Lbl'UndsEqlsSlshEqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String kore-element-var-VE0 kore-element-var-VE1 ) ( \kore-symbol-LblnotBool'Unds' ( \kore-symbol-Lbl'UndsEqlsEqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String kore-element-var-VE3 kore-element-var-VE2 ) ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-2907 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortInt ) \top ) ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortInt \kore-sort-SortKItem kore-element-var-VE1 ) \kore-symbol-dotk ) ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE2 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortInt \kore-sort-SortKItem kore-element-var-VE3 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-Lbl'UndsEqlsEqls'K'Unds' kore-element-var-VE0 kore-element-var-VE2 ) ( \kore-symbol-Lbl'UndsEqlsEqls'Int'Unds' kore-element-var-VE1 kore-element-var-VE3 ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-2908 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortBool ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortBool ) \top ) ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortBool \kore-sort-SortKItem kore-element-var-VE3 ) \kore-symbol-dotk ) ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE2 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortBool \kore-sort-SortKItem kore-element-var-VE1 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-Lbl'UndsEqlsEqls'K'Unds' kore-element-var-VE0 kore-element-var-VE2 ) ( \kore-symbol-Lbl'UndsEqlsEqls'Bool'Unds' kore-element-var-VE3 kore-element-var-VE1 ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-2909 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortString ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortString ) \top ) ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortString \kore-sort-SortKItem kore-element-var-VE3 ) \kore-symbol-dotk ) ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE1 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortString \kore-sort-SortKItem kore-element-var-VE2 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-Lbl'UndsEqlsEqls'K'Unds' kore-element-var-VE0 kore-element-var-VE1 ) ( \kore-symbol-Lbl'UndsEqlsEqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String kore-element-var-VE3 kore-element-var-VE2 ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-2910 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortString ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortString ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortString ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortString ) \top ) ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortString kore-sort-var-R kore-element-var-VE0 kore-element-var-VE3 ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortString kore-sort-var-R kore-element-var-VE1 kore-element-var-VE2 ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-Lbl'Unds-GT-Eqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String kore-element-var-VE0 kore-element-var-VE1 ) ( \kore-symbol-LblnotBool'Unds' ( \kore-symbol-Lbl'Unds-LT-'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String kore-element-var-VE3 kore-element-var-VE2 ) ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-2911 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortInt ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortInt kore-sort-var-R ( \kore-symbol-Lbl'Unds-GT--GT-'Int'Unds' kore-element-var-VE0 ( \kore-dv \kore-sort-SortInt "0" ) ) kore-element-var-VE0 ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-2912 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortInt ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortInt kore-sort-var-R ( \kore-symbol-Lbl'Unds-GT--GT-'Int'Unds' ( \kore-dv \kore-sort-SortInt "0" ) kore-element-var-VE0 ) ( \kore-dv \kore-sort-SortInt "0" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-2913 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortString ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortString ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortString ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortString ) \top ) ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortString kore-sort-var-R kore-element-var-VE0 kore-element-var-VE3 ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortString kore-sort-var-R kore-element-var-VE1 kore-element-var-VE2 ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-Lbl'Unds-GT-'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String kore-element-var-VE0 kore-element-var-VE1 ) ( \kore-symbol-Lbl'Unds-LT-'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String kore-element-var-VE2 kore-element-var-VE3 ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-2914 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortBool ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortBool ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortBool ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortBool ) \top ) ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortBool kore-sort-var-R kore-element-var-VE1 ( \kore-and \kore-sort-SortBool ( \kore-dv \kore-sort-SortBool "false" ) kore-element-var-VE0 ) ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortBool kore-sort-var-R kore-element-var-VE2 kore-element-var-VE3 ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-Lbl'Unds'andBool'Unds' kore-element-var-VE1 kore-element-var-VE2 ) kore-element-var-VE0 ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-2915 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortBool ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortBool ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortBool ) \top ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortBool kore-sort-var-R kore-element-var-VE1 kore-element-var-VE0 ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortBool kore-sort-var-R kore-element-var-VE2 ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-Lbl'Unds'andBool'Unds' kore-element-var-VE1 kore-element-var-VE2 ) kore-element-var-VE0 ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-2916 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortBool ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortBool ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortBool ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortBool ) \top ) ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortBool kore-sort-var-R kore-element-var-VE1 kore-element-var-VE0 ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortBool kore-sort-var-R kore-element-var-VE2 ( \kore-and \kore-sort-SortBool ( \kore-dv \kore-sort-SortBool "false" ) kore-element-var-VE3 ) ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-Lbl'Unds'andBool'Unds' kore-element-var-VE1 kore-element-var-VE2 ) kore-element-var-VE3 ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-2917 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortBool ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortBool ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortBool ) \top ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortBool kore-sort-var-R kore-element-var-VE1 ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortBool kore-sort-var-R kore-element-var-VE2 kore-element-var-VE0 ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-Lbl'Unds'andBool'Unds' kore-element-var-VE1 kore-element-var-VE2 ) kore-element-var-VE0 ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-2918 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortBool ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortBool ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortBool ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortBool ) \top ) ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortBool kore-sort-var-R kore-element-var-VE1 ( \kore-and \kore-sort-SortBool ( \kore-dv \kore-sort-SortBool "false" ) kore-element-var-VE0 ) ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortBool kore-sort-var-R kore-element-var-VE2 kore-element-var-VE3 ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-Lbl'Unds'andThenBool'Unds' kore-element-var-VE1 kore-element-var-VE2 ) kore-element-var-VE0 ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-2919 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortBool ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortBool ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortBool ) \top ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortBool kore-sort-var-R kore-element-var-VE0 kore-element-var-VE1 ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortBool kore-sort-var-R kore-element-var-VE2 ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-Lbl'Unds'andThenBool'Unds' kore-element-var-VE0 kore-element-var-VE2 ) kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-2920 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortBool ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortBool ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortBool ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortBool ) \top ) ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortBool kore-sort-var-R kore-element-var-VE1 kore-element-var-VE0 ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortBool kore-sort-var-R kore-element-var-VE2 ( \kore-and \kore-sort-SortBool ( \kore-dv \kore-sort-SortBool "false" ) kore-element-var-VE3 ) ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-Lbl'Unds'andThenBool'Unds' kore-element-var-VE1 kore-element-var-VE2 ) kore-element-var-VE3 ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-2921 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortBool ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortBool ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortBool ) \top ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortBool kore-sort-var-R kore-element-var-VE0 ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortBool kore-sort-var-R kore-element-var-VE2 kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-Lbl'Unds'andThenBool'Unds' kore-element-var-VE0 kore-element-var-VE2 ) kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-2922 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortInt ) \top ) ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-Lbl'UndsEqlsSlshEqls'Int'Unds' kore-element-var-VE3 ( \kore-dv \kore-sort-SortInt "0" ) ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortInt kore-sort-var-R kore-element-var-VE0 kore-element-var-VE1 ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortInt kore-sort-var-R kore-element-var-VE2 kore-element-var-VE3 ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortInt kore-sort-var-R ( \kore-symbol-Lbl'Unds'divInt'Unds' kore-element-var-VE0 kore-element-var-VE2 ) ( \kore-symbol-Lbl'UndsSlsh'Int'Unds' ( \kore-symbol-Lbl'Unds'-Int'Unds' kore-element-var-VE1 ( \kore-symbol-Lbl'Unds'modInt'Unds' kore-element-var-VE1 kore-element-var-VE3 ) ) kore-element-var-VE3 ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-2923 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortInt ) \top ) ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortInt kore-sort-var-R kore-element-var-VE0 kore-element-var-VE1 ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortInt kore-sort-var-R kore-element-var-VE2 kore-element-var-VE3 ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-Lbl'Unds'dividesInt'UndsUnds'INT-COMMON'Unds'Bool'Unds'Int'Unds'Int kore-element-var-VE0 kore-element-var-VE2 ) ( \kore-symbol-Lbl'UndsEqlsEqls'Int'Unds' ( \kore-symbol-Lbl'UndsPerc'Int'Unds' kore-element-var-VE3 kore-element-var-VE1 ) ( \kore-dv \kore-sort-SortInt "0" ) ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-2924 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortBool ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortBool ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortBool ) \top ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortBool kore-sort-var-R kore-element-var-VE1 kore-element-var-VE0 ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortBool kore-sort-var-R kore-element-var-VE2 ( \kore-dv \kore-sort-SortBool "false" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-Lbl'Unds'impliesBool'Unds' kore-element-var-VE1 kore-element-var-VE2 ) ( \kore-symbol-LblnotBool'Unds' kore-element-var-VE0 ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-2925 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortBool ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortBool ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortBool ) \top ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortBool kore-sort-var-R kore-element-var-VE1 kore-element-var-VE0 ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortBool kore-sort-var-R kore-element-var-VE2 ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-Lbl'Unds'impliesBool'Unds' kore-element-var-VE1 kore-element-var-VE2 ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-2926 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortBool ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortBool ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortBool ) \top ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortBool kore-sort-var-R kore-element-var-VE1 ( \kore-dv \kore-sort-SortBool "false" ) ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortBool kore-sort-var-R kore-element-var-VE2 kore-element-var-VE0 ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-Lbl'Unds'impliesBool'Unds' kore-element-var-VE1 kore-element-var-VE2 ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-2927 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortBool ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortBool ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortBool ) \top ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortBool kore-sort-var-R kore-element-var-VE1 ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortBool kore-sort-var-R kore-element-var-VE2 kore-element-var-VE0 ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-Lbl'Unds'impliesBool'Unds' kore-element-var-VE1 kore-element-var-VE2 ) kore-element-var-VE0 ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-2928 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortInt ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-Lbl'UndsEqlsSlshEqls'Int'Unds' kore-element-var-VE1 ( \kore-dv \kore-sort-SortInt "0" ) ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortInt kore-sort-var-R ( \kore-symbol-Lbl'Unds'modInt'Unds' kore-element-var-VE0 kore-element-var-VE1 ) ( \kore-symbol-Lbl'UndsPerc'Int'Unds' ( \kore-symbol-Lbl'UndsPlus'Int'Unds' ( \kore-symbol-Lbl'UndsPerc'Int'Unds' kore-element-var-VE0 ( \kore-symbol-LblabsInt'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int kore-element-var-VE1 ) ) ( \kore-symbol-LblabsInt'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int kore-element-var-VE1 ) ) ( \kore-symbol-LblabsInt'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int kore-element-var-VE1 ) ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-2929 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortInt ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-Lbl'Unds'andBool'Unds' ( \kore-symbol-Lbl'Unds-LT-Eqls'Int'Unds' ( \kore-dv \kore-sort-SortInt "0" ) kore-element-var-VE1 ) ( \kore-symbol-Lbl'Unds-LT-'Int'Unds' kore-element-var-VE1 kore-element-var-VE0 ) ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortInt kore-sort-var-R ( \kore-symbol-Lbl'Unds'modInt'Unds' kore-element-var-VE1 kore-element-var-VE0 ) kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-2930 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortBool ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortBool ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortBool ) \top ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortBool kore-sort-var-R kore-element-var-VE1 kore-element-var-VE0 ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortBool kore-sort-var-R kore-element-var-VE2 ( \kore-dv \kore-sort-SortBool "false" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-Lbl'Unds'orBool'Unds' kore-element-var-VE1 kore-element-var-VE2 ) kore-element-var-VE0 ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-2931 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortBool ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortBool ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortBool ) \top ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortBool kore-sort-var-R kore-element-var-VE1 kore-element-var-VE0 ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortBool kore-sort-var-R kore-element-var-VE2 ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-Lbl'Unds'orBool'Unds' kore-element-var-VE1 kore-element-var-VE2 ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-2932 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortBool ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortBool ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortBool ) \top ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortBool kore-sort-var-R kore-element-var-VE1 ( \kore-dv \kore-sort-SortBool "false" ) ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortBool kore-sort-var-R kore-element-var-VE2 kore-element-var-VE0 ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-Lbl'Unds'orBool'Unds' kore-element-var-VE1 kore-element-var-VE2 ) kore-element-var-VE0 ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-2933 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortBool ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortBool ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortBool ) \top ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortBool kore-sort-var-R kore-element-var-VE1 ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortBool kore-sort-var-R kore-element-var-VE2 kore-element-var-VE0 ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-Lbl'Unds'orBool'Unds' kore-element-var-VE1 kore-element-var-VE2 ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-2934 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortBool ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortBool ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortBool ) \top ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortBool kore-sort-var-R kore-element-var-VE0 kore-element-var-VE1 ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortBool kore-sort-var-R kore-element-var-VE2 ( \kore-dv \kore-sort-SortBool "false" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-Lbl'Unds'orElseBool'Unds' kore-element-var-VE0 kore-element-var-VE2 ) kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-2935 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortBool ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortBool ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortBool ) \top ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortBool kore-sort-var-R kore-element-var-VE1 kore-element-var-VE0 ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortBool kore-sort-var-R kore-element-var-VE2 ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-Lbl'Unds'orElseBool'Unds' kore-element-var-VE1 kore-element-var-VE2 ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-2936 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortBool ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortBool ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortBool ) \top ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortBool kore-sort-var-R kore-element-var-VE0 ( \kore-dv \kore-sort-SortBool "false" ) ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortBool kore-sort-var-R kore-element-var-VE2 kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-Lbl'Unds'orElseBool'Unds' kore-element-var-VE0 kore-element-var-VE2 ) kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-2937 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortBool ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortBool ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortBool ) \top ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortBool kore-sort-var-R kore-element-var-VE1 ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortBool kore-sort-var-R kore-element-var-VE2 kore-element-var-VE0 ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-Lbl'Unds'orElseBool'Unds' kore-element-var-VE1 kore-element-var-VE2 ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-2938 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortBool ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortBool ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortBool ) \top ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortBool kore-sort-var-R kore-element-var-VE1 kore-element-var-VE0 ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortBool kore-sort-var-R kore-element-var-VE2 kore-element-var-VE0 ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-Lbl'Unds'xorBool'Unds' kore-element-var-VE1 kore-element-var-VE2 ) ( \kore-dv \kore-sort-SortBool "false" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-2939 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortBool ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortBool ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortBool ) \top ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortBool kore-sort-var-R kore-element-var-VE1 kore-element-var-VE0 ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortBool kore-sort-var-R kore-element-var-VE2 ( \kore-dv \kore-sort-SortBool "false" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-Lbl'Unds'xorBool'Unds' kore-element-var-VE1 kore-element-var-VE2 ) kore-element-var-VE0 ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-2940 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortBool ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortBool ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortBool ) \top ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortBool kore-sort-var-R kore-element-var-VE1 ( \kore-dv \kore-sort-SortBool "false" ) ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortBool kore-sort-var-R kore-element-var-VE2 kore-element-var-VE0 ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-Lbl'Unds'xorBool'Unds' kore-element-var-VE1 kore-element-var-VE2 ) kore-element-var-VE0 ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-2941 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortSet ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortSet ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortSet ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortSet ) \top ) ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortSet kore-sort-var-R kore-element-var-VE0 kore-element-var-VE3 ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortSet kore-sort-var-R kore-element-var-VE1 kore-element-var-VE2 ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortSet kore-sort-var-R ( \kore-symbol-Lbl'UndsPipe'Set'UndsUnds'SET'Unds'Set'Unds'Set'Unds'Set kore-element-var-VE0 kore-element-var-VE1 ) ( \kore-symbol-Lbl'Unds'Set'Unds' kore-element-var-VE3 ( \kore-symbol-LblSet'Coln'difference kore-element-var-VE2 kore-element-var-VE3 ) ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-2942 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE5 \kore-sort-SortInt ) \top ) ) ) ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortInt kore-sort-var-R kore-element-var-VE0 kore-element-var-VE2 ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortInt kore-sort-var-R kore-element-var-VE4 kore-element-var-VE3 ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortInt kore-sort-var-R kore-element-var-VE1 kore-element-var-VE5 ) ( \kore-top kore-sort-var-R ) ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortInt kore-sort-var-R ( \kore-symbol-LblbitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int'Unds'Int kore-element-var-VE0 kore-element-var-VE4 kore-element-var-VE1 ) ( \kore-symbol-Lbl'Unds'modInt'Unds' ( \kore-symbol-Lbl'Unds-GT--GT-'Int'Unds' kore-element-var-VE2 kore-element-var-VE3 ) ( \kore-symbol-Lbl'Unds-LT--LT-'Int'Unds' ( \kore-dv \kore-sort-SortInt "1" ) kore-element-var-VE5 ) ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-2943 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortString ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortString ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortString ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortString ) \top ) ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-Lbl'Unds-GT-Eqls'Int'Unds' ( \kore-symbol-LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int kore-element-var-VE2 kore-element-var-VE3 ( \kore-dv \kore-sort-SortInt "0" ) ) ( \kore-dv \kore-sort-SortInt "0" ) ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortString kore-sort-var-R kore-element-var-VE0 kore-element-var-VE2 ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortString kore-sort-var-R kore-element-var-VE1 kore-element-var-VE3 ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortInt kore-sort-var-R ( \kore-symbol-LblcountAllOccurrences'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String kore-element-var-VE0 kore-element-var-VE1 ) ( \kore-symbol-Lbl'UndsPlus'Int'Unds' ( \kore-dv \kore-sort-SortInt "1" ) ( \kore-symbol-LblcountAllOccurrences'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String ( \kore-symbol-LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int kore-element-var-VE2 ( \kore-symbol-Lbl'UndsPlus'Int'Unds' ( \kore-symbol-LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int kore-element-var-VE2 kore-element-var-VE3 ( \kore-dv \kore-sort-SortInt "0" ) ) ( \kore-symbol-LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String kore-element-var-VE3 ) ) ( \kore-symbol-LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String kore-element-var-VE2 ) ) kore-element-var-VE3 ) ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-2944 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortString ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortString ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortString ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortString ) \top ) ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-Lbl'Unds-LT-'Int'Unds' ( \kore-symbol-LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int kore-element-var-VE2 kore-element-var-VE3 ( \kore-dv \kore-sort-SortInt "0" ) ) ( \kore-dv \kore-sort-SortInt "0" ) ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortString kore-sort-var-R kore-element-var-VE0 kore-element-var-VE2 ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortString kore-sort-var-R kore-element-var-VE1 kore-element-var-VE3 ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortInt kore-sort-var-R ( \kore-symbol-LblcountAllOccurrences'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String kore-element-var-VE0 kore-element-var-VE1 ) ( \kore-dv \kore-sort-SortInt "0" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-2945 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortString ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortString ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortString ) ( \and ( \in-sort kore-element-var-VE5 \kore-sort-SortString ) \top ) ) ) ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-Lbl'UndsEqlsSlshEqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String kore-element-var-VE1 ( \kore-dv \kore-sort-SortString "" ) ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortString kore-sort-var-R kore-element-var-VE3 kore-element-var-VE5 ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortString kore-sort-var-R kore-element-var-VE4 kore-element-var-VE1 ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortInt kore-sort-var-R kore-element-var-VE0 kore-element-var-VE2 ) ( \kore-top kore-sort-var-R ) ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortInt kore-sort-var-R ( \kore-symbol-LblfindChar'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int kore-element-var-VE3 kore-element-var-VE4 kore-element-var-VE0 ) ( \kore-symbol-Lbl'Hash'if'UndsHash'then'UndsHash'else'UndsHash'fi'Unds'K-EQUAL-SYNTAX'Unds'Sort'Unds'Bool'Unds'Sort'Unds'Sort \kore-sort-SortInt ( \kore-symbol-Lbl'UndsEqlsEqls'Int'Unds' ( \kore-symbol-LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int kore-element-var-VE5 ( \kore-symbol-LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int kore-element-var-VE1 ( \kore-dv \kore-sort-SortInt "0" ) ( \kore-dv \kore-sort-SortInt "1" ) ) kore-element-var-VE2 ) ( \kore-dv \kore-sort-SortInt "-1" ) ) ( \kore-symbol-LblfindChar'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int kore-element-var-VE5 ( \kore-symbol-LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int kore-element-var-VE1 ( \kore-dv \kore-sort-SortInt "1" ) ( \kore-symbol-LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String kore-element-var-VE1 ) ) kore-element-var-VE2 ) ( \kore-symbol-Lbl'Hash'if'UndsHash'then'UndsHash'else'UndsHash'fi'Unds'K-EQUAL-SYNTAX'Unds'Sort'Unds'Bool'Unds'Sort'Unds'Sort \kore-sort-SortInt ( \kore-symbol-Lbl'UndsEqlsEqls'Int'Unds' ( \kore-symbol-LblfindChar'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int kore-element-var-VE5 ( \kore-symbol-LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int kore-element-var-VE1 ( \kore-dv \kore-sort-SortInt "1" ) ( \kore-symbol-LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String kore-element-var-VE1 ) ) kore-element-var-VE2 ) ( \kore-dv \kore-sort-SortInt "-1" ) ) ( \kore-symbol-LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int kore-element-var-VE5 ( \kore-symbol-LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int kore-element-var-VE1 ( \kore-dv \kore-sort-SortInt "0" ) ( \kore-dv \kore-sort-SortInt "1" ) ) kore-element-var-VE2 ) ( \kore-symbol-LblminInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int ( \kore-symbol-LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int kore-element-var-VE5 ( \kore-symbol-LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int kore-element-var-VE1 ( \kore-dv \kore-sort-SortInt "0" ) ( \kore-dv \kore-sort-SortInt "1" ) ) kore-element-var-VE2 ) ( \kore-symbol-LblfindChar'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int kore-element-var-VE5 ( \kore-symbol-LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int kore-element-var-VE1 ( \kore-dv \kore-sort-SortInt "1" ) ( \kore-symbol-LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String kore-element-var-VE1 ) ) kore-element-var-VE2 ) ) ) ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-2946 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortString ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortString ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortString ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortInt ) \top ) ) ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortString kore-sort-var-R kore-element-var-VE2 kore-element-var-VE1 ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortString kore-sort-var-R kore-element-var-VE3 ( \kore-dv \kore-sort-SortString "" ) ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortInt kore-sort-var-R kore-element-var-VE0 kore-element-var-VE4 ) ( \kore-top kore-sort-var-R ) ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortInt kore-sort-var-R ( \kore-symbol-LblfindChar'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int kore-element-var-VE2 kore-element-var-VE3 kore-element-var-VE0 ) ( \kore-dv \kore-sort-SortInt "-1" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-2947 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortInt ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortInt kore-sort-var-R kore-element-var-VE0 kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortId kore-sort-var-R ( \kore-symbol-LblfreshId'LParUndsRParUnds'ID-COMMON'Unds'Id'Unds'Int kore-element-var-VE0 ) ( \kore-symbol-LblString2Id'LParUndsRParUnds'ID-COMMON'Unds'Id'Unds'String ( \kore-symbol-Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String ( \kore-dv \kore-sort-SortString "_" ) ( \kore-symbol-LblInt2String'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Int kore-element-var-VE1 ) ) ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-2948 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortInt ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortInt kore-sort-var-R kore-element-var-VE0 kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortInt kore-sort-var-R ( \kore-symbol-LblfreshInt'LParUndsRParUnds'INT'Unds'Int'Unds'Int kore-element-var-VE0 ) kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-2949 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortGeneratedTopCell ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortTCell ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortGeneratedCounterCell ) \top ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortGeneratedTopCell kore-sort-var-R kore-element-var-VE0 ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' kore-element-var-VE1 kore-element-var-VE2 ) ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortGeneratedCounterCell kore-sort-var-R ( \kore-symbol-LblgetGeneratedCounterCell kore-element-var-VE0 ) kore-element-var-VE2 ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-2950 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-top kore-sort-var-R ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortGeneratedCounterCell kore-sort-var-R \kore-symbol-LblinitGeneratedCounterCell ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-2951 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortMap ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortMap ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortMap kore-sort-var-R kore-element-var-VE0 kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortGeneratedTopCell kore-sort-var-R ( \kore-symbol-LblinitGeneratedTopCell kore-element-var-VE0 ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-LblinitTCell kore-element-var-VE1 ) \kore-symbol-LblinitGeneratedCounterCell ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-2952 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortMap ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortMap ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortMap kore-sort-var-R kore-element-var-VE0 kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortKCell kore-sort-var-R ( \kore-symbol-LblinitKCell kore-element-var-VE0 ) ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblproject'Coln'Pgm ( \kore-symbol-kseq ( \kore-symbol-LblMap'Coln'lookup kore-element-var-VE1 ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ) \kore-symbol-dotk ) ) ) \kore-symbol-dotk ) ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-2953 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-top kore-sort-var-R ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortStateCell kore-sort-var-R \kore-symbol-LblinitStateCell ( \kore-symbol-Lbl'-LT-'state'-GT-' \kore-symbol-Lbl'Stop'Map ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-2954 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortMap ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortMap ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortMap kore-sort-var-R kore-element-var-VE0 kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortTCell kore-sort-var-R ( \kore-symbol-LblinitTCell kore-element-var-VE0 ) ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-LblinitKCell kore-element-var-VE1 ) \kore-symbol-LblinitStateCell ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-2955 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortK ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-not kore-sort-var-R ( \kore-or kore-sort-var-R ( \kore-exists \kore-sort-SortAExp kore-sort-var-R kore-element-var-VE0 ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE1 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem kore-element-var-VE0 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-bottom kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE1 kore-element-var-VE2 ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisAExp kore-element-var-VE1 ) ( \kore-dv \kore-sort-SortBool "false" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-2956 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortAExp ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem kore-element-var-VE1 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisAExp kore-element-var-VE0 ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-2957 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortK ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-not kore-sort-var-R ( \kore-or kore-sort-var-R ( \kore-exists \kore-sort-SortBExp kore-sort-var-R kore-element-var-VE0 ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE1 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortBExp \kore-sort-SortKItem kore-element-var-VE0 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-bottom kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE1 kore-element-var-VE2 ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisBExp kore-element-var-VE1 ) ( \kore-dv \kore-sort-SortBool "false" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-2958 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortBExp ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortBExp \kore-sort-SortKItem kore-element-var-VE1 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisBExp kore-element-var-VE0 ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-2959 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortK ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-not kore-sort-var-R ( \kore-or kore-sort-var-R ( \kore-exists \kore-sort-SortBlock kore-sort-var-R kore-element-var-VE0 ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE1 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortBlock \kore-sort-SortKItem kore-element-var-VE0 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-bottom kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE1 kore-element-var-VE2 ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisBlock kore-element-var-VE1 ) ( \kore-dv \kore-sort-SortBool "false" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-2960 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortBlock ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortK ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE1 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortBlock \kore-sort-SortKItem kore-element-var-VE0 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisBlock kore-element-var-VE1 ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-2961 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortK ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-not kore-sort-var-R ( \kore-or kore-sort-var-R ( \kore-exists \kore-sort-SortBool kore-sort-var-R kore-element-var-VE0 ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE1 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortBool \kore-sort-SortKItem kore-element-var-VE0 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-bottom kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE1 kore-element-var-VE2 ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisBool kore-element-var-VE1 ) ( \kore-dv \kore-sort-SortBool "false" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-2962 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortBool ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortBool \kore-sort-SortKItem kore-element-var-VE1 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisBool kore-element-var-VE0 ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-2963 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortK ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-not kore-sort-var-R ( \kore-or kore-sort-var-R ( \kore-exists \kore-sort-SortFloat kore-sort-var-R kore-element-var-VE0 ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE1 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortFloat \kore-sort-SortKItem kore-element-var-VE0 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-bottom kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE1 kore-element-var-VE2 ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisFloat kore-element-var-VE1 ) ( \kore-dv \kore-sort-SortBool "false" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-2964 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortFloat ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortFloat \kore-sort-SortKItem kore-element-var-VE1 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisFloat kore-element-var-VE0 ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-2965 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortK ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-not kore-sort-var-R ( \kore-or kore-sort-var-R ( \kore-exists \kore-sort-SortGeneratedCounterCell kore-sort-var-R kore-element-var-VE0 ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE1 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortGeneratedCounterCell \kore-sort-SortKItem kore-element-var-VE0 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-bottom kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE1 kore-element-var-VE2 ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisGeneratedCounterCell kore-element-var-VE1 ) ( \kore-dv \kore-sort-SortBool "false" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-2966 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortGeneratedCounterCell ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortGeneratedCounterCell \kore-sort-SortKItem kore-element-var-VE1 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisGeneratedCounterCell kore-element-var-VE0 ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-2967 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortK ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-not kore-sort-var-R ( \kore-or kore-sort-var-R ( \kore-exists \kore-sort-SortGeneratedCounterCellOpt kore-sort-var-R kore-element-var-VE0 ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE1 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortGeneratedCounterCellOpt \kore-sort-SortKItem kore-element-var-VE0 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-bottom kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE1 kore-element-var-VE2 ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisGeneratedCounterCellOpt kore-element-var-VE1 ) ( \kore-dv \kore-sort-SortBool "false" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-2968 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortGeneratedCounterCellOpt ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortGeneratedCounterCellOpt \kore-sort-SortKItem kore-element-var-VE1 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisGeneratedCounterCellOpt kore-element-var-VE0 ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-2969 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortK ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-not kore-sort-var-R ( \kore-or kore-sort-var-R ( \kore-exists \kore-sort-SortGeneratedTopCell kore-sort-var-R kore-element-var-VE0 ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE1 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortGeneratedTopCell \kore-sort-SortKItem kore-element-var-VE0 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-bottom kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE1 kore-element-var-VE2 ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisGeneratedTopCell kore-element-var-VE1 ) ( \kore-dv \kore-sort-SortBool "false" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-2970 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortGeneratedTopCell ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortK ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE1 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortGeneratedTopCell \kore-sort-SortKItem kore-element-var-VE0 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisGeneratedTopCell kore-element-var-VE1 ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-2971 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortK ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-not kore-sort-var-R ( \kore-or kore-sort-var-R ( \kore-exists \kore-sort-SortGeneratedTopCellFragment kore-sort-var-R kore-element-var-VE0 ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE1 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortGeneratedTopCellFragment \kore-sort-SortKItem kore-element-var-VE0 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-bottom kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE1 kore-element-var-VE2 ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisGeneratedTopCellFragment kore-element-var-VE1 ) ( \kore-dv \kore-sort-SortBool "false" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-2972 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortGeneratedTopCellFragment ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortGeneratedTopCellFragment \kore-sort-SortKItem kore-element-var-VE1 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisGeneratedTopCellFragment kore-element-var-VE0 ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-2973 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortK ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-not kore-sort-var-R ( \kore-or kore-sort-var-R ( \kore-exists \kore-sort-SortIOError kore-sort-var-R kore-element-var-VE0 ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE1 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortIOError \kore-sort-SortKItem kore-element-var-VE0 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-bottom kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE1 kore-element-var-VE2 ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisIOError kore-element-var-VE1 ) ( \kore-dv \kore-sort-SortBool "false" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-2974 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortIOError ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortIOError \kore-sort-SortKItem kore-element-var-VE1 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisIOError kore-element-var-VE0 ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-2975 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortK ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-not kore-sort-var-R ( \kore-or kore-sort-var-R ( \kore-exists \kore-sort-SortIOFile kore-sort-var-R kore-element-var-VE0 ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE1 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortIOFile \kore-sort-SortKItem kore-element-var-VE0 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-bottom kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE1 kore-element-var-VE2 ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisIOFile kore-element-var-VE1 ) ( \kore-dv \kore-sort-SortBool "false" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-2976 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortIOFile ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortIOFile \kore-sort-SortKItem kore-element-var-VE1 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisIOFile kore-element-var-VE0 ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-2977 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortK ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-not kore-sort-var-R ( \kore-or kore-sort-var-R ( \kore-exists \kore-sort-SortIOInt kore-sort-var-R kore-element-var-VE0 ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE1 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortIOInt \kore-sort-SortKItem kore-element-var-VE0 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-bottom kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE1 kore-element-var-VE2 ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisIOInt kore-element-var-VE1 ) ( \kore-dv \kore-sort-SortBool "false" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-2978 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortIOInt ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortIOInt \kore-sort-SortKItem kore-element-var-VE1 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisIOInt kore-element-var-VE0 ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-2979 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortK ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-not kore-sort-var-R ( \kore-or kore-sort-var-R ( \kore-exists \kore-sort-SortIOString kore-sort-var-R kore-element-var-VE0 ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE1 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortIOString \kore-sort-SortKItem kore-element-var-VE0 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-bottom kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE1 kore-element-var-VE2 ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisIOString kore-element-var-VE1 ) ( \kore-dv \kore-sort-SortBool "false" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-2980 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortIOString ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortIOString \kore-sort-SortKItem kore-element-var-VE1 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisIOString kore-element-var-VE0 ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-2981 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortK ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-not kore-sort-var-R ( \kore-or kore-sort-var-R ( \kore-exists \kore-sort-SortId kore-sort-var-R kore-element-var-VE0 ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE1 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem kore-element-var-VE0 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-bottom kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE1 kore-element-var-VE2 ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisId kore-element-var-VE1 ) ( \kore-dv \kore-sort-SortBool "false" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-2982 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortId ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem kore-element-var-VE1 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisId kore-element-var-VE0 ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-2983 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortK ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-not kore-sort-var-R ( \kore-or kore-sort-var-R ( \kore-exists \kore-sort-SortIds kore-sort-var-R kore-element-var-VE0 ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE1 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortIds \kore-sort-SortKItem kore-element-var-VE0 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-bottom kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE1 kore-element-var-VE2 ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisIds kore-element-var-VE1 ) ( \kore-dv \kore-sort-SortBool "false" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-2984 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortIds ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortIds \kore-sort-SortKItem kore-element-var-VE1 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisIds kore-element-var-VE0 ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-2985 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortK ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-not kore-sort-var-R ( \kore-or kore-sort-var-R ( \kore-exists \kore-sort-SortInt kore-sort-var-R kore-element-var-VE0 ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE1 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortInt \kore-sort-SortKItem kore-element-var-VE0 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-bottom kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE1 kore-element-var-VE2 ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisInt kore-element-var-VE1 ) ( \kore-dv \kore-sort-SortBool "false" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-2986 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortInt ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortInt \kore-sort-SortKItem kore-element-var-VE1 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisInt kore-element-var-VE0 ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-2987 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortK ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisK kore-element-var-VE0 ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-2988 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortK ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-not kore-sort-var-R ( \kore-or kore-sort-var-R ( \kore-exists \kore-sort-SortKCell kore-sort-var-R kore-element-var-VE0 ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE1 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortKCell \kore-sort-SortKItem kore-element-var-VE0 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-bottom kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE1 kore-element-var-VE2 ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisKCell kore-element-var-VE1 ) ( \kore-dv \kore-sort-SortBool "false" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-2989 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortKCell ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortKCell \kore-sort-SortKItem kore-element-var-VE1 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisKCell kore-element-var-VE0 ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-2990 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortK ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-not kore-sort-var-R ( \kore-or kore-sort-var-R ( \kore-exists \kore-sort-SortKCellOpt kore-sort-var-R kore-element-var-VE0 ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE1 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortKCellOpt \kore-sort-SortKItem kore-element-var-VE0 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-bottom kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE1 kore-element-var-VE2 ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisKCellOpt kore-element-var-VE1 ) ( \kore-dv \kore-sort-SortBool "false" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-2991 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortKCellOpt ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortKCellOpt \kore-sort-SortKItem kore-element-var-VE1 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisKCellOpt kore-element-var-VE0 ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-2992 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortK ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-not kore-sort-var-R ( \kore-or kore-sort-var-R ( \kore-exists \kore-sort-SortKConfigVar kore-sort-var-R kore-element-var-VE0 ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE1 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem kore-element-var-VE0 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-bottom kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE1 kore-element-var-VE2 ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisKConfigVar kore-element-var-VE1 ) ( \kore-dv \kore-sort-SortBool "false" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-2993 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortKConfigVar ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortK ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE1 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem kore-element-var-VE0 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisKConfigVar kore-element-var-VE1 ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-2994 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortK ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-not kore-sort-var-R ( \kore-or kore-sort-var-R ( \kore-exists \kore-sort-SortKItem kore-sort-var-R kore-element-var-VE0 ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE1 ( \kore-symbol-kseq kore-element-var-VE0 \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-bottom kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE1 kore-element-var-VE2 ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisKItem kore-element-var-VE1 ) ( \kore-dv \kore-sort-SortBool "false" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-2995 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortKItem ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 ( \kore-symbol-kseq kore-element-var-VE1 \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisKItem kore-element-var-VE0 ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-2996 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortK ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-not kore-sort-var-R ( \kore-or kore-sort-var-R ( \kore-exists \kore-sort-SortKResult kore-sort-var-R kore-element-var-VE0 ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE1 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortKResult \kore-sort-SortKItem kore-element-var-VE0 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-bottom kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE1 kore-element-var-VE2 ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisKResult kore-element-var-VE1 ) ( \kore-dv \kore-sort-SortBool "false" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-2997 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortKResult ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortKResult \kore-sort-SortKItem kore-element-var-VE1 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisKResult kore-element-var-VE0 ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-2998 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortK ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-not kore-sort-var-R ( \kore-or kore-sort-var-R ( \kore-exists \kore-sort-SortList kore-sort-var-R kore-element-var-VE0 ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE1 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortList \kore-sort-SortKItem kore-element-var-VE0 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-bottom kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE1 kore-element-var-VE2 ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisList kore-element-var-VE1 ) ( \kore-dv \kore-sort-SortBool "false" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-2999 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortList ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortList \kore-sort-SortKItem kore-element-var-VE1 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisList kore-element-var-VE0 ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-3000 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortK ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-not kore-sort-var-R ( \kore-or kore-sort-var-R ( \kore-exists \kore-sort-SortMap kore-sort-var-R kore-element-var-VE0 ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE1 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortMap \kore-sort-SortKItem kore-element-var-VE0 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-bottom kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE1 kore-element-var-VE2 ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisMap kore-element-var-VE1 ) ( \kore-dv \kore-sort-SortBool "false" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-3001 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortMap ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortMap \kore-sort-SortKItem kore-element-var-VE1 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisMap kore-element-var-VE0 ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-3002 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortK ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-not kore-sort-var-R ( \kore-or kore-sort-var-R ( \kore-exists \kore-sort-SortPgm kore-sort-var-R kore-element-var-VE0 ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE1 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem kore-element-var-VE0 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-bottom kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE1 kore-element-var-VE2 ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisPgm kore-element-var-VE1 ) ( \kore-dv \kore-sort-SortBool "false" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-3003 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortPgm ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem kore-element-var-VE1 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisPgm kore-element-var-VE0 ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-3004 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortK ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-not kore-sort-var-R ( \kore-or kore-sort-var-R ( \kore-exists \kore-sort-SortSet kore-sort-var-R kore-element-var-VE0 ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE1 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortSet \kore-sort-SortKItem kore-element-var-VE0 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-bottom kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE1 kore-element-var-VE2 ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisSet kore-element-var-VE1 ) ( \kore-dv \kore-sort-SortBool "false" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-3005 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortSet ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortSet \kore-sort-SortKItem kore-element-var-VE1 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisSet kore-element-var-VE0 ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-3006 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortK ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-not kore-sort-var-R ( \kore-or kore-sort-var-R ( \kore-exists \kore-sort-SortStateCell kore-sort-var-R kore-element-var-VE0 ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE1 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortStateCell \kore-sort-SortKItem kore-element-var-VE0 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-bottom kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE1 kore-element-var-VE2 ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisStateCell kore-element-var-VE1 ) ( \kore-dv \kore-sort-SortBool "false" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-3007 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortStateCell ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortStateCell \kore-sort-SortKItem kore-element-var-VE1 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisStateCell kore-element-var-VE0 ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-3008 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortK ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-not kore-sort-var-R ( \kore-or kore-sort-var-R ( \kore-exists \kore-sort-SortStateCellOpt kore-sort-var-R kore-element-var-VE0 ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE1 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortStateCellOpt \kore-sort-SortKItem kore-element-var-VE0 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-bottom kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE1 kore-element-var-VE2 ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisStateCellOpt kore-element-var-VE1 ) ( \kore-dv \kore-sort-SortBool "false" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-3009 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortStateCellOpt ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortStateCellOpt \kore-sort-SortKItem kore-element-var-VE1 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisStateCellOpt kore-element-var-VE0 ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-3010 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortK ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-not kore-sort-var-R ( \kore-or kore-sort-var-R ( \kore-exists \kore-sort-SortStmt kore-sort-var-R kore-element-var-VE0 ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE1 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem kore-element-var-VE0 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-bottom kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE1 kore-element-var-VE2 ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisStmt kore-element-var-VE1 ) ( \kore-dv \kore-sort-SortBool "false" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-3011 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortStmt ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem kore-element-var-VE1 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisStmt kore-element-var-VE0 ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-3012 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortK ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-not kore-sort-var-R ( \kore-or kore-sort-var-R ( \kore-exists \kore-sort-SortStream kore-sort-var-R kore-element-var-VE0 ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE1 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortStream \kore-sort-SortKItem kore-element-var-VE0 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-bottom kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE1 kore-element-var-VE2 ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisStream kore-element-var-VE1 ) ( \kore-dv \kore-sort-SortBool "false" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-3013 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortStream ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortStream \kore-sort-SortKItem kore-element-var-VE1 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisStream kore-element-var-VE0 ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-3014 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortK ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-not kore-sort-var-R ( \kore-or kore-sort-var-R ( \kore-exists \kore-sort-SortString kore-sort-var-R kore-element-var-VE0 ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE1 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortString \kore-sort-SortKItem kore-element-var-VE0 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-bottom kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE1 kore-element-var-VE2 ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisString kore-element-var-VE1 ) ( \kore-dv \kore-sort-SortBool "false" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-3015 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortString ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortString \kore-sort-SortKItem kore-element-var-VE1 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisString kore-element-var-VE0 ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-3016 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortK ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-not kore-sort-var-R ( \kore-or kore-sort-var-R ( \kore-exists \kore-sort-SortTCell kore-sort-var-R kore-element-var-VE0 ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE1 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortTCell \kore-sort-SortKItem kore-element-var-VE0 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-bottom kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE1 kore-element-var-VE2 ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisTCell kore-element-var-VE1 ) ( \kore-dv \kore-sort-SortBool "false" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-3017 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortTCell ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortTCell \kore-sort-SortKItem kore-element-var-VE1 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisTCell kore-element-var-VE0 ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-3018 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortK ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-not kore-sort-var-R ( \kore-or kore-sort-var-R ( \kore-exists \kore-sort-SortTCellFragment kore-sort-var-R kore-element-var-VE0 ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE1 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortTCellFragment \kore-sort-SortKItem kore-element-var-VE0 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-bottom kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE1 kore-element-var-VE2 ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisTCellFragment kore-element-var-VE1 ) ( \kore-dv \kore-sort-SortBool "false" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-3019 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortTCellFragment ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortK ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE1 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortTCellFragment \kore-sort-SortKItem kore-element-var-VE0 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisTCellFragment kore-element-var-VE1 ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-3020 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortK ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-not kore-sort-var-R ( \kore-or kore-sort-var-R ( \kore-exists \kore-sort-SortTCellOpt kore-sort-var-R kore-element-var-VE0 ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE1 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortTCellOpt \kore-sort-SortKItem kore-element-var-VE0 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-bottom kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE1 kore-element-var-VE2 ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisTCellOpt kore-element-var-VE1 ) ( \kore-dv \kore-sort-SortBool "false" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-3021 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortTCellOpt ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortK ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE1 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortTCellOpt \kore-sort-SortKItem kore-element-var-VE0 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisTCellOpt kore-element-var-VE1 ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-3022 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortInt ) \top ) ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-Lbl'Unds-LT-Eqls'Int'Unds' kore-element-var-VE1 kore-element-var-VE3 ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortInt kore-sort-var-R kore-element-var-VE0 kore-element-var-VE1 ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortInt kore-sort-var-R kore-element-var-VE2 kore-element-var-VE3 ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortInt kore-sort-var-R ( \kore-symbol-LblminInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int kore-element-var-VE0 kore-element-var-VE2 ) kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-3023 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortInt ) \top ) ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-Lbl'Unds-GT-Eqls'Int'Unds' kore-element-var-VE1 kore-element-var-VE3 ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortInt kore-sort-var-R kore-element-var-VE0 kore-element-var-VE1 ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortInt kore-sort-var-R kore-element-var-VE2 kore-element-var-VE3 ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortInt kore-sort-var-R ( \kore-symbol-LblminInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int kore-element-var-VE0 kore-element-var-VE2 ) kore-element-var-VE3 ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-3024 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortBool ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortBool kore-sort-var-R kore-element-var-VE0 ( \kore-dv \kore-sort-SortBool "false" ) ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblnotBool'Unds' kore-element-var-VE0 ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-3025 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortBool ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortBool kore-sort-var-R kore-element-var-VE0 ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblnotBool'Unds' kore-element-var-VE0 ) ( \kore-dv \kore-sort-SortBool "false" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-3026 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortIOFile ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortString ) \top ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortIOFile kore-sort-var-R kore-element-var-VE1 ( \kore-symbol-Lbl'Hash'tempFile kore-element-var-VE2 kore-element-var-VE0 ) ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortInt kore-sort-var-R ( \kore-symbol-Lblproject'ColnHash'tempFile'Coln'fd kore-element-var-VE1 ) kore-element-var-VE0 ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-3027 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortIOFile ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortString ) \top ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortIOFile kore-sort-var-R kore-element-var-VE1 ( \kore-symbol-Lbl'Hash'tempFile kore-element-var-VE2 kore-element-var-VE0 ) ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortString kore-sort-var-R ( \kore-symbol-Lblproject'ColnHash'tempFile'Coln'path kore-element-var-VE1 ) kore-element-var-VE2 ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-3028 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortIOError ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortInt ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortIOError kore-sort-var-R kore-element-var-VE0 ( \kore-symbol-Lbl'Hash'unknownIOError kore-element-var-VE1 ) ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortInt kore-sort-var-R ( \kore-symbol-Lblproject'ColnHash'unknownIOError'Coln'errno kore-element-var-VE0 ) kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-3029 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortAExp ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem kore-element-var-VE1 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortAExp kore-sort-var-R ( \kore-symbol-Lblproject'Coln'AExp kore-element-var-VE0 ) kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-3030 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortBExp ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortBExp \kore-sort-SortKItem kore-element-var-VE1 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBExp kore-sort-var-R ( \kore-symbol-Lblproject'Coln'BExp kore-element-var-VE0 ) kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-3031 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortBlock ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortBlock \kore-sort-SortKItem kore-element-var-VE1 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBlock kore-sort-var-R ( \kore-symbol-Lblproject'Coln'Block kore-element-var-VE0 ) kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-3032 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortBool ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortBool \kore-sort-SortKItem kore-element-var-VE1 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-Lblproject'Coln'Bool kore-element-var-VE0 ) kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-3033 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortFloat ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortFloat \kore-sort-SortKItem kore-element-var-VE1 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortFloat kore-sort-var-R ( \kore-symbol-Lblproject'Coln'Float kore-element-var-VE0 ) kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-3034 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortGeneratedCounterCell ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortGeneratedCounterCell \kore-sort-SortKItem kore-element-var-VE1 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortGeneratedCounterCell kore-sort-var-R ( \kore-symbol-Lblproject'Coln'GeneratedCounterCell kore-element-var-VE0 ) kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-3035 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortGeneratedCounterCellOpt ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortGeneratedCounterCellOpt \kore-sort-SortKItem kore-element-var-VE1 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortGeneratedCounterCellOpt kore-sort-var-R ( \kore-symbol-Lblproject'Coln'GeneratedCounterCellOpt kore-element-var-VE0 ) kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-3036 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortGeneratedTopCell ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortGeneratedTopCell \kore-sort-SortKItem kore-element-var-VE1 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortGeneratedTopCell kore-sort-var-R ( \kore-symbol-Lblproject'Coln'GeneratedTopCell kore-element-var-VE0 ) kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-3037 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortGeneratedTopCellFragment ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortGeneratedTopCellFragment \kore-sort-SortKItem kore-element-var-VE1 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortGeneratedTopCellFragment kore-sort-var-R ( \kore-symbol-Lblproject'Coln'GeneratedTopCellFragment kore-element-var-VE0 ) kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-3038 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortIOError ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortIOError \kore-sort-SortKItem kore-element-var-VE1 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortIOError kore-sort-var-R ( \kore-symbol-Lblproject'Coln'IOError kore-element-var-VE0 ) kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-3039 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortIOFile ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortIOFile \kore-sort-SortKItem kore-element-var-VE1 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortIOFile kore-sort-var-R ( \kore-symbol-Lblproject'Coln'IOFile kore-element-var-VE0 ) kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-3040 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortIOInt ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortIOInt \kore-sort-SortKItem kore-element-var-VE1 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortIOInt kore-sort-var-R ( \kore-symbol-Lblproject'Coln'IOInt kore-element-var-VE0 ) kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-3041 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortIOString ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortIOString \kore-sort-SortKItem kore-element-var-VE1 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortIOString kore-sort-var-R ( \kore-symbol-Lblproject'Coln'IOString kore-element-var-VE0 ) kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-3042 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortId ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem kore-element-var-VE1 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortId kore-sort-var-R ( \kore-symbol-Lblproject'Coln'Id kore-element-var-VE0 ) kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-3043 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortIds ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortIds \kore-sort-SortKItem kore-element-var-VE1 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortIds kore-sort-var-R ( \kore-symbol-Lblproject'Coln'Ids kore-element-var-VE0 ) kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-3044 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortInt ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortInt \kore-sort-SortKItem kore-element-var-VE1 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortInt kore-sort-var-R ( \kore-symbol-Lblproject'Coln'Int kore-element-var-VE0 ) kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-3045 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortK ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortK kore-sort-var-R ( \kore-symbol-Lblproject'Coln'K kore-element-var-VE0 ) kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-3046 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortKCell ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortKCell \kore-sort-SortKItem kore-element-var-VE1 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortKCell kore-sort-var-R ( \kore-symbol-Lblproject'Coln'KCell kore-element-var-VE0 ) kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-3047 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortKCellOpt ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortKCellOpt \kore-sort-SortKItem kore-element-var-VE1 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortKCellOpt kore-sort-var-R ( \kore-symbol-Lblproject'Coln'KCellOpt kore-element-var-VE0 ) kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-3048 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortKItem ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 ( \kore-symbol-kseq kore-element-var-VE1 \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortKItem kore-sort-var-R ( \kore-symbol-Lblproject'Coln'KItem kore-element-var-VE0 ) kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-3049 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortKResult ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortKResult \kore-sort-SortKItem kore-element-var-VE1 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortKResult kore-sort-var-R ( \kore-symbol-Lblproject'Coln'KResult kore-element-var-VE0 ) kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-3050 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortList ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortList \kore-sort-SortKItem kore-element-var-VE1 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortList kore-sort-var-R ( \kore-symbol-Lblproject'Coln'List kore-element-var-VE0 ) kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-3051 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortMap ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortMap \kore-sort-SortKItem kore-element-var-VE1 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortMap kore-sort-var-R ( \kore-symbol-Lblproject'Coln'Map kore-element-var-VE0 ) kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-3052 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortPgm ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem kore-element-var-VE1 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortPgm kore-sort-var-R ( \kore-symbol-Lblproject'Coln'Pgm kore-element-var-VE0 ) kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-3053 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortSet ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortSet \kore-sort-SortKItem kore-element-var-VE1 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortSet kore-sort-var-R ( \kore-symbol-Lblproject'Coln'Set kore-element-var-VE0 ) kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-3054 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortStateCell ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortStateCell \kore-sort-SortKItem kore-element-var-VE1 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortStateCell kore-sort-var-R ( \kore-symbol-Lblproject'Coln'StateCell kore-element-var-VE0 ) kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-3055 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortStateCellOpt ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortStateCellOpt \kore-sort-SortKItem kore-element-var-VE1 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortStateCellOpt kore-sort-var-R ( \kore-symbol-Lblproject'Coln'StateCellOpt kore-element-var-VE0 ) kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-3056 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortStmt ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem kore-element-var-VE1 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortStmt kore-sort-var-R ( \kore-symbol-Lblproject'Coln'Stmt kore-element-var-VE0 ) kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-3057 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortStream ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortStream \kore-sort-SortKItem kore-element-var-VE1 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortStream kore-sort-var-R ( \kore-symbol-Lblproject'Coln'Stream kore-element-var-VE0 ) kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-3058 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortString ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortString \kore-sort-SortKItem kore-element-var-VE1 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortString kore-sort-var-R ( \kore-symbol-Lblproject'Coln'String kore-element-var-VE0 ) kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-3059 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortTCell ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortTCell \kore-sort-SortKItem kore-element-var-VE1 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortTCell kore-sort-var-R ( \kore-symbol-Lblproject'Coln'TCell kore-element-var-VE0 ) kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-3060 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortTCellFragment ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortTCellFragment \kore-sort-SortKItem kore-element-var-VE1 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortTCellFragment kore-sort-var-R ( \kore-symbol-Lblproject'Coln'TCellFragment kore-element-var-VE0 ) kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-3061 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortTCellOpt ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortTCellOpt \kore-sort-SortKItem kore-element-var-VE1 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortTCellOpt kore-sort-var-R ( \kore-symbol-Lblproject'Coln'TCellOpt kore-element-var-VE0 ) kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-3062 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortString ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortString ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortString ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortString ) ( \and ( \in-sort kore-element-var-VE5 \kore-sort-SortString ) ( \and ( \in-sort kore-element-var-VE6 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE7 \kore-sort-SortString ) \top ) ) ) ) ) ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-Lbl'Unds-GT-'Int'Unds' kore-element-var-VE6 ( \kore-dv \kore-sort-SortInt "0" ) ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortString kore-sort-var-R kore-element-var-VE7 kore-element-var-VE0 ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortString kore-sort-var-R kore-element-var-VE5 kore-element-var-VE4 ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortString kore-sort-var-R kore-element-var-VE1 kore-element-var-VE2 ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortInt kore-sort-var-R kore-element-var-VE3 kore-element-var-VE6 ) ( \kore-top kore-sort-var-R ) ) ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortString kore-sort-var-R ( \kore-symbol-Lblreplace'LParUndsCommUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String'Unds'Int kore-element-var-VE7 kore-element-var-VE5 kore-element-var-VE1 kore-element-var-VE3 ) ( \kore-symbol-Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String ( \kore-symbol-Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String ( \kore-symbol-LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int kore-element-var-VE0 ( \kore-dv \kore-sort-SortInt "0" ) ( \kore-symbol-LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int kore-element-var-VE0 kore-element-var-VE4 ( \kore-dv \kore-sort-SortInt "0" ) ) ) kore-element-var-VE2 ) ( \kore-symbol-Lblreplace'LParUndsCommUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String'Unds'Int ( \kore-symbol-LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int kore-element-var-VE0 ( \kore-symbol-Lbl'UndsPlus'Int'Unds' ( \kore-symbol-LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int kore-element-var-VE0 kore-element-var-VE4 ( \kore-dv \kore-sort-SortInt "0" ) ) ( \kore-symbol-LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String kore-element-var-VE4 ) ) ( \kore-symbol-LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String kore-element-var-VE0 ) ) kore-element-var-VE4 kore-element-var-VE2 ( \kore-symbol-Lbl'Unds'-Int'Unds' kore-element-var-VE6 ( \kore-dv \kore-sort-SortInt "1" ) ) ) ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-3063 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortString ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortString ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortString ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortString ) ( \and ( \in-sort kore-element-var-VE5 \kore-sort-SortString ) ( \and ( \in-sort kore-element-var-VE6 \kore-sort-SortString ) \top ) ) ) ) ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortString kore-sort-var-R kore-element-var-VE4 kore-element-var-VE0 ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortString kore-sort-var-R kore-element-var-VE5 kore-element-var-VE3 ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortString kore-sort-var-R kore-element-var-VE1 kore-element-var-VE6 ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortInt kore-sort-var-R kore-element-var-VE2 ( \kore-dv \kore-sort-SortInt "0" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortString kore-sort-var-R ( \kore-symbol-Lblreplace'LParUndsCommUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String'Unds'Int kore-element-var-VE4 kore-element-var-VE5 kore-element-var-VE1 kore-element-var-VE2 ) kore-element-var-VE0 ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-3064 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortString ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortString ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortString ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortString ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortString ) ( \and ( \in-sort kore-element-var-VE5 \kore-sort-SortString ) \top ) ) ) ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortString kore-sort-var-R kore-element-var-VE0 kore-element-var-VE1 ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortString kore-sort-var-R kore-element-var-VE5 kore-element-var-VE4 ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortString kore-sort-var-R kore-element-var-VE2 kore-element-var-VE3 ) ( \kore-top kore-sort-var-R ) ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortString kore-sort-var-R ( \kore-symbol-LblreplaceAll'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String kore-element-var-VE0 kore-element-var-VE5 kore-element-var-VE2 ) ( \kore-symbol-Lblreplace'LParUndsCommUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String'Unds'Int kore-element-var-VE1 kore-element-var-VE4 kore-element-var-VE3 ( \kore-symbol-LblcountAllOccurrences'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String kore-element-var-VE1 kore-element-var-VE4 ) ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-3065 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortString ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortString ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortString ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortString ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortString ) ( \and ( \in-sort kore-element-var-VE5 \kore-sort-SortString ) \top ) ) ) ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-Lbl'Unds-GT-Eqls'Int'Unds' ( \kore-symbol-LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int kore-element-var-VE1 kore-element-var-VE4 ( \kore-dv \kore-sort-SortInt "0" ) ) ( \kore-dv \kore-sort-SortInt "0" ) ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortString kore-sort-var-R kore-element-var-VE0 kore-element-var-VE1 ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortString kore-sort-var-R kore-element-var-VE5 kore-element-var-VE4 ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortString kore-sort-var-R kore-element-var-VE2 kore-element-var-VE3 ) ( \kore-top kore-sort-var-R ) ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortString kore-sort-var-R ( \kore-symbol-LblreplaceFirst'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String kore-element-var-VE0 kore-element-var-VE5 kore-element-var-VE2 ) ( \kore-symbol-Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String ( \kore-symbol-Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String ( \kore-symbol-LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int kore-element-var-VE1 ( \kore-dv \kore-sort-SortInt "0" ) ( \kore-symbol-LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int kore-element-var-VE1 kore-element-var-VE4 ( \kore-dv \kore-sort-SortInt "0" ) ) ) kore-element-var-VE3 ) ( \kore-symbol-LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int kore-element-var-VE1 ( \kore-symbol-Lbl'UndsPlus'Int'Unds' ( \kore-symbol-LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int kore-element-var-VE1 kore-element-var-VE4 ( \kore-dv \kore-sort-SortInt "0" ) ) ( \kore-symbol-LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String kore-element-var-VE4 ) ) ( \kore-symbol-LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String kore-element-var-VE1 ) ) ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-3066 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortString ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortString ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortString ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortString ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortString ) ( \and ( \in-sort kore-element-var-VE5 \kore-sort-SortString ) \top ) ) ) ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-Lbl'Unds-LT-'Int'Unds' ( \kore-symbol-LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int kore-element-var-VE1 kore-element-var-VE4 ( \kore-dv \kore-sort-SortInt "0" ) ) ( \kore-dv \kore-sort-SortInt "0" ) ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortString kore-sort-var-R kore-element-var-VE0 kore-element-var-VE1 ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortString kore-sort-var-R kore-element-var-VE5 kore-element-var-VE4 ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortString kore-sort-var-R kore-element-var-VE2 kore-element-var-VE3 ) ( \kore-top kore-sort-var-R ) ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortString kore-sort-var-R ( \kore-symbol-LblreplaceFirst'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String kore-element-var-VE0 kore-element-var-VE5 kore-element-var-VE2 ) kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-3067 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortString ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortString ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortString ) ( \and ( \in-sort kore-element-var-VE5 \kore-sort-SortString ) \top ) ) ) ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-Lbl'UndsEqlsSlshEqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String kore-element-var-VE1 ( \kore-dv \kore-sort-SortString "" ) ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortString kore-sort-var-R kore-element-var-VE3 kore-element-var-VE5 ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortString kore-sort-var-R kore-element-var-VE4 kore-element-var-VE1 ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortInt kore-sort-var-R kore-element-var-VE0 kore-element-var-VE2 ) ( \kore-top kore-sort-var-R ) ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortInt kore-sort-var-R ( \kore-symbol-LblrfindChar'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int kore-element-var-VE3 kore-element-var-VE4 kore-element-var-VE0 ) ( \kore-symbol-LblmaxInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int ( \kore-symbol-LblrfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int kore-element-var-VE5 ( \kore-symbol-LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int kore-element-var-VE1 ( \kore-dv \kore-sort-SortInt "0" ) ( \kore-dv \kore-sort-SortInt "1" ) ) kore-element-var-VE2 ) ( \kore-symbol-LblrfindChar'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int kore-element-var-VE5 ( \kore-symbol-LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int kore-element-var-VE1 ( \kore-dv \kore-sort-SortInt "1" ) ( \kore-symbol-LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String kore-element-var-VE1 ) ) kore-element-var-VE2 ) ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-3068 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortString ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortString ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortString ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortInt ) \top ) ) ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortString kore-sort-var-R kore-element-var-VE2 kore-element-var-VE1 ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortString kore-sort-var-R kore-element-var-VE3 ( \kore-dv \kore-sort-SortString "" ) ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortInt kore-sort-var-R kore-element-var-VE0 kore-element-var-VE4 ) ( \kore-top kore-sort-var-R ) ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortInt kore-sort-var-R ( \kore-symbol-LblrfindChar'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int kore-element-var-VE2 kore-element-var-VE3 kore-element-var-VE0 ) ( \kore-dv \kore-sort-SortInt "-1" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-3069 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE5 \kore-sort-SortInt ) \top ) ) ) ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortInt kore-sort-var-R kore-element-var-VE0 kore-element-var-VE2 ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortInt kore-sort-var-R kore-element-var-VE4 kore-element-var-VE3 ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortInt kore-sort-var-R kore-element-var-VE1 kore-element-var-VE5 ) ( \kore-top kore-sort-var-R ) ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortInt kore-sort-var-R ( \kore-symbol-LblsignExtendBitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int'Unds'Int kore-element-var-VE0 kore-element-var-VE4 kore-element-var-VE1 ) ( \kore-symbol-Lbl'Unds'-Int'Unds' ( \kore-symbol-Lbl'Unds'modInt'Unds' ( \kore-symbol-Lbl'UndsPlus'Int'Unds' ( \kore-symbol-LblbitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int'Unds'Int kore-element-var-VE2 kore-element-var-VE3 kore-element-var-VE5 ) ( \kore-symbol-Lbl'Unds-LT--LT-'Int'Unds' ( \kore-dv \kore-sort-SortInt "1" ) ( \kore-symbol-Lbl'Unds'-Int'Unds' kore-element-var-VE5 ( \kore-dv \kore-sort-SortInt "1" ) ) ) ) ( \kore-symbol-Lbl'Unds-LT--LT-'Int'Unds' ( \kore-dv \kore-sort-SortInt "1" ) kore-element-var-VE5 ) ) ( \kore-symbol-Lbl'Unds-LT--LT-'Int'Unds' ( \kore-dv \kore-sort-SortInt "1" ) ( \kore-symbol-Lbl'Unds'-Int'Unds' kore-element-var-VE5 ( \kore-dv \kore-sort-SortInt "1" ) ) ) ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-3070 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-Q0 ) ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VS0 \kore-sort-SortKItem ) ( \and ( \in-sort kore-element-var-VS1 \kore-sort-SortMap ) ( \and ( \in-sort kore-element-var-VS2 \kore-sort-SortKItem ) \top ) ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-equals kore-sort-var-Q0 kore-sort-var-R ( \kore-ceil \kore-sort-SortMap kore-sort-var-Q0 ( \kore-symbol-Lbl'Unds'Map'Unds' ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' kore-element-var-VS2 kore-element-var-VS0 ) kore-element-var-VS1 ) ) ( \kore-and kore-sort-var-Q0 ( \kore-equals \kore-sort-SortBool kore-sort-var-Q0 ( \kore-symbol-Lbl'Unds'in'Unds'keys'LParUndsRParUnds'MAP'Unds'Bool'Unds'KItem'Unds'Map kore-element-var-VS2 kore-element-var-VS1 ) ( \kore-dv \kore-sort-SortBool "false" ) ) ( \kore-and kore-sort-var-Q0 ( \kore-top kore-sort-var-Q0 ) ( \kore-ceil \kore-sort-SortKItem kore-sort-var-Q0 kore-element-var-VS0 ) ) ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

IMP-axiom-3071 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-V1 \kore-sort-SortMap ) ( \and ( \in-sort kore-element-var-V2 \kore-sort-SortMap ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortMap kore-sort-var-R kore-element-var-V0 ( \kore-equals \kore-sort-SortMap kore-sort-var-R kore-element-var-V0 ( \kore-symbol-Lbl'Unds'Map'Unds' kore-element-var-V1 kore-element-var-V2 ) ) ) ) ) $.

IMP-axiom-3072 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-V1 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-V2 \kore-sort-SortInt ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortInt kore-sort-var-R kore-element-var-V0 ( \kore-equals \kore-sort-SortInt kore-sort-var-R kore-element-var-V0 ( \kore-symbol-Lbl'UndsSlsh'Int'Unds' kore-element-var-V1 kore-element-var-V2 ) ) ) ) ) $.

IMP-axiom-3073 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-V1 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-V2 \kore-sort-SortInt ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortInt kore-sort-var-R kore-element-var-V0 ( \kore-equals \kore-sort-SortInt kore-sort-var-R kore-element-var-V0 ( \kore-symbol-Lbl'UndsPerc'Int'Unds' kore-element-var-V1 kore-element-var-V2 ) ) ) ) ) $.

IMP-axiom-3074 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-From \kore-sort-SortKConfigVar ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem kore-element-var-From ) ) ) ) ) $.

kore-inj-axiom $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \kore-is-sort kore-sort-var-S1 ) ( \and ( \kore-is-sort kore-sort-var-S2 ) ( \and ( \kore-is-sort kore-sort-var-S3 ) ( \and ( \in-sort kore-element-var-T kore-sort-var-S1 ) \top ) ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-equals kore-sort-var-S3 kore-sort-var-R ( \kore-inj kore-sort-var-S2 kore-sort-var-S3 ( \kore-inj kore-sort-var-S1 kore-sort-var-S2 kore-element-var-T ) ) ( \kore-inj kore-sort-var-S1 kore-sort-var-S3 kore-element-var-T ) ) ) ) $.
no-junk-axiom-0 $a |- ( \eq ( \inh \kore-sort-SortK ) ( \or ( \sorted-exists kore-element-var-x0 \kore-sort-SortKItem ( \sorted-exists kore-element-var-x1 \kore-sort-SortK ( \kore-symbol-kseq kore-element-var-x0 kore-element-var-x1 ) ) ) \kore-symbol-dotk ) ) $.
no-junk-axiom-1 $a |- ( \eq ( \inh \kore-sort-SortKItem ) ( \or ( \sorted-exists kore-element-var-x0 \kore-sort-SortIOString kore-element-var-x0 ) ( \or ( \sorted-exists kore-element-var-x0 \kore-sort-SortString kore-element-var-x0 ) ( \or ( \sorted-exists kore-element-var-x0 \kore-sort-SortInt kore-element-var-x0 ) ( \or ( \sorted-exists kore-element-var-x0 \kore-sort-SortAExp kore-element-var-x0 ) ( \or ( \sorted-exists kore-element-var-x0 \kore-sort-SortTCell kore-element-var-x0 ) ( \or ( \sorted-exists kore-element-var-x0 \kore-sort-SortKCellOpt kore-element-var-x0 ) ( \or ( \sorted-exists kore-element-var-x0 \kore-sort-SortStateCell kore-element-var-x0 ) ( \or ( \sorted-exists kore-element-var-x0 \kore-sort-SortIds kore-element-var-x0 ) ( \or ( \sorted-exists kore-element-var-x0 \kore-sort-SortGeneratedCounterCellOpt kore-element-var-x0 ) ( \or ( \sorted-exists kore-element-var-x0 \kore-sort-SortKResult kore-element-var-x0 ) ( \or ( \sorted-exists kore-element-var-x0 \kore-sort-SortGeneratedCounterCell kore-element-var-x0 ) ( \or ( \sorted-exists kore-element-var-x0 \kore-sort-SortBool kore-element-var-x0 ) ( \or ( \sorted-exists kore-element-var-x0 \kore-sort-SortKCell kore-element-var-x0 ) ( \or ( \sorted-exists kore-element-var-x0 \kore-sort-SortTCellOpt kore-element-var-x0 ) ( \or ( \sorted-exists kore-element-var-x0 \kore-sort-SortIOError kore-element-var-x0 ) ( \or ( \sorted-exists kore-element-var-x0 \kore-sort-SortSet kore-element-var-x0 ) ( \or ( \sorted-exists kore-element-var-x0 \kore-sort-SortBlock kore-element-var-x0 ) ( \or ( \sorted-exists kore-element-var-x0 \kore-sort-SortTCellFragment kore-element-var-x0 ) ( \or ( \sorted-exists kore-element-var-x0 \kore-sort-SortStream kore-element-var-x0 ) ( \or ( \sorted-exists kore-element-var-x0 \kore-sort-SortIOFile kore-element-var-x0 ) ( \or ( \sorted-exists kore-element-var-x0 \kore-sort-SortGeneratedTopCell kore-element-var-x0 ) ( \or ( \sorted-exists kore-element-var-x0 \kore-sort-SortIOInt kore-element-var-x0 ) ( \or ( \sorted-exists kore-element-var-x0 \kore-sort-SortList kore-element-var-x0 ) ( \or ( \sorted-exists kore-element-var-x0 \kore-sort-SortId kore-element-var-x0 ) ( \or ( \sorted-exists kore-element-var-x0 \kore-sort-SortFloat kore-element-var-x0 ) ( \or ( \sorted-exists kore-element-var-x0 \kore-sort-SortStateCellOpt kore-element-var-x0 ) ( \or ( \sorted-exists kore-element-var-x0 \kore-sort-SortGeneratedTopCellFragment kore-element-var-x0 ) ( \or ( \sorted-exists kore-element-var-x0 \kore-sort-SortPgm kore-element-var-x0 ) ( \or ( \sorted-exists kore-element-var-x0 \kore-sort-SortBExp kore-element-var-x0 ) ( \or ( \sorted-exists kore-element-var-x0 \kore-sort-SortStmt kore-element-var-x0 ) ( \or ( \sorted-exists kore-element-var-x0 \kore-sort-SortMap kore-element-var-x0 ) ( \or ( \sorted-exists kore-element-var-x0 \kore-sort-SortKConfigVar kore-element-var-x0 ) ( \or \kore-symbol-Lbl'Hash'freezer'BangUndsUnds'IMP-SYNTAX'Unds'BExp'Unds'BExp0'Unds' ( \or ( \sorted-exists kore-element-var-x0 \kore-sort-SortK ( \kore-symbol-Lbl'Hash'freezer'UndsAnd-And-UndsUnds'IMP-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds' kore-element-var-x0 ) ) ( \or ( \sorted-exists kore-element-var-x0 \kore-sort-SortK ( \kore-symbol-Lbl'Hash'freezer'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds' kore-element-var-x0 ) ) ( \or ( \sorted-exists kore-element-var-x0 \kore-sort-SortK ( \kore-symbol-Lbl'Hash'freezer'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds' kore-element-var-x0 ) ) ( \or ( \sorted-exists kore-element-var-x0 \kore-sort-SortK ( \kore-symbol-Lbl'Hash'freezer'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds' kore-element-var-x0 ) ) ( \or ( \sorted-exists kore-element-var-x0 \kore-sort-SortK ( \kore-symbol-Lbl'Hash'freezer'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds' kore-element-var-x0 ) ) ( \or ( \sorted-exists kore-element-var-x0 \kore-sort-SortK ( \kore-symbol-Lbl'Hash'freezer'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds' kore-element-var-x0 ) ) ( \or ( \sorted-exists kore-element-var-x0 \kore-sort-SortK ( \kore-symbol-Lbl'Hash'freezer'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds' kore-element-var-x0 ) ) ( \or ( \sorted-exists kore-element-var-x0 \kore-sort-SortK ( \kore-symbol-Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'IMP-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds' kore-element-var-x0 ) ) ( \or ( \sorted-exists kore-element-var-x0 \kore-sort-SortK ( \kore-symbol-Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'IMP-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds' kore-element-var-x0 ) ) ( \or ( \sorted-exists kore-element-var-x0 \kore-sort-SortK ( \kore-symbol-Lbl'Hash'freezer'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp1'Unds' kore-element-var-x0 ) ) ( \or ( \sorted-exists kore-element-var-x0 \kore-sort-SortK ( \sorted-exists kore-element-var-x1 \kore-sort-SortK ( \kore-symbol-Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'IMP-SYNTAX'Unds'Stmt'Unds'BExp'Unds'Block'Unds'Block0'Unds' kore-element-var-x0 kore-element-var-x1 ) ) ) ( \sorted-exists kore-element-var-x0 \kore-sort-SortInt ( \sorted-exists kore-element-var-x1 \kore-sort-SortString ( \sorted-exists kore-element-var-x2 \kore-sort-SortString ( \kore-symbol-Lbl'Hash'systemResult kore-element-var-x0 kore-element-var-x1 kore-element-var-x2 ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) $.
no-junk-axiom-2 $a |- ( \eq ( \inh \kore-sort-SortIds ) ( \or \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ( \sorted-exists kore-element-var-x0 \kore-sort-SortId ( \sorted-exists kore-element-var-x1 \kore-sort-SortIds ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids kore-element-var-x0 kore-element-var-x1 ) ) ) ) ) $.
no-junk-axiom-3 $a |- ( \eq ( \inh \kore-sort-SortTCellFragment ) ( \sorted-exists kore-element-var-x0 \kore-sort-SortKCellOpt ( \sorted-exists kore-element-var-x1 \kore-sort-SortStateCellOpt ( \kore-symbol-Lbl'-LT-'T'-GT-'-fragment kore-element-var-x0 kore-element-var-x1 ) ) ) ) $.
no-junk-axiom-4 $a |- ( \eq ( \inh \kore-sort-SortKCellOpt ) ( \or ( \sorted-exists kore-element-var-x0 \kore-sort-SortKCell kore-element-var-x0 ) \kore-symbol-LblnoKCell ) ) $.
no-junk-axiom-5 $a |- ( \eq ( \inh \kore-sort-SortIOInt ) ( \or ( \sorted-exists kore-element-var-x0 \kore-sort-SortInt kore-element-var-x0 ) ( \sorted-exists kore-element-var-x0 \kore-sort-SortIOError kore-element-var-x0 ) ) ) $.
no-junk-axiom-6 $a |- ( \eq ( \inh \kore-sort-SortGeneratedTopCellFragment ) ( \sorted-exists kore-element-var-x0 \kore-sort-SortTCellOpt ( \sorted-exists kore-element-var-x1 \kore-sort-SortGeneratedCounterCellOpt ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-'-fragment kore-element-var-x0 kore-element-var-x1 ) ) ) ) $.
no-junk-axiom-7 $a |- ( \eq ( \inh \kore-sort-SortIOFile ) ( \or ( \sorted-exists kore-element-var-x0 \kore-sort-SortIOError kore-element-var-x0 ) ( \sorted-exists kore-element-var-x0 \kore-sort-SortString ( \sorted-exists kore-element-var-x1 \kore-sort-SortInt ( \kore-symbol-Lbl'Hash'tempFile kore-element-var-x0 kore-element-var-x1 ) ) ) ) ) $.
no-junk-axiom-9 $a |- ( \eq ( \inh \kore-sort-SortKCell ) ( \sorted-exists kore-element-var-x0 \kore-sort-SortK ( \kore-symbol-Lbl'-LT-'k'-GT-' kore-element-var-x0 ) ) ) $.
no-junk-axiom-10 $a |- ( \eq ( \inh \kore-sort-SortGeneratedTopCell ) ( \sorted-exists kore-element-var-x0 \kore-sort-SortTCell ( \sorted-exists kore-element-var-x1 \kore-sort-SortGeneratedCounterCell ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' kore-element-var-x0 kore-element-var-x1 ) ) ) ) $.
no-junk-axiom-11 $a |- ( \eq ( \inh \kore-sort-SortStateCell ) ( \sorted-exists kore-element-var-x0 \kore-sort-SortMap ( \kore-symbol-Lbl'-LT-'state'-GT-' kore-element-var-x0 ) ) ) $.
no-junk-axiom-12 $a |- ( \eq ( \inh \kore-sort-SortGeneratedCounterCell ) ( \sorted-exists kore-element-var-x0 \kore-sort-SortInt ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' kore-element-var-x0 ) ) ) $.
no-junk-axiom-14 $a |- ( \eq ( \inh \kore-sort-SortTCellOpt ) ( \or ( \sorted-exists kore-element-var-x0 \kore-sort-SortTCell kore-element-var-x0 ) \kore-symbol-LblnoTCell ) ) $.
no-junk-axiom-15 $a |- ( \eq ( \inh \kore-sort-SortAExp ) ( \or ( \sorted-exists kore-element-var-x0 \kore-sort-SortInt kore-element-var-x0 ) ( \or ( \sorted-exists kore-element-var-x0 \kore-sort-SortId kore-element-var-x0 ) ( \or ( \sorted-exists kore-element-var-x0 \kore-sort-SortInt ( \kore-symbol-Lbl-'UndsUnds'IMP-SYNTAX'Unds'AExp'Unds'Int kore-element-var-x0 ) ) ( \or ( \sorted-exists kore-element-var-x0 \kore-sort-SortAExp ( \sorted-exists kore-element-var-x1 \kore-sort-SortAExp ( \kore-symbol-Lbl'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp kore-element-var-x0 kore-element-var-x1 ) ) ) ( \or ( \sorted-exists kore-element-var-x0 \kore-sort-SortAExp ( \sorted-exists kore-element-var-x1 \kore-sort-SortAExp ( \kore-symbol-Lbl'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp kore-element-var-x0 kore-element-var-x1 ) ) ) ( \sorted-exists kore-element-var-x0 \kore-sort-SortAExp ( \sorted-exists kore-element-var-x1 \kore-sort-SortAExp ( \kore-symbol-Lbl'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp kore-element-var-x0 kore-element-var-x1 ) ) ) ) ) ) ) ) ) $.
no-junk-axiom-18 $a |- ( \eq ( \inh \kore-sort-SortIOString ) ( \or ( \sorted-exists kore-element-var-x0 \kore-sort-SortString kore-element-var-x0 ) ( \sorted-exists kore-element-var-x0 \kore-sort-SortIOError kore-element-var-x0 ) ) ) $.
no-junk-axiom-20 $a |- ( \eq ( \inh \kore-sort-SortBlock ) ( \or ( \sorted-exists kore-element-var-x0 \kore-sort-SortStmt ( \kore-symbol-Lbl'LBraUndsRBraUnds'IMP-SYNTAX'Unds'Block'Unds'Stmt kore-element-var-x0 ) ) \kore-symbol-Lbl'LBraRBraUnds'IMP-SYNTAX'Unds'Block ) ) $.
no-junk-axiom-21 $a |- ( \eq ( \inh \kore-sort-SortGeneratedCounterCellOpt ) ( \or ( \sorted-exists kore-element-var-x0 \kore-sort-SortGeneratedCounterCell kore-element-var-x0 ) \kore-symbol-LblnoGeneratedCounterCell ) ) $.
no-junk-axiom-23 $a |- ( \eq ( \inh \kore-sort-SortBExp ) ( \or ( \sorted-exists kore-element-var-x0 \kore-sort-SortBool kore-element-var-x0 ) ( \or ( \sorted-exists kore-element-var-x0 \kore-sort-SortBExp ( \kore-symbol-Lbl'BangUndsUnds'IMP-SYNTAX'Unds'BExp'Unds'BExp kore-element-var-x0 ) ) ( \or ( \sorted-exists kore-element-var-x0 \kore-sort-SortBExp ( \sorted-exists kore-element-var-x1 \kore-sort-SortBExp ( \kore-symbol-Lbl'UndsAnd-And-UndsUnds'IMP-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp kore-element-var-x0 kore-element-var-x1 ) ) ) ( \sorted-exists kore-element-var-x0 \kore-sort-SortAExp ( \sorted-exists kore-element-var-x1 \kore-sort-SortAExp ( \kore-symbol-Lbl'Unds-LT-EqlsUndsUnds'IMP-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp kore-element-var-x0 kore-element-var-x1 ) ) ) ) ) ) ) $.
no-junk-axiom-25 $a |- ( \eq ( \inh \kore-sort-SortStateCellOpt ) ( \or ( \sorted-exists kore-element-var-x0 \kore-sort-SortStateCell kore-element-var-x0 ) \kore-symbol-LblnoStateCell ) ) $.
no-junk-axiom-26 $a |- ( \eq ( \inh \kore-sort-SortIOError ) ( \or \kore-symbol-Lbl'Hash'E2BIG ( \or \kore-symbol-Lbl'Hash'EACCES ( \or \kore-symbol-Lbl'Hash'EADDRINUSE ( \or \kore-symbol-Lbl'Hash'EADDRNOTAVAIL ( \or \kore-symbol-Lbl'Hash'EAFNOSUPPORT ( \or \kore-symbol-Lbl'Hash'EAGAIN ( \or \kore-symbol-Lbl'Hash'EALREADY ( \or \kore-symbol-Lbl'Hash'EBADF ( \or \kore-symbol-Lbl'Hash'EBUSY ( \or \kore-symbol-Lbl'Hash'ECHILD ( \or \kore-symbol-Lbl'Hash'ECONNABORTED ( \or \kore-symbol-Lbl'Hash'ECONNREFUSED ( \or \kore-symbol-Lbl'Hash'ECONNRESET ( \or \kore-symbol-Lbl'Hash'EDEADLK ( \or \kore-symbol-Lbl'Hash'EDESTADDRREQ ( \or \kore-symbol-Lbl'Hash'EDOM ( \or \kore-symbol-Lbl'Hash'EEXIST ( \or \kore-symbol-Lbl'Hash'EFAULT ( \or \kore-symbol-Lbl'Hash'EFBIG ( \or \kore-symbol-Lbl'Hash'EHOSTDOWN ( \or \kore-symbol-Lbl'Hash'EHOSTUNREACH ( \or \kore-symbol-Lbl'Hash'EINPROGRESS ( \or \kore-symbol-Lbl'Hash'EINTR ( \or \kore-symbol-Lbl'Hash'EINVAL ( \or \kore-symbol-Lbl'Hash'EIO ( \or \kore-symbol-Lbl'Hash'EISCONN ( \or \kore-symbol-Lbl'Hash'EISDIR ( \or \kore-symbol-Lbl'Hash'ELOOP ( \or \kore-symbol-Lbl'Hash'EMFILE ( \or \kore-symbol-Lbl'Hash'EMLINK ( \or \kore-symbol-Lbl'Hash'EMSGSIZE ( \or \kore-symbol-Lbl'Hash'ENAMETOOLONG ( \or \kore-symbol-Lbl'Hash'ENETDOWN ( \or \kore-symbol-Lbl'Hash'ENETRESET ( \or \kore-symbol-Lbl'Hash'ENETUNREACH ( \or \kore-symbol-Lbl'Hash'ENFILE ( \or \kore-symbol-Lbl'Hash'ENOBUFS ( \or \kore-symbol-Lbl'Hash'ENODEV ( \or \kore-symbol-Lbl'Hash'ENOENT ( \or \kore-symbol-Lbl'Hash'ENOEXEC ( \or \kore-symbol-Lbl'Hash'ENOLCK ( \or \kore-symbol-Lbl'Hash'ENOMEM ( \or \kore-symbol-Lbl'Hash'ENOPROTOOPT ( \or \kore-symbol-Lbl'Hash'ENOSPC ( \or \kore-symbol-Lbl'Hash'ENOSYS ( \or \kore-symbol-Lbl'Hash'ENOTCONN ( \or \kore-symbol-Lbl'Hash'ENOTDIR ( \or \kore-symbol-Lbl'Hash'ENOTEMPTY ( \or \kore-symbol-Lbl'Hash'ENOTSOCK ( \or \kore-symbol-Lbl'Hash'ENOTTY ( \or \kore-symbol-Lbl'Hash'ENXIO ( \or \kore-symbol-Lbl'Hash'EOF ( \or \kore-symbol-Lbl'Hash'EOPNOTSUPP ( \or \kore-symbol-Lbl'Hash'EOVERFLOW ( \or \kore-symbol-Lbl'Hash'EPERM ( \or \kore-symbol-Lbl'Hash'EPFNOSUPPORT ( \or \kore-symbol-Lbl'Hash'EPIPE ( \or \kore-symbol-Lbl'Hash'EPROTONOSUPPORT ( \or \kore-symbol-Lbl'Hash'EPROTOTYPE ( \or \kore-symbol-Lbl'Hash'ERANGE ( \or \kore-symbol-Lbl'Hash'EROFS ( \or \kore-symbol-Lbl'Hash'ESHUTDOWN ( \or \kore-symbol-Lbl'Hash'ESOCKTNOSUPPORT ( \or \kore-symbol-Lbl'Hash'ESPIPE ( \or \kore-symbol-Lbl'Hash'ESRCH ( \or \kore-symbol-Lbl'Hash'ETIMEDOUT ( \or \kore-symbol-Lbl'Hash'ETOOMANYREFS ( \or \kore-symbol-Lbl'Hash'EWOULDBLOCK ( \or \kore-symbol-Lbl'Hash'EXDEV ( \sorted-exists kore-element-var-x0 \kore-sort-SortInt ( \kore-symbol-Lbl'Hash'unknownIOError kore-element-var-x0 ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) $.
no-junk-axiom-28 $a |- ( \eq ( \inh \kore-sort-SortPgm ) ( \sorted-exists kore-element-var-x0 \kore-sort-SortIds ( \sorted-exists kore-element-var-x1 \kore-sort-SortStmt ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt kore-element-var-x0 kore-element-var-x1 ) ) ) ) $.
no-junk-axiom-29 $a |- ( \eq ( \inh \kore-sort-SortKResult ) ( \or ( \sorted-exists kore-element-var-x0 \kore-sort-SortInt kore-element-var-x0 ) ( \sorted-exists kore-element-var-x0 \kore-sort-SortBool kore-element-var-x0 ) ) ) $.
no-junk-axiom-30 $a |- ( \eq ( \inh \kore-sort-SortStream ) ( \sorted-exists kore-element-var-x0 \kore-sort-SortK ( \kore-symbol-Lbl'Hash'buffer'LParUndsRParUnds'K-IO'Unds'Stream'Unds'K kore-element-var-x0 ) ) ) $.
no-junk-axiom-31 $a |- ( \eq ( \inh \kore-sort-SortTCell ) ( \sorted-exists kore-element-var-x0 \kore-sort-SortKCell ( \sorted-exists kore-element-var-x1 \kore-sort-SortStateCell ( \kore-symbol-Lbl'-LT-'T'-GT-' kore-element-var-x0 kore-element-var-x1 ) ) ) ) $.
no-junk-axiom-32 $a |- ( \eq ( \inh \kore-sort-SortStmt ) ( \or ( \sorted-exists kore-element-var-x0 \kore-sort-SortBlock kore-element-var-x0 ) ( \or ( \sorted-exists kore-element-var-x0 \kore-sort-SortId ( \sorted-exists kore-element-var-x1 \kore-sort-SortAExp ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp kore-element-var-x0 kore-element-var-x1 ) ) ) ( \or ( \sorted-exists kore-element-var-x0 \kore-sort-SortStmt ( \sorted-exists kore-element-var-x1 \kore-sort-SortStmt ( \kore-symbol-Lbl'UndsUndsUnds'IMP-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt kore-element-var-x0 kore-element-var-x1 ) ) ) ( \or ( \sorted-exists kore-element-var-x0 \kore-sort-SortBExp ( \sorted-exists kore-element-var-x1 \kore-sort-SortBlock ( \sorted-exists kore-element-var-x2 \kore-sort-SortBlock ( \kore-symbol-Lblif'LParUndsRParUnds'else'UndsUnds'IMP-SYNTAX'Unds'Stmt'Unds'BExp'Unds'Block'Unds'Block kore-element-var-x0 kore-element-var-x1 kore-element-var-x2 ) ) ) ) ( \sorted-exists kore-element-var-x0 \kore-sort-SortBExp ( \sorted-exists kore-element-var-x1 \kore-sort-SortBlock ( \kore-symbol-Lblwhile'LParUndsRParUndsUnds'IMP-SYNTAX'Unds'Stmt'Unds'BExp'Unds'Block kore-element-var-x0 kore-element-var-x1 ) ) ) ) ) ) ) ) $.
notation-cache-0 $p #Notation ( \kore-inj ptn0 ptn1 ptn2 ) ( \app ( \app ( \app \kore-inj-symbol ptn0 ) ptn1 ) ptn2 ) $= ( app-is-pattern kore-inj-is-symbol symbol-is-pattern notation-reflexivity notation-app kore-inj-is-pattern kore-inj-is-sugar notation-transitivity ) ABCIEFADBDCDEFADBDCDABCJEFADBDCEFADBDCEFADBEFADBEFAEFAEFGAGHBGHCGHK $.
${ $d xX0 ptn1 $.
   $d xX0 ptn2 $.
   kore-inj-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   kore-inj-application-context-0 $p #ApplicationContext xX0 ( \kore-inj ptn0 ptn1 ptn2 ) $= ( app-is-pattern kore-inj-is-symbol symbol-is-pattern application-context-app-left kore-inj-is-pattern application-context-app-right notation-cache-0 notation-application-context ) GHBFCFDFBCDJAGHBFCFDAGHBFCAGHBAEKIIBCDLM $. $}
${ $d xX0 ptn0 $.
   $d xX0 ptn2 $.
   kore-inj-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   kore-inj-application-context-1 $p #ApplicationContext xX0 ( \kore-inj ptn0 ptn1 ptn2 ) $= ( app-is-pattern kore-inj-is-symbol symbol-is-pattern kore-inj-is-pattern application-context-app-right application-context-app-left notation-cache-0 notation-application-context ) GHBFCFDFBCDIAGHBFCFDAGHBFCAEJKBCDLM $. $}
${ $d xX0 ptn0 $.
   $d xX0 ptn1 $.
   kore-inj-application-context-2.0 $e #ApplicationContext xX0 ptn2 $.
   kore-inj-application-context-2 $p #ApplicationContext xX0 ( \kore-inj ptn0 ptn1 ptn2 ) $= ( app-is-pattern kore-inj-is-symbol symbol-is-pattern kore-inj-is-pattern application-context-app-right notation-cache-0 notation-application-context ) GHBFCFDFBCDIAGHBFCFDAEJBCDKL $. $}
${ BASIC-K-sort-0-substitution $p #Substitution \kore-sort-SortK \kore-sort-SortK ptn0 xX0 $= ( BASIC-K-sort-0-is-pattern substitution-disjoint ) CBAD $. $}
${ BASIC-K-sort-1-substitution $p #Substitution \kore-sort-SortKItem \kore-sort-SortKItem ptn0 xX0 $= ( BASIC-K-sort-1-is-pattern substitution-disjoint ) CBAD $. $}
notation-cache-1 $p #Notation ( \kore-symbol-kseq ptn1 ptn2 ) ( \app ( \app \kore-symbol-kseq-symbol ptn1 ) ptn2 ) $= ( app-is-pattern KSEQ-symbol-0-is-symbol symbol-is-pattern KSEQ-symbol-0-is-pattern KSEQ-symbol-0-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-2 $p #Notation ( \kore-symbol-kseq ptn3 ptn4 ) ( \app ( \app \kore-symbol-kseq-symbol ptn3 ) ptn4 ) $= ( app-is-pattern KSEQ-symbol-0-is-symbol symbol-is-pattern KSEQ-symbol-0-is-pattern KSEQ-symbol-0-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ KSEQ-symbol-0-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   KSEQ-symbol-0-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   KSEQ-symbol-0-substitution $p #Substitution ( \kore-symbol-kseq ptn1 ptn2 ) ( \kore-symbol-kseq ptn3 ptn4 ) ptn0 xX0 $= ( KSEQ-symbol-0-is-symbol symbol-is-pattern app-is-pattern KSEQ-symbol-0-is-pattern substitution-app substitution-disjoint notation-cache-1 notation-cache-2 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-3 $p #Notation ( \kore-symbol-kseq ptn0 ptn1 ) ( \app ( \app \kore-symbol-kseq-symbol ptn0 ) ptn1 ) $= ( KSEQ-symbol-0-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app KSEQ-symbol-0-is-pattern KSEQ-symbol-0-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   KSEQ-symbol-0-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   KSEQ-symbol-0-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-kseq ptn0 ptn1 ) $= ( KSEQ-symbol-0-is-symbol symbol-is-pattern app-is-pattern KSEQ-symbol-0-is-pattern application-context-app-right application-context-app-left notation-cache-3 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   KSEQ-symbol-0-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   KSEQ-symbol-0-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-kseq ptn0 ptn1 ) $= ( app-is-pattern KSEQ-symbol-0-is-symbol symbol-is-pattern KSEQ-symbol-0-is-pattern application-context-app-right notation-cache-3 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
${ KSEQ-symbol-1-substitution $p #Substitution \kore-symbol-dotk \kore-symbol-dotk ptn0 xX0 $= ( KSEQ-symbol-1-is-pattern substitution-disjoint ) CBAD $. $}
notation-cache-4 $p #Notation ( \kore-symbol-append ptn1 ptn2 ) ( \app ( \app \kore-symbol-append-symbol ptn1 ) ptn2 ) $= ( app-is-pattern KSEQ-symbol-2-is-symbol symbol-is-pattern KSEQ-symbol-2-is-pattern KSEQ-symbol-2-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-5 $p #Notation ( \kore-symbol-append ptn3 ptn4 ) ( \app ( \app \kore-symbol-append-symbol ptn3 ) ptn4 ) $= ( app-is-pattern KSEQ-symbol-2-is-symbol symbol-is-pattern KSEQ-symbol-2-is-pattern KSEQ-symbol-2-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ KSEQ-symbol-2-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   KSEQ-symbol-2-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   KSEQ-symbol-2-substitution $p #Substitution ( \kore-symbol-append ptn1 ptn2 ) ( \kore-symbol-append ptn3 ptn4 ) ptn0 xX0 $= ( KSEQ-symbol-2-is-symbol symbol-is-pattern app-is-pattern KSEQ-symbol-2-is-pattern substitution-app substitution-disjoint notation-cache-4 notation-cache-5 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-6 $p #Notation ( \kore-symbol-append ptn0 ptn1 ) ( \app ( \app \kore-symbol-append-symbol ptn0 ) ptn1 ) $= ( KSEQ-symbol-2-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app KSEQ-symbol-2-is-pattern KSEQ-symbol-2-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   KSEQ-symbol-2-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   KSEQ-symbol-2-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-append ptn0 ptn1 ) $= ( KSEQ-symbol-2-is-symbol symbol-is-pattern app-is-pattern KSEQ-symbol-2-is-pattern application-context-app-right application-context-app-left notation-cache-6 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   KSEQ-symbol-2-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   KSEQ-symbol-2-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-append ptn0 ptn1 ) $= ( app-is-pattern KSEQ-symbol-2-is-symbol symbol-is-pattern KSEQ-symbol-2-is-pattern application-context-app-right notation-cache-6 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
${ IMP-sort-0-substitution $p #Substitution \kore-sort-SortIds \kore-sort-SortIds ptn0 xX0 $= ( IMP-sort-0-is-pattern substitution-disjoint ) CBAD $. $}
${ IMP-sort-1-substitution $p #Substitution \kore-sort-SortTCellFragment \kore-sort-SortTCellFragment ptn0 xX0 $= ( IMP-sort-1-is-pattern substitution-disjoint ) CBAD $. $}
${ IMP-sort-2-substitution $p #Substitution \kore-sort-SortKCellOpt \kore-sort-SortKCellOpt ptn0 xX0 $= ( IMP-sort-2-is-pattern substitution-disjoint ) CBAD $. $}
${ IMP-sort-3-substitution $p #Substitution \kore-sort-SortIOInt \kore-sort-SortIOInt ptn0 xX0 $= ( IMP-sort-3-is-pattern substitution-disjoint ) CBAD $. $}
${ IMP-sort-4-substitution $p #Substitution \kore-sort-SortGeneratedTopCellFragment \kore-sort-SortGeneratedTopCellFragment ptn0 xX0 $= ( IMP-sort-4-is-pattern substitution-disjoint ) CBAD $. $}
${ IMP-sort-5-substitution $p #Substitution \kore-sort-SortIOFile \kore-sort-SortIOFile ptn0 xX0 $= ( IMP-sort-5-is-pattern substitution-disjoint ) CBAD $. $}
${ IMP-sort-6-substitution $p #Substitution \kore-sort-SortList \kore-sort-SortList ptn0 xX0 $= ( IMP-sort-6-is-pattern substitution-disjoint ) CBAD $. $}
${ IMP-sort-7-substitution $p #Substitution \kore-sort-SortKCell \kore-sort-SortKCell ptn0 xX0 $= ( IMP-sort-7-is-pattern substitution-disjoint ) CBAD $. $}
${ IMP-sort-8-substitution $p #Substitution \kore-sort-SortGeneratedTopCell \kore-sort-SortGeneratedTopCell ptn0 xX0 $= ( IMP-sort-8-is-pattern substitution-disjoint ) CBAD $. $}
${ IMP-sort-9-substitution $p #Substitution \kore-sort-SortStateCell \kore-sort-SortStateCell ptn0 xX0 $= ( IMP-sort-9-is-pattern substitution-disjoint ) CBAD $. $}
${ IMP-sort-10-substitution $p #Substitution \kore-sort-SortGeneratedCounterCell \kore-sort-SortGeneratedCounterCell ptn0 xX0 $= ( IMP-sort-10-is-pattern substitution-disjoint ) CBAD $. $}
${ IMP-sort-11-substitution $p #Substitution \kore-sort-SortFloat \kore-sort-SortFloat ptn0 xX0 $= ( IMP-sort-11-is-pattern substitution-disjoint ) CBAD $. $}
${ IMP-sort-12-substitution $p #Substitution \kore-sort-SortTCellOpt \kore-sort-SortTCellOpt ptn0 xX0 $= ( IMP-sort-12-is-pattern substitution-disjoint ) CBAD $. $}
${ IMP-sort-13-substitution $p #Substitution \kore-sort-SortAExp \kore-sort-SortAExp ptn0 xX0 $= ( IMP-sort-13-is-pattern substitution-disjoint ) CBAD $. $}
${ IMP-sort-14-substitution $p #Substitution \kore-sort-SortMap \kore-sort-SortMap ptn0 xX0 $= ( IMP-sort-14-is-pattern substitution-disjoint ) CBAD $. $}
${ IMP-sort-15-substitution $p #Substitution \kore-sort-SortString \kore-sort-SortString ptn0 xX0 $= ( IMP-sort-15-is-pattern substitution-disjoint ) CBAD $. $}
${ IMP-sort-16-substitution $p #Substitution \kore-sort-SortIOString \kore-sort-SortIOString ptn0 xX0 $= ( IMP-sort-16-is-pattern substitution-disjoint ) CBAD $. $}
${ IMP-sort-17-substitution $p #Substitution \kore-sort-SortId \kore-sort-SortId ptn0 xX0 $= ( IMP-sort-17-is-pattern substitution-disjoint ) CBAD $. $}
${ IMP-sort-18-substitution $p #Substitution \kore-sort-SortBlock \kore-sort-SortBlock ptn0 xX0 $= ( IMP-sort-18-is-pattern substitution-disjoint ) CBAD $. $}
${ IMP-sort-19-substitution $p #Substitution \kore-sort-SortGeneratedCounterCellOpt \kore-sort-SortGeneratedCounterCellOpt ptn0 xX0 $= ( IMP-sort-19-is-pattern substitution-disjoint ) CBAD $. $}
${ IMP-sort-20-substitution $p #Substitution \kore-sort-SortKConfigVar \kore-sort-SortKConfigVar ptn0 xX0 $= ( IMP-sort-20-is-pattern substitution-disjoint ) CBAD $. $}
${ IMP-sort-21-substitution $p #Substitution \kore-sort-SortBExp \kore-sort-SortBExp ptn0 xX0 $= ( IMP-sort-21-is-pattern substitution-disjoint ) CBAD $. $}
${ IMP-sort-22-substitution $p #Substitution \kore-sort-SortInt \kore-sort-SortInt ptn0 xX0 $= ( IMP-sort-22-is-pattern substitution-disjoint ) CBAD $. $}
${ IMP-sort-23-substitution $p #Substitution \kore-sort-SortStateCellOpt \kore-sort-SortStateCellOpt ptn0 xX0 $= ( IMP-sort-23-is-pattern substitution-disjoint ) CBAD $. $}
${ IMP-sort-24-substitution $p #Substitution \kore-sort-SortIOError \kore-sort-SortIOError ptn0 xX0 $= ( IMP-sort-24-is-pattern substitution-disjoint ) CBAD $. $}
${ IMP-sort-25-substitution $p #Substitution \kore-sort-SortSet \kore-sort-SortSet ptn0 xX0 $= ( IMP-sort-25-is-pattern substitution-disjoint ) CBAD $. $}
${ IMP-sort-26-substitution $p #Substitution \kore-sort-SortPgm \kore-sort-SortPgm ptn0 xX0 $= ( IMP-sort-26-is-pattern substitution-disjoint ) CBAD $. $}
${ IMP-sort-27-substitution $p #Substitution \kore-sort-SortKResult \kore-sort-SortKResult ptn0 xX0 $= ( IMP-sort-27-is-pattern substitution-disjoint ) CBAD $. $}
${ IMP-sort-28-substitution $p #Substitution \kore-sort-SortStream \kore-sort-SortStream ptn0 xX0 $= ( IMP-sort-28-is-pattern substitution-disjoint ) CBAD $. $}
${ IMP-sort-29-substitution $p #Substitution \kore-sort-SortTCell \kore-sort-SortTCell ptn0 xX0 $= ( IMP-sort-29-is-pattern substitution-disjoint ) CBAD $. $}
${ IMP-sort-30-substitution $p #Substitution \kore-sort-SortStmt \kore-sort-SortStmt ptn0 xX0 $= ( IMP-sort-30-is-pattern substitution-disjoint ) CBAD $. $}
${ IMP-sort-31-substitution $p #Substitution \kore-sort-SortBool \kore-sort-SortBool ptn0 xX0 $= ( IMP-sort-31-is-pattern substitution-disjoint ) CBAD $. $}
notation-cache-7 $p #Notation ( \kore-symbol-Lbl'BangUndsUnds'IMP-SYNTAX'Unds'BExp'Unds'BExp ptn1 ) ( \app \kore-symbol-Lbl'BangUndsUnds'IMP-SYNTAX'Unds'BExp'Unds'BExp-symbol ptn1 ) $= ( IMP-symbol-0-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-0-is-pattern IMP-symbol-0-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-8 $p #Notation ( \kore-symbol-Lbl'BangUndsUnds'IMP-SYNTAX'Unds'BExp'Unds'BExp ptn2 ) ( \app \kore-symbol-Lbl'BangUndsUnds'IMP-SYNTAX'Unds'BExp'Unds'BExp-symbol ptn2 ) $= ( IMP-symbol-0-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-0-is-pattern IMP-symbol-0-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-0-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-0-substitution $p #Substitution ( \kore-symbol-Lbl'BangUndsUnds'IMP-SYNTAX'Unds'BExp'Unds'BExp ptn1 ) ( \kore-symbol-Lbl'BangUndsUnds'IMP-SYNTAX'Unds'BExp'Unds'BExp ptn2 ) ptn0 xX0 $= ( IMP-symbol-0-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-0-is-pattern substitution-disjoint substitution-app notation-cache-7 notation-cache-8 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-9 $p #Notation ( \kore-symbol-Lbl'BangUndsUnds'IMP-SYNTAX'Unds'BExp'Unds'BExp ptn0 ) ( \app \kore-symbol-Lbl'BangUndsUnds'IMP-SYNTAX'Unds'BExp'Unds'BExp-symbol ptn0 ) $= ( IMP-symbol-0-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-0-is-pattern IMP-symbol-0-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-0-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-0-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'BangUndsUnds'IMP-SYNTAX'Unds'BExp'Unds'BExp ptn0 ) $= ( IMP-symbol-0-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-0-is-pattern application-context-app-right notation-cache-9 notation-application-context ) DEBFBGADEBACHBIJ $. $}
${ IMP-symbol-1-substitution $p #Substitution \kore-symbol-Lbl'Hash'E2BIG \kore-symbol-Lbl'Hash'E2BIG ptn0 xX0 $= ( IMP-symbol-1-is-pattern substitution-disjoint ) CBAD $. $}
${ IMP-symbol-2-substitution $p #Substitution \kore-symbol-Lbl'Hash'EACCES \kore-symbol-Lbl'Hash'EACCES ptn0 xX0 $= ( IMP-symbol-2-is-pattern substitution-disjoint ) CBAD $. $}
${ IMP-symbol-3-substitution $p #Substitution \kore-symbol-Lbl'Hash'EADDRINUSE \kore-symbol-Lbl'Hash'EADDRINUSE ptn0 xX0 $= ( IMP-symbol-3-is-pattern substitution-disjoint ) CBAD $. $}
${ IMP-symbol-4-substitution $p #Substitution \kore-symbol-Lbl'Hash'EADDRNOTAVAIL \kore-symbol-Lbl'Hash'EADDRNOTAVAIL ptn0 xX0 $= ( IMP-symbol-4-is-pattern substitution-disjoint ) CBAD $. $}
${ IMP-symbol-5-substitution $p #Substitution \kore-symbol-Lbl'Hash'EAFNOSUPPORT \kore-symbol-Lbl'Hash'EAFNOSUPPORT ptn0 xX0 $= ( IMP-symbol-5-is-pattern substitution-disjoint ) CBAD $. $}
${ IMP-symbol-6-substitution $p #Substitution \kore-symbol-Lbl'Hash'EAGAIN \kore-symbol-Lbl'Hash'EAGAIN ptn0 xX0 $= ( IMP-symbol-6-is-pattern substitution-disjoint ) CBAD $. $}
${ IMP-symbol-7-substitution $p #Substitution \kore-symbol-Lbl'Hash'EALREADY \kore-symbol-Lbl'Hash'EALREADY ptn0 xX0 $= ( IMP-symbol-7-is-pattern substitution-disjoint ) CBAD $. $}
${ IMP-symbol-8-substitution $p #Substitution \kore-symbol-Lbl'Hash'EBADF \kore-symbol-Lbl'Hash'EBADF ptn0 xX0 $= ( IMP-symbol-8-is-pattern substitution-disjoint ) CBAD $. $}
${ IMP-symbol-9-substitution $p #Substitution \kore-symbol-Lbl'Hash'EBUSY \kore-symbol-Lbl'Hash'EBUSY ptn0 xX0 $= ( IMP-symbol-9-is-pattern substitution-disjoint ) CBAD $. $}
${ IMP-symbol-10-substitution $p #Substitution \kore-symbol-Lbl'Hash'ECHILD \kore-symbol-Lbl'Hash'ECHILD ptn0 xX0 $= ( IMP-symbol-10-is-pattern substitution-disjoint ) CBAD $. $}
${ IMP-symbol-11-substitution $p #Substitution \kore-symbol-Lbl'Hash'ECONNABORTED \kore-symbol-Lbl'Hash'ECONNABORTED ptn0 xX0 $= ( IMP-symbol-11-is-pattern substitution-disjoint ) CBAD $. $}
${ IMP-symbol-12-substitution $p #Substitution \kore-symbol-Lbl'Hash'ECONNREFUSED \kore-symbol-Lbl'Hash'ECONNREFUSED ptn0 xX0 $= ( IMP-symbol-12-is-pattern substitution-disjoint ) CBAD $. $}
${ IMP-symbol-13-substitution $p #Substitution \kore-symbol-Lbl'Hash'ECONNRESET \kore-symbol-Lbl'Hash'ECONNRESET ptn0 xX0 $= ( IMP-symbol-13-is-pattern substitution-disjoint ) CBAD $. $}
${ IMP-symbol-14-substitution $p #Substitution \kore-symbol-Lbl'Hash'EDEADLK \kore-symbol-Lbl'Hash'EDEADLK ptn0 xX0 $= ( IMP-symbol-14-is-pattern substitution-disjoint ) CBAD $. $}
${ IMP-symbol-15-substitution $p #Substitution \kore-symbol-Lbl'Hash'EDESTADDRREQ \kore-symbol-Lbl'Hash'EDESTADDRREQ ptn0 xX0 $= ( IMP-symbol-15-is-pattern substitution-disjoint ) CBAD $. $}
${ IMP-symbol-16-substitution $p #Substitution \kore-symbol-Lbl'Hash'EDOM \kore-symbol-Lbl'Hash'EDOM ptn0 xX0 $= ( IMP-symbol-16-is-pattern substitution-disjoint ) CBAD $. $}
${ IMP-symbol-17-substitution $p #Substitution \kore-symbol-Lbl'Hash'EEXIST \kore-symbol-Lbl'Hash'EEXIST ptn0 xX0 $= ( IMP-symbol-17-is-pattern substitution-disjoint ) CBAD $. $}
${ IMP-symbol-18-substitution $p #Substitution \kore-symbol-Lbl'Hash'EFAULT \kore-symbol-Lbl'Hash'EFAULT ptn0 xX0 $= ( IMP-symbol-18-is-pattern substitution-disjoint ) CBAD $. $}
${ IMP-symbol-19-substitution $p #Substitution \kore-symbol-Lbl'Hash'EFBIG \kore-symbol-Lbl'Hash'EFBIG ptn0 xX0 $= ( IMP-symbol-19-is-pattern substitution-disjoint ) CBAD $. $}
${ IMP-symbol-20-substitution $p #Substitution \kore-symbol-Lbl'Hash'EHOSTDOWN \kore-symbol-Lbl'Hash'EHOSTDOWN ptn0 xX0 $= ( IMP-symbol-20-is-pattern substitution-disjoint ) CBAD $. $}
${ IMP-symbol-21-substitution $p #Substitution \kore-symbol-Lbl'Hash'EHOSTUNREACH \kore-symbol-Lbl'Hash'EHOSTUNREACH ptn0 xX0 $= ( IMP-symbol-21-is-pattern substitution-disjoint ) CBAD $. $}
${ IMP-symbol-22-substitution $p #Substitution \kore-symbol-Lbl'Hash'EINPROGRESS \kore-symbol-Lbl'Hash'EINPROGRESS ptn0 xX0 $= ( IMP-symbol-22-is-pattern substitution-disjoint ) CBAD $. $}
${ IMP-symbol-23-substitution $p #Substitution \kore-symbol-Lbl'Hash'EINTR \kore-symbol-Lbl'Hash'EINTR ptn0 xX0 $= ( IMP-symbol-23-is-pattern substitution-disjoint ) CBAD $. $}
${ IMP-symbol-24-substitution $p #Substitution \kore-symbol-Lbl'Hash'EINVAL \kore-symbol-Lbl'Hash'EINVAL ptn0 xX0 $= ( IMP-symbol-24-is-pattern substitution-disjoint ) CBAD $. $}
${ IMP-symbol-25-substitution $p #Substitution \kore-symbol-Lbl'Hash'EIO \kore-symbol-Lbl'Hash'EIO ptn0 xX0 $= ( IMP-symbol-25-is-pattern substitution-disjoint ) CBAD $. $}
${ IMP-symbol-26-substitution $p #Substitution \kore-symbol-Lbl'Hash'EISCONN \kore-symbol-Lbl'Hash'EISCONN ptn0 xX0 $= ( IMP-symbol-26-is-pattern substitution-disjoint ) CBAD $. $}
${ IMP-symbol-27-substitution $p #Substitution \kore-symbol-Lbl'Hash'EISDIR \kore-symbol-Lbl'Hash'EISDIR ptn0 xX0 $= ( IMP-symbol-27-is-pattern substitution-disjoint ) CBAD $. $}
${ IMP-symbol-28-substitution $p #Substitution \kore-symbol-Lbl'Hash'ELOOP \kore-symbol-Lbl'Hash'ELOOP ptn0 xX0 $= ( IMP-symbol-28-is-pattern substitution-disjoint ) CBAD $. $}
${ IMP-symbol-29-substitution $p #Substitution \kore-symbol-Lbl'Hash'EMFILE \kore-symbol-Lbl'Hash'EMFILE ptn0 xX0 $= ( IMP-symbol-29-is-pattern substitution-disjoint ) CBAD $. $}
${ IMP-symbol-30-substitution $p #Substitution \kore-symbol-Lbl'Hash'EMLINK \kore-symbol-Lbl'Hash'EMLINK ptn0 xX0 $= ( IMP-symbol-30-is-pattern substitution-disjoint ) CBAD $. $}
${ IMP-symbol-31-substitution $p #Substitution \kore-symbol-Lbl'Hash'EMSGSIZE \kore-symbol-Lbl'Hash'EMSGSIZE ptn0 xX0 $= ( IMP-symbol-31-is-pattern substitution-disjoint ) CBAD $. $}
${ IMP-symbol-32-substitution $p #Substitution \kore-symbol-Lbl'Hash'ENAMETOOLONG \kore-symbol-Lbl'Hash'ENAMETOOLONG ptn0 xX0 $= ( IMP-symbol-32-is-pattern substitution-disjoint ) CBAD $. $}
${ IMP-symbol-33-substitution $p #Substitution \kore-symbol-Lbl'Hash'ENETDOWN \kore-symbol-Lbl'Hash'ENETDOWN ptn0 xX0 $= ( IMP-symbol-33-is-pattern substitution-disjoint ) CBAD $. $}
${ IMP-symbol-34-substitution $p #Substitution \kore-symbol-Lbl'Hash'ENETRESET \kore-symbol-Lbl'Hash'ENETRESET ptn0 xX0 $= ( IMP-symbol-34-is-pattern substitution-disjoint ) CBAD $. $}
${ IMP-symbol-35-substitution $p #Substitution \kore-symbol-Lbl'Hash'ENETUNREACH \kore-symbol-Lbl'Hash'ENETUNREACH ptn0 xX0 $= ( IMP-symbol-35-is-pattern substitution-disjoint ) CBAD $. $}
${ IMP-symbol-36-substitution $p #Substitution \kore-symbol-Lbl'Hash'ENFILE \kore-symbol-Lbl'Hash'ENFILE ptn0 xX0 $= ( IMP-symbol-36-is-pattern substitution-disjoint ) CBAD $. $}
${ IMP-symbol-37-substitution $p #Substitution \kore-symbol-Lbl'Hash'ENOBUFS \kore-symbol-Lbl'Hash'ENOBUFS ptn0 xX0 $= ( IMP-symbol-37-is-pattern substitution-disjoint ) CBAD $. $}
${ IMP-symbol-38-substitution $p #Substitution \kore-symbol-Lbl'Hash'ENODEV \kore-symbol-Lbl'Hash'ENODEV ptn0 xX0 $= ( IMP-symbol-38-is-pattern substitution-disjoint ) CBAD $. $}
${ IMP-symbol-39-substitution $p #Substitution \kore-symbol-Lbl'Hash'ENOENT \kore-symbol-Lbl'Hash'ENOENT ptn0 xX0 $= ( IMP-symbol-39-is-pattern substitution-disjoint ) CBAD $. $}
${ IMP-symbol-40-substitution $p #Substitution \kore-symbol-Lbl'Hash'ENOEXEC \kore-symbol-Lbl'Hash'ENOEXEC ptn0 xX0 $= ( IMP-symbol-40-is-pattern substitution-disjoint ) CBAD $. $}
${ IMP-symbol-41-substitution $p #Substitution \kore-symbol-Lbl'Hash'ENOLCK \kore-symbol-Lbl'Hash'ENOLCK ptn0 xX0 $= ( IMP-symbol-41-is-pattern substitution-disjoint ) CBAD $. $}
${ IMP-symbol-42-substitution $p #Substitution \kore-symbol-Lbl'Hash'ENOMEM \kore-symbol-Lbl'Hash'ENOMEM ptn0 xX0 $= ( IMP-symbol-42-is-pattern substitution-disjoint ) CBAD $. $}
${ IMP-symbol-43-substitution $p #Substitution \kore-symbol-Lbl'Hash'ENOPROTOOPT \kore-symbol-Lbl'Hash'ENOPROTOOPT ptn0 xX0 $= ( IMP-symbol-43-is-pattern substitution-disjoint ) CBAD $. $}
${ IMP-symbol-44-substitution $p #Substitution \kore-symbol-Lbl'Hash'ENOSPC \kore-symbol-Lbl'Hash'ENOSPC ptn0 xX0 $= ( IMP-symbol-44-is-pattern substitution-disjoint ) CBAD $. $}
${ IMP-symbol-45-substitution $p #Substitution \kore-symbol-Lbl'Hash'ENOSYS \kore-symbol-Lbl'Hash'ENOSYS ptn0 xX0 $= ( IMP-symbol-45-is-pattern substitution-disjoint ) CBAD $. $}
${ IMP-symbol-46-substitution $p #Substitution \kore-symbol-Lbl'Hash'ENOTCONN \kore-symbol-Lbl'Hash'ENOTCONN ptn0 xX0 $= ( IMP-symbol-46-is-pattern substitution-disjoint ) CBAD $. $}
${ IMP-symbol-47-substitution $p #Substitution \kore-symbol-Lbl'Hash'ENOTDIR \kore-symbol-Lbl'Hash'ENOTDIR ptn0 xX0 $= ( IMP-symbol-47-is-pattern substitution-disjoint ) CBAD $. $}
${ IMP-symbol-48-substitution $p #Substitution \kore-symbol-Lbl'Hash'ENOTEMPTY \kore-symbol-Lbl'Hash'ENOTEMPTY ptn0 xX0 $= ( IMP-symbol-48-is-pattern substitution-disjoint ) CBAD $. $}
${ IMP-symbol-49-substitution $p #Substitution \kore-symbol-Lbl'Hash'ENOTSOCK \kore-symbol-Lbl'Hash'ENOTSOCK ptn0 xX0 $= ( IMP-symbol-49-is-pattern substitution-disjoint ) CBAD $. $}
${ IMP-symbol-50-substitution $p #Substitution \kore-symbol-Lbl'Hash'ENOTTY \kore-symbol-Lbl'Hash'ENOTTY ptn0 xX0 $= ( IMP-symbol-50-is-pattern substitution-disjoint ) CBAD $. $}
${ IMP-symbol-51-substitution $p #Substitution \kore-symbol-Lbl'Hash'ENXIO \kore-symbol-Lbl'Hash'ENXIO ptn0 xX0 $= ( IMP-symbol-51-is-pattern substitution-disjoint ) CBAD $. $}
${ IMP-symbol-52-substitution $p #Substitution \kore-symbol-Lbl'Hash'EOF \kore-symbol-Lbl'Hash'EOF ptn0 xX0 $= ( IMP-symbol-52-is-pattern substitution-disjoint ) CBAD $. $}
${ IMP-symbol-53-substitution $p #Substitution \kore-symbol-Lbl'Hash'EOPNOTSUPP \kore-symbol-Lbl'Hash'EOPNOTSUPP ptn0 xX0 $= ( IMP-symbol-53-is-pattern substitution-disjoint ) CBAD $. $}
${ IMP-symbol-54-substitution $p #Substitution \kore-symbol-Lbl'Hash'EOVERFLOW \kore-symbol-Lbl'Hash'EOVERFLOW ptn0 xX0 $= ( IMP-symbol-54-is-pattern substitution-disjoint ) CBAD $. $}
${ IMP-symbol-55-substitution $p #Substitution \kore-symbol-Lbl'Hash'EPERM \kore-symbol-Lbl'Hash'EPERM ptn0 xX0 $= ( IMP-symbol-55-is-pattern substitution-disjoint ) CBAD $. $}
${ IMP-symbol-56-substitution $p #Substitution \kore-symbol-Lbl'Hash'EPFNOSUPPORT \kore-symbol-Lbl'Hash'EPFNOSUPPORT ptn0 xX0 $= ( IMP-symbol-56-is-pattern substitution-disjoint ) CBAD $. $}
${ IMP-symbol-57-substitution $p #Substitution \kore-symbol-Lbl'Hash'EPIPE \kore-symbol-Lbl'Hash'EPIPE ptn0 xX0 $= ( IMP-symbol-57-is-pattern substitution-disjoint ) CBAD $. $}
${ IMP-symbol-58-substitution $p #Substitution \kore-symbol-Lbl'Hash'EPROTONOSUPPORT \kore-symbol-Lbl'Hash'EPROTONOSUPPORT ptn0 xX0 $= ( IMP-symbol-58-is-pattern substitution-disjoint ) CBAD $. $}
${ IMP-symbol-59-substitution $p #Substitution \kore-symbol-Lbl'Hash'EPROTOTYPE \kore-symbol-Lbl'Hash'EPROTOTYPE ptn0 xX0 $= ( IMP-symbol-59-is-pattern substitution-disjoint ) CBAD $. $}
${ IMP-symbol-60-substitution $p #Substitution \kore-symbol-Lbl'Hash'ERANGE \kore-symbol-Lbl'Hash'ERANGE ptn0 xX0 $= ( IMP-symbol-60-is-pattern substitution-disjoint ) CBAD $. $}
${ IMP-symbol-61-substitution $p #Substitution \kore-symbol-Lbl'Hash'EROFS \kore-symbol-Lbl'Hash'EROFS ptn0 xX0 $= ( IMP-symbol-61-is-pattern substitution-disjoint ) CBAD $. $}
${ IMP-symbol-62-substitution $p #Substitution \kore-symbol-Lbl'Hash'ESHUTDOWN \kore-symbol-Lbl'Hash'ESHUTDOWN ptn0 xX0 $= ( IMP-symbol-62-is-pattern substitution-disjoint ) CBAD $. $}
${ IMP-symbol-63-substitution $p #Substitution \kore-symbol-Lbl'Hash'ESOCKTNOSUPPORT \kore-symbol-Lbl'Hash'ESOCKTNOSUPPORT ptn0 xX0 $= ( IMP-symbol-63-is-pattern substitution-disjoint ) CBAD $. $}
${ IMP-symbol-64-substitution $p #Substitution \kore-symbol-Lbl'Hash'ESPIPE \kore-symbol-Lbl'Hash'ESPIPE ptn0 xX0 $= ( IMP-symbol-64-is-pattern substitution-disjoint ) CBAD $. $}
${ IMP-symbol-65-substitution $p #Substitution \kore-symbol-Lbl'Hash'ESRCH \kore-symbol-Lbl'Hash'ESRCH ptn0 xX0 $= ( IMP-symbol-65-is-pattern substitution-disjoint ) CBAD $. $}
${ IMP-symbol-66-substitution $p #Substitution \kore-symbol-Lbl'Hash'ETIMEDOUT \kore-symbol-Lbl'Hash'ETIMEDOUT ptn0 xX0 $= ( IMP-symbol-66-is-pattern substitution-disjoint ) CBAD $. $}
${ IMP-symbol-67-substitution $p #Substitution \kore-symbol-Lbl'Hash'ETOOMANYREFS \kore-symbol-Lbl'Hash'ETOOMANYREFS ptn0 xX0 $= ( IMP-symbol-67-is-pattern substitution-disjoint ) CBAD $. $}
${ IMP-symbol-68-substitution $p #Substitution \kore-symbol-Lbl'Hash'EWOULDBLOCK \kore-symbol-Lbl'Hash'EWOULDBLOCK ptn0 xX0 $= ( IMP-symbol-68-is-pattern substitution-disjoint ) CBAD $. $}
${ IMP-symbol-69-substitution $p #Substitution \kore-symbol-Lbl'Hash'EXDEV \kore-symbol-Lbl'Hash'EXDEV ptn0 xX0 $= ( IMP-symbol-69-is-pattern substitution-disjoint ) CBAD $. $}
notation-cache-10 $p #Notation ( \kore-symbol-Lbl'Hash'accept'LParUndsRParUnds'K-IO'Unds'IOInt'Unds'Int ptn1 ) ( \app \kore-symbol-Lbl'Hash'accept'LParUndsRParUnds'K-IO'Unds'IOInt'Unds'Int-symbol ptn1 ) $= ( IMP-symbol-70-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-70-is-pattern IMP-symbol-70-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-11 $p #Notation ( \kore-symbol-Lbl'Hash'accept'LParUndsRParUnds'K-IO'Unds'IOInt'Unds'Int ptn2 ) ( \app \kore-symbol-Lbl'Hash'accept'LParUndsRParUnds'K-IO'Unds'IOInt'Unds'Int-symbol ptn2 ) $= ( IMP-symbol-70-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-70-is-pattern IMP-symbol-70-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-70-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-70-substitution $p #Substitution ( \kore-symbol-Lbl'Hash'accept'LParUndsRParUnds'K-IO'Unds'IOInt'Unds'Int ptn1 ) ( \kore-symbol-Lbl'Hash'accept'LParUndsRParUnds'K-IO'Unds'IOInt'Unds'Int ptn2 ) ptn0 xX0 $= ( IMP-symbol-70-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-70-is-pattern substitution-disjoint substitution-app notation-cache-10 notation-cache-11 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-12 $p #Notation ( \kore-symbol-Lbl'Hash'accept'LParUndsRParUnds'K-IO'Unds'IOInt'Unds'Int ptn0 ) ( \app \kore-symbol-Lbl'Hash'accept'LParUndsRParUnds'K-IO'Unds'IOInt'Unds'Int-symbol ptn0 ) $= ( IMP-symbol-70-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-70-is-pattern IMP-symbol-70-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-70-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-70-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Hash'accept'LParUndsRParUnds'K-IO'Unds'IOInt'Unds'Int ptn0 ) $= ( IMP-symbol-70-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-70-is-pattern application-context-app-right notation-cache-12 notation-application-context ) DEBFBGADEBACHBIJ $. $}
notation-cache-13 $p #Notation ( \kore-symbol-Lbl'Hash'buffer'LParUndsRParUnds'K-IO'Unds'Stream'Unds'K ptn1 ) ( \app \kore-symbol-Lbl'Hash'buffer'LParUndsRParUnds'K-IO'Unds'Stream'Unds'K-symbol ptn1 ) $= ( IMP-symbol-71-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-71-is-pattern IMP-symbol-71-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-14 $p #Notation ( \kore-symbol-Lbl'Hash'buffer'LParUndsRParUnds'K-IO'Unds'Stream'Unds'K ptn2 ) ( \app \kore-symbol-Lbl'Hash'buffer'LParUndsRParUnds'K-IO'Unds'Stream'Unds'K-symbol ptn2 ) $= ( IMP-symbol-71-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-71-is-pattern IMP-symbol-71-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-71-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-71-substitution $p #Substitution ( \kore-symbol-Lbl'Hash'buffer'LParUndsRParUnds'K-IO'Unds'Stream'Unds'K ptn1 ) ( \kore-symbol-Lbl'Hash'buffer'LParUndsRParUnds'K-IO'Unds'Stream'Unds'K ptn2 ) ptn0 xX0 $= ( IMP-symbol-71-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-71-is-pattern substitution-disjoint substitution-app notation-cache-13 notation-cache-14 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-15 $p #Notation ( \kore-symbol-Lbl'Hash'buffer'LParUndsRParUnds'K-IO'Unds'Stream'Unds'K ptn0 ) ( \app \kore-symbol-Lbl'Hash'buffer'LParUndsRParUnds'K-IO'Unds'Stream'Unds'K-symbol ptn0 ) $= ( IMP-symbol-71-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-71-is-pattern IMP-symbol-71-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-71-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-71-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Hash'buffer'LParUndsRParUnds'K-IO'Unds'Stream'Unds'K ptn0 ) $= ( IMP-symbol-71-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-71-is-pattern application-context-app-right notation-cache-15 notation-application-context ) DEBFBGADEBACHBIJ $. $}
notation-cache-16 $p #Notation ( \kore-symbol-Lbl'Hash'close'LParUndsRParUnds'K-IO'Unds'K'Unds'Int ptn1 ) ( \app \kore-symbol-Lbl'Hash'close'LParUndsRParUnds'K-IO'Unds'K'Unds'Int-symbol ptn1 ) $= ( IMP-symbol-72-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-72-is-pattern IMP-symbol-72-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-17 $p #Notation ( \kore-symbol-Lbl'Hash'close'LParUndsRParUnds'K-IO'Unds'K'Unds'Int ptn2 ) ( \app \kore-symbol-Lbl'Hash'close'LParUndsRParUnds'K-IO'Unds'K'Unds'Int-symbol ptn2 ) $= ( IMP-symbol-72-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-72-is-pattern IMP-symbol-72-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-72-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-72-substitution $p #Substitution ( \kore-symbol-Lbl'Hash'close'LParUndsRParUnds'K-IO'Unds'K'Unds'Int ptn1 ) ( \kore-symbol-Lbl'Hash'close'LParUndsRParUnds'K-IO'Unds'K'Unds'Int ptn2 ) ptn0 xX0 $= ( IMP-symbol-72-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-72-is-pattern substitution-disjoint substitution-app notation-cache-16 notation-cache-17 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-18 $p #Notation ( \kore-symbol-Lbl'Hash'close'LParUndsRParUnds'K-IO'Unds'K'Unds'Int ptn0 ) ( \app \kore-symbol-Lbl'Hash'close'LParUndsRParUnds'K-IO'Unds'K'Unds'Int-symbol ptn0 ) $= ( IMP-symbol-72-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-72-is-pattern IMP-symbol-72-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-72-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-72-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Hash'close'LParUndsRParUnds'K-IO'Unds'K'Unds'Int ptn0 ) $= ( IMP-symbol-72-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-72-is-pattern application-context-app-right notation-cache-18 notation-application-context ) DEBFBGADEBACHBIJ $. $}
${ IMP-symbol-73-substitution $p #Substitution \kore-symbol-Lbl'Hash'freezer'BangUndsUnds'IMP-SYNTAX'Unds'BExp'Unds'BExp0'Unds' \kore-symbol-Lbl'Hash'freezer'BangUndsUnds'IMP-SYNTAX'Unds'BExp'Unds'BExp0'Unds' ptn0 xX0 $= ( IMP-symbol-73-is-pattern substitution-disjoint ) CBAD $. $}
notation-cache-19 $p #Notation ( \kore-symbol-Lbl'Hash'freezer'UndsAnd-And-UndsUnds'IMP-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds' ptn1 ) ( \app \kore-symbol-Lbl'Hash'freezer'UndsAnd-And-UndsUnds'IMP-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'-symbol ptn1 ) $= ( IMP-symbol-74-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-74-is-pattern IMP-symbol-74-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-20 $p #Notation ( \kore-symbol-Lbl'Hash'freezer'UndsAnd-And-UndsUnds'IMP-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds' ptn2 ) ( \app \kore-symbol-Lbl'Hash'freezer'UndsAnd-And-UndsUnds'IMP-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'-symbol ptn2 ) $= ( IMP-symbol-74-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-74-is-pattern IMP-symbol-74-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-74-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-74-substitution $p #Substitution ( \kore-symbol-Lbl'Hash'freezer'UndsAnd-And-UndsUnds'IMP-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds' ptn1 ) ( \kore-symbol-Lbl'Hash'freezer'UndsAnd-And-UndsUnds'IMP-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds' ptn2 ) ptn0 xX0 $= ( IMP-symbol-74-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-74-is-pattern substitution-disjoint substitution-app notation-cache-19 notation-cache-20 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-21 $p #Notation ( \kore-symbol-Lbl'Hash'freezer'UndsAnd-And-UndsUnds'IMP-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds' ptn0 ) ( \app \kore-symbol-Lbl'Hash'freezer'UndsAnd-And-UndsUnds'IMP-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'-symbol ptn0 ) $= ( IMP-symbol-74-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-74-is-pattern IMP-symbol-74-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-74-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-74-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Hash'freezer'UndsAnd-And-UndsUnds'IMP-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds' ptn0 ) $= ( IMP-symbol-74-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-74-is-pattern application-context-app-right notation-cache-21 notation-application-context ) DEBFBGADEBACHBIJ $. $}
notation-cache-22 $p #Notation ( \kore-symbol-Lbl'Hash'freezer'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds' ptn1 ) ( \app \kore-symbol-Lbl'Hash'freezer'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'-symbol ptn1 ) $= ( IMP-symbol-75-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-75-is-pattern IMP-symbol-75-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-23 $p #Notation ( \kore-symbol-Lbl'Hash'freezer'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds' ptn2 ) ( \app \kore-symbol-Lbl'Hash'freezer'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'-symbol ptn2 ) $= ( IMP-symbol-75-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-75-is-pattern IMP-symbol-75-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-75-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-75-substitution $p #Substitution ( \kore-symbol-Lbl'Hash'freezer'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds' ptn1 ) ( \kore-symbol-Lbl'Hash'freezer'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds' ptn2 ) ptn0 xX0 $= ( IMP-symbol-75-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-75-is-pattern substitution-disjoint substitution-app notation-cache-22 notation-cache-23 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-24 $p #Notation ( \kore-symbol-Lbl'Hash'freezer'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds' ptn0 ) ( \app \kore-symbol-Lbl'Hash'freezer'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'-symbol ptn0 ) $= ( IMP-symbol-75-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-75-is-pattern IMP-symbol-75-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-75-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-75-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Hash'freezer'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds' ptn0 ) $= ( IMP-symbol-75-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-75-is-pattern application-context-app-right notation-cache-24 notation-application-context ) DEBFBGADEBACHBIJ $. $}
notation-cache-25 $p #Notation ( \kore-symbol-Lbl'Hash'freezer'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds' ptn1 ) ( \app \kore-symbol-Lbl'Hash'freezer'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'-symbol ptn1 ) $= ( IMP-symbol-76-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-76-is-pattern IMP-symbol-76-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-26 $p #Notation ( \kore-symbol-Lbl'Hash'freezer'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds' ptn2 ) ( \app \kore-symbol-Lbl'Hash'freezer'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'-symbol ptn2 ) $= ( IMP-symbol-76-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-76-is-pattern IMP-symbol-76-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-76-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-76-substitution $p #Substitution ( \kore-symbol-Lbl'Hash'freezer'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds' ptn1 ) ( \kore-symbol-Lbl'Hash'freezer'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds' ptn2 ) ptn0 xX0 $= ( IMP-symbol-76-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-76-is-pattern substitution-disjoint substitution-app notation-cache-25 notation-cache-26 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-27 $p #Notation ( \kore-symbol-Lbl'Hash'freezer'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds' ptn0 ) ( \app \kore-symbol-Lbl'Hash'freezer'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'-symbol ptn0 ) $= ( IMP-symbol-76-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-76-is-pattern IMP-symbol-76-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-76-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-76-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Hash'freezer'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds' ptn0 ) $= ( IMP-symbol-76-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-76-is-pattern application-context-app-right notation-cache-27 notation-application-context ) DEBFBGADEBACHBIJ $. $}
notation-cache-28 $p #Notation ( \kore-symbol-Lbl'Hash'freezer'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds' ptn1 ) ( \app \kore-symbol-Lbl'Hash'freezer'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'-symbol ptn1 ) $= ( IMP-symbol-77-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-77-is-pattern IMP-symbol-77-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-29 $p #Notation ( \kore-symbol-Lbl'Hash'freezer'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds' ptn2 ) ( \app \kore-symbol-Lbl'Hash'freezer'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'-symbol ptn2 ) $= ( IMP-symbol-77-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-77-is-pattern IMP-symbol-77-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-77-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-77-substitution $p #Substitution ( \kore-symbol-Lbl'Hash'freezer'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds' ptn1 ) ( \kore-symbol-Lbl'Hash'freezer'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds' ptn2 ) ptn0 xX0 $= ( IMP-symbol-77-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-77-is-pattern substitution-disjoint substitution-app notation-cache-28 notation-cache-29 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-30 $p #Notation ( \kore-symbol-Lbl'Hash'freezer'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds' ptn0 ) ( \app \kore-symbol-Lbl'Hash'freezer'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'-symbol ptn0 ) $= ( IMP-symbol-77-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-77-is-pattern IMP-symbol-77-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-77-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-77-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Hash'freezer'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds' ptn0 ) $= ( IMP-symbol-77-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-77-is-pattern application-context-app-right notation-cache-30 notation-application-context ) DEBFBGADEBACHBIJ $. $}
notation-cache-31 $p #Notation ( \kore-symbol-Lbl'Hash'freezer'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds' ptn1 ) ( \app \kore-symbol-Lbl'Hash'freezer'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'-symbol ptn1 ) $= ( IMP-symbol-78-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-78-is-pattern IMP-symbol-78-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-32 $p #Notation ( \kore-symbol-Lbl'Hash'freezer'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds' ptn2 ) ( \app \kore-symbol-Lbl'Hash'freezer'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'-symbol ptn2 ) $= ( IMP-symbol-78-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-78-is-pattern IMP-symbol-78-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-78-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-78-substitution $p #Substitution ( \kore-symbol-Lbl'Hash'freezer'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds' ptn1 ) ( \kore-symbol-Lbl'Hash'freezer'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds' ptn2 ) ptn0 xX0 $= ( IMP-symbol-78-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-78-is-pattern substitution-disjoint substitution-app notation-cache-31 notation-cache-32 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-33 $p #Notation ( \kore-symbol-Lbl'Hash'freezer'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds' ptn0 ) ( \app \kore-symbol-Lbl'Hash'freezer'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'-symbol ptn0 ) $= ( IMP-symbol-78-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-78-is-pattern IMP-symbol-78-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-78-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-78-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Hash'freezer'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds' ptn0 ) $= ( IMP-symbol-78-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-78-is-pattern application-context-app-right notation-cache-33 notation-application-context ) DEBFBGADEBACHBIJ $. $}
notation-cache-34 $p #Notation ( \kore-symbol-Lbl'Hash'freezer'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds' ptn1 ) ( \app \kore-symbol-Lbl'Hash'freezer'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'-symbol ptn1 ) $= ( IMP-symbol-79-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-79-is-pattern IMP-symbol-79-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-35 $p #Notation ( \kore-symbol-Lbl'Hash'freezer'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds' ptn2 ) ( \app \kore-symbol-Lbl'Hash'freezer'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'-symbol ptn2 ) $= ( IMP-symbol-79-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-79-is-pattern IMP-symbol-79-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-79-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-79-substitution $p #Substitution ( \kore-symbol-Lbl'Hash'freezer'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds' ptn1 ) ( \kore-symbol-Lbl'Hash'freezer'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds' ptn2 ) ptn0 xX0 $= ( IMP-symbol-79-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-79-is-pattern substitution-disjoint substitution-app notation-cache-34 notation-cache-35 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-36 $p #Notation ( \kore-symbol-Lbl'Hash'freezer'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds' ptn0 ) ( \app \kore-symbol-Lbl'Hash'freezer'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'-symbol ptn0 ) $= ( IMP-symbol-79-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-79-is-pattern IMP-symbol-79-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-79-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-79-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Hash'freezer'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds' ptn0 ) $= ( IMP-symbol-79-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-79-is-pattern application-context-app-right notation-cache-36 notation-application-context ) DEBFBGADEBACHBIJ $. $}
notation-cache-37 $p #Notation ( \kore-symbol-Lbl'Hash'freezer'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds' ptn1 ) ( \app \kore-symbol-Lbl'Hash'freezer'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'-symbol ptn1 ) $= ( IMP-symbol-80-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-80-is-pattern IMP-symbol-80-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-38 $p #Notation ( \kore-symbol-Lbl'Hash'freezer'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds' ptn2 ) ( \app \kore-symbol-Lbl'Hash'freezer'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'-symbol ptn2 ) $= ( IMP-symbol-80-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-80-is-pattern IMP-symbol-80-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-80-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-80-substitution $p #Substitution ( \kore-symbol-Lbl'Hash'freezer'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds' ptn1 ) ( \kore-symbol-Lbl'Hash'freezer'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds' ptn2 ) ptn0 xX0 $= ( IMP-symbol-80-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-80-is-pattern substitution-disjoint substitution-app notation-cache-37 notation-cache-38 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-39 $p #Notation ( \kore-symbol-Lbl'Hash'freezer'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds' ptn0 ) ( \app \kore-symbol-Lbl'Hash'freezer'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'-symbol ptn0 ) $= ( IMP-symbol-80-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-80-is-pattern IMP-symbol-80-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-80-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-80-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Hash'freezer'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds' ptn0 ) $= ( IMP-symbol-80-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-80-is-pattern application-context-app-right notation-cache-39 notation-application-context ) DEBFBGADEBACHBIJ $. $}
notation-cache-40 $p #Notation ( \kore-symbol-Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'IMP-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds' ptn1 ) ( \app \kore-symbol-Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'IMP-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'-symbol ptn1 ) $= ( IMP-symbol-81-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-81-is-pattern IMP-symbol-81-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-41 $p #Notation ( \kore-symbol-Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'IMP-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds' ptn2 ) ( \app \kore-symbol-Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'IMP-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'-symbol ptn2 ) $= ( IMP-symbol-81-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-81-is-pattern IMP-symbol-81-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-81-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-81-substitution $p #Substitution ( \kore-symbol-Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'IMP-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds' ptn1 ) ( \kore-symbol-Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'IMP-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds' ptn2 ) ptn0 xX0 $= ( IMP-symbol-81-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-81-is-pattern substitution-disjoint substitution-app notation-cache-40 notation-cache-41 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-42 $p #Notation ( \kore-symbol-Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'IMP-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds' ptn0 ) ( \app \kore-symbol-Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'IMP-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'-symbol ptn0 ) $= ( IMP-symbol-81-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-81-is-pattern IMP-symbol-81-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-81-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-81-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'IMP-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds' ptn0 ) $= ( IMP-symbol-81-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-81-is-pattern application-context-app-right notation-cache-42 notation-application-context ) DEBFBGADEBACHBIJ $. $}
notation-cache-43 $p #Notation ( \kore-symbol-Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'IMP-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds' ptn1 ) ( \app \kore-symbol-Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'IMP-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'-symbol ptn1 ) $= ( IMP-symbol-82-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-82-is-pattern IMP-symbol-82-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-44 $p #Notation ( \kore-symbol-Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'IMP-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds' ptn2 ) ( \app \kore-symbol-Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'IMP-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'-symbol ptn2 ) $= ( IMP-symbol-82-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-82-is-pattern IMP-symbol-82-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-82-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-82-substitution $p #Substitution ( \kore-symbol-Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'IMP-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds' ptn1 ) ( \kore-symbol-Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'IMP-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds' ptn2 ) ptn0 xX0 $= ( IMP-symbol-82-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-82-is-pattern substitution-disjoint substitution-app notation-cache-43 notation-cache-44 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-45 $p #Notation ( \kore-symbol-Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'IMP-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds' ptn0 ) ( \app \kore-symbol-Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'IMP-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'-symbol ptn0 ) $= ( IMP-symbol-82-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-82-is-pattern IMP-symbol-82-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-82-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-82-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'IMP-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds' ptn0 ) $= ( IMP-symbol-82-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-82-is-pattern application-context-app-right notation-cache-45 notation-application-context ) DEBFBGADEBACHBIJ $. $}
notation-cache-46 $p #Notation ( \kore-symbol-Lbl'Hash'freezer'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp1'Unds' ptn1 ) ( \app \kore-symbol-Lbl'Hash'freezer'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp1'Unds'-symbol ptn1 ) $= ( IMP-symbol-83-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-83-is-pattern IMP-symbol-83-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-47 $p #Notation ( \kore-symbol-Lbl'Hash'freezer'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp1'Unds' ptn2 ) ( \app \kore-symbol-Lbl'Hash'freezer'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp1'Unds'-symbol ptn2 ) $= ( IMP-symbol-83-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-83-is-pattern IMP-symbol-83-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-83-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-83-substitution $p #Substitution ( \kore-symbol-Lbl'Hash'freezer'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp1'Unds' ptn1 ) ( \kore-symbol-Lbl'Hash'freezer'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp1'Unds' ptn2 ) ptn0 xX0 $= ( IMP-symbol-83-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-83-is-pattern substitution-disjoint substitution-app notation-cache-46 notation-cache-47 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-48 $p #Notation ( \kore-symbol-Lbl'Hash'freezer'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp1'Unds' ptn0 ) ( \app \kore-symbol-Lbl'Hash'freezer'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp1'Unds'-symbol ptn0 ) $= ( IMP-symbol-83-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-83-is-pattern IMP-symbol-83-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-83-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-83-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Hash'freezer'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp1'Unds' ptn0 ) $= ( IMP-symbol-83-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-83-is-pattern application-context-app-right notation-cache-48 notation-application-context ) DEBFBGADEBACHBIJ $. $}
notation-cache-49 $p #Notation ( \kore-symbol-Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'IMP-SYNTAX'Unds'Stmt'Unds'BExp'Unds'Block'Unds'Block0'Unds' ptn1 ptn2 ) ( \app ( \app \kore-symbol-Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'IMP-SYNTAX'Unds'Stmt'Unds'BExp'Unds'Block'Unds'Block0'Unds'-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-84-is-symbol symbol-is-pattern IMP-symbol-84-is-pattern IMP-symbol-84-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-50 $p #Notation ( \kore-symbol-Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'IMP-SYNTAX'Unds'Stmt'Unds'BExp'Unds'Block'Unds'Block0'Unds' ptn3 ptn4 ) ( \app ( \app \kore-symbol-Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'IMP-SYNTAX'Unds'Stmt'Unds'BExp'Unds'Block'Unds'Block0'Unds'-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-84-is-symbol symbol-is-pattern IMP-symbol-84-is-pattern IMP-symbol-84-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-84-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-84-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-84-substitution $p #Substitution ( \kore-symbol-Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'IMP-SYNTAX'Unds'Stmt'Unds'BExp'Unds'Block'Unds'Block0'Unds' ptn1 ptn2 ) ( \kore-symbol-Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'IMP-SYNTAX'Unds'Stmt'Unds'BExp'Unds'Block'Unds'Block0'Unds' ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-84-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-84-is-pattern substitution-app substitution-disjoint notation-cache-49 notation-cache-50 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-51 $p #Notation ( \kore-symbol-Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'IMP-SYNTAX'Unds'Stmt'Unds'BExp'Unds'Block'Unds'Block0'Unds' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'IMP-SYNTAX'Unds'Stmt'Unds'BExp'Unds'Block'Unds'Block0'Unds'-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-84-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-84-is-pattern IMP-symbol-84-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-84-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-84-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'IMP-SYNTAX'Unds'Stmt'Unds'BExp'Unds'Block'Unds'Block0'Unds' ptn0 ptn1 ) $= ( IMP-symbol-84-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-84-is-pattern application-context-app-right application-context-app-left notation-cache-51 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-84-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-84-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'IMP-SYNTAX'Unds'Stmt'Unds'BExp'Unds'Block'Unds'Block0'Unds' ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-84-is-symbol symbol-is-pattern IMP-symbol-84-is-pattern application-context-app-right notation-cache-51 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
notation-cache-52 $p #Notation ( \kore-symbol-Lbl'Hash'getc'LParUndsRParUnds'K-IO'Unds'IOInt'Unds'Int ptn1 ) ( \app \kore-symbol-Lbl'Hash'getc'LParUndsRParUnds'K-IO'Unds'IOInt'Unds'Int-symbol ptn1 ) $= ( IMP-symbol-85-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-85-is-pattern IMP-symbol-85-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-53 $p #Notation ( \kore-symbol-Lbl'Hash'getc'LParUndsRParUnds'K-IO'Unds'IOInt'Unds'Int ptn2 ) ( \app \kore-symbol-Lbl'Hash'getc'LParUndsRParUnds'K-IO'Unds'IOInt'Unds'Int-symbol ptn2 ) $= ( IMP-symbol-85-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-85-is-pattern IMP-symbol-85-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-85-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-85-substitution $p #Substitution ( \kore-symbol-Lbl'Hash'getc'LParUndsRParUnds'K-IO'Unds'IOInt'Unds'Int ptn1 ) ( \kore-symbol-Lbl'Hash'getc'LParUndsRParUnds'K-IO'Unds'IOInt'Unds'Int ptn2 ) ptn0 xX0 $= ( IMP-symbol-85-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-85-is-pattern substitution-disjoint substitution-app notation-cache-52 notation-cache-53 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-54 $p #Notation ( \kore-symbol-Lbl'Hash'getc'LParUndsRParUnds'K-IO'Unds'IOInt'Unds'Int ptn0 ) ( \app \kore-symbol-Lbl'Hash'getc'LParUndsRParUnds'K-IO'Unds'IOInt'Unds'Int-symbol ptn0 ) $= ( IMP-symbol-85-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-85-is-pattern IMP-symbol-85-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-85-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-85-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Hash'getc'LParUndsRParUnds'K-IO'Unds'IOInt'Unds'Int ptn0 ) $= ( IMP-symbol-85-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-85-is-pattern application-context-app-right notation-cache-54 notation-application-context ) DEBFBGADEBACHBIJ $. $}
${ IMP-symbol-86-substitution.0 $e #Substitution ptn1 ptn5 ptn0 xX0 $.
   IMP-symbol-86-substitution.1 $e #Substitution ptn2 ptn6 ptn0 xX0 $.
   IMP-symbol-86-substitution.2 $e #Substitution ptn3 ptn7 ptn0 xX0 $.
   IMP-symbol-86-substitution.3 $e #Substitution ptn4 ptn8 ptn0 xX0 $.
   IMP-symbol-86-substitution $p #Substitution ( \kore-symbol-Lbl'Hash'if'UndsHash'then'UndsHash'else'UndsHash'fi'Unds'K-EQUAL-SYNTAX'Unds'Sort'Unds'Bool'Unds'Sort'Unds'Sort ptn1 ptn2 ptn3 ptn4 ) ( \kore-symbol-Lbl'Hash'if'UndsHash'then'UndsHash'else'UndsHash'fi'Unds'K-EQUAL-SYNTAX'Unds'Sort'Unds'Bool'Unds'Sort'Unds'Sort ptn5 ptn6 ptn7 ptn8 ) ptn0 xX0 $= ( app-is-pattern IMP-symbol-86-is-symbol symbol-is-pattern IMP-symbol-86-is-pattern substitution-app notation-reflexivity IMP-symbol-86-is-sugar notation-transitivity substitution-disjoint notation-substitution ) PQCODOEOFOPQGOHOIOJOBCDEFRGHIJRBABPQCODOEOFPQGOHOIOJABPQCODOEPQGOHOIABPQCODPQGOHABPQCPQGAPQBAUCKSLSMSNSCDEFRPQCODOEOFOPQCODOEOFOCDEFUAPQCODOEOFOTUBGHIJRPQGOHOIOJOPQGOHOIOJOGHIJUAPQGOHOIOJOTUBBTUD $. $}
notation-cache-55 $p #Notation ( \kore-symbol-Lbl'Hash'if'UndsHash'then'UndsHash'else'UndsHash'fi'Unds'K-EQUAL-SYNTAX'Unds'Sort'Unds'Bool'Unds'Sort'Unds'Sort ptn0 ptn1 ptn2 ptn3 ) ( \app ( \app ( \app ( \app \kore-symbol-Lbl'Hash'if'UndsHash'then'UndsHash'else'UndsHash'fi'Unds'K-EQUAL-SYNTAX'Unds'Sort'Unds'Bool'Unds'Sort'Unds'Sort-symbol ptn0 ) ptn1 ) ptn2 ) ptn3 ) $= ( app-is-pattern IMP-symbol-86-is-symbol symbol-is-pattern notation-reflexivity notation-app IMP-symbol-86-is-pattern IMP-symbol-86-is-sugar notation-transitivity ) ABCDJFGAEBECEDEFGAEBECEDEABCDKFGAEBECEDFGAEBECEDFGAEBECFGAEBECFGAEBFGAEBFGAFGAFGHAHIBHICHIDHIL $.
${ $d xX0 ptn1 $.
   $d xX0 ptn2 $.
   $d xX0 ptn3 $.
   IMP-symbol-86-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-86-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Hash'if'UndsHash'then'UndsHash'else'UndsHash'fi'Unds'K-EQUAL-SYNTAX'Unds'Sort'Unds'Bool'Unds'Sort'Unds'Sort ptn0 ptn1 ptn2 ptn3 ) $= ( app-is-pattern IMP-symbol-86-is-symbol symbol-is-pattern application-context-app-left IMP-symbol-86-is-pattern application-context-app-right notation-cache-55 notation-application-context ) HIBGCGDGEGBCDEKAHIBGCGDGEAHIBGCGDAHIBGCAHIBAFLJJJBCDEMN $. $}
${ $d xX0 ptn0 $.
   $d xX0 ptn2 $.
   $d xX0 ptn3 $.
   IMP-symbol-86-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-86-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Hash'if'UndsHash'then'UndsHash'else'UndsHash'fi'Unds'K-EQUAL-SYNTAX'Unds'Sort'Unds'Bool'Unds'Sort'Unds'Sort ptn0 ptn1 ptn2 ptn3 ) $= ( app-is-pattern IMP-symbol-86-is-symbol symbol-is-pattern application-context-app-left IMP-symbol-86-is-pattern application-context-app-right notation-cache-55 notation-application-context ) HIBGCGDGEGBCDEKAHIBGCGDGEAHIBGCGDAHIBGCAFLJJBCDEMN $. $}
${ $d xX0 ptn0 $.
   $d xX0 ptn1 $.
   $d xX0 ptn3 $.
   IMP-symbol-86-application-context-2.0 $e #ApplicationContext xX0 ptn2 $.
   IMP-symbol-86-application-context-2 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Hash'if'UndsHash'then'UndsHash'else'UndsHash'fi'Unds'K-EQUAL-SYNTAX'Unds'Sort'Unds'Bool'Unds'Sort'Unds'Sort ptn0 ptn1 ptn2 ptn3 ) $= ( app-is-pattern IMP-symbol-86-is-symbol symbol-is-pattern IMP-symbol-86-is-pattern application-context-app-right application-context-app-left notation-cache-55 notation-application-context ) HIBGCGDGEGBCDEJAHIBGCGDGEAHIBGCGDAFKLBCDEMN $. $}
${ $d xX0 ptn0 $.
   $d xX0 ptn1 $.
   $d xX0 ptn2 $.
   IMP-symbol-86-application-context-3.0 $e #ApplicationContext xX0 ptn3 $.
   IMP-symbol-86-application-context-3 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Hash'if'UndsHash'then'UndsHash'else'UndsHash'fi'Unds'K-EQUAL-SYNTAX'Unds'Sort'Unds'Bool'Unds'Sort'Unds'Sort ptn0 ptn1 ptn2 ptn3 ) $= ( app-is-pattern IMP-symbol-86-is-symbol symbol-is-pattern IMP-symbol-86-is-pattern application-context-app-right notation-cache-55 notation-application-context ) HIBGCGDGEGBCDEJAHIBGCGDGEAFKBCDELM $. $}
notation-cache-56 $p #Notation ( \kore-symbol-Lbl'Hash'lock'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'Int ptn1 ptn2 ) ( \app ( \app \kore-symbol-Lbl'Hash'lock'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'Int-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-87-is-symbol symbol-is-pattern IMP-symbol-87-is-pattern IMP-symbol-87-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-57 $p #Notation ( \kore-symbol-Lbl'Hash'lock'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'Int ptn3 ptn4 ) ( \app ( \app \kore-symbol-Lbl'Hash'lock'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'Int-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-87-is-symbol symbol-is-pattern IMP-symbol-87-is-pattern IMP-symbol-87-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-87-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-87-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-87-substitution $p #Substitution ( \kore-symbol-Lbl'Hash'lock'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'Int ptn1 ptn2 ) ( \kore-symbol-Lbl'Hash'lock'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'Int ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-87-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-87-is-pattern substitution-app substitution-disjoint notation-cache-56 notation-cache-57 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-58 $p #Notation ( \kore-symbol-Lbl'Hash'lock'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'Int ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'Hash'lock'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'Int-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-87-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-87-is-pattern IMP-symbol-87-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-87-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-87-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Hash'lock'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'Int ptn0 ptn1 ) $= ( IMP-symbol-87-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-87-is-pattern application-context-app-right application-context-app-left notation-cache-58 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-87-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-87-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Hash'lock'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'Int ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-87-is-symbol symbol-is-pattern IMP-symbol-87-is-pattern application-context-app-right notation-cache-58 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
notation-cache-59 $p #Notation ( \kore-symbol-Lbl'Hash'logToFile ptn1 ptn2 ) ( \app ( \app \kore-symbol-Lbl'Hash'logToFile-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-88-is-symbol symbol-is-pattern IMP-symbol-88-is-pattern IMP-symbol-88-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-60 $p #Notation ( \kore-symbol-Lbl'Hash'logToFile ptn3 ptn4 ) ( \app ( \app \kore-symbol-Lbl'Hash'logToFile-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-88-is-symbol symbol-is-pattern IMP-symbol-88-is-pattern IMP-symbol-88-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-88-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-88-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-88-substitution $p #Substitution ( \kore-symbol-Lbl'Hash'logToFile ptn1 ptn2 ) ( \kore-symbol-Lbl'Hash'logToFile ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-88-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-88-is-pattern substitution-app substitution-disjoint notation-cache-59 notation-cache-60 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-61 $p #Notation ( \kore-symbol-Lbl'Hash'logToFile ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'Hash'logToFile-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-88-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-88-is-pattern IMP-symbol-88-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-88-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-88-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Hash'logToFile ptn0 ptn1 ) $= ( IMP-symbol-88-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-88-is-pattern application-context-app-right application-context-app-left notation-cache-61 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-88-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-88-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Hash'logToFile ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-88-is-symbol symbol-is-pattern IMP-symbol-88-is-pattern application-context-app-right notation-cache-61 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
notation-cache-62 $p #Notation ( \kore-symbol-Lbl'Hash'mkstemp'LParUndsRParUnds'K-IO'Unds'IOFile'Unds'String ptn1 ) ( \app \kore-symbol-Lbl'Hash'mkstemp'LParUndsRParUnds'K-IO'Unds'IOFile'Unds'String-symbol ptn1 ) $= ( IMP-symbol-89-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-89-is-pattern IMP-symbol-89-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-63 $p #Notation ( \kore-symbol-Lbl'Hash'mkstemp'LParUndsRParUnds'K-IO'Unds'IOFile'Unds'String ptn2 ) ( \app \kore-symbol-Lbl'Hash'mkstemp'LParUndsRParUnds'K-IO'Unds'IOFile'Unds'String-symbol ptn2 ) $= ( IMP-symbol-89-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-89-is-pattern IMP-symbol-89-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-89-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-89-substitution $p #Substitution ( \kore-symbol-Lbl'Hash'mkstemp'LParUndsRParUnds'K-IO'Unds'IOFile'Unds'String ptn1 ) ( \kore-symbol-Lbl'Hash'mkstemp'LParUndsRParUnds'K-IO'Unds'IOFile'Unds'String ptn2 ) ptn0 xX0 $= ( IMP-symbol-89-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-89-is-pattern substitution-disjoint substitution-app notation-cache-62 notation-cache-63 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-64 $p #Notation ( \kore-symbol-Lbl'Hash'mkstemp'LParUndsRParUnds'K-IO'Unds'IOFile'Unds'String ptn0 ) ( \app \kore-symbol-Lbl'Hash'mkstemp'LParUndsRParUnds'K-IO'Unds'IOFile'Unds'String-symbol ptn0 ) $= ( IMP-symbol-89-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-89-is-pattern IMP-symbol-89-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-89-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-89-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Hash'mkstemp'LParUndsRParUnds'K-IO'Unds'IOFile'Unds'String ptn0 ) $= ( IMP-symbol-89-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-89-is-pattern application-context-app-right notation-cache-64 notation-application-context ) DEBFBGADEBACHBIJ $. $}
notation-cache-65 $p #Notation ( \kore-symbol-Lbl'Hash'open'LParUndsRParUnds'K-IO'Unds'IOInt'Unds'String ptn1 ) ( \app \kore-symbol-Lbl'Hash'open'LParUndsRParUnds'K-IO'Unds'IOInt'Unds'String-symbol ptn1 ) $= ( IMP-symbol-90-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-90-is-pattern IMP-symbol-90-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-66 $p #Notation ( \kore-symbol-Lbl'Hash'open'LParUndsRParUnds'K-IO'Unds'IOInt'Unds'String ptn2 ) ( \app \kore-symbol-Lbl'Hash'open'LParUndsRParUnds'K-IO'Unds'IOInt'Unds'String-symbol ptn2 ) $= ( IMP-symbol-90-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-90-is-pattern IMP-symbol-90-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-90-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-90-substitution $p #Substitution ( \kore-symbol-Lbl'Hash'open'LParUndsRParUnds'K-IO'Unds'IOInt'Unds'String ptn1 ) ( \kore-symbol-Lbl'Hash'open'LParUndsRParUnds'K-IO'Unds'IOInt'Unds'String ptn2 ) ptn0 xX0 $= ( IMP-symbol-90-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-90-is-pattern substitution-disjoint substitution-app notation-cache-65 notation-cache-66 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-67 $p #Notation ( \kore-symbol-Lbl'Hash'open'LParUndsRParUnds'K-IO'Unds'IOInt'Unds'String ptn0 ) ( \app \kore-symbol-Lbl'Hash'open'LParUndsRParUnds'K-IO'Unds'IOInt'Unds'String-symbol ptn0 ) $= ( IMP-symbol-90-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-90-is-pattern IMP-symbol-90-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-90-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-90-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Hash'open'LParUndsRParUnds'K-IO'Unds'IOInt'Unds'String ptn0 ) $= ( IMP-symbol-90-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-90-is-pattern application-context-app-right notation-cache-67 notation-application-context ) DEBFBGADEBACHBIJ $. $}
notation-cache-68 $p #Notation ( \kore-symbol-Lbl'Hash'open'LParUndsCommUndsRParUnds'K-IO'Unds'IOInt'Unds'String'Unds'String ptn1 ptn2 ) ( \app ( \app \kore-symbol-Lbl'Hash'open'LParUndsCommUndsRParUnds'K-IO'Unds'IOInt'Unds'String'Unds'String-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-91-is-symbol symbol-is-pattern IMP-symbol-91-is-pattern IMP-symbol-91-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-69 $p #Notation ( \kore-symbol-Lbl'Hash'open'LParUndsCommUndsRParUnds'K-IO'Unds'IOInt'Unds'String'Unds'String ptn3 ptn4 ) ( \app ( \app \kore-symbol-Lbl'Hash'open'LParUndsCommUndsRParUnds'K-IO'Unds'IOInt'Unds'String'Unds'String-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-91-is-symbol symbol-is-pattern IMP-symbol-91-is-pattern IMP-symbol-91-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-91-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-91-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-91-substitution $p #Substitution ( \kore-symbol-Lbl'Hash'open'LParUndsCommUndsRParUnds'K-IO'Unds'IOInt'Unds'String'Unds'String ptn1 ptn2 ) ( \kore-symbol-Lbl'Hash'open'LParUndsCommUndsRParUnds'K-IO'Unds'IOInt'Unds'String'Unds'String ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-91-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-91-is-pattern substitution-app substitution-disjoint notation-cache-68 notation-cache-69 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-70 $p #Notation ( \kore-symbol-Lbl'Hash'open'LParUndsCommUndsRParUnds'K-IO'Unds'IOInt'Unds'String'Unds'String ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'Hash'open'LParUndsCommUndsRParUnds'K-IO'Unds'IOInt'Unds'String'Unds'String-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-91-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-91-is-pattern IMP-symbol-91-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-91-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-91-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Hash'open'LParUndsCommUndsRParUnds'K-IO'Unds'IOInt'Unds'String'Unds'String ptn0 ptn1 ) $= ( IMP-symbol-91-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-91-is-pattern application-context-app-right application-context-app-left notation-cache-70 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-91-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-91-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Hash'open'LParUndsCommUndsRParUnds'K-IO'Unds'IOInt'Unds'String'Unds'String ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-91-is-symbol symbol-is-pattern IMP-symbol-91-is-pattern application-context-app-right notation-cache-70 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
notation-cache-71 $p #Notation ( \kore-symbol-Lbl'Hash'putc'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'Int ptn1 ptn2 ) ( \app ( \app \kore-symbol-Lbl'Hash'putc'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'Int-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-92-is-symbol symbol-is-pattern IMP-symbol-92-is-pattern IMP-symbol-92-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-72 $p #Notation ( \kore-symbol-Lbl'Hash'putc'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'Int ptn3 ptn4 ) ( \app ( \app \kore-symbol-Lbl'Hash'putc'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'Int-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-92-is-symbol symbol-is-pattern IMP-symbol-92-is-pattern IMP-symbol-92-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-92-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-92-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-92-substitution $p #Substitution ( \kore-symbol-Lbl'Hash'putc'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'Int ptn1 ptn2 ) ( \kore-symbol-Lbl'Hash'putc'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'Int ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-92-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-92-is-pattern substitution-app substitution-disjoint notation-cache-71 notation-cache-72 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-73 $p #Notation ( \kore-symbol-Lbl'Hash'putc'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'Int ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'Hash'putc'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'Int-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-92-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-92-is-pattern IMP-symbol-92-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-92-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-92-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Hash'putc'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'Int ptn0 ptn1 ) $= ( IMP-symbol-92-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-92-is-pattern application-context-app-right application-context-app-left notation-cache-73 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-92-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-92-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Hash'putc'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'Int ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-92-is-symbol symbol-is-pattern IMP-symbol-92-is-pattern application-context-app-right notation-cache-73 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
notation-cache-74 $p #Notation ( \kore-symbol-Lbl'Hash'read'LParUndsCommUndsRParUnds'K-IO'Unds'IOString'Unds'Int'Unds'Int ptn1 ptn2 ) ( \app ( \app \kore-symbol-Lbl'Hash'read'LParUndsCommUndsRParUnds'K-IO'Unds'IOString'Unds'Int'Unds'Int-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-93-is-symbol symbol-is-pattern IMP-symbol-93-is-pattern IMP-symbol-93-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-75 $p #Notation ( \kore-symbol-Lbl'Hash'read'LParUndsCommUndsRParUnds'K-IO'Unds'IOString'Unds'Int'Unds'Int ptn3 ptn4 ) ( \app ( \app \kore-symbol-Lbl'Hash'read'LParUndsCommUndsRParUnds'K-IO'Unds'IOString'Unds'Int'Unds'Int-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-93-is-symbol symbol-is-pattern IMP-symbol-93-is-pattern IMP-symbol-93-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-93-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-93-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-93-substitution $p #Substitution ( \kore-symbol-Lbl'Hash'read'LParUndsCommUndsRParUnds'K-IO'Unds'IOString'Unds'Int'Unds'Int ptn1 ptn2 ) ( \kore-symbol-Lbl'Hash'read'LParUndsCommUndsRParUnds'K-IO'Unds'IOString'Unds'Int'Unds'Int ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-93-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-93-is-pattern substitution-app substitution-disjoint notation-cache-74 notation-cache-75 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-76 $p #Notation ( \kore-symbol-Lbl'Hash'read'LParUndsCommUndsRParUnds'K-IO'Unds'IOString'Unds'Int'Unds'Int ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'Hash'read'LParUndsCommUndsRParUnds'K-IO'Unds'IOString'Unds'Int'Unds'Int-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-93-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-93-is-pattern IMP-symbol-93-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-93-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-93-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Hash'read'LParUndsCommUndsRParUnds'K-IO'Unds'IOString'Unds'Int'Unds'Int ptn0 ptn1 ) $= ( IMP-symbol-93-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-93-is-pattern application-context-app-right application-context-app-left notation-cache-76 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-93-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-93-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Hash'read'LParUndsCommUndsRParUnds'K-IO'Unds'IOString'Unds'Int'Unds'Int ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-93-is-symbol symbol-is-pattern IMP-symbol-93-is-pattern application-context-app-right notation-cache-76 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
notation-cache-77 $p #Notation ( \kore-symbol-Lbl'Hash'remove'LParUndsRParUnds'K-IO'Unds'K'Unds'String ptn1 ) ( \app \kore-symbol-Lbl'Hash'remove'LParUndsRParUnds'K-IO'Unds'K'Unds'String-symbol ptn1 ) $= ( IMP-symbol-94-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-94-is-pattern IMP-symbol-94-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-78 $p #Notation ( \kore-symbol-Lbl'Hash'remove'LParUndsRParUnds'K-IO'Unds'K'Unds'String ptn2 ) ( \app \kore-symbol-Lbl'Hash'remove'LParUndsRParUnds'K-IO'Unds'K'Unds'String-symbol ptn2 ) $= ( IMP-symbol-94-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-94-is-pattern IMP-symbol-94-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-94-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-94-substitution $p #Substitution ( \kore-symbol-Lbl'Hash'remove'LParUndsRParUnds'K-IO'Unds'K'Unds'String ptn1 ) ( \kore-symbol-Lbl'Hash'remove'LParUndsRParUnds'K-IO'Unds'K'Unds'String ptn2 ) ptn0 xX0 $= ( IMP-symbol-94-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-94-is-pattern substitution-disjoint substitution-app notation-cache-77 notation-cache-78 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-79 $p #Notation ( \kore-symbol-Lbl'Hash'remove'LParUndsRParUnds'K-IO'Unds'K'Unds'String ptn0 ) ( \app \kore-symbol-Lbl'Hash'remove'LParUndsRParUnds'K-IO'Unds'K'Unds'String-symbol ptn0 ) $= ( IMP-symbol-94-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-94-is-pattern IMP-symbol-94-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-94-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-94-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Hash'remove'LParUndsRParUnds'K-IO'Unds'K'Unds'String ptn0 ) $= ( IMP-symbol-94-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-94-is-pattern application-context-app-right notation-cache-79 notation-application-context ) DEBFBGADEBACHBIJ $. $}
notation-cache-80 $p #Notation ( \kore-symbol-Lbl'Hash'seek'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'Int ptn1 ptn2 ) ( \app ( \app \kore-symbol-Lbl'Hash'seek'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'Int-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-95-is-symbol symbol-is-pattern IMP-symbol-95-is-pattern IMP-symbol-95-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-81 $p #Notation ( \kore-symbol-Lbl'Hash'seek'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'Int ptn3 ptn4 ) ( \app ( \app \kore-symbol-Lbl'Hash'seek'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'Int-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-95-is-symbol symbol-is-pattern IMP-symbol-95-is-pattern IMP-symbol-95-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-95-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-95-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-95-substitution $p #Substitution ( \kore-symbol-Lbl'Hash'seek'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'Int ptn1 ptn2 ) ( \kore-symbol-Lbl'Hash'seek'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'Int ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-95-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-95-is-pattern substitution-app substitution-disjoint notation-cache-80 notation-cache-81 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-82 $p #Notation ( \kore-symbol-Lbl'Hash'seek'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'Int ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'Hash'seek'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'Int-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-95-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-95-is-pattern IMP-symbol-95-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-95-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-95-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Hash'seek'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'Int ptn0 ptn1 ) $= ( IMP-symbol-95-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-95-is-pattern application-context-app-right application-context-app-left notation-cache-82 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-95-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-95-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Hash'seek'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'Int ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-95-is-symbol symbol-is-pattern IMP-symbol-95-is-pattern application-context-app-right notation-cache-82 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
notation-cache-83 $p #Notation ( \kore-symbol-Lbl'Hash'seekEnd'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'Int ptn1 ptn2 ) ( \app ( \app \kore-symbol-Lbl'Hash'seekEnd'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'Int-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-96-is-symbol symbol-is-pattern IMP-symbol-96-is-pattern IMP-symbol-96-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-84 $p #Notation ( \kore-symbol-Lbl'Hash'seekEnd'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'Int ptn3 ptn4 ) ( \app ( \app \kore-symbol-Lbl'Hash'seekEnd'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'Int-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-96-is-symbol symbol-is-pattern IMP-symbol-96-is-pattern IMP-symbol-96-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-96-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-96-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-96-substitution $p #Substitution ( \kore-symbol-Lbl'Hash'seekEnd'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'Int ptn1 ptn2 ) ( \kore-symbol-Lbl'Hash'seekEnd'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'Int ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-96-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-96-is-pattern substitution-app substitution-disjoint notation-cache-83 notation-cache-84 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-85 $p #Notation ( \kore-symbol-Lbl'Hash'seekEnd'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'Int ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'Hash'seekEnd'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'Int-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-96-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-96-is-pattern IMP-symbol-96-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-96-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-96-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Hash'seekEnd'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'Int ptn0 ptn1 ) $= ( IMP-symbol-96-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-96-is-pattern application-context-app-right application-context-app-left notation-cache-85 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-96-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-96-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Hash'seekEnd'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'Int ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-96-is-symbol symbol-is-pattern IMP-symbol-96-is-pattern application-context-app-right notation-cache-85 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
notation-cache-86 $p #Notation ( \kore-symbol-Lbl'Hash'shutdownWrite'LParUndsRParUnds'K-IO'Unds'K'Unds'Int ptn1 ) ( \app \kore-symbol-Lbl'Hash'shutdownWrite'LParUndsRParUnds'K-IO'Unds'K'Unds'Int-symbol ptn1 ) $= ( IMP-symbol-97-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-97-is-pattern IMP-symbol-97-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-87 $p #Notation ( \kore-symbol-Lbl'Hash'shutdownWrite'LParUndsRParUnds'K-IO'Unds'K'Unds'Int ptn2 ) ( \app \kore-symbol-Lbl'Hash'shutdownWrite'LParUndsRParUnds'K-IO'Unds'K'Unds'Int-symbol ptn2 ) $= ( IMP-symbol-97-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-97-is-pattern IMP-symbol-97-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-97-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-97-substitution $p #Substitution ( \kore-symbol-Lbl'Hash'shutdownWrite'LParUndsRParUnds'K-IO'Unds'K'Unds'Int ptn1 ) ( \kore-symbol-Lbl'Hash'shutdownWrite'LParUndsRParUnds'K-IO'Unds'K'Unds'Int ptn2 ) ptn0 xX0 $= ( IMP-symbol-97-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-97-is-pattern substitution-disjoint substitution-app notation-cache-86 notation-cache-87 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-88 $p #Notation ( \kore-symbol-Lbl'Hash'shutdownWrite'LParUndsRParUnds'K-IO'Unds'K'Unds'Int ptn0 ) ( \app \kore-symbol-Lbl'Hash'shutdownWrite'LParUndsRParUnds'K-IO'Unds'K'Unds'Int-symbol ptn0 ) $= ( IMP-symbol-97-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-97-is-pattern IMP-symbol-97-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-97-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-97-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Hash'shutdownWrite'LParUndsRParUnds'K-IO'Unds'K'Unds'Int ptn0 ) $= ( IMP-symbol-97-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-97-is-pattern application-context-app-right notation-cache-88 notation-application-context ) DEBFBGADEBACHBIJ $. $}
${ IMP-symbol-98-substitution $p #Substitution \kore-symbol-Lbl'Hash'stderr'Unds'K-IO'Unds'Int \kore-symbol-Lbl'Hash'stderr'Unds'K-IO'Unds'Int ptn0 xX0 $= ( IMP-symbol-98-is-pattern substitution-disjoint ) CBAD $. $}
${ IMP-symbol-99-substitution $p #Substitution \kore-symbol-Lbl'Hash'stdin'Unds'K-IO'Unds'Int \kore-symbol-Lbl'Hash'stdin'Unds'K-IO'Unds'Int ptn0 xX0 $= ( IMP-symbol-99-is-pattern substitution-disjoint ) CBAD $. $}
${ IMP-symbol-100-substitution $p #Substitution \kore-symbol-Lbl'Hash'stdout'Unds'K-IO'Unds'Int \kore-symbol-Lbl'Hash'stdout'Unds'K-IO'Unds'Int ptn0 xX0 $= ( IMP-symbol-100-is-pattern substitution-disjoint ) CBAD $. $}
notation-cache-89 $p #Notation ( \kore-symbol-Lbl'Hash'system'LParUndsRParUnds'K-IO'Unds'KItem'Unds'String ptn1 ) ( \app \kore-symbol-Lbl'Hash'system'LParUndsRParUnds'K-IO'Unds'KItem'Unds'String-symbol ptn1 ) $= ( IMP-symbol-101-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-101-is-pattern IMP-symbol-101-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-90 $p #Notation ( \kore-symbol-Lbl'Hash'system'LParUndsRParUnds'K-IO'Unds'KItem'Unds'String ptn2 ) ( \app \kore-symbol-Lbl'Hash'system'LParUndsRParUnds'K-IO'Unds'KItem'Unds'String-symbol ptn2 ) $= ( IMP-symbol-101-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-101-is-pattern IMP-symbol-101-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-101-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-101-substitution $p #Substitution ( \kore-symbol-Lbl'Hash'system'LParUndsRParUnds'K-IO'Unds'KItem'Unds'String ptn1 ) ( \kore-symbol-Lbl'Hash'system'LParUndsRParUnds'K-IO'Unds'KItem'Unds'String ptn2 ) ptn0 xX0 $= ( IMP-symbol-101-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-101-is-pattern substitution-disjoint substitution-app notation-cache-89 notation-cache-90 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-91 $p #Notation ( \kore-symbol-Lbl'Hash'system'LParUndsRParUnds'K-IO'Unds'KItem'Unds'String ptn0 ) ( \app \kore-symbol-Lbl'Hash'system'LParUndsRParUnds'K-IO'Unds'KItem'Unds'String-symbol ptn0 ) $= ( IMP-symbol-101-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-101-is-pattern IMP-symbol-101-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-101-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-101-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Hash'system'LParUndsRParUnds'K-IO'Unds'KItem'Unds'String ptn0 ) $= ( IMP-symbol-101-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-101-is-pattern application-context-app-right notation-cache-91 notation-application-context ) DEBFBGADEBACHBIJ $. $}
${ IMP-symbol-102-substitution.0 $e #Substitution ptn1 ptn4 ptn0 xX0 $.
   IMP-symbol-102-substitution.1 $e #Substitution ptn2 ptn5 ptn0 xX0 $.
   IMP-symbol-102-substitution.2 $e #Substitution ptn3 ptn6 ptn0 xX0 $.
   IMP-symbol-102-substitution $p #Substitution ( \kore-symbol-Lbl'Hash'systemResult ptn1 ptn2 ptn3 ) ( \kore-symbol-Lbl'Hash'systemResult ptn4 ptn5 ptn6 ) ptn0 xX0 $= ( app-is-pattern IMP-symbol-102-is-symbol symbol-is-pattern IMP-symbol-102-is-pattern substitution-app notation-reflexivity IMP-symbol-102-is-sugar notation-transitivity substitution-disjoint notation-substitution ) MNCLDLELMNFLGLHLBCDEOFGHOBABMNCLDLEMNFLGLHABMNCLDMNFLGABMNCMNFAMNBATIPJPKPCDEOMNCLDLELMNCLDLELCDERMNCLDLELQSFGHOMNFLGLHLMNFLGLHLFGHRMNFLGLHLQSBQUA $. $}
notation-cache-92 $p #Notation ( \kore-symbol-Lbl'Hash'systemResult ptn0 ptn1 ptn2 ) ( \app ( \app ( \app \kore-symbol-Lbl'Hash'systemResult-symbol ptn0 ) ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-102-is-symbol symbol-is-pattern notation-reflexivity notation-app IMP-symbol-102-is-pattern IMP-symbol-102-is-sugar notation-transitivity ) ABCIEFADBDCDEFADBDCDABCJEFADBDCEFADBDCEFADBEFADBEFAEFAEFGAGHBGHCGHK $.
${ $d xX0 ptn1 $.
   $d xX0 ptn2 $.
   IMP-symbol-102-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-102-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Hash'systemResult ptn0 ptn1 ptn2 ) $= ( app-is-pattern IMP-symbol-102-is-symbol symbol-is-pattern application-context-app-left IMP-symbol-102-is-pattern application-context-app-right notation-cache-92 notation-application-context ) GHBFCFDFBCDJAGHBFCFDAGHBFCAGHBAEKIIBCDLM $. $}
${ $d xX0 ptn0 $.
   $d xX0 ptn2 $.
   IMP-symbol-102-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-102-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Hash'systemResult ptn0 ptn1 ptn2 ) $= ( app-is-pattern IMP-symbol-102-is-symbol symbol-is-pattern IMP-symbol-102-is-pattern application-context-app-right application-context-app-left notation-cache-92 notation-application-context ) GHBFCFDFBCDIAGHBFCFDAGHBFCAEJKBCDLM $. $}
${ $d xX0 ptn0 $.
   $d xX0 ptn1 $.
   IMP-symbol-102-application-context-2.0 $e #ApplicationContext xX0 ptn2 $.
   IMP-symbol-102-application-context-2 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Hash'systemResult ptn0 ptn1 ptn2 ) $= ( app-is-pattern IMP-symbol-102-is-symbol symbol-is-pattern IMP-symbol-102-is-pattern application-context-app-right notation-cache-92 notation-application-context ) GHBFCFDFBCDIAGHBFCFDAEJBCDKL $. $}
notation-cache-93 $p #Notation ( \kore-symbol-Lbl'Hash'tell'LParUndsRParUnds'K-IO'Unds'IOInt'Unds'Int ptn1 ) ( \app \kore-symbol-Lbl'Hash'tell'LParUndsRParUnds'K-IO'Unds'IOInt'Unds'Int-symbol ptn1 ) $= ( IMP-symbol-103-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-103-is-pattern IMP-symbol-103-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-94 $p #Notation ( \kore-symbol-Lbl'Hash'tell'LParUndsRParUnds'K-IO'Unds'IOInt'Unds'Int ptn2 ) ( \app \kore-symbol-Lbl'Hash'tell'LParUndsRParUnds'K-IO'Unds'IOInt'Unds'Int-symbol ptn2 ) $= ( IMP-symbol-103-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-103-is-pattern IMP-symbol-103-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-103-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-103-substitution $p #Substitution ( \kore-symbol-Lbl'Hash'tell'LParUndsRParUnds'K-IO'Unds'IOInt'Unds'Int ptn1 ) ( \kore-symbol-Lbl'Hash'tell'LParUndsRParUnds'K-IO'Unds'IOInt'Unds'Int ptn2 ) ptn0 xX0 $= ( IMP-symbol-103-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-103-is-pattern substitution-disjoint substitution-app notation-cache-93 notation-cache-94 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-95 $p #Notation ( \kore-symbol-Lbl'Hash'tell'LParUndsRParUnds'K-IO'Unds'IOInt'Unds'Int ptn0 ) ( \app \kore-symbol-Lbl'Hash'tell'LParUndsRParUnds'K-IO'Unds'IOInt'Unds'Int-symbol ptn0 ) $= ( IMP-symbol-103-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-103-is-pattern IMP-symbol-103-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-103-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-103-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Hash'tell'LParUndsRParUnds'K-IO'Unds'IOInt'Unds'Int ptn0 ) $= ( IMP-symbol-103-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-103-is-pattern application-context-app-right notation-cache-95 notation-application-context ) DEBFBGADEBACHBIJ $. $}
notation-cache-96 $p #Notation ( \kore-symbol-Lbl'Hash'tempFile ptn1 ptn2 ) ( \app ( \app \kore-symbol-Lbl'Hash'tempFile-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-104-is-symbol symbol-is-pattern IMP-symbol-104-is-pattern IMP-symbol-104-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-97 $p #Notation ( \kore-symbol-Lbl'Hash'tempFile ptn3 ptn4 ) ( \app ( \app \kore-symbol-Lbl'Hash'tempFile-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-104-is-symbol symbol-is-pattern IMP-symbol-104-is-pattern IMP-symbol-104-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-104-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-104-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-104-substitution $p #Substitution ( \kore-symbol-Lbl'Hash'tempFile ptn1 ptn2 ) ( \kore-symbol-Lbl'Hash'tempFile ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-104-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-104-is-pattern substitution-app substitution-disjoint notation-cache-96 notation-cache-97 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-98 $p #Notation ( \kore-symbol-Lbl'Hash'tempFile ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'Hash'tempFile-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-104-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-104-is-pattern IMP-symbol-104-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-104-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-104-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Hash'tempFile ptn0 ptn1 ) $= ( IMP-symbol-104-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-104-is-pattern application-context-app-right application-context-app-left notation-cache-98 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-104-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-104-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Hash'tempFile ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-104-is-symbol symbol-is-pattern IMP-symbol-104-is-pattern application-context-app-right notation-cache-98 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
${ IMP-symbol-105-substitution $p #Substitution \kore-symbol-Lbl'Hash'time'LParRParUnds'K-IO'Unds'Int \kore-symbol-Lbl'Hash'time'LParRParUnds'K-IO'Unds'Int ptn0 xX0 $= ( IMP-symbol-105-is-pattern substitution-disjoint ) CBAD $. $}
notation-cache-99 $p #Notation ( \kore-symbol-Lbl'Hash'unknownIOError ptn1 ) ( \app \kore-symbol-Lbl'Hash'unknownIOError-symbol ptn1 ) $= ( IMP-symbol-106-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-106-is-pattern IMP-symbol-106-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-100 $p #Notation ( \kore-symbol-Lbl'Hash'unknownIOError ptn2 ) ( \app \kore-symbol-Lbl'Hash'unknownIOError-symbol ptn2 ) $= ( IMP-symbol-106-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-106-is-pattern IMP-symbol-106-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-106-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-106-substitution $p #Substitution ( \kore-symbol-Lbl'Hash'unknownIOError ptn1 ) ( \kore-symbol-Lbl'Hash'unknownIOError ptn2 ) ptn0 xX0 $= ( IMP-symbol-106-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-106-is-pattern substitution-disjoint substitution-app notation-cache-99 notation-cache-100 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-101 $p #Notation ( \kore-symbol-Lbl'Hash'unknownIOError ptn0 ) ( \app \kore-symbol-Lbl'Hash'unknownIOError-symbol ptn0 ) $= ( IMP-symbol-106-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-106-is-pattern IMP-symbol-106-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-106-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-106-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Hash'unknownIOError ptn0 ) $= ( IMP-symbol-106-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-106-is-pattern application-context-app-right notation-cache-101 notation-application-context ) DEBFBGADEBACHBIJ $. $}
notation-cache-102 $p #Notation ( \kore-symbol-Lbl'Hash'unlock'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'Int ptn1 ptn2 ) ( \app ( \app \kore-symbol-Lbl'Hash'unlock'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'Int-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-107-is-symbol symbol-is-pattern IMP-symbol-107-is-pattern IMP-symbol-107-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-103 $p #Notation ( \kore-symbol-Lbl'Hash'unlock'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'Int ptn3 ptn4 ) ( \app ( \app \kore-symbol-Lbl'Hash'unlock'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'Int-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-107-is-symbol symbol-is-pattern IMP-symbol-107-is-pattern IMP-symbol-107-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-107-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-107-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-107-substitution $p #Substitution ( \kore-symbol-Lbl'Hash'unlock'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'Int ptn1 ptn2 ) ( \kore-symbol-Lbl'Hash'unlock'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'Int ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-107-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-107-is-pattern substitution-app substitution-disjoint notation-cache-102 notation-cache-103 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-104 $p #Notation ( \kore-symbol-Lbl'Hash'unlock'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'Int ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'Hash'unlock'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'Int-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-107-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-107-is-pattern IMP-symbol-107-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-107-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-107-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Hash'unlock'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'Int ptn0 ptn1 ) $= ( IMP-symbol-107-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-107-is-pattern application-context-app-right application-context-app-left notation-cache-104 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-107-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-107-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Hash'unlock'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'Int ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-107-is-symbol symbol-is-pattern IMP-symbol-107-is-pattern application-context-app-right notation-cache-104 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
notation-cache-105 $p #Notation ( \kore-symbol-Lbl'Hash'write'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'String ptn1 ptn2 ) ( \app ( \app \kore-symbol-Lbl'Hash'write'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'String-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-108-is-symbol symbol-is-pattern IMP-symbol-108-is-pattern IMP-symbol-108-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-106 $p #Notation ( \kore-symbol-Lbl'Hash'write'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'String ptn3 ptn4 ) ( \app ( \app \kore-symbol-Lbl'Hash'write'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'String-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-108-is-symbol symbol-is-pattern IMP-symbol-108-is-pattern IMP-symbol-108-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-108-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-108-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-108-substitution $p #Substitution ( \kore-symbol-Lbl'Hash'write'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'String ptn1 ptn2 ) ( \kore-symbol-Lbl'Hash'write'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'String ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-108-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-108-is-pattern substitution-app substitution-disjoint notation-cache-105 notation-cache-106 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-107 $p #Notation ( \kore-symbol-Lbl'Hash'write'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'String ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'Hash'write'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'String-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-108-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-108-is-pattern IMP-symbol-108-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-108-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-108-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Hash'write'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'String ptn0 ptn1 ) $= ( IMP-symbol-108-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-108-is-pattern application-context-app-right application-context-app-left notation-cache-107 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-108-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-108-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Hash'write'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'String ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-108-is-symbol symbol-is-pattern IMP-symbol-108-is-pattern application-context-app-right notation-cache-107 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
notation-cache-108 $p #Notation ( \kore-symbol-Lbl-'UndsUnds'IMP-SYNTAX'Unds'AExp'Unds'Int ptn1 ) ( \app \kore-symbol-Lbl-'UndsUnds'IMP-SYNTAX'Unds'AExp'Unds'Int-symbol ptn1 ) $= ( IMP-symbol-109-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-109-is-pattern IMP-symbol-109-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-109 $p #Notation ( \kore-symbol-Lbl-'UndsUnds'IMP-SYNTAX'Unds'AExp'Unds'Int ptn2 ) ( \app \kore-symbol-Lbl-'UndsUnds'IMP-SYNTAX'Unds'AExp'Unds'Int-symbol ptn2 ) $= ( IMP-symbol-109-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-109-is-pattern IMP-symbol-109-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-109-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-109-substitution $p #Substitution ( \kore-symbol-Lbl-'UndsUnds'IMP-SYNTAX'Unds'AExp'Unds'Int ptn1 ) ( \kore-symbol-Lbl-'UndsUnds'IMP-SYNTAX'Unds'AExp'Unds'Int ptn2 ) ptn0 xX0 $= ( IMP-symbol-109-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-109-is-pattern substitution-disjoint substitution-app notation-cache-108 notation-cache-109 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-110 $p #Notation ( \kore-symbol-Lbl-'UndsUnds'IMP-SYNTAX'Unds'AExp'Unds'Int ptn0 ) ( \app \kore-symbol-Lbl-'UndsUnds'IMP-SYNTAX'Unds'AExp'Unds'Int-symbol ptn0 ) $= ( IMP-symbol-109-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-109-is-pattern IMP-symbol-109-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-109-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-109-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl-'UndsUnds'IMP-SYNTAX'Unds'AExp'Unds'Int ptn0 ) $= ( IMP-symbol-109-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-109-is-pattern application-context-app-right notation-cache-110 notation-application-context ) DEBFBGADEBACHBIJ $. $}
${ IMP-symbol-110-substitution $p #Substitution \kore-symbol-Lbl'Stop'List \kore-symbol-Lbl'Stop'List ptn0 xX0 $= ( IMP-symbol-110-is-pattern substitution-disjoint ) CBAD $. $}
${ IMP-symbol-111-substitution $p #Substitution \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ptn0 xX0 $= ( IMP-symbol-111-is-pattern substitution-disjoint ) CBAD $. $}
${ IMP-symbol-112-substitution $p #Substitution \kore-symbol-Lbl'Stop'Map \kore-symbol-Lbl'Stop'Map ptn0 xX0 $= ( IMP-symbol-112-is-pattern substitution-disjoint ) CBAD $. $}
${ IMP-symbol-113-substitution $p #Substitution \kore-symbol-Lbl'Stop'Set \kore-symbol-Lbl'Stop'Set ptn0 xX0 $= ( IMP-symbol-113-is-pattern substitution-disjoint ) CBAD $. $}
notation-cache-111 $p #Notation ( \kore-symbol-Lbl'-LT-'T'-GT-' ptn1 ptn2 ) ( \app ( \app \kore-symbol-Lbl'-LT-'T'-GT-'-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-114-is-symbol symbol-is-pattern IMP-symbol-114-is-pattern IMP-symbol-114-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-112 $p #Notation ( \kore-symbol-Lbl'-LT-'T'-GT-' ptn3 ptn4 ) ( \app ( \app \kore-symbol-Lbl'-LT-'T'-GT-'-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-114-is-symbol symbol-is-pattern IMP-symbol-114-is-pattern IMP-symbol-114-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-114-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-114-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-114-substitution $p #Substitution ( \kore-symbol-Lbl'-LT-'T'-GT-' ptn1 ptn2 ) ( \kore-symbol-Lbl'-LT-'T'-GT-' ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-114-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-114-is-pattern substitution-app substitution-disjoint notation-cache-111 notation-cache-112 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-113 $p #Notation ( \kore-symbol-Lbl'-LT-'T'-GT-' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'-LT-'T'-GT-'-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-114-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-114-is-pattern IMP-symbol-114-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-114-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-114-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'-LT-'T'-GT-' ptn0 ptn1 ) $= ( IMP-symbol-114-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-114-is-pattern application-context-app-right application-context-app-left notation-cache-113 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-114-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-114-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'-LT-'T'-GT-' ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-114-is-symbol symbol-is-pattern IMP-symbol-114-is-pattern application-context-app-right notation-cache-113 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
notation-cache-114 $p #Notation ( \kore-symbol-Lbl'-LT-'T'-GT-'-fragment ptn1 ptn2 ) ( \app ( \app \kore-symbol-Lbl'-LT-'T'-GT-'-fragment-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-115-is-symbol symbol-is-pattern IMP-symbol-115-is-pattern IMP-symbol-115-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-115 $p #Notation ( \kore-symbol-Lbl'-LT-'T'-GT-'-fragment ptn3 ptn4 ) ( \app ( \app \kore-symbol-Lbl'-LT-'T'-GT-'-fragment-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-115-is-symbol symbol-is-pattern IMP-symbol-115-is-pattern IMP-symbol-115-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-115-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-115-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-115-substitution $p #Substitution ( \kore-symbol-Lbl'-LT-'T'-GT-'-fragment ptn1 ptn2 ) ( \kore-symbol-Lbl'-LT-'T'-GT-'-fragment ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-115-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-115-is-pattern substitution-app substitution-disjoint notation-cache-114 notation-cache-115 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-116 $p #Notation ( \kore-symbol-Lbl'-LT-'T'-GT-'-fragment ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'-LT-'T'-GT-'-fragment-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-115-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-115-is-pattern IMP-symbol-115-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-115-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-115-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'-LT-'T'-GT-'-fragment ptn0 ptn1 ) $= ( IMP-symbol-115-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-115-is-pattern application-context-app-right application-context-app-left notation-cache-116 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-115-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-115-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'-LT-'T'-GT-'-fragment ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-115-is-symbol symbol-is-pattern IMP-symbol-115-is-pattern application-context-app-right notation-cache-116 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
notation-cache-117 $p #Notation ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' ptn1 ) ( \app \kore-symbol-Lbl'-LT-'generatedCounter'-GT-'-symbol ptn1 ) $= ( IMP-symbol-116-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-116-is-pattern IMP-symbol-116-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-118 $p #Notation ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' ptn2 ) ( \app \kore-symbol-Lbl'-LT-'generatedCounter'-GT-'-symbol ptn2 ) $= ( IMP-symbol-116-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-116-is-pattern IMP-symbol-116-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-116-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-116-substitution $p #Substitution ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' ptn1 ) ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' ptn2 ) ptn0 xX0 $= ( IMP-symbol-116-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-116-is-pattern substitution-disjoint substitution-app notation-cache-117 notation-cache-118 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-119 $p #Notation ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' ptn0 ) ( \app \kore-symbol-Lbl'-LT-'generatedCounter'-GT-'-symbol ptn0 ) $= ( IMP-symbol-116-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-116-is-pattern IMP-symbol-116-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-116-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-116-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' ptn0 ) $= ( IMP-symbol-116-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-116-is-pattern application-context-app-right notation-cache-119 notation-application-context ) DEBFBGADEBACHBIJ $. $}
notation-cache-120 $p #Notation ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ptn1 ptn2 ) ( \app ( \app \kore-symbol-Lbl'-LT-'generatedTop'-GT-'-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-117-is-symbol symbol-is-pattern IMP-symbol-117-is-pattern IMP-symbol-117-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-121 $p #Notation ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ptn3 ptn4 ) ( \app ( \app \kore-symbol-Lbl'-LT-'generatedTop'-GT-'-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-117-is-symbol symbol-is-pattern IMP-symbol-117-is-pattern IMP-symbol-117-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-117-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-117-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-117-substitution $p #Substitution ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ptn1 ptn2 ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-117-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-117-is-pattern substitution-app substitution-disjoint notation-cache-120 notation-cache-121 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-122 $p #Notation ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'-LT-'generatedTop'-GT-'-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-117-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-117-is-pattern IMP-symbol-117-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-117-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-117-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ptn0 ptn1 ) $= ( IMP-symbol-117-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-117-is-pattern application-context-app-right application-context-app-left notation-cache-122 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-117-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-117-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-117-is-symbol symbol-is-pattern IMP-symbol-117-is-pattern application-context-app-right notation-cache-122 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
notation-cache-123 $p #Notation ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-'-fragment ptn1 ptn2 ) ( \app ( \app \kore-symbol-Lbl'-LT-'generatedTop'-GT-'-fragment-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-118-is-symbol symbol-is-pattern IMP-symbol-118-is-pattern IMP-symbol-118-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-124 $p #Notation ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-'-fragment ptn3 ptn4 ) ( \app ( \app \kore-symbol-Lbl'-LT-'generatedTop'-GT-'-fragment-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-118-is-symbol symbol-is-pattern IMP-symbol-118-is-pattern IMP-symbol-118-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-118-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-118-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-118-substitution $p #Substitution ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-'-fragment ptn1 ptn2 ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-'-fragment ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-118-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-118-is-pattern substitution-app substitution-disjoint notation-cache-123 notation-cache-124 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-125 $p #Notation ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-'-fragment ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'-LT-'generatedTop'-GT-'-fragment-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-118-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-118-is-pattern IMP-symbol-118-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-118-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-118-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-'-fragment ptn0 ptn1 ) $= ( IMP-symbol-118-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-118-is-pattern application-context-app-right application-context-app-left notation-cache-125 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-118-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-118-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-'-fragment ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-118-is-symbol symbol-is-pattern IMP-symbol-118-is-pattern application-context-app-right notation-cache-125 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
notation-cache-126 $p #Notation ( \kore-symbol-Lbl'-LT-'k'-GT-' ptn1 ) ( \app \kore-symbol-Lbl'-LT-'k'-GT-'-symbol ptn1 ) $= ( IMP-symbol-119-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-119-is-pattern IMP-symbol-119-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-127 $p #Notation ( \kore-symbol-Lbl'-LT-'k'-GT-' ptn2 ) ( \app \kore-symbol-Lbl'-LT-'k'-GT-'-symbol ptn2 ) $= ( IMP-symbol-119-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-119-is-pattern IMP-symbol-119-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-119-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-119-substitution $p #Substitution ( \kore-symbol-Lbl'-LT-'k'-GT-' ptn1 ) ( \kore-symbol-Lbl'-LT-'k'-GT-' ptn2 ) ptn0 xX0 $= ( IMP-symbol-119-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-119-is-pattern substitution-disjoint substitution-app notation-cache-126 notation-cache-127 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-128 $p #Notation ( \kore-symbol-Lbl'-LT-'k'-GT-' ptn0 ) ( \app \kore-symbol-Lbl'-LT-'k'-GT-'-symbol ptn0 ) $= ( IMP-symbol-119-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-119-is-pattern IMP-symbol-119-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-119-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-119-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'-LT-'k'-GT-' ptn0 ) $= ( IMP-symbol-119-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-119-is-pattern application-context-app-right notation-cache-128 notation-application-context ) DEBFBGADEBACHBIJ $. $}
notation-cache-129 $p #Notation ( \kore-symbol-Lbl'-LT-'state'-GT-' ptn1 ) ( \app \kore-symbol-Lbl'-LT-'state'-GT-'-symbol ptn1 ) $= ( IMP-symbol-120-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-120-is-pattern IMP-symbol-120-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-130 $p #Notation ( \kore-symbol-Lbl'-LT-'state'-GT-' ptn2 ) ( \app \kore-symbol-Lbl'-LT-'state'-GT-'-symbol ptn2 ) $= ( IMP-symbol-120-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-120-is-pattern IMP-symbol-120-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-120-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-120-substitution $p #Substitution ( \kore-symbol-Lbl'-LT-'state'-GT-' ptn1 ) ( \kore-symbol-Lbl'-LT-'state'-GT-' ptn2 ) ptn0 xX0 $= ( IMP-symbol-120-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-120-is-pattern substitution-disjoint substitution-app notation-cache-129 notation-cache-130 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-131 $p #Notation ( \kore-symbol-Lbl'-LT-'state'-GT-' ptn0 ) ( \app \kore-symbol-Lbl'-LT-'state'-GT-'-symbol ptn0 ) $= ( IMP-symbol-120-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-120-is-pattern IMP-symbol-120-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-120-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-120-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'-LT-'state'-GT-' ptn0 ) $= ( IMP-symbol-120-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-120-is-pattern application-context-app-right notation-cache-131 notation-application-context ) DEBFBGADEBACHBIJ $. $}
notation-cache-132 $p #Notation ( \kore-symbol-LblBase2String'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'Int'Unds'Int ptn1 ptn2 ) ( \app ( \app \kore-symbol-LblBase2String'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'Int'Unds'Int-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-121-is-symbol symbol-is-pattern IMP-symbol-121-is-pattern IMP-symbol-121-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-133 $p #Notation ( \kore-symbol-LblBase2String'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'Int'Unds'Int ptn3 ptn4 ) ( \app ( \app \kore-symbol-LblBase2String'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'Int'Unds'Int-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-121-is-symbol symbol-is-pattern IMP-symbol-121-is-pattern IMP-symbol-121-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-121-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-121-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-121-substitution $p #Substitution ( \kore-symbol-LblBase2String'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'Int'Unds'Int ptn1 ptn2 ) ( \kore-symbol-LblBase2String'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'Int'Unds'Int ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-121-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-121-is-pattern substitution-app substitution-disjoint notation-cache-132 notation-cache-133 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-134 $p #Notation ( \kore-symbol-LblBase2String'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'Int'Unds'Int ptn0 ptn1 ) ( \app ( \app \kore-symbol-LblBase2String'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'Int'Unds'Int-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-121-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-121-is-pattern IMP-symbol-121-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-121-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-121-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-LblBase2String'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'Int'Unds'Int ptn0 ptn1 ) $= ( IMP-symbol-121-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-121-is-pattern application-context-app-right application-context-app-left notation-cache-134 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-121-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-121-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-LblBase2String'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'Int'Unds'Int ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-121-is-symbol symbol-is-pattern IMP-symbol-121-is-pattern application-context-app-right notation-cache-134 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
notation-cache-135 $p #Notation ( \kore-symbol-LblBool2String'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Bool ptn1 ) ( \app \kore-symbol-LblBool2String'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Bool-symbol ptn1 ) $= ( IMP-symbol-122-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-122-is-pattern IMP-symbol-122-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-136 $p #Notation ( \kore-symbol-LblBool2String'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Bool ptn2 ) ( \app \kore-symbol-LblBool2String'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Bool-symbol ptn2 ) $= ( IMP-symbol-122-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-122-is-pattern IMP-symbol-122-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-122-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-122-substitution $p #Substitution ( \kore-symbol-LblBool2String'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Bool ptn1 ) ( \kore-symbol-LblBool2String'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Bool ptn2 ) ptn0 xX0 $= ( IMP-symbol-122-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-122-is-pattern substitution-disjoint substitution-app notation-cache-135 notation-cache-136 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-137 $p #Notation ( \kore-symbol-LblBool2String'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Bool ptn0 ) ( \app \kore-symbol-LblBool2String'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Bool-symbol ptn0 ) $= ( IMP-symbol-122-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-122-is-pattern IMP-symbol-122-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-122-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-122-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-LblBool2String'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Bool ptn0 ) $= ( IMP-symbol-122-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-122-is-pattern application-context-app-right notation-cache-137 notation-application-context ) DEBFBGADEBACHBIJ $. $}
notation-cache-138 $p #Notation ( \kore-symbol-LblFloat2String'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Float ptn1 ) ( \app \kore-symbol-LblFloat2String'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Float-symbol ptn1 ) $= ( IMP-symbol-123-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-123-is-pattern IMP-symbol-123-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-139 $p #Notation ( \kore-symbol-LblFloat2String'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Float ptn2 ) ( \app \kore-symbol-LblFloat2String'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Float-symbol ptn2 ) $= ( IMP-symbol-123-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-123-is-pattern IMP-symbol-123-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-123-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-123-substitution $p #Substitution ( \kore-symbol-LblFloat2String'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Float ptn1 ) ( \kore-symbol-LblFloat2String'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Float ptn2 ) ptn0 xX0 $= ( IMP-symbol-123-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-123-is-pattern substitution-disjoint substitution-app notation-cache-138 notation-cache-139 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-140 $p #Notation ( \kore-symbol-LblFloat2String'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Float ptn0 ) ( \app \kore-symbol-LblFloat2String'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Float-symbol ptn0 ) $= ( IMP-symbol-123-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-123-is-pattern IMP-symbol-123-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-123-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-123-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-LblFloat2String'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Float ptn0 ) $= ( IMP-symbol-123-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-123-is-pattern application-context-app-right notation-cache-140 notation-application-context ) DEBFBGADEBACHBIJ $. $}
notation-cache-141 $p #Notation ( \kore-symbol-LblFloat2String'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'Float'Unds'String ptn1 ptn2 ) ( \app ( \app \kore-symbol-LblFloat2String'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'Float'Unds'String-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-124-is-symbol symbol-is-pattern IMP-symbol-124-is-pattern IMP-symbol-124-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-142 $p #Notation ( \kore-symbol-LblFloat2String'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'Float'Unds'String ptn3 ptn4 ) ( \app ( \app \kore-symbol-LblFloat2String'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'Float'Unds'String-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-124-is-symbol symbol-is-pattern IMP-symbol-124-is-pattern IMP-symbol-124-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-124-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-124-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-124-substitution $p #Substitution ( \kore-symbol-LblFloat2String'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'Float'Unds'String ptn1 ptn2 ) ( \kore-symbol-LblFloat2String'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'Float'Unds'String ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-124-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-124-is-pattern substitution-app substitution-disjoint notation-cache-141 notation-cache-142 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-143 $p #Notation ( \kore-symbol-LblFloat2String'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'Float'Unds'String ptn0 ptn1 ) ( \app ( \app \kore-symbol-LblFloat2String'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'Float'Unds'String-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-124-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-124-is-pattern IMP-symbol-124-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-124-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-124-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-LblFloat2String'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'Float'Unds'String ptn0 ptn1 ) $= ( IMP-symbol-124-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-124-is-pattern application-context-app-right application-context-app-left notation-cache-143 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-124-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-124-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-LblFloat2String'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'Float'Unds'String ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-124-is-symbol symbol-is-pattern IMP-symbol-124-is-pattern application-context-app-right notation-cache-143 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
notation-cache-144 $p #Notation ( \kore-symbol-LblId2String'LParUndsRParUnds'ID-COMMON'Unds'String'Unds'Id ptn1 ) ( \app \kore-symbol-LblId2String'LParUndsRParUnds'ID-COMMON'Unds'String'Unds'Id-symbol ptn1 ) $= ( IMP-symbol-125-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-125-is-pattern IMP-symbol-125-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-145 $p #Notation ( \kore-symbol-LblId2String'LParUndsRParUnds'ID-COMMON'Unds'String'Unds'Id ptn2 ) ( \app \kore-symbol-LblId2String'LParUndsRParUnds'ID-COMMON'Unds'String'Unds'Id-symbol ptn2 ) $= ( IMP-symbol-125-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-125-is-pattern IMP-symbol-125-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-125-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-125-substitution $p #Substitution ( \kore-symbol-LblId2String'LParUndsRParUnds'ID-COMMON'Unds'String'Unds'Id ptn1 ) ( \kore-symbol-LblId2String'LParUndsRParUnds'ID-COMMON'Unds'String'Unds'Id ptn2 ) ptn0 xX0 $= ( IMP-symbol-125-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-125-is-pattern substitution-disjoint substitution-app notation-cache-144 notation-cache-145 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-146 $p #Notation ( \kore-symbol-LblId2String'LParUndsRParUnds'ID-COMMON'Unds'String'Unds'Id ptn0 ) ( \app \kore-symbol-LblId2String'LParUndsRParUnds'ID-COMMON'Unds'String'Unds'Id-symbol ptn0 ) $= ( IMP-symbol-125-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-125-is-pattern IMP-symbol-125-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-125-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-125-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-LblId2String'LParUndsRParUnds'ID-COMMON'Unds'String'Unds'Id ptn0 ) $= ( IMP-symbol-125-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-125-is-pattern application-context-app-right notation-cache-146 notation-application-context ) DEBFBGADEBACHBIJ $. $}
notation-cache-147 $p #Notation ( \kore-symbol-LblInt2String'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Int ptn1 ) ( \app \kore-symbol-LblInt2String'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Int-symbol ptn1 ) $= ( IMP-symbol-126-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-126-is-pattern IMP-symbol-126-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-148 $p #Notation ( \kore-symbol-LblInt2String'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Int ptn2 ) ( \app \kore-symbol-LblInt2String'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Int-symbol ptn2 ) $= ( IMP-symbol-126-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-126-is-pattern IMP-symbol-126-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-126-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-126-substitution $p #Substitution ( \kore-symbol-LblInt2String'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Int ptn1 ) ( \kore-symbol-LblInt2String'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Int ptn2 ) ptn0 xX0 $= ( IMP-symbol-126-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-126-is-pattern substitution-disjoint substitution-app notation-cache-147 notation-cache-148 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-149 $p #Notation ( \kore-symbol-LblInt2String'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Int ptn0 ) ( \app \kore-symbol-LblInt2String'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Int-symbol ptn0 ) $= ( IMP-symbol-126-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-126-is-pattern IMP-symbol-126-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-126-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-126-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-LblInt2String'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Int ptn0 ) $= ( IMP-symbol-126-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-126-is-pattern application-context-app-right notation-cache-149 notation-application-context ) DEBFBGADEBACHBIJ $. $}
notation-cache-150 $p #Notation ( \kore-symbol-LblList'Coln'get ptn1 ptn2 ) ( \app ( \app \kore-symbol-LblList'Coln'get-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-127-is-symbol symbol-is-pattern IMP-symbol-127-is-pattern IMP-symbol-127-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-151 $p #Notation ( \kore-symbol-LblList'Coln'get ptn3 ptn4 ) ( \app ( \app \kore-symbol-LblList'Coln'get-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-127-is-symbol symbol-is-pattern IMP-symbol-127-is-pattern IMP-symbol-127-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-127-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-127-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-127-substitution $p #Substitution ( \kore-symbol-LblList'Coln'get ptn1 ptn2 ) ( \kore-symbol-LblList'Coln'get ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-127-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-127-is-pattern substitution-app substitution-disjoint notation-cache-150 notation-cache-151 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-152 $p #Notation ( \kore-symbol-LblList'Coln'get ptn0 ptn1 ) ( \app ( \app \kore-symbol-LblList'Coln'get-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-127-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-127-is-pattern IMP-symbol-127-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-127-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-127-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-LblList'Coln'get ptn0 ptn1 ) $= ( IMP-symbol-127-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-127-is-pattern application-context-app-right application-context-app-left notation-cache-152 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-127-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-127-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-LblList'Coln'get ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-127-is-symbol symbol-is-pattern IMP-symbol-127-is-pattern application-context-app-right notation-cache-152 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
${ IMP-symbol-128-substitution.0 $e #Substitution ptn1 ptn4 ptn0 xX0 $.
   IMP-symbol-128-substitution.1 $e #Substitution ptn2 ptn5 ptn0 xX0 $.
   IMP-symbol-128-substitution.2 $e #Substitution ptn3 ptn6 ptn0 xX0 $.
   IMP-symbol-128-substitution $p #Substitution ( \kore-symbol-LblList'Coln'range ptn1 ptn2 ptn3 ) ( \kore-symbol-LblList'Coln'range ptn4 ptn5 ptn6 ) ptn0 xX0 $= ( app-is-pattern IMP-symbol-128-is-symbol symbol-is-pattern IMP-symbol-128-is-pattern substitution-app notation-reflexivity IMP-symbol-128-is-sugar notation-transitivity substitution-disjoint notation-substitution ) MNCLDLELMNFLGLHLBCDEOFGHOBABMNCLDLEMNFLGLHABMNCLDMNFLGABMNCMNFAMNBATIPJPKPCDEOMNCLDLELMNCLDLELCDERMNCLDLELQSFGHOMNFLGLHLMNFLGLHLFGHRMNFLGLHLQSBQUA $. $}
notation-cache-153 $p #Notation ( \kore-symbol-LblList'Coln'range ptn0 ptn1 ptn2 ) ( \app ( \app ( \app \kore-symbol-LblList'Coln'range-symbol ptn0 ) ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-128-is-symbol symbol-is-pattern notation-reflexivity notation-app IMP-symbol-128-is-pattern IMP-symbol-128-is-sugar notation-transitivity ) ABCIEFADBDCDEFADBDCDABCJEFADBDCEFADBDCEFADBEFADBEFAEFAEFGAGHBGHCGHK $.
${ $d xX0 ptn1 $.
   $d xX0 ptn2 $.
   IMP-symbol-128-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-128-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-LblList'Coln'range ptn0 ptn1 ptn2 ) $= ( app-is-pattern IMP-symbol-128-is-symbol symbol-is-pattern application-context-app-left IMP-symbol-128-is-pattern application-context-app-right notation-cache-153 notation-application-context ) GHBFCFDFBCDJAGHBFCFDAGHBFCAGHBAEKIIBCDLM $. $}
${ $d xX0 ptn0 $.
   $d xX0 ptn2 $.
   IMP-symbol-128-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-128-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-LblList'Coln'range ptn0 ptn1 ptn2 ) $= ( app-is-pattern IMP-symbol-128-is-symbol symbol-is-pattern IMP-symbol-128-is-pattern application-context-app-right application-context-app-left notation-cache-153 notation-application-context ) GHBFCFDFBCDIAGHBFCFDAGHBFCAEJKBCDLM $. $}
${ $d xX0 ptn0 $.
   $d xX0 ptn1 $.
   IMP-symbol-128-application-context-2.0 $e #ApplicationContext xX0 ptn2 $.
   IMP-symbol-128-application-context-2 $p #ApplicationContext xX0 ( \kore-symbol-LblList'Coln'range ptn0 ptn1 ptn2 ) $= ( app-is-pattern IMP-symbol-128-is-symbol symbol-is-pattern IMP-symbol-128-is-pattern application-context-app-right notation-cache-153 notation-application-context ) GHBFCFDFBCDIAGHBFCFDAEJBCDKL $. $}
notation-cache-154 $p #Notation ( \kore-symbol-LblListItem ptn1 ) ( \app \kore-symbol-LblListItem-symbol ptn1 ) $= ( IMP-symbol-129-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-129-is-pattern IMP-symbol-129-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-155 $p #Notation ( \kore-symbol-LblListItem ptn2 ) ( \app \kore-symbol-LblListItem-symbol ptn2 ) $= ( IMP-symbol-129-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-129-is-pattern IMP-symbol-129-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-129-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-129-substitution $p #Substitution ( \kore-symbol-LblListItem ptn1 ) ( \kore-symbol-LblListItem ptn2 ) ptn0 xX0 $= ( IMP-symbol-129-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-129-is-pattern substitution-disjoint substitution-app notation-cache-154 notation-cache-155 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-156 $p #Notation ( \kore-symbol-LblListItem ptn0 ) ( \app \kore-symbol-LblListItem-symbol ptn0 ) $= ( IMP-symbol-129-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-129-is-pattern IMP-symbol-129-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-129-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-129-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-LblListItem ptn0 ) $= ( IMP-symbol-129-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-129-is-pattern application-context-app-right notation-cache-156 notation-application-context ) DEBFBGADEBACHBIJ $. $}
notation-cache-157 $p #Notation ( \kore-symbol-LblMap'Coln'lookup ptn1 ptn2 ) ( \app ( \app \kore-symbol-LblMap'Coln'lookup-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-130-is-symbol symbol-is-pattern IMP-symbol-130-is-pattern IMP-symbol-130-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-158 $p #Notation ( \kore-symbol-LblMap'Coln'lookup ptn3 ptn4 ) ( \app ( \app \kore-symbol-LblMap'Coln'lookup-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-130-is-symbol symbol-is-pattern IMP-symbol-130-is-pattern IMP-symbol-130-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-130-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-130-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-130-substitution $p #Substitution ( \kore-symbol-LblMap'Coln'lookup ptn1 ptn2 ) ( \kore-symbol-LblMap'Coln'lookup ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-130-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-130-is-pattern substitution-app substitution-disjoint notation-cache-157 notation-cache-158 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-159 $p #Notation ( \kore-symbol-LblMap'Coln'lookup ptn0 ptn1 ) ( \app ( \app \kore-symbol-LblMap'Coln'lookup-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-130-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-130-is-pattern IMP-symbol-130-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-130-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-130-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-LblMap'Coln'lookup ptn0 ptn1 ) $= ( IMP-symbol-130-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-130-is-pattern application-context-app-right application-context-app-left notation-cache-159 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-130-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-130-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-LblMap'Coln'lookup ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-130-is-symbol symbol-is-pattern IMP-symbol-130-is-pattern application-context-app-right notation-cache-159 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
${ IMP-symbol-131-substitution.0 $e #Substitution ptn1 ptn4 ptn0 xX0 $.
   IMP-symbol-131-substitution.1 $e #Substitution ptn2 ptn5 ptn0 xX0 $.
   IMP-symbol-131-substitution.2 $e #Substitution ptn3 ptn6 ptn0 xX0 $.
   IMP-symbol-131-substitution $p #Substitution ( \kore-symbol-LblMap'Coln'update ptn1 ptn2 ptn3 ) ( \kore-symbol-LblMap'Coln'update ptn4 ptn5 ptn6 ) ptn0 xX0 $= ( app-is-pattern IMP-symbol-131-is-symbol symbol-is-pattern IMP-symbol-131-is-pattern substitution-app notation-reflexivity IMP-symbol-131-is-sugar notation-transitivity substitution-disjoint notation-substitution ) MNCLDLELMNFLGLHLBCDEOFGHOBABMNCLDLEMNFLGLHABMNCLDMNFLGABMNCMNFAMNBATIPJPKPCDEOMNCLDLELMNCLDLELCDERMNCLDLELQSFGHOMNFLGLHLMNFLGLHLFGHRMNFLGLHLQSBQUA $. $}
notation-cache-160 $p #Notation ( \kore-symbol-LblMap'Coln'update ptn0 ptn1 ptn2 ) ( \app ( \app ( \app \kore-symbol-LblMap'Coln'update-symbol ptn0 ) ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-131-is-symbol symbol-is-pattern notation-reflexivity notation-app IMP-symbol-131-is-pattern IMP-symbol-131-is-sugar notation-transitivity ) ABCIEFADBDCDEFADBDCDABCJEFADBDCEFADBDCEFADBEFADBEFAEFAEFGAGHBGHCGHK $.
${ $d xX0 ptn1 $.
   $d xX0 ptn2 $.
   IMP-symbol-131-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-131-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-LblMap'Coln'update ptn0 ptn1 ptn2 ) $= ( app-is-pattern IMP-symbol-131-is-symbol symbol-is-pattern application-context-app-left IMP-symbol-131-is-pattern application-context-app-right notation-cache-160 notation-application-context ) GHBFCFDFBCDJAGHBFCFDAGHBFCAGHBAEKIIBCDLM $. $}
${ $d xX0 ptn0 $.
   $d xX0 ptn2 $.
   IMP-symbol-131-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-131-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-LblMap'Coln'update ptn0 ptn1 ptn2 ) $= ( app-is-pattern IMP-symbol-131-is-symbol symbol-is-pattern IMP-symbol-131-is-pattern application-context-app-right application-context-app-left notation-cache-160 notation-application-context ) GHBFCFDFBCDIAGHBFCFDAGHBFCAEJKBCDLM $. $}
${ $d xX0 ptn0 $.
   $d xX0 ptn1 $.
   IMP-symbol-131-application-context-2.0 $e #ApplicationContext xX0 ptn2 $.
   IMP-symbol-131-application-context-2 $p #ApplicationContext xX0 ( \kore-symbol-LblMap'Coln'update ptn0 ptn1 ptn2 ) $= ( app-is-pattern IMP-symbol-131-is-symbol symbol-is-pattern IMP-symbol-131-is-pattern application-context-app-right notation-cache-160 notation-application-context ) GHBFCFDFBCDIAGHBFCFDAEJBCDKL $. $}
notation-cache-161 $p #Notation ( \kore-symbol-LblSet'Coln'difference ptn1 ptn2 ) ( \app ( \app \kore-symbol-LblSet'Coln'difference-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-132-is-symbol symbol-is-pattern IMP-symbol-132-is-pattern IMP-symbol-132-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-162 $p #Notation ( \kore-symbol-LblSet'Coln'difference ptn3 ptn4 ) ( \app ( \app \kore-symbol-LblSet'Coln'difference-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-132-is-symbol symbol-is-pattern IMP-symbol-132-is-pattern IMP-symbol-132-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-132-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-132-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-132-substitution $p #Substitution ( \kore-symbol-LblSet'Coln'difference ptn1 ptn2 ) ( \kore-symbol-LblSet'Coln'difference ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-132-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-132-is-pattern substitution-app substitution-disjoint notation-cache-161 notation-cache-162 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-163 $p #Notation ( \kore-symbol-LblSet'Coln'difference ptn0 ptn1 ) ( \app ( \app \kore-symbol-LblSet'Coln'difference-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-132-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-132-is-pattern IMP-symbol-132-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-132-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-132-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-LblSet'Coln'difference ptn0 ptn1 ) $= ( IMP-symbol-132-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-132-is-pattern application-context-app-right application-context-app-left notation-cache-163 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-132-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-132-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-LblSet'Coln'difference ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-132-is-symbol symbol-is-pattern IMP-symbol-132-is-pattern application-context-app-right notation-cache-163 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
notation-cache-164 $p #Notation ( \kore-symbol-LblSet'Coln'in ptn1 ptn2 ) ( \app ( \app \kore-symbol-LblSet'Coln'in-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-133-is-symbol symbol-is-pattern IMP-symbol-133-is-pattern IMP-symbol-133-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-165 $p #Notation ( \kore-symbol-LblSet'Coln'in ptn3 ptn4 ) ( \app ( \app \kore-symbol-LblSet'Coln'in-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-133-is-symbol symbol-is-pattern IMP-symbol-133-is-pattern IMP-symbol-133-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-133-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-133-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-133-substitution $p #Substitution ( \kore-symbol-LblSet'Coln'in ptn1 ptn2 ) ( \kore-symbol-LblSet'Coln'in ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-133-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-133-is-pattern substitution-app substitution-disjoint notation-cache-164 notation-cache-165 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-166 $p #Notation ( \kore-symbol-LblSet'Coln'in ptn0 ptn1 ) ( \app ( \app \kore-symbol-LblSet'Coln'in-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-133-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-133-is-pattern IMP-symbol-133-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-133-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-133-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-LblSet'Coln'in ptn0 ptn1 ) $= ( IMP-symbol-133-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-133-is-pattern application-context-app-right application-context-app-left notation-cache-166 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-133-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-133-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-LblSet'Coln'in ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-133-is-symbol symbol-is-pattern IMP-symbol-133-is-pattern application-context-app-right notation-cache-166 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
notation-cache-167 $p #Notation ( \kore-symbol-LblSetItem ptn1 ) ( \app \kore-symbol-LblSetItem-symbol ptn1 ) $= ( IMP-symbol-134-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-134-is-pattern IMP-symbol-134-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-168 $p #Notation ( \kore-symbol-LblSetItem ptn2 ) ( \app \kore-symbol-LblSetItem-symbol ptn2 ) $= ( IMP-symbol-134-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-134-is-pattern IMP-symbol-134-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-134-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-134-substitution $p #Substitution ( \kore-symbol-LblSetItem ptn1 ) ( \kore-symbol-LblSetItem ptn2 ) ptn0 xX0 $= ( IMP-symbol-134-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-134-is-pattern substitution-disjoint substitution-app notation-cache-167 notation-cache-168 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-169 $p #Notation ( \kore-symbol-LblSetItem ptn0 ) ( \app \kore-symbol-LblSetItem-symbol ptn0 ) $= ( IMP-symbol-134-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-134-is-pattern IMP-symbol-134-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-134-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-134-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-LblSetItem ptn0 ) $= ( IMP-symbol-134-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-134-is-pattern application-context-app-right notation-cache-169 notation-application-context ) DEBFBGADEBACHBIJ $. $}
notation-cache-170 $p #Notation ( \kore-symbol-LblString2Base'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'Int ptn1 ptn2 ) ( \app ( \app \kore-symbol-LblString2Base'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'Int-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-135-is-symbol symbol-is-pattern IMP-symbol-135-is-pattern IMP-symbol-135-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-171 $p #Notation ( \kore-symbol-LblString2Base'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'Int ptn3 ptn4 ) ( \app ( \app \kore-symbol-LblString2Base'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'Int-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-135-is-symbol symbol-is-pattern IMP-symbol-135-is-pattern IMP-symbol-135-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-135-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-135-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-135-substitution $p #Substitution ( \kore-symbol-LblString2Base'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'Int ptn1 ptn2 ) ( \kore-symbol-LblString2Base'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'Int ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-135-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-135-is-pattern substitution-app substitution-disjoint notation-cache-170 notation-cache-171 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-172 $p #Notation ( \kore-symbol-LblString2Base'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'Int ptn0 ptn1 ) ( \app ( \app \kore-symbol-LblString2Base'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'Int-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-135-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-135-is-pattern IMP-symbol-135-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-135-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-135-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-LblString2Base'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'Int ptn0 ptn1 ) $= ( IMP-symbol-135-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-135-is-pattern application-context-app-right application-context-app-left notation-cache-172 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-135-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-135-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-LblString2Base'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'Int ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-135-is-symbol symbol-is-pattern IMP-symbol-135-is-pattern application-context-app-right notation-cache-172 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
notation-cache-173 $p #Notation ( \kore-symbol-LblString2Bool'LParUndsRParUnds'STRING-COMMON'Unds'Bool'Unds'String ptn1 ) ( \app \kore-symbol-LblString2Bool'LParUndsRParUnds'STRING-COMMON'Unds'Bool'Unds'String-symbol ptn1 ) $= ( IMP-symbol-136-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-136-is-pattern IMP-symbol-136-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-174 $p #Notation ( \kore-symbol-LblString2Bool'LParUndsRParUnds'STRING-COMMON'Unds'Bool'Unds'String ptn2 ) ( \app \kore-symbol-LblString2Bool'LParUndsRParUnds'STRING-COMMON'Unds'Bool'Unds'String-symbol ptn2 ) $= ( IMP-symbol-136-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-136-is-pattern IMP-symbol-136-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-136-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-136-substitution $p #Substitution ( \kore-symbol-LblString2Bool'LParUndsRParUnds'STRING-COMMON'Unds'Bool'Unds'String ptn1 ) ( \kore-symbol-LblString2Bool'LParUndsRParUnds'STRING-COMMON'Unds'Bool'Unds'String ptn2 ) ptn0 xX0 $= ( IMP-symbol-136-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-136-is-pattern substitution-disjoint substitution-app notation-cache-173 notation-cache-174 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-175 $p #Notation ( \kore-symbol-LblString2Bool'LParUndsRParUnds'STRING-COMMON'Unds'Bool'Unds'String ptn0 ) ( \app \kore-symbol-LblString2Bool'LParUndsRParUnds'STRING-COMMON'Unds'Bool'Unds'String-symbol ptn0 ) $= ( IMP-symbol-136-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-136-is-pattern IMP-symbol-136-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-136-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-136-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-LblString2Bool'LParUndsRParUnds'STRING-COMMON'Unds'Bool'Unds'String ptn0 ) $= ( IMP-symbol-136-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-136-is-pattern application-context-app-right notation-cache-175 notation-application-context ) DEBFBGADEBACHBIJ $. $}
notation-cache-176 $p #Notation ( \kore-symbol-LblString2Float'LParUndsRParUnds'STRING-COMMON'Unds'Float'Unds'String ptn1 ) ( \app \kore-symbol-LblString2Float'LParUndsRParUnds'STRING-COMMON'Unds'Float'Unds'String-symbol ptn1 ) $= ( IMP-symbol-137-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-137-is-pattern IMP-symbol-137-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-177 $p #Notation ( \kore-symbol-LblString2Float'LParUndsRParUnds'STRING-COMMON'Unds'Float'Unds'String ptn2 ) ( \app \kore-symbol-LblString2Float'LParUndsRParUnds'STRING-COMMON'Unds'Float'Unds'String-symbol ptn2 ) $= ( IMP-symbol-137-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-137-is-pattern IMP-symbol-137-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-137-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-137-substitution $p #Substitution ( \kore-symbol-LblString2Float'LParUndsRParUnds'STRING-COMMON'Unds'Float'Unds'String ptn1 ) ( \kore-symbol-LblString2Float'LParUndsRParUnds'STRING-COMMON'Unds'Float'Unds'String ptn2 ) ptn0 xX0 $= ( IMP-symbol-137-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-137-is-pattern substitution-disjoint substitution-app notation-cache-176 notation-cache-177 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-178 $p #Notation ( \kore-symbol-LblString2Float'LParUndsRParUnds'STRING-COMMON'Unds'Float'Unds'String ptn0 ) ( \app \kore-symbol-LblString2Float'LParUndsRParUnds'STRING-COMMON'Unds'Float'Unds'String-symbol ptn0 ) $= ( IMP-symbol-137-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-137-is-pattern IMP-symbol-137-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-137-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-137-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-LblString2Float'LParUndsRParUnds'STRING-COMMON'Unds'Float'Unds'String ptn0 ) $= ( IMP-symbol-137-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-137-is-pattern application-context-app-right notation-cache-178 notation-application-context ) DEBFBGADEBACHBIJ $. $}
notation-cache-179 $p #Notation ( \kore-symbol-LblString2Id'LParUndsRParUnds'ID-COMMON'Unds'Id'Unds'String ptn1 ) ( \app \kore-symbol-LblString2Id'LParUndsRParUnds'ID-COMMON'Unds'Id'Unds'String-symbol ptn1 ) $= ( IMP-symbol-138-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-138-is-pattern IMP-symbol-138-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-180 $p #Notation ( \kore-symbol-LblString2Id'LParUndsRParUnds'ID-COMMON'Unds'Id'Unds'String ptn2 ) ( \app \kore-symbol-LblString2Id'LParUndsRParUnds'ID-COMMON'Unds'Id'Unds'String-symbol ptn2 ) $= ( IMP-symbol-138-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-138-is-pattern IMP-symbol-138-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-138-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-138-substitution $p #Substitution ( \kore-symbol-LblString2Id'LParUndsRParUnds'ID-COMMON'Unds'Id'Unds'String ptn1 ) ( \kore-symbol-LblString2Id'LParUndsRParUnds'ID-COMMON'Unds'Id'Unds'String ptn2 ) ptn0 xX0 $= ( IMP-symbol-138-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-138-is-pattern substitution-disjoint substitution-app notation-cache-179 notation-cache-180 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-181 $p #Notation ( \kore-symbol-LblString2Id'LParUndsRParUnds'ID-COMMON'Unds'Id'Unds'String ptn0 ) ( \app \kore-symbol-LblString2Id'LParUndsRParUnds'ID-COMMON'Unds'Id'Unds'String-symbol ptn0 ) $= ( IMP-symbol-138-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-138-is-pattern IMP-symbol-138-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-138-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-138-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-LblString2Id'LParUndsRParUnds'ID-COMMON'Unds'Id'Unds'String ptn0 ) $= ( IMP-symbol-138-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-138-is-pattern application-context-app-right notation-cache-181 notation-application-context ) DEBFBGADEBACHBIJ $. $}
notation-cache-182 $p #Notation ( \kore-symbol-LblString2Int'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String ptn1 ) ( \app \kore-symbol-LblString2Int'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String-symbol ptn1 ) $= ( IMP-symbol-139-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-139-is-pattern IMP-symbol-139-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-183 $p #Notation ( \kore-symbol-LblString2Int'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String ptn2 ) ( \app \kore-symbol-LblString2Int'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String-symbol ptn2 ) $= ( IMP-symbol-139-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-139-is-pattern IMP-symbol-139-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-139-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-139-substitution $p #Substitution ( \kore-symbol-LblString2Int'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String ptn1 ) ( \kore-symbol-LblString2Int'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String ptn2 ) ptn0 xX0 $= ( IMP-symbol-139-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-139-is-pattern substitution-disjoint substitution-app notation-cache-182 notation-cache-183 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-184 $p #Notation ( \kore-symbol-LblString2Int'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String ptn0 ) ( \app \kore-symbol-LblString2Int'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String-symbol ptn0 ) $= ( IMP-symbol-139-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-139-is-pattern IMP-symbol-139-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-139-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-139-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-LblString2Int'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String ptn0 ) $= ( IMP-symbol-139-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-139-is-pattern application-context-app-right notation-cache-184 notation-application-context ) DEBFBGADEBACHBIJ $. $}
notation-cache-185 $p #Notation ( \kore-symbol-Lbl'UndsPerc'Int'Unds' ptn1 ptn2 ) ( \app ( \app \kore-symbol-Lbl'UndsPerc'Int'Unds'-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-140-is-symbol symbol-is-pattern IMP-symbol-140-is-pattern IMP-symbol-140-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-186 $p #Notation ( \kore-symbol-Lbl'UndsPerc'Int'Unds' ptn3 ptn4 ) ( \app ( \app \kore-symbol-Lbl'UndsPerc'Int'Unds'-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-140-is-symbol symbol-is-pattern IMP-symbol-140-is-pattern IMP-symbol-140-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-140-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-140-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-140-substitution $p #Substitution ( \kore-symbol-Lbl'UndsPerc'Int'Unds' ptn1 ptn2 ) ( \kore-symbol-Lbl'UndsPerc'Int'Unds' ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-140-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-140-is-pattern substitution-app substitution-disjoint notation-cache-185 notation-cache-186 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-187 $p #Notation ( \kore-symbol-Lbl'UndsPerc'Int'Unds' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'UndsPerc'Int'Unds'-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-140-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-140-is-pattern IMP-symbol-140-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-140-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-140-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'UndsPerc'Int'Unds' ptn0 ptn1 ) $= ( IMP-symbol-140-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-140-is-pattern application-context-app-right application-context-app-left notation-cache-187 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-140-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-140-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'UndsPerc'Int'Unds' ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-140-is-symbol symbol-is-pattern IMP-symbol-140-is-pattern application-context-app-right notation-cache-187 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
notation-cache-188 $p #Notation ( \kore-symbol-Lbl'UndsAnd-And-UndsUnds'IMP-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp ptn1 ptn2 ) ( \app ( \app \kore-symbol-Lbl'UndsAnd-And-UndsUnds'IMP-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-141-is-symbol symbol-is-pattern IMP-symbol-141-is-pattern IMP-symbol-141-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-189 $p #Notation ( \kore-symbol-Lbl'UndsAnd-And-UndsUnds'IMP-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp ptn3 ptn4 ) ( \app ( \app \kore-symbol-Lbl'UndsAnd-And-UndsUnds'IMP-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-141-is-symbol symbol-is-pattern IMP-symbol-141-is-pattern IMP-symbol-141-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-141-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-141-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-141-substitution $p #Substitution ( \kore-symbol-Lbl'UndsAnd-And-UndsUnds'IMP-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp ptn1 ptn2 ) ( \kore-symbol-Lbl'UndsAnd-And-UndsUnds'IMP-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-141-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-141-is-pattern substitution-app substitution-disjoint notation-cache-188 notation-cache-189 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-190 $p #Notation ( \kore-symbol-Lbl'UndsAnd-And-UndsUnds'IMP-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'UndsAnd-And-UndsUnds'IMP-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-141-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-141-is-pattern IMP-symbol-141-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-141-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-141-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'UndsAnd-And-UndsUnds'IMP-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp ptn0 ptn1 ) $= ( IMP-symbol-141-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-141-is-pattern application-context-app-right application-context-app-left notation-cache-190 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-141-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-141-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'UndsAnd-And-UndsUnds'IMP-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-141-is-symbol symbol-is-pattern IMP-symbol-141-is-pattern application-context-app-right notation-cache-190 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
notation-cache-191 $p #Notation ( \kore-symbol-Lbl'UndsAnd-'Int'Unds' ptn1 ptn2 ) ( \app ( \app \kore-symbol-Lbl'UndsAnd-'Int'Unds'-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-142-is-symbol symbol-is-pattern IMP-symbol-142-is-pattern IMP-symbol-142-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-192 $p #Notation ( \kore-symbol-Lbl'UndsAnd-'Int'Unds' ptn3 ptn4 ) ( \app ( \app \kore-symbol-Lbl'UndsAnd-'Int'Unds'-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-142-is-symbol symbol-is-pattern IMP-symbol-142-is-pattern IMP-symbol-142-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-142-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-142-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-142-substitution $p #Substitution ( \kore-symbol-Lbl'UndsAnd-'Int'Unds' ptn1 ptn2 ) ( \kore-symbol-Lbl'UndsAnd-'Int'Unds' ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-142-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-142-is-pattern substitution-app substitution-disjoint notation-cache-191 notation-cache-192 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-193 $p #Notation ( \kore-symbol-Lbl'UndsAnd-'Int'Unds' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'UndsAnd-'Int'Unds'-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-142-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-142-is-pattern IMP-symbol-142-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-142-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-142-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'UndsAnd-'Int'Unds' ptn0 ptn1 ) $= ( IMP-symbol-142-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-142-is-pattern application-context-app-right application-context-app-left notation-cache-193 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-142-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-142-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'UndsAnd-'Int'Unds' ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-142-is-symbol symbol-is-pattern IMP-symbol-142-is-pattern application-context-app-right notation-cache-193 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
notation-cache-194 $p #Notation ( \kore-symbol-Lbl'UndsStar'Int'Unds' ptn1 ptn2 ) ( \app ( \app \kore-symbol-Lbl'UndsStar'Int'Unds'-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-143-is-symbol symbol-is-pattern IMP-symbol-143-is-pattern IMP-symbol-143-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-195 $p #Notation ( \kore-symbol-Lbl'UndsStar'Int'Unds' ptn3 ptn4 ) ( \app ( \app \kore-symbol-Lbl'UndsStar'Int'Unds'-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-143-is-symbol symbol-is-pattern IMP-symbol-143-is-pattern IMP-symbol-143-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-143-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-143-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-143-substitution $p #Substitution ( \kore-symbol-Lbl'UndsStar'Int'Unds' ptn1 ptn2 ) ( \kore-symbol-Lbl'UndsStar'Int'Unds' ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-143-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-143-is-pattern substitution-app substitution-disjoint notation-cache-194 notation-cache-195 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-196 $p #Notation ( \kore-symbol-Lbl'UndsStar'Int'Unds' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'UndsStar'Int'Unds'-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-143-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-143-is-pattern IMP-symbol-143-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-143-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-143-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'UndsStar'Int'Unds' ptn0 ptn1 ) $= ( IMP-symbol-143-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-143-is-pattern application-context-app-right application-context-app-left notation-cache-196 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-143-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-143-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'UndsStar'Int'Unds' ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-143-is-symbol symbol-is-pattern IMP-symbol-143-is-pattern application-context-app-right notation-cache-196 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
notation-cache-197 $p #Notation ( \kore-symbol-Lbl'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp ptn1 ptn2 ) ( \app ( \app \kore-symbol-Lbl'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-144-is-symbol symbol-is-pattern IMP-symbol-144-is-pattern IMP-symbol-144-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-198 $p #Notation ( \kore-symbol-Lbl'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp ptn3 ptn4 ) ( \app ( \app \kore-symbol-Lbl'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-144-is-symbol symbol-is-pattern IMP-symbol-144-is-pattern IMP-symbol-144-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-144-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-144-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-144-substitution $p #Substitution ( \kore-symbol-Lbl'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp ptn1 ptn2 ) ( \kore-symbol-Lbl'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-144-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-144-is-pattern substitution-app substitution-disjoint notation-cache-197 notation-cache-198 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-199 $p #Notation ( \kore-symbol-Lbl'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-144-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-144-is-pattern IMP-symbol-144-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-144-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-144-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp ptn0 ptn1 ) $= ( IMP-symbol-144-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-144-is-pattern application-context-app-right application-context-app-left notation-cache-199 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-144-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-144-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-144-is-symbol symbol-is-pattern IMP-symbol-144-is-pattern application-context-app-right notation-cache-199 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
notation-cache-200 $p #Notation ( \kore-symbol-Lbl'UndsPlus'Int'Unds' ptn1 ptn2 ) ( \app ( \app \kore-symbol-Lbl'UndsPlus'Int'Unds'-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-145-is-symbol symbol-is-pattern IMP-symbol-145-is-pattern IMP-symbol-145-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-201 $p #Notation ( \kore-symbol-Lbl'UndsPlus'Int'Unds' ptn3 ptn4 ) ( \app ( \app \kore-symbol-Lbl'UndsPlus'Int'Unds'-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-145-is-symbol symbol-is-pattern IMP-symbol-145-is-pattern IMP-symbol-145-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-145-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-145-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-145-substitution $p #Substitution ( \kore-symbol-Lbl'UndsPlus'Int'Unds' ptn1 ptn2 ) ( \kore-symbol-Lbl'UndsPlus'Int'Unds' ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-145-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-145-is-pattern substitution-app substitution-disjoint notation-cache-200 notation-cache-201 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-202 $p #Notation ( \kore-symbol-Lbl'UndsPlus'Int'Unds' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'UndsPlus'Int'Unds'-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-145-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-145-is-pattern IMP-symbol-145-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-145-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-145-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'UndsPlus'Int'Unds' ptn0 ptn1 ) $= ( IMP-symbol-145-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-145-is-pattern application-context-app-right application-context-app-left notation-cache-202 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-145-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-145-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'UndsPlus'Int'Unds' ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-145-is-symbol symbol-is-pattern IMP-symbol-145-is-pattern application-context-app-right notation-cache-202 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
notation-cache-203 $p #Notation ( \kore-symbol-Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String ptn1 ptn2 ) ( \app ( \app \kore-symbol-Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-146-is-symbol symbol-is-pattern IMP-symbol-146-is-pattern IMP-symbol-146-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-204 $p #Notation ( \kore-symbol-Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String ptn3 ptn4 ) ( \app ( \app \kore-symbol-Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-146-is-symbol symbol-is-pattern IMP-symbol-146-is-pattern IMP-symbol-146-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-146-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-146-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-146-substitution $p #Substitution ( \kore-symbol-Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String ptn1 ptn2 ) ( \kore-symbol-Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-146-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-146-is-pattern substitution-app substitution-disjoint notation-cache-203 notation-cache-204 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-205 $p #Notation ( \kore-symbol-Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-146-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-146-is-pattern IMP-symbol-146-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-146-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-146-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String ptn0 ptn1 ) $= ( IMP-symbol-146-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-146-is-pattern application-context-app-right application-context-app-left notation-cache-205 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-146-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-146-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-146-is-symbol symbol-is-pattern IMP-symbol-146-is-pattern application-context-app-right notation-cache-205 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
notation-cache-206 $p #Notation ( \kore-symbol-Lbl'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp ptn1 ptn2 ) ( \app ( \app \kore-symbol-Lbl'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-147-is-symbol symbol-is-pattern IMP-symbol-147-is-pattern IMP-symbol-147-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-207 $p #Notation ( \kore-symbol-Lbl'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp ptn3 ptn4 ) ( \app ( \app \kore-symbol-Lbl'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-147-is-symbol symbol-is-pattern IMP-symbol-147-is-pattern IMP-symbol-147-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-147-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-147-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-147-substitution $p #Substitution ( \kore-symbol-Lbl'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp ptn1 ptn2 ) ( \kore-symbol-Lbl'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-147-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-147-is-pattern substitution-app substitution-disjoint notation-cache-206 notation-cache-207 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-208 $p #Notation ( \kore-symbol-Lbl'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-147-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-147-is-pattern IMP-symbol-147-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-147-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-147-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp ptn0 ptn1 ) $= ( IMP-symbol-147-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-147-is-pattern application-context-app-right application-context-app-left notation-cache-208 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-147-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-147-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-147-is-symbol symbol-is-pattern IMP-symbol-147-is-pattern application-context-app-right notation-cache-208 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
notation-cache-209 $p #Notation ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ptn1 ptn2 ) ( \app ( \app \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-148-is-symbol symbol-is-pattern IMP-symbol-148-is-pattern IMP-symbol-148-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-210 $p #Notation ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ptn3 ptn4 ) ( \app ( \app \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-148-is-symbol symbol-is-pattern IMP-symbol-148-is-pattern IMP-symbol-148-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-148-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-148-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-148-substitution $p #Substitution ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ptn1 ptn2 ) ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-148-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-148-is-pattern substitution-app substitution-disjoint notation-cache-209 notation-cache-210 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-211 $p #Notation ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-148-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-148-is-pattern IMP-symbol-148-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-148-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-148-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ptn0 ptn1 ) $= ( IMP-symbol-148-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-148-is-pattern application-context-app-right application-context-app-left notation-cache-211 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-148-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-148-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-148-is-symbol symbol-is-pattern IMP-symbol-148-is-pattern application-context-app-right notation-cache-211 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
notation-cache-212 $p #Notation ( \kore-symbol-Lbl'Unds'-Int'Unds' ptn1 ptn2 ) ( \app ( \app \kore-symbol-Lbl'Unds'-Int'Unds'-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-149-is-symbol symbol-is-pattern IMP-symbol-149-is-pattern IMP-symbol-149-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-213 $p #Notation ( \kore-symbol-Lbl'Unds'-Int'Unds' ptn3 ptn4 ) ( \app ( \app \kore-symbol-Lbl'Unds'-Int'Unds'-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-149-is-symbol symbol-is-pattern IMP-symbol-149-is-pattern IMP-symbol-149-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-149-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-149-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-149-substitution $p #Substitution ( \kore-symbol-Lbl'Unds'-Int'Unds' ptn1 ptn2 ) ( \kore-symbol-Lbl'Unds'-Int'Unds' ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-149-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-149-is-pattern substitution-app substitution-disjoint notation-cache-212 notation-cache-213 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-214 $p #Notation ( \kore-symbol-Lbl'Unds'-Int'Unds' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'Unds'-Int'Unds'-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-149-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-149-is-pattern IMP-symbol-149-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-149-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-149-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Unds'-Int'Unds' ptn0 ptn1 ) $= ( IMP-symbol-149-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-149-is-pattern application-context-app-right application-context-app-left notation-cache-214 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-149-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-149-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Unds'-Int'Unds' ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-149-is-symbol symbol-is-pattern IMP-symbol-149-is-pattern application-context-app-right notation-cache-214 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
notation-cache-215 $p #Notation ( \kore-symbol-Lbl'Unds'-Map'UndsUnds'MAP'Unds'Map'Unds'Map'Unds'Map ptn1 ptn2 ) ( \app ( \app \kore-symbol-Lbl'Unds'-Map'UndsUnds'MAP'Unds'Map'Unds'Map'Unds'Map-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-150-is-symbol symbol-is-pattern IMP-symbol-150-is-pattern IMP-symbol-150-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-216 $p #Notation ( \kore-symbol-Lbl'Unds'-Map'UndsUnds'MAP'Unds'Map'Unds'Map'Unds'Map ptn3 ptn4 ) ( \app ( \app \kore-symbol-Lbl'Unds'-Map'UndsUnds'MAP'Unds'Map'Unds'Map'Unds'Map-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-150-is-symbol symbol-is-pattern IMP-symbol-150-is-pattern IMP-symbol-150-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-150-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-150-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-150-substitution $p #Substitution ( \kore-symbol-Lbl'Unds'-Map'UndsUnds'MAP'Unds'Map'Unds'Map'Unds'Map ptn1 ptn2 ) ( \kore-symbol-Lbl'Unds'-Map'UndsUnds'MAP'Unds'Map'Unds'Map'Unds'Map ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-150-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-150-is-pattern substitution-app substitution-disjoint notation-cache-215 notation-cache-216 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-217 $p #Notation ( \kore-symbol-Lbl'Unds'-Map'UndsUnds'MAP'Unds'Map'Unds'Map'Unds'Map ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'Unds'-Map'UndsUnds'MAP'Unds'Map'Unds'Map'Unds'Map-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-150-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-150-is-pattern IMP-symbol-150-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-150-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-150-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Unds'-Map'UndsUnds'MAP'Unds'Map'Unds'Map'Unds'Map ptn0 ptn1 ) $= ( IMP-symbol-150-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-150-is-pattern application-context-app-right application-context-app-left notation-cache-217 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-150-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-150-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Unds'-Map'UndsUnds'MAP'Unds'Map'Unds'Map'Unds'Map ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-150-is-symbol symbol-is-pattern IMP-symbol-150-is-pattern application-context-app-right notation-cache-217 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
notation-cache-218 $p #Notation ( \kore-symbol-Lbl'UndsSlsh'Int'Unds' ptn1 ptn2 ) ( \app ( \app \kore-symbol-Lbl'UndsSlsh'Int'Unds'-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-151-is-symbol symbol-is-pattern IMP-symbol-151-is-pattern IMP-symbol-151-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-219 $p #Notation ( \kore-symbol-Lbl'UndsSlsh'Int'Unds' ptn3 ptn4 ) ( \app ( \app \kore-symbol-Lbl'UndsSlsh'Int'Unds'-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-151-is-symbol symbol-is-pattern IMP-symbol-151-is-pattern IMP-symbol-151-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-151-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-151-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-151-substitution $p #Substitution ( \kore-symbol-Lbl'UndsSlsh'Int'Unds' ptn1 ptn2 ) ( \kore-symbol-Lbl'UndsSlsh'Int'Unds' ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-151-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-151-is-pattern substitution-app substitution-disjoint notation-cache-218 notation-cache-219 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-220 $p #Notation ( \kore-symbol-Lbl'UndsSlsh'Int'Unds' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'UndsSlsh'Int'Unds'-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-151-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-151-is-pattern IMP-symbol-151-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-151-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-151-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'UndsSlsh'Int'Unds' ptn0 ptn1 ) $= ( IMP-symbol-151-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-151-is-pattern application-context-app-right application-context-app-left notation-cache-220 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-151-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-151-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'UndsSlsh'Int'Unds' ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-151-is-symbol symbol-is-pattern IMP-symbol-151-is-pattern application-context-app-right notation-cache-220 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
notation-cache-221 $p #Notation ( \kore-symbol-Lbl'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp ptn1 ptn2 ) ( \app ( \app \kore-symbol-Lbl'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-152-is-symbol symbol-is-pattern IMP-symbol-152-is-pattern IMP-symbol-152-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-222 $p #Notation ( \kore-symbol-Lbl'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp ptn3 ptn4 ) ( \app ( \app \kore-symbol-Lbl'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-152-is-symbol symbol-is-pattern IMP-symbol-152-is-pattern IMP-symbol-152-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-152-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-152-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-152-substitution $p #Substitution ( \kore-symbol-Lbl'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp ptn1 ptn2 ) ( \kore-symbol-Lbl'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-152-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-152-is-pattern substitution-app substitution-disjoint notation-cache-221 notation-cache-222 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-223 $p #Notation ( \kore-symbol-Lbl'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-152-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-152-is-pattern IMP-symbol-152-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-152-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-152-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp ptn0 ptn1 ) $= ( IMP-symbol-152-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-152-is-pattern application-context-app-right application-context-app-left notation-cache-223 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-152-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-152-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-152-is-symbol symbol-is-pattern IMP-symbol-152-is-pattern application-context-app-right notation-cache-223 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
notation-cache-224 $p #Notation ( \kore-symbol-Lbl'Unds-LT--LT-'Int'Unds' ptn1 ptn2 ) ( \app ( \app \kore-symbol-Lbl'Unds-LT--LT-'Int'Unds'-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-153-is-symbol symbol-is-pattern IMP-symbol-153-is-pattern IMP-symbol-153-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-225 $p #Notation ( \kore-symbol-Lbl'Unds-LT--LT-'Int'Unds' ptn3 ptn4 ) ( \app ( \app \kore-symbol-Lbl'Unds-LT--LT-'Int'Unds'-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-153-is-symbol symbol-is-pattern IMP-symbol-153-is-pattern IMP-symbol-153-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-153-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-153-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-153-substitution $p #Substitution ( \kore-symbol-Lbl'Unds-LT--LT-'Int'Unds' ptn1 ptn2 ) ( \kore-symbol-Lbl'Unds-LT--LT-'Int'Unds' ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-153-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-153-is-pattern substitution-app substitution-disjoint notation-cache-224 notation-cache-225 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-226 $p #Notation ( \kore-symbol-Lbl'Unds-LT--LT-'Int'Unds' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'Unds-LT--LT-'Int'Unds'-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-153-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-153-is-pattern IMP-symbol-153-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-153-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-153-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Unds-LT--LT-'Int'Unds' ptn0 ptn1 ) $= ( IMP-symbol-153-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-153-is-pattern application-context-app-right application-context-app-left notation-cache-226 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-153-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-153-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Unds-LT--LT-'Int'Unds' ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-153-is-symbol symbol-is-pattern IMP-symbol-153-is-pattern application-context-app-right notation-cache-226 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
notation-cache-227 $p #Notation ( \kore-symbol-Lbl'Unds-LT-Eqls'Int'Unds' ptn1 ptn2 ) ( \app ( \app \kore-symbol-Lbl'Unds-LT-Eqls'Int'Unds'-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-154-is-symbol symbol-is-pattern IMP-symbol-154-is-pattern IMP-symbol-154-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-228 $p #Notation ( \kore-symbol-Lbl'Unds-LT-Eqls'Int'Unds' ptn3 ptn4 ) ( \app ( \app \kore-symbol-Lbl'Unds-LT-Eqls'Int'Unds'-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-154-is-symbol symbol-is-pattern IMP-symbol-154-is-pattern IMP-symbol-154-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-154-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-154-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-154-substitution $p #Substitution ( \kore-symbol-Lbl'Unds-LT-Eqls'Int'Unds' ptn1 ptn2 ) ( \kore-symbol-Lbl'Unds-LT-Eqls'Int'Unds' ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-154-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-154-is-pattern substitution-app substitution-disjoint notation-cache-227 notation-cache-228 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-229 $p #Notation ( \kore-symbol-Lbl'Unds-LT-Eqls'Int'Unds' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'Unds-LT-Eqls'Int'Unds'-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-154-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-154-is-pattern IMP-symbol-154-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-154-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-154-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Unds-LT-Eqls'Int'Unds' ptn0 ptn1 ) $= ( IMP-symbol-154-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-154-is-pattern application-context-app-right application-context-app-left notation-cache-229 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-154-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-154-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Unds-LT-Eqls'Int'Unds' ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-154-is-symbol symbol-is-pattern IMP-symbol-154-is-pattern application-context-app-right notation-cache-229 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
notation-cache-230 $p #Notation ( \kore-symbol-Lbl'Unds-LT-Eqls'Map'UndsUnds'MAP'Unds'Bool'Unds'Map'Unds'Map ptn1 ptn2 ) ( \app ( \app \kore-symbol-Lbl'Unds-LT-Eqls'Map'UndsUnds'MAP'Unds'Bool'Unds'Map'Unds'Map-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-155-is-symbol symbol-is-pattern IMP-symbol-155-is-pattern IMP-symbol-155-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-231 $p #Notation ( \kore-symbol-Lbl'Unds-LT-Eqls'Map'UndsUnds'MAP'Unds'Bool'Unds'Map'Unds'Map ptn3 ptn4 ) ( \app ( \app \kore-symbol-Lbl'Unds-LT-Eqls'Map'UndsUnds'MAP'Unds'Bool'Unds'Map'Unds'Map-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-155-is-symbol symbol-is-pattern IMP-symbol-155-is-pattern IMP-symbol-155-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-155-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-155-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-155-substitution $p #Substitution ( \kore-symbol-Lbl'Unds-LT-Eqls'Map'UndsUnds'MAP'Unds'Bool'Unds'Map'Unds'Map ptn1 ptn2 ) ( \kore-symbol-Lbl'Unds-LT-Eqls'Map'UndsUnds'MAP'Unds'Bool'Unds'Map'Unds'Map ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-155-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-155-is-pattern substitution-app substitution-disjoint notation-cache-230 notation-cache-231 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-232 $p #Notation ( \kore-symbol-Lbl'Unds-LT-Eqls'Map'UndsUnds'MAP'Unds'Bool'Unds'Map'Unds'Map ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'Unds-LT-Eqls'Map'UndsUnds'MAP'Unds'Bool'Unds'Map'Unds'Map-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-155-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-155-is-pattern IMP-symbol-155-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-155-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-155-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Unds-LT-Eqls'Map'UndsUnds'MAP'Unds'Bool'Unds'Map'Unds'Map ptn0 ptn1 ) $= ( IMP-symbol-155-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-155-is-pattern application-context-app-right application-context-app-left notation-cache-232 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-155-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-155-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Unds-LT-Eqls'Map'UndsUnds'MAP'Unds'Bool'Unds'Map'Unds'Map ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-155-is-symbol symbol-is-pattern IMP-symbol-155-is-pattern application-context-app-right notation-cache-232 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
notation-cache-233 $p #Notation ( \kore-symbol-Lbl'Unds-LT-Eqls'Set'UndsUnds'SET'Unds'Bool'Unds'Set'Unds'Set ptn1 ptn2 ) ( \app ( \app \kore-symbol-Lbl'Unds-LT-Eqls'Set'UndsUnds'SET'Unds'Bool'Unds'Set'Unds'Set-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-156-is-symbol symbol-is-pattern IMP-symbol-156-is-pattern IMP-symbol-156-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-234 $p #Notation ( \kore-symbol-Lbl'Unds-LT-Eqls'Set'UndsUnds'SET'Unds'Bool'Unds'Set'Unds'Set ptn3 ptn4 ) ( \app ( \app \kore-symbol-Lbl'Unds-LT-Eqls'Set'UndsUnds'SET'Unds'Bool'Unds'Set'Unds'Set-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-156-is-symbol symbol-is-pattern IMP-symbol-156-is-pattern IMP-symbol-156-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-156-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-156-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-156-substitution $p #Substitution ( \kore-symbol-Lbl'Unds-LT-Eqls'Set'UndsUnds'SET'Unds'Bool'Unds'Set'Unds'Set ptn1 ptn2 ) ( \kore-symbol-Lbl'Unds-LT-Eqls'Set'UndsUnds'SET'Unds'Bool'Unds'Set'Unds'Set ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-156-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-156-is-pattern substitution-app substitution-disjoint notation-cache-233 notation-cache-234 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-235 $p #Notation ( \kore-symbol-Lbl'Unds-LT-Eqls'Set'UndsUnds'SET'Unds'Bool'Unds'Set'Unds'Set ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'Unds-LT-Eqls'Set'UndsUnds'SET'Unds'Bool'Unds'Set'Unds'Set-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-156-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-156-is-pattern IMP-symbol-156-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-156-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-156-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Unds-LT-Eqls'Set'UndsUnds'SET'Unds'Bool'Unds'Set'Unds'Set ptn0 ptn1 ) $= ( IMP-symbol-156-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-156-is-pattern application-context-app-right application-context-app-left notation-cache-235 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-156-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-156-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Unds-LT-Eqls'Set'UndsUnds'SET'Unds'Bool'Unds'Set'Unds'Set ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-156-is-symbol symbol-is-pattern IMP-symbol-156-is-pattern application-context-app-right notation-cache-235 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
notation-cache-236 $p #Notation ( \kore-symbol-Lbl'Unds-LT-Eqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String ptn1 ptn2 ) ( \app ( \app \kore-symbol-Lbl'Unds-LT-Eqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-157-is-symbol symbol-is-pattern IMP-symbol-157-is-pattern IMP-symbol-157-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-237 $p #Notation ( \kore-symbol-Lbl'Unds-LT-Eqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String ptn3 ptn4 ) ( \app ( \app \kore-symbol-Lbl'Unds-LT-Eqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-157-is-symbol symbol-is-pattern IMP-symbol-157-is-pattern IMP-symbol-157-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-157-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-157-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-157-substitution $p #Substitution ( \kore-symbol-Lbl'Unds-LT-Eqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String ptn1 ptn2 ) ( \kore-symbol-Lbl'Unds-LT-Eqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-157-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-157-is-pattern substitution-app substitution-disjoint notation-cache-236 notation-cache-237 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-238 $p #Notation ( \kore-symbol-Lbl'Unds-LT-Eqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'Unds-LT-Eqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-157-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-157-is-pattern IMP-symbol-157-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-157-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-157-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Unds-LT-Eqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String ptn0 ptn1 ) $= ( IMP-symbol-157-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-157-is-pattern application-context-app-right application-context-app-left notation-cache-238 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-157-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-157-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Unds-LT-Eqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-157-is-symbol symbol-is-pattern IMP-symbol-157-is-pattern application-context-app-right notation-cache-238 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
notation-cache-239 $p #Notation ( \kore-symbol-Lbl'Unds-LT-EqlsUndsUnds'IMP-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp ptn1 ptn2 ) ( \app ( \app \kore-symbol-Lbl'Unds-LT-EqlsUndsUnds'IMP-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-158-is-symbol symbol-is-pattern IMP-symbol-158-is-pattern IMP-symbol-158-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-240 $p #Notation ( \kore-symbol-Lbl'Unds-LT-EqlsUndsUnds'IMP-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp ptn3 ptn4 ) ( \app ( \app \kore-symbol-Lbl'Unds-LT-EqlsUndsUnds'IMP-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-158-is-symbol symbol-is-pattern IMP-symbol-158-is-pattern IMP-symbol-158-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-158-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-158-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-158-substitution $p #Substitution ( \kore-symbol-Lbl'Unds-LT-EqlsUndsUnds'IMP-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp ptn1 ptn2 ) ( \kore-symbol-Lbl'Unds-LT-EqlsUndsUnds'IMP-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-158-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-158-is-pattern substitution-app substitution-disjoint notation-cache-239 notation-cache-240 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-241 $p #Notation ( \kore-symbol-Lbl'Unds-LT-EqlsUndsUnds'IMP-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'Unds-LT-EqlsUndsUnds'IMP-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-158-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-158-is-pattern IMP-symbol-158-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-158-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-158-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Unds-LT-EqlsUndsUnds'IMP-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp ptn0 ptn1 ) $= ( IMP-symbol-158-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-158-is-pattern application-context-app-right application-context-app-left notation-cache-241 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-158-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-158-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Unds-LT-EqlsUndsUnds'IMP-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-158-is-symbol symbol-is-pattern IMP-symbol-158-is-pattern application-context-app-right notation-cache-241 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
notation-cache-242 $p #Notation ( \kore-symbol-Lbl'Unds-LT-'Int'Unds' ptn1 ptn2 ) ( \app ( \app \kore-symbol-Lbl'Unds-LT-'Int'Unds'-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-159-is-symbol symbol-is-pattern IMP-symbol-159-is-pattern IMP-symbol-159-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-243 $p #Notation ( \kore-symbol-Lbl'Unds-LT-'Int'Unds' ptn3 ptn4 ) ( \app ( \app \kore-symbol-Lbl'Unds-LT-'Int'Unds'-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-159-is-symbol symbol-is-pattern IMP-symbol-159-is-pattern IMP-symbol-159-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-159-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-159-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-159-substitution $p #Substitution ( \kore-symbol-Lbl'Unds-LT-'Int'Unds' ptn1 ptn2 ) ( \kore-symbol-Lbl'Unds-LT-'Int'Unds' ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-159-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-159-is-pattern substitution-app substitution-disjoint notation-cache-242 notation-cache-243 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-244 $p #Notation ( \kore-symbol-Lbl'Unds-LT-'Int'Unds' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'Unds-LT-'Int'Unds'-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-159-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-159-is-pattern IMP-symbol-159-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-159-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-159-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Unds-LT-'Int'Unds' ptn0 ptn1 ) $= ( IMP-symbol-159-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-159-is-pattern application-context-app-right application-context-app-left notation-cache-244 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-159-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-159-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Unds-LT-'Int'Unds' ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-159-is-symbol symbol-is-pattern IMP-symbol-159-is-pattern application-context-app-right notation-cache-244 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
notation-cache-245 $p #Notation ( \kore-symbol-Lbl'Unds-LT-'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String ptn1 ptn2 ) ( \app ( \app \kore-symbol-Lbl'Unds-LT-'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-160-is-symbol symbol-is-pattern IMP-symbol-160-is-pattern IMP-symbol-160-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-246 $p #Notation ( \kore-symbol-Lbl'Unds-LT-'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String ptn3 ptn4 ) ( \app ( \app \kore-symbol-Lbl'Unds-LT-'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-160-is-symbol symbol-is-pattern IMP-symbol-160-is-pattern IMP-symbol-160-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-160-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-160-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-160-substitution $p #Substitution ( \kore-symbol-Lbl'Unds-LT-'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String ptn1 ptn2 ) ( \kore-symbol-Lbl'Unds-LT-'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-160-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-160-is-pattern substitution-app substitution-disjoint notation-cache-245 notation-cache-246 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-247 $p #Notation ( \kore-symbol-Lbl'Unds-LT-'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'Unds-LT-'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-160-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-160-is-pattern IMP-symbol-160-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-160-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-160-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Unds-LT-'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String ptn0 ptn1 ) $= ( IMP-symbol-160-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-160-is-pattern application-context-app-right application-context-app-left notation-cache-247 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-160-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-160-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Unds-LT-'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-160-is-symbol symbol-is-pattern IMP-symbol-160-is-pattern application-context-app-right notation-cache-247 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
notation-cache-248 $p #Notation ( \kore-symbol-Lbl'UndsEqlsSlshEqls'Bool'Unds' ptn1 ptn2 ) ( \app ( \app \kore-symbol-Lbl'UndsEqlsSlshEqls'Bool'Unds'-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-161-is-symbol symbol-is-pattern IMP-symbol-161-is-pattern IMP-symbol-161-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-249 $p #Notation ( \kore-symbol-Lbl'UndsEqlsSlshEqls'Bool'Unds' ptn3 ptn4 ) ( \app ( \app \kore-symbol-Lbl'UndsEqlsSlshEqls'Bool'Unds'-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-161-is-symbol symbol-is-pattern IMP-symbol-161-is-pattern IMP-symbol-161-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-161-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-161-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-161-substitution $p #Substitution ( \kore-symbol-Lbl'UndsEqlsSlshEqls'Bool'Unds' ptn1 ptn2 ) ( \kore-symbol-Lbl'UndsEqlsSlshEqls'Bool'Unds' ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-161-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-161-is-pattern substitution-app substitution-disjoint notation-cache-248 notation-cache-249 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-250 $p #Notation ( \kore-symbol-Lbl'UndsEqlsSlshEqls'Bool'Unds' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'UndsEqlsSlshEqls'Bool'Unds'-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-161-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-161-is-pattern IMP-symbol-161-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-161-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-161-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'UndsEqlsSlshEqls'Bool'Unds' ptn0 ptn1 ) $= ( IMP-symbol-161-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-161-is-pattern application-context-app-right application-context-app-left notation-cache-250 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-161-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-161-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'UndsEqlsSlshEqls'Bool'Unds' ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-161-is-symbol symbol-is-pattern IMP-symbol-161-is-pattern application-context-app-right notation-cache-250 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
notation-cache-251 $p #Notation ( \kore-symbol-Lbl'UndsEqlsSlshEqls'Int'Unds' ptn1 ptn2 ) ( \app ( \app \kore-symbol-Lbl'UndsEqlsSlshEqls'Int'Unds'-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-162-is-symbol symbol-is-pattern IMP-symbol-162-is-pattern IMP-symbol-162-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-252 $p #Notation ( \kore-symbol-Lbl'UndsEqlsSlshEqls'Int'Unds' ptn3 ptn4 ) ( \app ( \app \kore-symbol-Lbl'UndsEqlsSlshEqls'Int'Unds'-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-162-is-symbol symbol-is-pattern IMP-symbol-162-is-pattern IMP-symbol-162-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-162-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-162-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-162-substitution $p #Substitution ( \kore-symbol-Lbl'UndsEqlsSlshEqls'Int'Unds' ptn1 ptn2 ) ( \kore-symbol-Lbl'UndsEqlsSlshEqls'Int'Unds' ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-162-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-162-is-pattern substitution-app substitution-disjoint notation-cache-251 notation-cache-252 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-253 $p #Notation ( \kore-symbol-Lbl'UndsEqlsSlshEqls'Int'Unds' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'UndsEqlsSlshEqls'Int'Unds'-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-162-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-162-is-pattern IMP-symbol-162-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-162-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-162-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'UndsEqlsSlshEqls'Int'Unds' ptn0 ptn1 ) $= ( IMP-symbol-162-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-162-is-pattern application-context-app-right application-context-app-left notation-cache-253 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-162-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-162-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'UndsEqlsSlshEqls'Int'Unds' ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-162-is-symbol symbol-is-pattern IMP-symbol-162-is-pattern application-context-app-right notation-cache-253 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
notation-cache-254 $p #Notation ( \kore-symbol-Lbl'UndsEqlsSlshEqls'K'Unds' ptn1 ptn2 ) ( \app ( \app \kore-symbol-Lbl'UndsEqlsSlshEqls'K'Unds'-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-163-is-symbol symbol-is-pattern IMP-symbol-163-is-pattern IMP-symbol-163-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-255 $p #Notation ( \kore-symbol-Lbl'UndsEqlsSlshEqls'K'Unds' ptn3 ptn4 ) ( \app ( \app \kore-symbol-Lbl'UndsEqlsSlshEqls'K'Unds'-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-163-is-symbol symbol-is-pattern IMP-symbol-163-is-pattern IMP-symbol-163-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-163-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-163-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-163-substitution $p #Substitution ( \kore-symbol-Lbl'UndsEqlsSlshEqls'K'Unds' ptn1 ptn2 ) ( \kore-symbol-Lbl'UndsEqlsSlshEqls'K'Unds' ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-163-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-163-is-pattern substitution-app substitution-disjoint notation-cache-254 notation-cache-255 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-256 $p #Notation ( \kore-symbol-Lbl'UndsEqlsSlshEqls'K'Unds' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'UndsEqlsSlshEqls'K'Unds'-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-163-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-163-is-pattern IMP-symbol-163-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-163-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-163-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'UndsEqlsSlshEqls'K'Unds' ptn0 ptn1 ) $= ( IMP-symbol-163-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-163-is-pattern application-context-app-right application-context-app-left notation-cache-256 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-163-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-163-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'UndsEqlsSlshEqls'K'Unds' ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-163-is-symbol symbol-is-pattern IMP-symbol-163-is-pattern application-context-app-right notation-cache-256 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
notation-cache-257 $p #Notation ( \kore-symbol-Lbl'UndsEqlsSlshEqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String ptn1 ptn2 ) ( \app ( \app \kore-symbol-Lbl'UndsEqlsSlshEqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-164-is-symbol symbol-is-pattern IMP-symbol-164-is-pattern IMP-symbol-164-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-258 $p #Notation ( \kore-symbol-Lbl'UndsEqlsSlshEqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String ptn3 ptn4 ) ( \app ( \app \kore-symbol-Lbl'UndsEqlsSlshEqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-164-is-symbol symbol-is-pattern IMP-symbol-164-is-pattern IMP-symbol-164-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-164-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-164-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-164-substitution $p #Substitution ( \kore-symbol-Lbl'UndsEqlsSlshEqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String ptn1 ptn2 ) ( \kore-symbol-Lbl'UndsEqlsSlshEqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-164-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-164-is-pattern substitution-app substitution-disjoint notation-cache-257 notation-cache-258 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-259 $p #Notation ( \kore-symbol-Lbl'UndsEqlsSlshEqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'UndsEqlsSlshEqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-164-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-164-is-pattern IMP-symbol-164-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-164-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-164-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'UndsEqlsSlshEqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String ptn0 ptn1 ) $= ( IMP-symbol-164-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-164-is-pattern application-context-app-right application-context-app-left notation-cache-259 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-164-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-164-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'UndsEqlsSlshEqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-164-is-symbol symbol-is-pattern IMP-symbol-164-is-pattern application-context-app-right notation-cache-259 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
notation-cache-260 $p #Notation ( \kore-symbol-Lbl'UndsEqlsEqls'Bool'Unds' ptn1 ptn2 ) ( \app ( \app \kore-symbol-Lbl'UndsEqlsEqls'Bool'Unds'-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-165-is-symbol symbol-is-pattern IMP-symbol-165-is-pattern IMP-symbol-165-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-261 $p #Notation ( \kore-symbol-Lbl'UndsEqlsEqls'Bool'Unds' ptn3 ptn4 ) ( \app ( \app \kore-symbol-Lbl'UndsEqlsEqls'Bool'Unds'-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-165-is-symbol symbol-is-pattern IMP-symbol-165-is-pattern IMP-symbol-165-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-165-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-165-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-165-substitution $p #Substitution ( \kore-symbol-Lbl'UndsEqlsEqls'Bool'Unds' ptn1 ptn2 ) ( \kore-symbol-Lbl'UndsEqlsEqls'Bool'Unds' ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-165-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-165-is-pattern substitution-app substitution-disjoint notation-cache-260 notation-cache-261 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-262 $p #Notation ( \kore-symbol-Lbl'UndsEqlsEqls'Bool'Unds' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'UndsEqlsEqls'Bool'Unds'-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-165-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-165-is-pattern IMP-symbol-165-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-165-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-165-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'UndsEqlsEqls'Bool'Unds' ptn0 ptn1 ) $= ( IMP-symbol-165-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-165-is-pattern application-context-app-right application-context-app-left notation-cache-262 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-165-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-165-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'UndsEqlsEqls'Bool'Unds' ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-165-is-symbol symbol-is-pattern IMP-symbol-165-is-pattern application-context-app-right notation-cache-262 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
notation-cache-263 $p #Notation ( \kore-symbol-Lbl'UndsEqlsEqls'Int'Unds' ptn1 ptn2 ) ( \app ( \app \kore-symbol-Lbl'UndsEqlsEqls'Int'Unds'-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-166-is-symbol symbol-is-pattern IMP-symbol-166-is-pattern IMP-symbol-166-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-264 $p #Notation ( \kore-symbol-Lbl'UndsEqlsEqls'Int'Unds' ptn3 ptn4 ) ( \app ( \app \kore-symbol-Lbl'UndsEqlsEqls'Int'Unds'-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-166-is-symbol symbol-is-pattern IMP-symbol-166-is-pattern IMP-symbol-166-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-166-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-166-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-166-substitution $p #Substitution ( \kore-symbol-Lbl'UndsEqlsEqls'Int'Unds' ptn1 ptn2 ) ( \kore-symbol-Lbl'UndsEqlsEqls'Int'Unds' ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-166-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-166-is-pattern substitution-app substitution-disjoint notation-cache-263 notation-cache-264 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-265 $p #Notation ( \kore-symbol-Lbl'UndsEqlsEqls'Int'Unds' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'UndsEqlsEqls'Int'Unds'-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-166-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-166-is-pattern IMP-symbol-166-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-166-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-166-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'UndsEqlsEqls'Int'Unds' ptn0 ptn1 ) $= ( IMP-symbol-166-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-166-is-pattern application-context-app-right application-context-app-left notation-cache-265 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-166-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-166-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'UndsEqlsEqls'Int'Unds' ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-166-is-symbol symbol-is-pattern IMP-symbol-166-is-pattern application-context-app-right notation-cache-265 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
notation-cache-266 $p #Notation ( \kore-symbol-Lbl'UndsEqlsEqls'K'Unds' ptn1 ptn2 ) ( \app ( \app \kore-symbol-Lbl'UndsEqlsEqls'K'Unds'-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-167-is-symbol symbol-is-pattern IMP-symbol-167-is-pattern IMP-symbol-167-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-267 $p #Notation ( \kore-symbol-Lbl'UndsEqlsEqls'K'Unds' ptn3 ptn4 ) ( \app ( \app \kore-symbol-Lbl'UndsEqlsEqls'K'Unds'-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-167-is-symbol symbol-is-pattern IMP-symbol-167-is-pattern IMP-symbol-167-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-167-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-167-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-167-substitution $p #Substitution ( \kore-symbol-Lbl'UndsEqlsEqls'K'Unds' ptn1 ptn2 ) ( \kore-symbol-Lbl'UndsEqlsEqls'K'Unds' ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-167-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-167-is-pattern substitution-app substitution-disjoint notation-cache-266 notation-cache-267 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-268 $p #Notation ( \kore-symbol-Lbl'UndsEqlsEqls'K'Unds' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'UndsEqlsEqls'K'Unds'-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-167-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-167-is-pattern IMP-symbol-167-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-167-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-167-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'UndsEqlsEqls'K'Unds' ptn0 ptn1 ) $= ( IMP-symbol-167-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-167-is-pattern application-context-app-right application-context-app-left notation-cache-268 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-167-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-167-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'UndsEqlsEqls'K'Unds' ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-167-is-symbol symbol-is-pattern IMP-symbol-167-is-pattern application-context-app-right notation-cache-268 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
notation-cache-269 $p #Notation ( \kore-symbol-Lbl'UndsEqlsEqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String ptn1 ptn2 ) ( \app ( \app \kore-symbol-Lbl'UndsEqlsEqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-168-is-symbol symbol-is-pattern IMP-symbol-168-is-pattern IMP-symbol-168-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-270 $p #Notation ( \kore-symbol-Lbl'UndsEqlsEqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String ptn3 ptn4 ) ( \app ( \app \kore-symbol-Lbl'UndsEqlsEqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-168-is-symbol symbol-is-pattern IMP-symbol-168-is-pattern IMP-symbol-168-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-168-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-168-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-168-substitution $p #Substitution ( \kore-symbol-Lbl'UndsEqlsEqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String ptn1 ptn2 ) ( \kore-symbol-Lbl'UndsEqlsEqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-168-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-168-is-pattern substitution-app substitution-disjoint notation-cache-269 notation-cache-270 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-271 $p #Notation ( \kore-symbol-Lbl'UndsEqlsEqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'UndsEqlsEqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-168-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-168-is-pattern IMP-symbol-168-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-168-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-168-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'UndsEqlsEqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String ptn0 ptn1 ) $= ( IMP-symbol-168-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-168-is-pattern application-context-app-right application-context-app-left notation-cache-271 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-168-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-168-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'UndsEqlsEqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-168-is-symbol symbol-is-pattern IMP-symbol-168-is-pattern application-context-app-right notation-cache-271 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
notation-cache-272 $p #Notation ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ptn1 ptn2 ) ( \app ( \app \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-169-is-symbol symbol-is-pattern IMP-symbol-169-is-pattern IMP-symbol-169-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-273 $p #Notation ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ptn3 ptn4 ) ( \app ( \app \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-169-is-symbol symbol-is-pattern IMP-symbol-169-is-pattern IMP-symbol-169-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-169-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-169-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-169-substitution $p #Substitution ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ptn1 ptn2 ) ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-169-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-169-is-pattern substitution-app substitution-disjoint notation-cache-272 notation-cache-273 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-274 $p #Notation ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-169-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-169-is-pattern IMP-symbol-169-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-169-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-169-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ptn0 ptn1 ) $= ( IMP-symbol-169-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-169-is-pattern application-context-app-right application-context-app-left notation-cache-274 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-169-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-169-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-169-is-symbol symbol-is-pattern IMP-symbol-169-is-pattern application-context-app-right notation-cache-274 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
notation-cache-275 $p #Notation ( \kore-symbol-Lbl'Unds-GT-Eqls'Int'Unds' ptn1 ptn2 ) ( \app ( \app \kore-symbol-Lbl'Unds-GT-Eqls'Int'Unds'-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-170-is-symbol symbol-is-pattern IMP-symbol-170-is-pattern IMP-symbol-170-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-276 $p #Notation ( \kore-symbol-Lbl'Unds-GT-Eqls'Int'Unds' ptn3 ptn4 ) ( \app ( \app \kore-symbol-Lbl'Unds-GT-Eqls'Int'Unds'-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-170-is-symbol symbol-is-pattern IMP-symbol-170-is-pattern IMP-symbol-170-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-170-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-170-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-170-substitution $p #Substitution ( \kore-symbol-Lbl'Unds-GT-Eqls'Int'Unds' ptn1 ptn2 ) ( \kore-symbol-Lbl'Unds-GT-Eqls'Int'Unds' ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-170-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-170-is-pattern substitution-app substitution-disjoint notation-cache-275 notation-cache-276 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-277 $p #Notation ( \kore-symbol-Lbl'Unds-GT-Eqls'Int'Unds' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'Unds-GT-Eqls'Int'Unds'-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-170-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-170-is-pattern IMP-symbol-170-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-170-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-170-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Unds-GT-Eqls'Int'Unds' ptn0 ptn1 ) $= ( IMP-symbol-170-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-170-is-pattern application-context-app-right application-context-app-left notation-cache-277 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-170-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-170-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Unds-GT-Eqls'Int'Unds' ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-170-is-symbol symbol-is-pattern IMP-symbol-170-is-pattern application-context-app-right notation-cache-277 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
notation-cache-278 $p #Notation ( \kore-symbol-Lbl'Unds-GT-Eqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String ptn1 ptn2 ) ( \app ( \app \kore-symbol-Lbl'Unds-GT-Eqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-171-is-symbol symbol-is-pattern IMP-symbol-171-is-pattern IMP-symbol-171-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-279 $p #Notation ( \kore-symbol-Lbl'Unds-GT-Eqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String ptn3 ptn4 ) ( \app ( \app \kore-symbol-Lbl'Unds-GT-Eqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-171-is-symbol symbol-is-pattern IMP-symbol-171-is-pattern IMP-symbol-171-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-171-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-171-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-171-substitution $p #Substitution ( \kore-symbol-Lbl'Unds-GT-Eqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String ptn1 ptn2 ) ( \kore-symbol-Lbl'Unds-GT-Eqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-171-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-171-is-pattern substitution-app substitution-disjoint notation-cache-278 notation-cache-279 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-280 $p #Notation ( \kore-symbol-Lbl'Unds-GT-Eqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'Unds-GT-Eqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-171-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-171-is-pattern IMP-symbol-171-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-171-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-171-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Unds-GT-Eqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String ptn0 ptn1 ) $= ( IMP-symbol-171-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-171-is-pattern application-context-app-right application-context-app-left notation-cache-280 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-171-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-171-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Unds-GT-Eqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-171-is-symbol symbol-is-pattern IMP-symbol-171-is-pattern application-context-app-right notation-cache-280 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
notation-cache-281 $p #Notation ( \kore-symbol-Lbl'Unds-GT--GT-'Int'Unds' ptn1 ptn2 ) ( \app ( \app \kore-symbol-Lbl'Unds-GT--GT-'Int'Unds'-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-172-is-symbol symbol-is-pattern IMP-symbol-172-is-pattern IMP-symbol-172-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-282 $p #Notation ( \kore-symbol-Lbl'Unds-GT--GT-'Int'Unds' ptn3 ptn4 ) ( \app ( \app \kore-symbol-Lbl'Unds-GT--GT-'Int'Unds'-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-172-is-symbol symbol-is-pattern IMP-symbol-172-is-pattern IMP-symbol-172-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-172-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-172-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-172-substitution $p #Substitution ( \kore-symbol-Lbl'Unds-GT--GT-'Int'Unds' ptn1 ptn2 ) ( \kore-symbol-Lbl'Unds-GT--GT-'Int'Unds' ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-172-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-172-is-pattern substitution-app substitution-disjoint notation-cache-281 notation-cache-282 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-283 $p #Notation ( \kore-symbol-Lbl'Unds-GT--GT-'Int'Unds' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'Unds-GT--GT-'Int'Unds'-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-172-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-172-is-pattern IMP-symbol-172-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-172-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-172-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Unds-GT--GT-'Int'Unds' ptn0 ptn1 ) $= ( IMP-symbol-172-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-172-is-pattern application-context-app-right application-context-app-left notation-cache-283 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-172-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-172-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Unds-GT--GT-'Int'Unds' ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-172-is-symbol symbol-is-pattern IMP-symbol-172-is-pattern application-context-app-right notation-cache-283 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
notation-cache-284 $p #Notation ( \kore-symbol-Lbl'Unds-GT-'Int'Unds' ptn1 ptn2 ) ( \app ( \app \kore-symbol-Lbl'Unds-GT-'Int'Unds'-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-173-is-symbol symbol-is-pattern IMP-symbol-173-is-pattern IMP-symbol-173-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-285 $p #Notation ( \kore-symbol-Lbl'Unds-GT-'Int'Unds' ptn3 ptn4 ) ( \app ( \app \kore-symbol-Lbl'Unds-GT-'Int'Unds'-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-173-is-symbol symbol-is-pattern IMP-symbol-173-is-pattern IMP-symbol-173-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-173-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-173-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-173-substitution $p #Substitution ( \kore-symbol-Lbl'Unds-GT-'Int'Unds' ptn1 ptn2 ) ( \kore-symbol-Lbl'Unds-GT-'Int'Unds' ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-173-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-173-is-pattern substitution-app substitution-disjoint notation-cache-284 notation-cache-285 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-286 $p #Notation ( \kore-symbol-Lbl'Unds-GT-'Int'Unds' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'Unds-GT-'Int'Unds'-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-173-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-173-is-pattern IMP-symbol-173-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-173-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-173-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Unds-GT-'Int'Unds' ptn0 ptn1 ) $= ( IMP-symbol-173-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-173-is-pattern application-context-app-right application-context-app-left notation-cache-286 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-173-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-173-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Unds-GT-'Int'Unds' ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-173-is-symbol symbol-is-pattern IMP-symbol-173-is-pattern application-context-app-right notation-cache-286 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
notation-cache-287 $p #Notation ( \kore-symbol-Lbl'Unds-GT-'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String ptn1 ptn2 ) ( \app ( \app \kore-symbol-Lbl'Unds-GT-'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-174-is-symbol symbol-is-pattern IMP-symbol-174-is-pattern IMP-symbol-174-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-288 $p #Notation ( \kore-symbol-Lbl'Unds-GT-'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String ptn3 ptn4 ) ( \app ( \app \kore-symbol-Lbl'Unds-GT-'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-174-is-symbol symbol-is-pattern IMP-symbol-174-is-pattern IMP-symbol-174-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-174-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-174-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-174-substitution $p #Substitution ( \kore-symbol-Lbl'Unds-GT-'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String ptn1 ptn2 ) ( \kore-symbol-Lbl'Unds-GT-'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-174-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-174-is-pattern substitution-app substitution-disjoint notation-cache-287 notation-cache-288 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-289 $p #Notation ( \kore-symbol-Lbl'Unds-GT-'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'Unds-GT-'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-174-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-174-is-pattern IMP-symbol-174-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-174-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-174-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Unds-GT-'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String ptn0 ptn1 ) $= ( IMP-symbol-174-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-174-is-pattern application-context-app-right application-context-app-left notation-cache-289 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-174-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-174-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Unds-GT-'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-174-is-symbol symbol-is-pattern IMP-symbol-174-is-pattern application-context-app-right notation-cache-289 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
notation-cache-290 $p #Notation ( \kore-symbol-Lbl'Unds'List'Unds' ptn1 ptn2 ) ( \app ( \app \kore-symbol-Lbl'Unds'List'Unds'-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-175-is-symbol symbol-is-pattern IMP-symbol-175-is-pattern IMP-symbol-175-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-291 $p #Notation ( \kore-symbol-Lbl'Unds'List'Unds' ptn3 ptn4 ) ( \app ( \app \kore-symbol-Lbl'Unds'List'Unds'-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-175-is-symbol symbol-is-pattern IMP-symbol-175-is-pattern IMP-symbol-175-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-175-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-175-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-175-substitution $p #Substitution ( \kore-symbol-Lbl'Unds'List'Unds' ptn1 ptn2 ) ( \kore-symbol-Lbl'Unds'List'Unds' ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-175-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-175-is-pattern substitution-app substitution-disjoint notation-cache-290 notation-cache-291 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-292 $p #Notation ( \kore-symbol-Lbl'Unds'List'Unds' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'Unds'List'Unds'-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-175-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-175-is-pattern IMP-symbol-175-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-175-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-175-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Unds'List'Unds' ptn0 ptn1 ) $= ( IMP-symbol-175-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-175-is-pattern application-context-app-right application-context-app-left notation-cache-292 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-175-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-175-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Unds'List'Unds' ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-175-is-symbol symbol-is-pattern IMP-symbol-175-is-pattern application-context-app-right notation-cache-292 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
notation-cache-293 $p #Notation ( \kore-symbol-Lbl'Unds'Map'Unds' ptn1 ptn2 ) ( \app ( \app \kore-symbol-Lbl'Unds'Map'Unds'-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-176-is-symbol symbol-is-pattern IMP-symbol-176-is-pattern IMP-symbol-176-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-294 $p #Notation ( \kore-symbol-Lbl'Unds'Map'Unds' ptn3 ptn4 ) ( \app ( \app \kore-symbol-Lbl'Unds'Map'Unds'-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-176-is-symbol symbol-is-pattern IMP-symbol-176-is-pattern IMP-symbol-176-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-176-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-176-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-176-substitution $p #Substitution ( \kore-symbol-Lbl'Unds'Map'Unds' ptn1 ptn2 ) ( \kore-symbol-Lbl'Unds'Map'Unds' ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-176-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-176-is-pattern substitution-app substitution-disjoint notation-cache-293 notation-cache-294 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-295 $p #Notation ( \kore-symbol-Lbl'Unds'Map'Unds' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'Unds'Map'Unds'-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-176-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-176-is-pattern IMP-symbol-176-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-176-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-176-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Unds'Map'Unds' ptn0 ptn1 ) $= ( IMP-symbol-176-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-176-is-pattern application-context-app-right application-context-app-left notation-cache-295 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-176-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-176-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Unds'Map'Unds' ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-176-is-symbol symbol-is-pattern IMP-symbol-176-is-pattern application-context-app-right notation-cache-295 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
notation-cache-296 $p #Notation ( \kore-symbol-Lbl'Unds'Set'Unds' ptn1 ptn2 ) ( \app ( \app \kore-symbol-Lbl'Unds'Set'Unds'-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-177-is-symbol symbol-is-pattern IMP-symbol-177-is-pattern IMP-symbol-177-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-297 $p #Notation ( \kore-symbol-Lbl'Unds'Set'Unds' ptn3 ptn4 ) ( \app ( \app \kore-symbol-Lbl'Unds'Set'Unds'-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-177-is-symbol symbol-is-pattern IMP-symbol-177-is-pattern IMP-symbol-177-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-177-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-177-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-177-substitution $p #Substitution ( \kore-symbol-Lbl'Unds'Set'Unds' ptn1 ptn2 ) ( \kore-symbol-Lbl'Unds'Set'Unds' ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-177-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-177-is-pattern substitution-app substitution-disjoint notation-cache-296 notation-cache-297 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-298 $p #Notation ( \kore-symbol-Lbl'Unds'Set'Unds' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'Unds'Set'Unds'-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-177-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-177-is-pattern IMP-symbol-177-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-177-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-177-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Unds'Set'Unds' ptn0 ptn1 ) $= ( IMP-symbol-177-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-177-is-pattern application-context-app-right application-context-app-left notation-cache-298 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-177-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-177-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Unds'Set'Unds' ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-177-is-symbol symbol-is-pattern IMP-symbol-177-is-pattern application-context-app-right notation-cache-298 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
${ IMP-symbol-178-substitution.0 $e #Substitution ptn1 ptn4 ptn0 xX0 $.
   IMP-symbol-178-substitution.1 $e #Substitution ptn2 ptn5 ptn0 xX0 $.
   IMP-symbol-178-substitution.2 $e #Substitution ptn3 ptn6 ptn0 xX0 $.
   IMP-symbol-178-substitution $p #Substitution ( \kore-symbol-Lbl'UndsLSqBUnds-LT-'-'UndsRSqBUnds'LIST'Unds'List'Unds'List'Unds'Int'Unds'KItem ptn1 ptn2 ptn3 ) ( \kore-symbol-Lbl'UndsLSqBUnds-LT-'-'UndsRSqBUnds'LIST'Unds'List'Unds'List'Unds'Int'Unds'KItem ptn4 ptn5 ptn6 ) ptn0 xX0 $= ( app-is-pattern IMP-symbol-178-is-symbol symbol-is-pattern IMP-symbol-178-is-pattern substitution-app notation-reflexivity IMP-symbol-178-is-sugar notation-transitivity substitution-disjoint notation-substitution ) MNCLDLELMNFLGLHLBCDEOFGHOBABMNCLDLEMNFLGLHABMNCLDMNFLGABMNCMNFAMNBATIPJPKPCDEOMNCLDLELMNCLDLELCDERMNCLDLELQSFGHOMNFLGLHLMNFLGLHLFGHRMNFLGLHLQSBQUA $. $}
notation-cache-299 $p #Notation ( \kore-symbol-Lbl'UndsLSqBUnds-LT-'-'UndsRSqBUnds'LIST'Unds'List'Unds'List'Unds'Int'Unds'KItem ptn0 ptn1 ptn2 ) ( \app ( \app ( \app \kore-symbol-Lbl'UndsLSqBUnds-LT-'-'UndsRSqBUnds'LIST'Unds'List'Unds'List'Unds'Int'Unds'KItem-symbol ptn0 ) ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-178-is-symbol symbol-is-pattern notation-reflexivity notation-app IMP-symbol-178-is-pattern IMP-symbol-178-is-sugar notation-transitivity ) ABCIEFADBDCDEFADBDCDABCJEFADBDCEFADBDCEFADBEFADBEFAEFAEFGAGHBGHCGHK $.
${ $d xX0 ptn1 $.
   $d xX0 ptn2 $.
   IMP-symbol-178-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-178-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'UndsLSqBUnds-LT-'-'UndsRSqBUnds'LIST'Unds'List'Unds'List'Unds'Int'Unds'KItem ptn0 ptn1 ptn2 ) $= ( app-is-pattern IMP-symbol-178-is-symbol symbol-is-pattern application-context-app-left IMP-symbol-178-is-pattern application-context-app-right notation-cache-299 notation-application-context ) GHBFCFDFBCDJAGHBFCFDAGHBFCAGHBAEKIIBCDLM $. $}
${ $d xX0 ptn0 $.
   $d xX0 ptn2 $.
   IMP-symbol-178-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-178-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'UndsLSqBUnds-LT-'-'UndsRSqBUnds'LIST'Unds'List'Unds'List'Unds'Int'Unds'KItem ptn0 ptn1 ptn2 ) $= ( app-is-pattern IMP-symbol-178-is-symbol symbol-is-pattern IMP-symbol-178-is-pattern application-context-app-right application-context-app-left notation-cache-299 notation-application-context ) GHBFCFDFBCDIAGHBFCFDAGHBFCAEJKBCDLM $. $}
${ $d xX0 ptn0 $.
   $d xX0 ptn1 $.
   IMP-symbol-178-application-context-2.0 $e #ApplicationContext xX0 ptn2 $.
   IMP-symbol-178-application-context-2 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'UndsLSqBUnds-LT-'-'UndsRSqBUnds'LIST'Unds'List'Unds'List'Unds'Int'Unds'KItem ptn0 ptn1 ptn2 ) $= ( app-is-pattern IMP-symbol-178-is-symbol symbol-is-pattern IMP-symbol-178-is-pattern application-context-app-right notation-cache-299 notation-application-context ) GHBFCFDFBCDIAGHBFCFDAEJBCDKL $. $}
notation-cache-300 $p #Notation ( \kore-symbol-Lbl'UndsLSqBUnds-LT-'-undef'RSqB' ptn1 ptn2 ) ( \app ( \app \kore-symbol-Lbl'UndsLSqBUnds-LT-'-undef'RSqB'-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-179-is-symbol symbol-is-pattern IMP-symbol-179-is-pattern IMP-symbol-179-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-301 $p #Notation ( \kore-symbol-Lbl'UndsLSqBUnds-LT-'-undef'RSqB' ptn3 ptn4 ) ( \app ( \app \kore-symbol-Lbl'UndsLSqBUnds-LT-'-undef'RSqB'-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-179-is-symbol symbol-is-pattern IMP-symbol-179-is-pattern IMP-symbol-179-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-179-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-179-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-179-substitution $p #Substitution ( \kore-symbol-Lbl'UndsLSqBUnds-LT-'-undef'RSqB' ptn1 ptn2 ) ( \kore-symbol-Lbl'UndsLSqBUnds-LT-'-undef'RSqB' ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-179-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-179-is-pattern substitution-app substitution-disjoint notation-cache-300 notation-cache-301 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-302 $p #Notation ( \kore-symbol-Lbl'UndsLSqBUnds-LT-'-undef'RSqB' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'UndsLSqBUnds-LT-'-undef'RSqB'-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-179-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-179-is-pattern IMP-symbol-179-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-179-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-179-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'UndsLSqBUnds-LT-'-undef'RSqB' ptn0 ptn1 ) $= ( IMP-symbol-179-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-179-is-pattern application-context-app-right application-context-app-left notation-cache-302 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-179-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-179-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'UndsLSqBUnds-LT-'-undef'RSqB' ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-179-is-symbol symbol-is-pattern IMP-symbol-179-is-pattern application-context-app-right notation-cache-302 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
${ IMP-symbol-180-substitution.0 $e #Substitution ptn1 ptn4 ptn0 xX0 $.
   IMP-symbol-180-substitution.1 $e #Substitution ptn2 ptn5 ptn0 xX0 $.
   IMP-symbol-180-substitution.2 $e #Substitution ptn3 ptn6 ptn0 xX0 $.
   IMP-symbol-180-substitution $p #Substitution ( \kore-symbol-Lbl'UndsLSqBUndsRSqB'orDefault'UndsUnds'MAP'Unds'KItem'Unds'Map'Unds'KItem'Unds'KItem ptn1 ptn2 ptn3 ) ( \kore-symbol-Lbl'UndsLSqBUndsRSqB'orDefault'UndsUnds'MAP'Unds'KItem'Unds'Map'Unds'KItem'Unds'KItem ptn4 ptn5 ptn6 ) ptn0 xX0 $= ( app-is-pattern IMP-symbol-180-is-symbol symbol-is-pattern IMP-symbol-180-is-pattern substitution-app notation-reflexivity IMP-symbol-180-is-sugar notation-transitivity substitution-disjoint notation-substitution ) MNCLDLELMNFLGLHLBCDEOFGHOBABMNCLDLEMNFLGLHABMNCLDMNFLGABMNCMNFAMNBATIPJPKPCDEOMNCLDLELMNCLDLELCDERMNCLDLELQSFGHOMNFLGLHLMNFLGLHLFGHRMNFLGLHLQSBQUA $. $}
notation-cache-303 $p #Notation ( \kore-symbol-Lbl'UndsLSqBUndsRSqB'orDefault'UndsUnds'MAP'Unds'KItem'Unds'Map'Unds'KItem'Unds'KItem ptn0 ptn1 ptn2 ) ( \app ( \app ( \app \kore-symbol-Lbl'UndsLSqBUndsRSqB'orDefault'UndsUnds'MAP'Unds'KItem'Unds'Map'Unds'KItem'Unds'KItem-symbol ptn0 ) ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-180-is-symbol symbol-is-pattern notation-reflexivity notation-app IMP-symbol-180-is-pattern IMP-symbol-180-is-sugar notation-transitivity ) ABCIEFADBDCDEFADBDCDABCJEFADBDCEFADBDCEFADBEFADBEFAEFAEFGAGHBGHCGHK $.
${ $d xX0 ptn1 $.
   $d xX0 ptn2 $.
   IMP-symbol-180-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-180-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'UndsLSqBUndsRSqB'orDefault'UndsUnds'MAP'Unds'KItem'Unds'Map'Unds'KItem'Unds'KItem ptn0 ptn1 ptn2 ) $= ( app-is-pattern IMP-symbol-180-is-symbol symbol-is-pattern application-context-app-left IMP-symbol-180-is-pattern application-context-app-right notation-cache-303 notation-application-context ) GHBFCFDFBCDJAGHBFCFDAGHBFCAGHBAEKIIBCDLM $. $}
${ $d xX0 ptn0 $.
   $d xX0 ptn2 $.
   IMP-symbol-180-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-180-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'UndsLSqBUndsRSqB'orDefault'UndsUnds'MAP'Unds'KItem'Unds'Map'Unds'KItem'Unds'KItem ptn0 ptn1 ptn2 ) $= ( app-is-pattern IMP-symbol-180-is-symbol symbol-is-pattern IMP-symbol-180-is-pattern application-context-app-right application-context-app-left notation-cache-303 notation-application-context ) GHBFCFDFBCDIAGHBFCFDAGHBFCAEJKBCDLM $. $}
${ $d xX0 ptn0 $.
   $d xX0 ptn1 $.
   IMP-symbol-180-application-context-2.0 $e #ApplicationContext xX0 ptn2 $.
   IMP-symbol-180-application-context-2 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'UndsLSqBUndsRSqB'orDefault'UndsUnds'MAP'Unds'KItem'Unds'Map'Unds'KItem'Unds'KItem ptn0 ptn1 ptn2 ) $= ( app-is-pattern IMP-symbol-180-is-symbol symbol-is-pattern IMP-symbol-180-is-pattern application-context-app-right notation-cache-303 notation-application-context ) GHBFCFDFBCDIAGHBFCFDAEJBCDKL $. $}
${ IMP-symbol-181-substitution.0 $e #Substitution ptn1 ptn4 ptn0 xX0 $.
   IMP-symbol-181-substitution.1 $e #Substitution ptn2 ptn5 ptn0 xX0 $.
   IMP-symbol-181-substitution.2 $e #Substitution ptn3 ptn6 ptn0 xX0 $.
   IMP-symbol-181-substitution $p #Substitution ( \kore-symbol-Lbl'UndsXor-Perc'Int'UndsUnds' ptn1 ptn2 ptn3 ) ( \kore-symbol-Lbl'UndsXor-Perc'Int'UndsUnds' ptn4 ptn5 ptn6 ) ptn0 xX0 $= ( app-is-pattern IMP-symbol-181-is-symbol symbol-is-pattern IMP-symbol-181-is-pattern substitution-app notation-reflexivity IMP-symbol-181-is-sugar notation-transitivity substitution-disjoint notation-substitution ) MNCLDLELMNFLGLHLBCDEOFGHOBABMNCLDLEMNFLGLHABMNCLDMNFLGABMNCMNFAMNBATIPJPKPCDEOMNCLDLELMNCLDLELCDERMNCLDLELQSFGHOMNFLGLHLMNFLGLHLFGHRMNFLGLHLQSBQUA $. $}
notation-cache-304 $p #Notation ( \kore-symbol-Lbl'UndsXor-Perc'Int'UndsUnds' ptn0 ptn1 ptn2 ) ( \app ( \app ( \app \kore-symbol-Lbl'UndsXor-Perc'Int'UndsUnds'-symbol ptn0 ) ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-181-is-symbol symbol-is-pattern notation-reflexivity notation-app IMP-symbol-181-is-pattern IMP-symbol-181-is-sugar notation-transitivity ) ABCIEFADBDCDEFADBDCDABCJEFADBDCEFADBDCEFADBEFADBEFAEFAEFGAGHBGHCGHK $.
${ $d xX0 ptn1 $.
   $d xX0 ptn2 $.
   IMP-symbol-181-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-181-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'UndsXor-Perc'Int'UndsUnds' ptn0 ptn1 ptn2 ) $= ( app-is-pattern IMP-symbol-181-is-symbol symbol-is-pattern application-context-app-left IMP-symbol-181-is-pattern application-context-app-right notation-cache-304 notation-application-context ) GHBFCFDFBCDJAGHBFCFDAGHBFCAGHBAEKIIBCDLM $. $}
${ $d xX0 ptn0 $.
   $d xX0 ptn2 $.
   IMP-symbol-181-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-181-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'UndsXor-Perc'Int'UndsUnds' ptn0 ptn1 ptn2 ) $= ( app-is-pattern IMP-symbol-181-is-symbol symbol-is-pattern IMP-symbol-181-is-pattern application-context-app-right application-context-app-left notation-cache-304 notation-application-context ) GHBFCFDFBCDIAGHBFCFDAGHBFCAEJKBCDLM $. $}
${ $d xX0 ptn0 $.
   $d xX0 ptn1 $.
   IMP-symbol-181-application-context-2.0 $e #ApplicationContext xX0 ptn2 $.
   IMP-symbol-181-application-context-2 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'UndsXor-Perc'Int'UndsUnds' ptn0 ptn1 ptn2 ) $= ( app-is-pattern IMP-symbol-181-is-symbol symbol-is-pattern IMP-symbol-181-is-pattern application-context-app-right notation-cache-304 notation-application-context ) GHBFCFDFBCDIAGHBFCFDAEJBCDKL $. $}
notation-cache-305 $p #Notation ( \kore-symbol-Lbl'UndsXor-'Int'Unds' ptn1 ptn2 ) ( \app ( \app \kore-symbol-Lbl'UndsXor-'Int'Unds'-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-182-is-symbol symbol-is-pattern IMP-symbol-182-is-pattern IMP-symbol-182-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-306 $p #Notation ( \kore-symbol-Lbl'UndsXor-'Int'Unds' ptn3 ptn4 ) ( \app ( \app \kore-symbol-Lbl'UndsXor-'Int'Unds'-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-182-is-symbol symbol-is-pattern IMP-symbol-182-is-pattern IMP-symbol-182-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-182-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-182-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-182-substitution $p #Substitution ( \kore-symbol-Lbl'UndsXor-'Int'Unds' ptn1 ptn2 ) ( \kore-symbol-Lbl'UndsXor-'Int'Unds' ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-182-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-182-is-pattern substitution-app substitution-disjoint notation-cache-305 notation-cache-306 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-307 $p #Notation ( \kore-symbol-Lbl'UndsXor-'Int'Unds' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'UndsXor-'Int'Unds'-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-182-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-182-is-pattern IMP-symbol-182-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-182-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-182-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'UndsXor-'Int'Unds' ptn0 ptn1 ) $= ( IMP-symbol-182-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-182-is-pattern application-context-app-right application-context-app-left notation-cache-307 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-182-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-182-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'UndsXor-'Int'Unds' ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-182-is-symbol symbol-is-pattern IMP-symbol-182-is-pattern application-context-app-right notation-cache-307 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
notation-cache-308 $p #Notation ( \kore-symbol-Lbl'UndsUndsUnds'IMP-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt ptn1 ptn2 ) ( \app ( \app \kore-symbol-Lbl'UndsUndsUnds'IMP-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-183-is-symbol symbol-is-pattern IMP-symbol-183-is-pattern IMP-symbol-183-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-309 $p #Notation ( \kore-symbol-Lbl'UndsUndsUnds'IMP-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt ptn3 ptn4 ) ( \app ( \app \kore-symbol-Lbl'UndsUndsUnds'IMP-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-183-is-symbol symbol-is-pattern IMP-symbol-183-is-pattern IMP-symbol-183-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-183-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-183-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-183-substitution $p #Substitution ( \kore-symbol-Lbl'UndsUndsUnds'IMP-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt ptn1 ptn2 ) ( \kore-symbol-Lbl'UndsUndsUnds'IMP-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-183-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-183-is-pattern substitution-app substitution-disjoint notation-cache-308 notation-cache-309 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-310 $p #Notation ( \kore-symbol-Lbl'UndsUndsUnds'IMP-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'UndsUndsUnds'IMP-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-183-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-183-is-pattern IMP-symbol-183-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-183-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-183-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'UndsUndsUnds'IMP-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt ptn0 ptn1 ) $= ( IMP-symbol-183-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-183-is-pattern application-context-app-right application-context-app-left notation-cache-310 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-183-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-183-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'UndsUndsUnds'IMP-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-183-is-symbol symbol-is-pattern IMP-symbol-183-is-pattern application-context-app-right notation-cache-310 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
notation-cache-311 $p #Notation ( \kore-symbol-Lbl'Unds'andBool'Unds' ptn1 ptn2 ) ( \app ( \app \kore-symbol-Lbl'Unds'andBool'Unds'-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-184-is-symbol symbol-is-pattern IMP-symbol-184-is-pattern IMP-symbol-184-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-312 $p #Notation ( \kore-symbol-Lbl'Unds'andBool'Unds' ptn3 ptn4 ) ( \app ( \app \kore-symbol-Lbl'Unds'andBool'Unds'-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-184-is-symbol symbol-is-pattern IMP-symbol-184-is-pattern IMP-symbol-184-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-184-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-184-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-184-substitution $p #Substitution ( \kore-symbol-Lbl'Unds'andBool'Unds' ptn1 ptn2 ) ( \kore-symbol-Lbl'Unds'andBool'Unds' ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-184-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-184-is-pattern substitution-app substitution-disjoint notation-cache-311 notation-cache-312 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-313 $p #Notation ( \kore-symbol-Lbl'Unds'andBool'Unds' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'Unds'andBool'Unds'-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-184-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-184-is-pattern IMP-symbol-184-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-184-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-184-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Unds'andBool'Unds' ptn0 ptn1 ) $= ( IMP-symbol-184-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-184-is-pattern application-context-app-right application-context-app-left notation-cache-313 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-184-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-184-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Unds'andBool'Unds' ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-184-is-symbol symbol-is-pattern IMP-symbol-184-is-pattern application-context-app-right notation-cache-313 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
notation-cache-314 $p #Notation ( \kore-symbol-Lbl'Unds'andThenBool'Unds' ptn1 ptn2 ) ( \app ( \app \kore-symbol-Lbl'Unds'andThenBool'Unds'-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-185-is-symbol symbol-is-pattern IMP-symbol-185-is-pattern IMP-symbol-185-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-315 $p #Notation ( \kore-symbol-Lbl'Unds'andThenBool'Unds' ptn3 ptn4 ) ( \app ( \app \kore-symbol-Lbl'Unds'andThenBool'Unds'-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-185-is-symbol symbol-is-pattern IMP-symbol-185-is-pattern IMP-symbol-185-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-185-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-185-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-185-substitution $p #Substitution ( \kore-symbol-Lbl'Unds'andThenBool'Unds' ptn1 ptn2 ) ( \kore-symbol-Lbl'Unds'andThenBool'Unds' ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-185-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-185-is-pattern substitution-app substitution-disjoint notation-cache-314 notation-cache-315 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-316 $p #Notation ( \kore-symbol-Lbl'Unds'andThenBool'Unds' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'Unds'andThenBool'Unds'-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-185-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-185-is-pattern IMP-symbol-185-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-185-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-185-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Unds'andThenBool'Unds' ptn0 ptn1 ) $= ( IMP-symbol-185-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-185-is-pattern application-context-app-right application-context-app-left notation-cache-316 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-185-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-185-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Unds'andThenBool'Unds' ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-185-is-symbol symbol-is-pattern IMP-symbol-185-is-pattern application-context-app-right notation-cache-316 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
notation-cache-317 $p #Notation ( \kore-symbol-Lbl'Unds'divInt'Unds' ptn1 ptn2 ) ( \app ( \app \kore-symbol-Lbl'Unds'divInt'Unds'-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-186-is-symbol symbol-is-pattern IMP-symbol-186-is-pattern IMP-symbol-186-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-318 $p #Notation ( \kore-symbol-Lbl'Unds'divInt'Unds' ptn3 ptn4 ) ( \app ( \app \kore-symbol-Lbl'Unds'divInt'Unds'-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-186-is-symbol symbol-is-pattern IMP-symbol-186-is-pattern IMP-symbol-186-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-186-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-186-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-186-substitution $p #Substitution ( \kore-symbol-Lbl'Unds'divInt'Unds' ptn1 ptn2 ) ( \kore-symbol-Lbl'Unds'divInt'Unds' ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-186-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-186-is-pattern substitution-app substitution-disjoint notation-cache-317 notation-cache-318 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-319 $p #Notation ( \kore-symbol-Lbl'Unds'divInt'Unds' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'Unds'divInt'Unds'-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-186-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-186-is-pattern IMP-symbol-186-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-186-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-186-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Unds'divInt'Unds' ptn0 ptn1 ) $= ( IMP-symbol-186-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-186-is-pattern application-context-app-right application-context-app-left notation-cache-319 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-186-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-186-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Unds'divInt'Unds' ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-186-is-symbol symbol-is-pattern IMP-symbol-186-is-pattern application-context-app-right notation-cache-319 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
notation-cache-320 $p #Notation ( \kore-symbol-Lbl'Unds'dividesInt'UndsUnds'INT-COMMON'Unds'Bool'Unds'Int'Unds'Int ptn1 ptn2 ) ( \app ( \app \kore-symbol-Lbl'Unds'dividesInt'UndsUnds'INT-COMMON'Unds'Bool'Unds'Int'Unds'Int-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-187-is-symbol symbol-is-pattern IMP-symbol-187-is-pattern IMP-symbol-187-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-321 $p #Notation ( \kore-symbol-Lbl'Unds'dividesInt'UndsUnds'INT-COMMON'Unds'Bool'Unds'Int'Unds'Int ptn3 ptn4 ) ( \app ( \app \kore-symbol-Lbl'Unds'dividesInt'UndsUnds'INT-COMMON'Unds'Bool'Unds'Int'Unds'Int-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-187-is-symbol symbol-is-pattern IMP-symbol-187-is-pattern IMP-symbol-187-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-187-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-187-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-187-substitution $p #Substitution ( \kore-symbol-Lbl'Unds'dividesInt'UndsUnds'INT-COMMON'Unds'Bool'Unds'Int'Unds'Int ptn1 ptn2 ) ( \kore-symbol-Lbl'Unds'dividesInt'UndsUnds'INT-COMMON'Unds'Bool'Unds'Int'Unds'Int ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-187-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-187-is-pattern substitution-app substitution-disjoint notation-cache-320 notation-cache-321 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-322 $p #Notation ( \kore-symbol-Lbl'Unds'dividesInt'UndsUnds'INT-COMMON'Unds'Bool'Unds'Int'Unds'Int ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'Unds'dividesInt'UndsUnds'INT-COMMON'Unds'Bool'Unds'Int'Unds'Int-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-187-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-187-is-pattern IMP-symbol-187-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-187-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-187-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Unds'dividesInt'UndsUnds'INT-COMMON'Unds'Bool'Unds'Int'Unds'Int ptn0 ptn1 ) $= ( IMP-symbol-187-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-187-is-pattern application-context-app-right application-context-app-left notation-cache-322 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-187-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-187-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Unds'dividesInt'UndsUnds'INT-COMMON'Unds'Bool'Unds'Int'Unds'Int ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-187-is-symbol symbol-is-pattern IMP-symbol-187-is-pattern application-context-app-right notation-cache-322 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
notation-cache-323 $p #Notation ( \kore-symbol-Lbl'Unds'impliesBool'Unds' ptn1 ptn2 ) ( \app ( \app \kore-symbol-Lbl'Unds'impliesBool'Unds'-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-188-is-symbol symbol-is-pattern IMP-symbol-188-is-pattern IMP-symbol-188-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-324 $p #Notation ( \kore-symbol-Lbl'Unds'impliesBool'Unds' ptn3 ptn4 ) ( \app ( \app \kore-symbol-Lbl'Unds'impliesBool'Unds'-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-188-is-symbol symbol-is-pattern IMP-symbol-188-is-pattern IMP-symbol-188-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-188-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-188-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-188-substitution $p #Substitution ( \kore-symbol-Lbl'Unds'impliesBool'Unds' ptn1 ptn2 ) ( \kore-symbol-Lbl'Unds'impliesBool'Unds' ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-188-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-188-is-pattern substitution-app substitution-disjoint notation-cache-323 notation-cache-324 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-325 $p #Notation ( \kore-symbol-Lbl'Unds'impliesBool'Unds' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'Unds'impliesBool'Unds'-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-188-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-188-is-pattern IMP-symbol-188-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-188-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-188-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Unds'impliesBool'Unds' ptn0 ptn1 ) $= ( IMP-symbol-188-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-188-is-pattern application-context-app-right application-context-app-left notation-cache-325 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-188-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-188-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Unds'impliesBool'Unds' ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-188-is-symbol symbol-is-pattern IMP-symbol-188-is-pattern application-context-app-right notation-cache-325 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
notation-cache-326 $p #Notation ( \kore-symbol-Lbl'Unds'in'UndsUnds'LIST'Unds'Bool'Unds'KItem'Unds'List ptn1 ptn2 ) ( \app ( \app \kore-symbol-Lbl'Unds'in'UndsUnds'LIST'Unds'Bool'Unds'KItem'Unds'List-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-189-is-symbol symbol-is-pattern IMP-symbol-189-is-pattern IMP-symbol-189-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-327 $p #Notation ( \kore-symbol-Lbl'Unds'in'UndsUnds'LIST'Unds'Bool'Unds'KItem'Unds'List ptn3 ptn4 ) ( \app ( \app \kore-symbol-Lbl'Unds'in'UndsUnds'LIST'Unds'Bool'Unds'KItem'Unds'List-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-189-is-symbol symbol-is-pattern IMP-symbol-189-is-pattern IMP-symbol-189-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-189-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-189-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-189-substitution $p #Substitution ( \kore-symbol-Lbl'Unds'in'UndsUnds'LIST'Unds'Bool'Unds'KItem'Unds'List ptn1 ptn2 ) ( \kore-symbol-Lbl'Unds'in'UndsUnds'LIST'Unds'Bool'Unds'KItem'Unds'List ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-189-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-189-is-pattern substitution-app substitution-disjoint notation-cache-326 notation-cache-327 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-328 $p #Notation ( \kore-symbol-Lbl'Unds'in'UndsUnds'LIST'Unds'Bool'Unds'KItem'Unds'List ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'Unds'in'UndsUnds'LIST'Unds'Bool'Unds'KItem'Unds'List-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-189-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-189-is-pattern IMP-symbol-189-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-189-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-189-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Unds'in'UndsUnds'LIST'Unds'Bool'Unds'KItem'Unds'List ptn0 ptn1 ) $= ( IMP-symbol-189-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-189-is-pattern application-context-app-right application-context-app-left notation-cache-328 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-189-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-189-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Unds'in'UndsUnds'LIST'Unds'Bool'Unds'KItem'Unds'List ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-189-is-symbol symbol-is-pattern IMP-symbol-189-is-pattern application-context-app-right notation-cache-328 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
notation-cache-329 $p #Notation ( \kore-symbol-Lbl'Unds'in'Unds'keys'LParUndsRParUnds'MAP'Unds'Bool'Unds'KItem'Unds'Map ptn1 ptn2 ) ( \app ( \app \kore-symbol-Lbl'Unds'in'Unds'keys'LParUndsRParUnds'MAP'Unds'Bool'Unds'KItem'Unds'Map-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-190-is-symbol symbol-is-pattern IMP-symbol-190-is-pattern IMP-symbol-190-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-330 $p #Notation ( \kore-symbol-Lbl'Unds'in'Unds'keys'LParUndsRParUnds'MAP'Unds'Bool'Unds'KItem'Unds'Map ptn3 ptn4 ) ( \app ( \app \kore-symbol-Lbl'Unds'in'Unds'keys'LParUndsRParUnds'MAP'Unds'Bool'Unds'KItem'Unds'Map-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-190-is-symbol symbol-is-pattern IMP-symbol-190-is-pattern IMP-symbol-190-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-190-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-190-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-190-substitution $p #Substitution ( \kore-symbol-Lbl'Unds'in'Unds'keys'LParUndsRParUnds'MAP'Unds'Bool'Unds'KItem'Unds'Map ptn1 ptn2 ) ( \kore-symbol-Lbl'Unds'in'Unds'keys'LParUndsRParUnds'MAP'Unds'Bool'Unds'KItem'Unds'Map ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-190-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-190-is-pattern substitution-app substitution-disjoint notation-cache-329 notation-cache-330 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-331 $p #Notation ( \kore-symbol-Lbl'Unds'in'Unds'keys'LParUndsRParUnds'MAP'Unds'Bool'Unds'KItem'Unds'Map ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'Unds'in'Unds'keys'LParUndsRParUnds'MAP'Unds'Bool'Unds'KItem'Unds'Map-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-190-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-190-is-pattern IMP-symbol-190-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-190-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-190-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Unds'in'Unds'keys'LParUndsRParUnds'MAP'Unds'Bool'Unds'KItem'Unds'Map ptn0 ptn1 ) $= ( IMP-symbol-190-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-190-is-pattern application-context-app-right application-context-app-left notation-cache-331 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-190-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-190-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Unds'in'Unds'keys'LParUndsRParUnds'MAP'Unds'Bool'Unds'KItem'Unds'Map ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-190-is-symbol symbol-is-pattern IMP-symbol-190-is-pattern application-context-app-right notation-cache-331 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
notation-cache-332 $p #Notation ( \kore-symbol-Lbl'Unds'modInt'Unds' ptn1 ptn2 ) ( \app ( \app \kore-symbol-Lbl'Unds'modInt'Unds'-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-191-is-symbol symbol-is-pattern IMP-symbol-191-is-pattern IMP-symbol-191-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-333 $p #Notation ( \kore-symbol-Lbl'Unds'modInt'Unds' ptn3 ptn4 ) ( \app ( \app \kore-symbol-Lbl'Unds'modInt'Unds'-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-191-is-symbol symbol-is-pattern IMP-symbol-191-is-pattern IMP-symbol-191-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-191-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-191-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-191-substitution $p #Substitution ( \kore-symbol-Lbl'Unds'modInt'Unds' ptn1 ptn2 ) ( \kore-symbol-Lbl'Unds'modInt'Unds' ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-191-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-191-is-pattern substitution-app substitution-disjoint notation-cache-332 notation-cache-333 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-334 $p #Notation ( \kore-symbol-Lbl'Unds'modInt'Unds' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'Unds'modInt'Unds'-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-191-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-191-is-pattern IMP-symbol-191-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-191-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-191-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Unds'modInt'Unds' ptn0 ptn1 ) $= ( IMP-symbol-191-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-191-is-pattern application-context-app-right application-context-app-left notation-cache-334 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-191-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-191-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Unds'modInt'Unds' ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-191-is-symbol symbol-is-pattern IMP-symbol-191-is-pattern application-context-app-right notation-cache-334 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
notation-cache-335 $p #Notation ( \kore-symbol-Lbl'Unds'orBool'Unds' ptn1 ptn2 ) ( \app ( \app \kore-symbol-Lbl'Unds'orBool'Unds'-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-192-is-symbol symbol-is-pattern IMP-symbol-192-is-pattern IMP-symbol-192-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-336 $p #Notation ( \kore-symbol-Lbl'Unds'orBool'Unds' ptn3 ptn4 ) ( \app ( \app \kore-symbol-Lbl'Unds'orBool'Unds'-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-192-is-symbol symbol-is-pattern IMP-symbol-192-is-pattern IMP-symbol-192-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-192-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-192-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-192-substitution $p #Substitution ( \kore-symbol-Lbl'Unds'orBool'Unds' ptn1 ptn2 ) ( \kore-symbol-Lbl'Unds'orBool'Unds' ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-192-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-192-is-pattern substitution-app substitution-disjoint notation-cache-335 notation-cache-336 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-337 $p #Notation ( \kore-symbol-Lbl'Unds'orBool'Unds' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'Unds'orBool'Unds'-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-192-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-192-is-pattern IMP-symbol-192-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-192-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-192-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Unds'orBool'Unds' ptn0 ptn1 ) $= ( IMP-symbol-192-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-192-is-pattern application-context-app-right application-context-app-left notation-cache-337 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-192-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-192-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Unds'orBool'Unds' ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-192-is-symbol symbol-is-pattern IMP-symbol-192-is-pattern application-context-app-right notation-cache-337 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
notation-cache-338 $p #Notation ( \kore-symbol-Lbl'Unds'orElseBool'Unds' ptn1 ptn2 ) ( \app ( \app \kore-symbol-Lbl'Unds'orElseBool'Unds'-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-193-is-symbol symbol-is-pattern IMP-symbol-193-is-pattern IMP-symbol-193-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-339 $p #Notation ( \kore-symbol-Lbl'Unds'orElseBool'Unds' ptn3 ptn4 ) ( \app ( \app \kore-symbol-Lbl'Unds'orElseBool'Unds'-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-193-is-symbol symbol-is-pattern IMP-symbol-193-is-pattern IMP-symbol-193-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-193-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-193-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-193-substitution $p #Substitution ( \kore-symbol-Lbl'Unds'orElseBool'Unds' ptn1 ptn2 ) ( \kore-symbol-Lbl'Unds'orElseBool'Unds' ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-193-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-193-is-pattern substitution-app substitution-disjoint notation-cache-338 notation-cache-339 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-340 $p #Notation ( \kore-symbol-Lbl'Unds'orElseBool'Unds' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'Unds'orElseBool'Unds'-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-193-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-193-is-pattern IMP-symbol-193-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-193-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-193-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Unds'orElseBool'Unds' ptn0 ptn1 ) $= ( IMP-symbol-193-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-193-is-pattern application-context-app-right application-context-app-left notation-cache-340 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-193-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-193-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Unds'orElseBool'Unds' ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-193-is-symbol symbol-is-pattern IMP-symbol-193-is-pattern application-context-app-right notation-cache-340 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
notation-cache-341 $p #Notation ( \kore-symbol-Lbl'Unds'xorBool'Unds' ptn1 ptn2 ) ( \app ( \app \kore-symbol-Lbl'Unds'xorBool'Unds'-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-194-is-symbol symbol-is-pattern IMP-symbol-194-is-pattern IMP-symbol-194-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-342 $p #Notation ( \kore-symbol-Lbl'Unds'xorBool'Unds' ptn3 ptn4 ) ( \app ( \app \kore-symbol-Lbl'Unds'xorBool'Unds'-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-194-is-symbol symbol-is-pattern IMP-symbol-194-is-pattern IMP-symbol-194-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-194-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-194-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-194-substitution $p #Substitution ( \kore-symbol-Lbl'Unds'xorBool'Unds' ptn1 ptn2 ) ( \kore-symbol-Lbl'Unds'xorBool'Unds' ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-194-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-194-is-pattern substitution-app substitution-disjoint notation-cache-341 notation-cache-342 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-343 $p #Notation ( \kore-symbol-Lbl'Unds'xorBool'Unds' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'Unds'xorBool'Unds'-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-194-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-194-is-pattern IMP-symbol-194-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-194-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-194-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Unds'xorBool'Unds' ptn0 ptn1 ) $= ( IMP-symbol-194-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-194-is-pattern application-context-app-right application-context-app-left notation-cache-343 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-194-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-194-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Unds'xorBool'Unds' ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-194-is-symbol symbol-is-pattern IMP-symbol-194-is-pattern application-context-app-right notation-cache-343 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
notation-cache-344 $p #Notation ( \kore-symbol-Lbl'Unds'xorInt'Unds' ptn1 ptn2 ) ( \app ( \app \kore-symbol-Lbl'Unds'xorInt'Unds'-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-195-is-symbol symbol-is-pattern IMP-symbol-195-is-pattern IMP-symbol-195-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-345 $p #Notation ( \kore-symbol-Lbl'Unds'xorInt'Unds' ptn3 ptn4 ) ( \app ( \app \kore-symbol-Lbl'Unds'xorInt'Unds'-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-195-is-symbol symbol-is-pattern IMP-symbol-195-is-pattern IMP-symbol-195-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-195-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-195-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-195-substitution $p #Substitution ( \kore-symbol-Lbl'Unds'xorInt'Unds' ptn1 ptn2 ) ( \kore-symbol-Lbl'Unds'xorInt'Unds' ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-195-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-195-is-pattern substitution-app substitution-disjoint notation-cache-344 notation-cache-345 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-346 $p #Notation ( \kore-symbol-Lbl'Unds'xorInt'Unds' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'Unds'xorInt'Unds'-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-195-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-195-is-pattern IMP-symbol-195-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-195-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-195-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Unds'xorInt'Unds' ptn0 ptn1 ) $= ( IMP-symbol-195-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-195-is-pattern application-context-app-right application-context-app-left notation-cache-346 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-195-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-195-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Unds'xorInt'Unds' ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-195-is-symbol symbol-is-pattern IMP-symbol-195-is-pattern application-context-app-right notation-cache-346 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
notation-cache-347 $p #Notation ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ptn1 ptn2 ) ( \app ( \app \kore-symbol-Lbl'UndsPipe'-'-GT-Unds'-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-196-is-symbol symbol-is-pattern IMP-symbol-196-is-pattern IMP-symbol-196-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-348 $p #Notation ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ptn3 ptn4 ) ( \app ( \app \kore-symbol-Lbl'UndsPipe'-'-GT-Unds'-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-196-is-symbol symbol-is-pattern IMP-symbol-196-is-pattern IMP-symbol-196-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-196-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-196-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-196-substitution $p #Substitution ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ptn1 ptn2 ) ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-196-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-196-is-pattern substitution-app substitution-disjoint notation-cache-347 notation-cache-348 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-349 $p #Notation ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'UndsPipe'-'-GT-Unds'-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-196-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-196-is-pattern IMP-symbol-196-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-196-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-196-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ptn0 ptn1 ) $= ( IMP-symbol-196-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-196-is-pattern application-context-app-right application-context-app-left notation-cache-349 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-196-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-196-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-196-is-symbol symbol-is-pattern IMP-symbol-196-is-pattern application-context-app-right notation-cache-349 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
notation-cache-350 $p #Notation ( \kore-symbol-Lbl'UndsPipe'Int'Unds' ptn1 ptn2 ) ( \app ( \app \kore-symbol-Lbl'UndsPipe'Int'Unds'-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-197-is-symbol symbol-is-pattern IMP-symbol-197-is-pattern IMP-symbol-197-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-351 $p #Notation ( \kore-symbol-Lbl'UndsPipe'Int'Unds' ptn3 ptn4 ) ( \app ( \app \kore-symbol-Lbl'UndsPipe'Int'Unds'-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-197-is-symbol symbol-is-pattern IMP-symbol-197-is-pattern IMP-symbol-197-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-197-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-197-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-197-substitution $p #Substitution ( \kore-symbol-Lbl'UndsPipe'Int'Unds' ptn1 ptn2 ) ( \kore-symbol-Lbl'UndsPipe'Int'Unds' ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-197-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-197-is-pattern substitution-app substitution-disjoint notation-cache-350 notation-cache-351 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-352 $p #Notation ( \kore-symbol-Lbl'UndsPipe'Int'Unds' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'UndsPipe'Int'Unds'-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-197-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-197-is-pattern IMP-symbol-197-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-197-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-197-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'UndsPipe'Int'Unds' ptn0 ptn1 ) $= ( IMP-symbol-197-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-197-is-pattern application-context-app-right application-context-app-left notation-cache-352 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-197-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-197-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'UndsPipe'Int'Unds' ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-197-is-symbol symbol-is-pattern IMP-symbol-197-is-pattern application-context-app-right notation-cache-352 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
notation-cache-353 $p #Notation ( \kore-symbol-Lbl'UndsPipe'Set'UndsUnds'SET'Unds'Set'Unds'Set'Unds'Set ptn1 ptn2 ) ( \app ( \app \kore-symbol-Lbl'UndsPipe'Set'UndsUnds'SET'Unds'Set'Unds'Set'Unds'Set-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-198-is-symbol symbol-is-pattern IMP-symbol-198-is-pattern IMP-symbol-198-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-354 $p #Notation ( \kore-symbol-Lbl'UndsPipe'Set'UndsUnds'SET'Unds'Set'Unds'Set'Unds'Set ptn3 ptn4 ) ( \app ( \app \kore-symbol-Lbl'UndsPipe'Set'UndsUnds'SET'Unds'Set'Unds'Set'Unds'Set-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-198-is-symbol symbol-is-pattern IMP-symbol-198-is-pattern IMP-symbol-198-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-198-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-198-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-198-substitution $p #Substitution ( \kore-symbol-Lbl'UndsPipe'Set'UndsUnds'SET'Unds'Set'Unds'Set'Unds'Set ptn1 ptn2 ) ( \kore-symbol-Lbl'UndsPipe'Set'UndsUnds'SET'Unds'Set'Unds'Set'Unds'Set ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-198-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-198-is-pattern substitution-app substitution-disjoint notation-cache-353 notation-cache-354 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-355 $p #Notation ( \kore-symbol-Lbl'UndsPipe'Set'UndsUnds'SET'Unds'Set'Unds'Set'Unds'Set ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'UndsPipe'Set'UndsUnds'SET'Unds'Set'Unds'Set'Unds'Set-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-198-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-198-is-pattern IMP-symbol-198-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-198-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-198-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'UndsPipe'Set'UndsUnds'SET'Unds'Set'Unds'Set'Unds'Set ptn0 ptn1 ) $= ( IMP-symbol-198-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-198-is-pattern application-context-app-right application-context-app-left notation-cache-355 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-198-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-198-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'UndsPipe'Set'UndsUnds'SET'Unds'Set'Unds'Set'Unds'Set ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-198-is-symbol symbol-is-pattern IMP-symbol-198-is-pattern application-context-app-right notation-cache-355 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
notation-cache-356 $p #Notation ( \kore-symbol-LblabsInt'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int ptn1 ) ( \app \kore-symbol-LblabsInt'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int-symbol ptn1 ) $= ( IMP-symbol-199-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-199-is-pattern IMP-symbol-199-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-357 $p #Notation ( \kore-symbol-LblabsInt'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int ptn2 ) ( \app \kore-symbol-LblabsInt'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int-symbol ptn2 ) $= ( IMP-symbol-199-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-199-is-pattern IMP-symbol-199-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-199-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-199-substitution $p #Substitution ( \kore-symbol-LblabsInt'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int ptn1 ) ( \kore-symbol-LblabsInt'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int ptn2 ) ptn0 xX0 $= ( IMP-symbol-199-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-199-is-pattern substitution-disjoint substitution-app notation-cache-356 notation-cache-357 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-358 $p #Notation ( \kore-symbol-LblabsInt'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int ptn0 ) ( \app \kore-symbol-LblabsInt'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int-symbol ptn0 ) $= ( IMP-symbol-199-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-199-is-pattern IMP-symbol-199-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-199-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-199-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-LblabsInt'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int ptn0 ) $= ( IMP-symbol-199-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-199-is-pattern application-context-app-right notation-cache-358 notation-application-context ) DEBFBGADEBACHBIJ $. $}
${ IMP-symbol-200-substitution.0 $e #Substitution ptn1 ptn4 ptn0 xX0 $.
   IMP-symbol-200-substitution.1 $e #Substitution ptn2 ptn5 ptn0 xX0 $.
   IMP-symbol-200-substitution.2 $e #Substitution ptn3 ptn6 ptn0 xX0 $.
   IMP-symbol-200-substitution $p #Substitution ( \kore-symbol-LblbitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int'Unds'Int ptn1 ptn2 ptn3 ) ( \kore-symbol-LblbitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int'Unds'Int ptn4 ptn5 ptn6 ) ptn0 xX0 $= ( app-is-pattern IMP-symbol-200-is-symbol symbol-is-pattern IMP-symbol-200-is-pattern substitution-app notation-reflexivity IMP-symbol-200-is-sugar notation-transitivity substitution-disjoint notation-substitution ) MNCLDLELMNFLGLHLBCDEOFGHOBABMNCLDLEMNFLGLHABMNCLDMNFLGABMNCMNFAMNBATIPJPKPCDEOMNCLDLELMNCLDLELCDERMNCLDLELQSFGHOMNFLGLHLMNFLGLHLFGHRMNFLGLHLQSBQUA $. $}
notation-cache-359 $p #Notation ( \kore-symbol-LblbitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int'Unds'Int ptn0 ptn1 ptn2 ) ( \app ( \app ( \app \kore-symbol-LblbitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int'Unds'Int-symbol ptn0 ) ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-200-is-symbol symbol-is-pattern notation-reflexivity notation-app IMP-symbol-200-is-pattern IMP-symbol-200-is-sugar notation-transitivity ) ABCIEFADBDCDEFADBDCDABCJEFADBDCEFADBDCEFADBEFADBEFAEFAEFGAGHBGHCGHK $.
${ $d xX0 ptn1 $.
   $d xX0 ptn2 $.
   IMP-symbol-200-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-200-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-LblbitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int'Unds'Int ptn0 ptn1 ptn2 ) $= ( app-is-pattern IMP-symbol-200-is-symbol symbol-is-pattern application-context-app-left IMP-symbol-200-is-pattern application-context-app-right notation-cache-359 notation-application-context ) GHBFCFDFBCDJAGHBFCFDAGHBFCAGHBAEKIIBCDLM $. $}
${ $d xX0 ptn0 $.
   $d xX0 ptn2 $.
   IMP-symbol-200-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-200-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-LblbitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int'Unds'Int ptn0 ptn1 ptn2 ) $= ( app-is-pattern IMP-symbol-200-is-symbol symbol-is-pattern IMP-symbol-200-is-pattern application-context-app-right application-context-app-left notation-cache-359 notation-application-context ) GHBFCFDFBCDIAGHBFCFDAGHBFCAEJKBCDLM $. $}
${ $d xX0 ptn0 $.
   $d xX0 ptn1 $.
   IMP-symbol-200-application-context-2.0 $e #ApplicationContext xX0 ptn2 $.
   IMP-symbol-200-application-context-2 $p #ApplicationContext xX0 ( \kore-symbol-LblbitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int'Unds'Int ptn0 ptn1 ptn2 ) $= ( app-is-pattern IMP-symbol-200-is-symbol symbol-is-pattern IMP-symbol-200-is-pattern application-context-app-right notation-cache-359 notation-application-context ) GHBFCFDFBCDIAGHBFCFDAEJBCDKL $. $}
notation-cache-360 $p #Notation ( \kore-symbol-LblcategoryChar'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'String ptn1 ) ( \app \kore-symbol-LblcategoryChar'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'String-symbol ptn1 ) $= ( IMP-symbol-201-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-201-is-pattern IMP-symbol-201-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-361 $p #Notation ( \kore-symbol-LblcategoryChar'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'String ptn2 ) ( \app \kore-symbol-LblcategoryChar'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'String-symbol ptn2 ) $= ( IMP-symbol-201-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-201-is-pattern IMP-symbol-201-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-201-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-201-substitution $p #Substitution ( \kore-symbol-LblcategoryChar'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'String ptn1 ) ( \kore-symbol-LblcategoryChar'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'String ptn2 ) ptn0 xX0 $= ( IMP-symbol-201-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-201-is-pattern substitution-disjoint substitution-app notation-cache-360 notation-cache-361 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-362 $p #Notation ( \kore-symbol-LblcategoryChar'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'String ptn0 ) ( \app \kore-symbol-LblcategoryChar'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'String-symbol ptn0 ) $= ( IMP-symbol-201-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-201-is-pattern IMP-symbol-201-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-201-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-201-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-LblcategoryChar'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'String ptn0 ) $= ( IMP-symbol-201-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-201-is-pattern application-context-app-right notation-cache-362 notation-application-context ) DEBFBGADEBACHBIJ $. $}
notation-cache-363 $p #Notation ( \kore-symbol-Lblchoice'LParUndsRParUnds'MAP'Unds'KItem'Unds'Map ptn1 ) ( \app \kore-symbol-Lblchoice'LParUndsRParUnds'MAP'Unds'KItem'Unds'Map-symbol ptn1 ) $= ( IMP-symbol-202-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-202-is-pattern IMP-symbol-202-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-364 $p #Notation ( \kore-symbol-Lblchoice'LParUndsRParUnds'MAP'Unds'KItem'Unds'Map ptn2 ) ( \app \kore-symbol-Lblchoice'LParUndsRParUnds'MAP'Unds'KItem'Unds'Map-symbol ptn2 ) $= ( IMP-symbol-202-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-202-is-pattern IMP-symbol-202-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-202-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-202-substitution $p #Substitution ( \kore-symbol-Lblchoice'LParUndsRParUnds'MAP'Unds'KItem'Unds'Map ptn1 ) ( \kore-symbol-Lblchoice'LParUndsRParUnds'MAP'Unds'KItem'Unds'Map ptn2 ) ptn0 xX0 $= ( IMP-symbol-202-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-202-is-pattern substitution-disjoint substitution-app notation-cache-363 notation-cache-364 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-365 $p #Notation ( \kore-symbol-Lblchoice'LParUndsRParUnds'MAP'Unds'KItem'Unds'Map ptn0 ) ( \app \kore-symbol-Lblchoice'LParUndsRParUnds'MAP'Unds'KItem'Unds'Map-symbol ptn0 ) $= ( IMP-symbol-202-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-202-is-pattern IMP-symbol-202-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-202-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-202-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lblchoice'LParUndsRParUnds'MAP'Unds'KItem'Unds'Map ptn0 ) $= ( IMP-symbol-202-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-202-is-pattern application-context-app-right notation-cache-365 notation-application-context ) DEBFBGADEBACHBIJ $. $}
notation-cache-366 $p #Notation ( \kore-symbol-Lblchoice'LParUndsRParUnds'SET'Unds'KItem'Unds'Set ptn1 ) ( \app \kore-symbol-Lblchoice'LParUndsRParUnds'SET'Unds'KItem'Unds'Set-symbol ptn1 ) $= ( IMP-symbol-203-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-203-is-pattern IMP-symbol-203-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-367 $p #Notation ( \kore-symbol-Lblchoice'LParUndsRParUnds'SET'Unds'KItem'Unds'Set ptn2 ) ( \app \kore-symbol-Lblchoice'LParUndsRParUnds'SET'Unds'KItem'Unds'Set-symbol ptn2 ) $= ( IMP-symbol-203-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-203-is-pattern IMP-symbol-203-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-203-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-203-substitution $p #Substitution ( \kore-symbol-Lblchoice'LParUndsRParUnds'SET'Unds'KItem'Unds'Set ptn1 ) ( \kore-symbol-Lblchoice'LParUndsRParUnds'SET'Unds'KItem'Unds'Set ptn2 ) ptn0 xX0 $= ( IMP-symbol-203-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-203-is-pattern substitution-disjoint substitution-app notation-cache-366 notation-cache-367 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-368 $p #Notation ( \kore-symbol-Lblchoice'LParUndsRParUnds'SET'Unds'KItem'Unds'Set ptn0 ) ( \app \kore-symbol-Lblchoice'LParUndsRParUnds'SET'Unds'KItem'Unds'Set-symbol ptn0 ) $= ( IMP-symbol-203-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-203-is-pattern IMP-symbol-203-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-203-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-203-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lblchoice'LParUndsRParUnds'SET'Unds'KItem'Unds'Set ptn0 ) $= ( IMP-symbol-203-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-203-is-pattern application-context-app-right notation-cache-368 notation-application-context ) DEBFBGADEBACHBIJ $. $}
notation-cache-369 $p #Notation ( \kore-symbol-LblchrChar'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Int ptn1 ) ( \app \kore-symbol-LblchrChar'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Int-symbol ptn1 ) $= ( IMP-symbol-204-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-204-is-pattern IMP-symbol-204-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-370 $p #Notation ( \kore-symbol-LblchrChar'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Int ptn2 ) ( \app \kore-symbol-LblchrChar'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Int-symbol ptn2 ) $= ( IMP-symbol-204-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-204-is-pattern IMP-symbol-204-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-204-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-204-substitution $p #Substitution ( \kore-symbol-LblchrChar'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Int ptn1 ) ( \kore-symbol-LblchrChar'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Int ptn2 ) ptn0 xX0 $= ( IMP-symbol-204-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-204-is-pattern substitution-disjoint substitution-app notation-cache-369 notation-cache-370 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-371 $p #Notation ( \kore-symbol-LblchrChar'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Int ptn0 ) ( \app \kore-symbol-LblchrChar'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Int-symbol ptn0 ) $= ( IMP-symbol-204-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-204-is-pattern IMP-symbol-204-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-204-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-204-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-LblchrChar'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Int ptn0 ) $= ( IMP-symbol-204-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-204-is-pattern application-context-app-right notation-cache-371 notation-application-context ) DEBFBGADEBACHBIJ $. $}
notation-cache-372 $p #Notation ( \kore-symbol-LblcountAllOccurrences'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String ptn1 ptn2 ) ( \app ( \app \kore-symbol-LblcountAllOccurrences'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-205-is-symbol symbol-is-pattern IMP-symbol-205-is-pattern IMP-symbol-205-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-373 $p #Notation ( \kore-symbol-LblcountAllOccurrences'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String ptn3 ptn4 ) ( \app ( \app \kore-symbol-LblcountAllOccurrences'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-205-is-symbol symbol-is-pattern IMP-symbol-205-is-pattern IMP-symbol-205-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-205-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-205-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-205-substitution $p #Substitution ( \kore-symbol-LblcountAllOccurrences'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String ptn1 ptn2 ) ( \kore-symbol-LblcountAllOccurrences'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-205-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-205-is-pattern substitution-app substitution-disjoint notation-cache-372 notation-cache-373 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-374 $p #Notation ( \kore-symbol-LblcountAllOccurrences'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String ptn0 ptn1 ) ( \app ( \app \kore-symbol-LblcountAllOccurrences'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-205-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-205-is-pattern IMP-symbol-205-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-205-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-205-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-LblcountAllOccurrences'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String ptn0 ptn1 ) $= ( IMP-symbol-205-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-205-is-pattern application-context-app-right application-context-app-left notation-cache-374 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-205-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-205-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-LblcountAllOccurrences'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-205-is-symbol symbol-is-pattern IMP-symbol-205-is-pattern application-context-app-right notation-cache-374 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
notation-cache-375 $p #Notation ( \kore-symbol-LbldirectionalityChar'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'String ptn1 ) ( \app \kore-symbol-LbldirectionalityChar'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'String-symbol ptn1 ) $= ( IMP-symbol-206-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-206-is-pattern IMP-symbol-206-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-376 $p #Notation ( \kore-symbol-LbldirectionalityChar'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'String ptn2 ) ( \app \kore-symbol-LbldirectionalityChar'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'String-symbol ptn2 ) $= ( IMP-symbol-206-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-206-is-pattern IMP-symbol-206-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-206-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-206-substitution $p #Substitution ( \kore-symbol-LbldirectionalityChar'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'String ptn1 ) ( \kore-symbol-LbldirectionalityChar'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'String ptn2 ) ptn0 xX0 $= ( IMP-symbol-206-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-206-is-pattern substitution-disjoint substitution-app notation-cache-375 notation-cache-376 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-377 $p #Notation ( \kore-symbol-LbldirectionalityChar'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'String ptn0 ) ( \app \kore-symbol-LbldirectionalityChar'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'String-symbol ptn0 ) $= ( IMP-symbol-206-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-206-is-pattern IMP-symbol-206-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-206-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-206-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-LbldirectionalityChar'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'String ptn0 ) $= ( IMP-symbol-206-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-206-is-pattern application-context-app-right notation-cache-377 notation-application-context ) DEBFBGADEBACHBIJ $. $}
notation-cache-378 $p #Notation ( \kore-symbol-Lblexp'LParUndsCommUndsRParUnds'VERIFICAITON'Unds'Int'Unds'Int'Unds'Int ptn1 ptn2 ) ( \app ( \app \kore-symbol-Lblexp'LParUndsCommUndsRParUnds'VERIFICAITON'Unds'Int'Unds'Int'Unds'Int-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-207-is-symbol symbol-is-pattern IMP-symbol-207-is-pattern IMP-symbol-207-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-379 $p #Notation ( \kore-symbol-Lblexp'LParUndsCommUndsRParUnds'VERIFICAITON'Unds'Int'Unds'Int'Unds'Int ptn3 ptn4 ) ( \app ( \app \kore-symbol-Lblexp'LParUndsCommUndsRParUnds'VERIFICAITON'Unds'Int'Unds'Int'Unds'Int-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-207-is-symbol symbol-is-pattern IMP-symbol-207-is-pattern IMP-symbol-207-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-207-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-207-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-207-substitution $p #Substitution ( \kore-symbol-Lblexp'LParUndsCommUndsRParUnds'VERIFICAITON'Unds'Int'Unds'Int'Unds'Int ptn1 ptn2 ) ( \kore-symbol-Lblexp'LParUndsCommUndsRParUnds'VERIFICAITON'Unds'Int'Unds'Int'Unds'Int ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-207-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-207-is-pattern substitution-app substitution-disjoint notation-cache-378 notation-cache-379 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-380 $p #Notation ( \kore-symbol-Lblexp'LParUndsCommUndsRParUnds'VERIFICAITON'Unds'Int'Unds'Int'Unds'Int ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lblexp'LParUndsCommUndsRParUnds'VERIFICAITON'Unds'Int'Unds'Int'Unds'Int-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-207-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-207-is-pattern IMP-symbol-207-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-207-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-207-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lblexp'LParUndsCommUndsRParUnds'VERIFICAITON'Unds'Int'Unds'Int'Unds'Int ptn0 ptn1 ) $= ( IMP-symbol-207-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-207-is-pattern application-context-app-right application-context-app-left notation-cache-380 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-207-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-207-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-Lblexp'LParUndsCommUndsRParUnds'VERIFICAITON'Unds'Int'Unds'Int'Unds'Int ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-207-is-symbol symbol-is-pattern IMP-symbol-207-is-pattern application-context-app-right notation-cache-380 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
${ IMP-symbol-208-substitution.0 $e #Substitution ptn1 ptn5 ptn0 xX0 $.
   IMP-symbol-208-substitution.1 $e #Substitution ptn2 ptn6 ptn0 xX0 $.
   IMP-symbol-208-substitution.2 $e #Substitution ptn3 ptn7 ptn0 xX0 $.
   IMP-symbol-208-substitution.3 $e #Substitution ptn4 ptn8 ptn0 xX0 $.
   IMP-symbol-208-substitution $p #Substitution ( \kore-symbol-LblfillList'LParUndsCommUndsCommUndsCommUndsRParUnds'LIST'Unds'List'Unds'List'Unds'Int'Unds'Int'Unds'KItem ptn1 ptn2 ptn3 ptn4 ) ( \kore-symbol-LblfillList'LParUndsCommUndsCommUndsCommUndsRParUnds'LIST'Unds'List'Unds'List'Unds'Int'Unds'Int'Unds'KItem ptn5 ptn6 ptn7 ptn8 ) ptn0 xX0 $= ( app-is-pattern IMP-symbol-208-is-symbol symbol-is-pattern IMP-symbol-208-is-pattern substitution-app notation-reflexivity IMP-symbol-208-is-sugar notation-transitivity substitution-disjoint notation-substitution ) PQCODOEOFOPQGOHOIOJOBCDEFRGHIJRBABPQCODOEOFPQGOHOIOJABPQCODOEPQGOHOIABPQCODPQGOHABPQCPQGAPQBAUCKSLSMSNSCDEFRPQCODOEOFOPQCODOEOFOCDEFUAPQCODOEOFOTUBGHIJRPQGOHOIOJOPQGOHOIOJOGHIJUAPQGOHOIOJOTUBBTUD $. $}
notation-cache-381 $p #Notation ( \kore-symbol-LblfillList'LParUndsCommUndsCommUndsCommUndsRParUnds'LIST'Unds'List'Unds'List'Unds'Int'Unds'Int'Unds'KItem ptn0 ptn1 ptn2 ptn3 ) ( \app ( \app ( \app ( \app \kore-symbol-LblfillList'LParUndsCommUndsCommUndsCommUndsRParUnds'LIST'Unds'List'Unds'List'Unds'Int'Unds'Int'Unds'KItem-symbol ptn0 ) ptn1 ) ptn2 ) ptn3 ) $= ( app-is-pattern IMP-symbol-208-is-symbol symbol-is-pattern notation-reflexivity notation-app IMP-symbol-208-is-pattern IMP-symbol-208-is-sugar notation-transitivity ) ABCDJFGAEBECEDEFGAEBECEDEABCDKFGAEBECEDFGAEBECEDFGAEBECFGAEBECFGAEBFGAEBFGAFGAFGHAHIBHICHIDHIL $.
${ $d xX0 ptn1 $.
   $d xX0 ptn2 $.
   $d xX0 ptn3 $.
   IMP-symbol-208-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-208-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-LblfillList'LParUndsCommUndsCommUndsCommUndsRParUnds'LIST'Unds'List'Unds'List'Unds'Int'Unds'Int'Unds'KItem ptn0 ptn1 ptn2 ptn3 ) $= ( app-is-pattern IMP-symbol-208-is-symbol symbol-is-pattern application-context-app-left IMP-symbol-208-is-pattern application-context-app-right notation-cache-381 notation-application-context ) HIBGCGDGEGBCDEKAHIBGCGDGEAHIBGCGDAHIBGCAHIBAFLJJJBCDEMN $. $}
${ $d xX0 ptn0 $.
   $d xX0 ptn2 $.
   $d xX0 ptn3 $.
   IMP-symbol-208-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-208-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-LblfillList'LParUndsCommUndsCommUndsCommUndsRParUnds'LIST'Unds'List'Unds'List'Unds'Int'Unds'Int'Unds'KItem ptn0 ptn1 ptn2 ptn3 ) $= ( app-is-pattern IMP-symbol-208-is-symbol symbol-is-pattern application-context-app-left IMP-symbol-208-is-pattern application-context-app-right notation-cache-381 notation-application-context ) HIBGCGDGEGBCDEKAHIBGCGDGEAHIBGCGDAHIBGCAFLJJBCDEMN $. $}
${ $d xX0 ptn0 $.
   $d xX0 ptn1 $.
   $d xX0 ptn3 $.
   IMP-symbol-208-application-context-2.0 $e #ApplicationContext xX0 ptn2 $.
   IMP-symbol-208-application-context-2 $p #ApplicationContext xX0 ( \kore-symbol-LblfillList'LParUndsCommUndsCommUndsCommUndsRParUnds'LIST'Unds'List'Unds'List'Unds'Int'Unds'Int'Unds'KItem ptn0 ptn1 ptn2 ptn3 ) $= ( app-is-pattern IMP-symbol-208-is-symbol symbol-is-pattern IMP-symbol-208-is-pattern application-context-app-right application-context-app-left notation-cache-381 notation-application-context ) HIBGCGDGEGBCDEJAHIBGCGDGEAHIBGCGDAFKLBCDEMN $. $}
${ $d xX0 ptn0 $.
   $d xX0 ptn1 $.
   $d xX0 ptn2 $.
   IMP-symbol-208-application-context-3.0 $e #ApplicationContext xX0 ptn3 $.
   IMP-symbol-208-application-context-3 $p #ApplicationContext xX0 ( \kore-symbol-LblfillList'LParUndsCommUndsCommUndsCommUndsRParUnds'LIST'Unds'List'Unds'List'Unds'Int'Unds'Int'Unds'KItem ptn0 ptn1 ptn2 ptn3 ) $= ( app-is-pattern IMP-symbol-208-is-symbol symbol-is-pattern IMP-symbol-208-is-pattern application-context-app-right notation-cache-381 notation-application-context ) HIBGCGDGEGBCDEJAHIBGCGDGEAFKBCDELM $. $}
${ IMP-symbol-209-substitution.0 $e #Substitution ptn1 ptn4 ptn0 xX0 $.
   IMP-symbol-209-substitution.1 $e #Substitution ptn2 ptn5 ptn0 xX0 $.
   IMP-symbol-209-substitution.2 $e #Substitution ptn3 ptn6 ptn0 xX0 $.
   IMP-symbol-209-substitution $p #Substitution ( \kore-symbol-LblfindChar'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int ptn1 ptn2 ptn3 ) ( \kore-symbol-LblfindChar'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int ptn4 ptn5 ptn6 ) ptn0 xX0 $= ( app-is-pattern IMP-symbol-209-is-symbol symbol-is-pattern IMP-symbol-209-is-pattern substitution-app notation-reflexivity IMP-symbol-209-is-sugar notation-transitivity substitution-disjoint notation-substitution ) MNCLDLELMNFLGLHLBCDEOFGHOBABMNCLDLEMNFLGLHABMNCLDMNFLGABMNCMNFAMNBATIPJPKPCDEOMNCLDLELMNCLDLELCDERMNCLDLELQSFGHOMNFLGLHLMNFLGLHLFGHRMNFLGLHLQSBQUA $. $}
notation-cache-382 $p #Notation ( \kore-symbol-LblfindChar'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int ptn0 ptn1 ptn2 ) ( \app ( \app ( \app \kore-symbol-LblfindChar'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int-symbol ptn0 ) ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-209-is-symbol symbol-is-pattern notation-reflexivity notation-app IMP-symbol-209-is-pattern IMP-symbol-209-is-sugar notation-transitivity ) ABCIEFADBDCDEFADBDCDABCJEFADBDCEFADBDCEFADBEFADBEFAEFAEFGAGHBGHCGHK $.
${ $d xX0 ptn1 $.
   $d xX0 ptn2 $.
   IMP-symbol-209-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-209-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-LblfindChar'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int ptn0 ptn1 ptn2 ) $= ( app-is-pattern IMP-symbol-209-is-symbol symbol-is-pattern application-context-app-left IMP-symbol-209-is-pattern application-context-app-right notation-cache-382 notation-application-context ) GHBFCFDFBCDJAGHBFCFDAGHBFCAGHBAEKIIBCDLM $. $}
${ $d xX0 ptn0 $.
   $d xX0 ptn2 $.
   IMP-symbol-209-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-209-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-LblfindChar'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int ptn0 ptn1 ptn2 ) $= ( app-is-pattern IMP-symbol-209-is-symbol symbol-is-pattern IMP-symbol-209-is-pattern application-context-app-right application-context-app-left notation-cache-382 notation-application-context ) GHBFCFDFBCDIAGHBFCFDAGHBFCAEJKBCDLM $. $}
${ $d xX0 ptn0 $.
   $d xX0 ptn1 $.
   IMP-symbol-209-application-context-2.0 $e #ApplicationContext xX0 ptn2 $.
   IMP-symbol-209-application-context-2 $p #ApplicationContext xX0 ( \kore-symbol-LblfindChar'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int ptn0 ptn1 ptn2 ) $= ( app-is-pattern IMP-symbol-209-is-symbol symbol-is-pattern IMP-symbol-209-is-pattern application-context-app-right notation-cache-382 notation-application-context ) GHBFCFDFBCDIAGHBFCFDAEJBCDKL $. $}
${ IMP-symbol-210-substitution.0 $e #Substitution ptn1 ptn4 ptn0 xX0 $.
   IMP-symbol-210-substitution.1 $e #Substitution ptn2 ptn5 ptn0 xX0 $.
   IMP-symbol-210-substitution.2 $e #Substitution ptn3 ptn6 ptn0 xX0 $.
   IMP-symbol-210-substitution $p #Substitution ( \kore-symbol-LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int ptn1 ptn2 ptn3 ) ( \kore-symbol-LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int ptn4 ptn5 ptn6 ) ptn0 xX0 $= ( app-is-pattern IMP-symbol-210-is-symbol symbol-is-pattern IMP-symbol-210-is-pattern substitution-app notation-reflexivity IMP-symbol-210-is-sugar notation-transitivity substitution-disjoint notation-substitution ) MNCLDLELMNFLGLHLBCDEOFGHOBABMNCLDLEMNFLGLHABMNCLDMNFLGABMNCMNFAMNBATIPJPKPCDEOMNCLDLELMNCLDLELCDERMNCLDLELQSFGHOMNFLGLHLMNFLGLHLFGHRMNFLGLHLQSBQUA $. $}
notation-cache-383 $p #Notation ( \kore-symbol-LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int ptn0 ptn1 ptn2 ) ( \app ( \app ( \app \kore-symbol-LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int-symbol ptn0 ) ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-210-is-symbol symbol-is-pattern notation-reflexivity notation-app IMP-symbol-210-is-pattern IMP-symbol-210-is-sugar notation-transitivity ) ABCIEFADBDCDEFADBDCDABCJEFADBDCEFADBDCEFADBEFADBEFAEFAEFGAGHBGHCGHK $.
${ $d xX0 ptn1 $.
   $d xX0 ptn2 $.
   IMP-symbol-210-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-210-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int ptn0 ptn1 ptn2 ) $= ( app-is-pattern IMP-symbol-210-is-symbol symbol-is-pattern application-context-app-left IMP-symbol-210-is-pattern application-context-app-right notation-cache-383 notation-application-context ) GHBFCFDFBCDJAGHBFCFDAGHBFCAGHBAEKIIBCDLM $. $}
${ $d xX0 ptn0 $.
   $d xX0 ptn2 $.
   IMP-symbol-210-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-210-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int ptn0 ptn1 ptn2 ) $= ( app-is-pattern IMP-symbol-210-is-symbol symbol-is-pattern IMP-symbol-210-is-pattern application-context-app-right application-context-app-left notation-cache-383 notation-application-context ) GHBFCFDFBCDIAGHBFCFDAGHBFCAEJKBCDLM $. $}
${ $d xX0 ptn0 $.
   $d xX0 ptn1 $.
   IMP-symbol-210-application-context-2.0 $e #ApplicationContext xX0 ptn2 $.
   IMP-symbol-210-application-context-2 $p #ApplicationContext xX0 ( \kore-symbol-LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int ptn0 ptn1 ptn2 ) $= ( app-is-pattern IMP-symbol-210-is-symbol symbol-is-pattern IMP-symbol-210-is-pattern application-context-app-right notation-cache-383 notation-application-context ) GHBFCFDFBCDIAGHBFCFDAEJBCDKL $. $}
notation-cache-384 $p #Notation ( \kore-symbol-LblfreshId'LParUndsRParUnds'ID-COMMON'Unds'Id'Unds'Int ptn1 ) ( \app \kore-symbol-LblfreshId'LParUndsRParUnds'ID-COMMON'Unds'Id'Unds'Int-symbol ptn1 ) $= ( IMP-symbol-211-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-211-is-pattern IMP-symbol-211-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-385 $p #Notation ( \kore-symbol-LblfreshId'LParUndsRParUnds'ID-COMMON'Unds'Id'Unds'Int ptn2 ) ( \app \kore-symbol-LblfreshId'LParUndsRParUnds'ID-COMMON'Unds'Id'Unds'Int-symbol ptn2 ) $= ( IMP-symbol-211-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-211-is-pattern IMP-symbol-211-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-211-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-211-substitution $p #Substitution ( \kore-symbol-LblfreshId'LParUndsRParUnds'ID-COMMON'Unds'Id'Unds'Int ptn1 ) ( \kore-symbol-LblfreshId'LParUndsRParUnds'ID-COMMON'Unds'Id'Unds'Int ptn2 ) ptn0 xX0 $= ( IMP-symbol-211-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-211-is-pattern substitution-disjoint substitution-app notation-cache-384 notation-cache-385 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-386 $p #Notation ( \kore-symbol-LblfreshId'LParUndsRParUnds'ID-COMMON'Unds'Id'Unds'Int ptn0 ) ( \app \kore-symbol-LblfreshId'LParUndsRParUnds'ID-COMMON'Unds'Id'Unds'Int-symbol ptn0 ) $= ( IMP-symbol-211-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-211-is-pattern IMP-symbol-211-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-211-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-211-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-LblfreshId'LParUndsRParUnds'ID-COMMON'Unds'Id'Unds'Int ptn0 ) $= ( IMP-symbol-211-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-211-is-pattern application-context-app-right notation-cache-386 notation-application-context ) DEBFBGADEBACHBIJ $. $}
notation-cache-387 $p #Notation ( \kore-symbol-LblfreshInt'LParUndsRParUnds'INT'Unds'Int'Unds'Int ptn1 ) ( \app \kore-symbol-LblfreshInt'LParUndsRParUnds'INT'Unds'Int'Unds'Int-symbol ptn1 ) $= ( IMP-symbol-212-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-212-is-pattern IMP-symbol-212-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-388 $p #Notation ( \kore-symbol-LblfreshInt'LParUndsRParUnds'INT'Unds'Int'Unds'Int ptn2 ) ( \app \kore-symbol-LblfreshInt'LParUndsRParUnds'INT'Unds'Int'Unds'Int-symbol ptn2 ) $= ( IMP-symbol-212-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-212-is-pattern IMP-symbol-212-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-212-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-212-substitution $p #Substitution ( \kore-symbol-LblfreshInt'LParUndsRParUnds'INT'Unds'Int'Unds'Int ptn1 ) ( \kore-symbol-LblfreshInt'LParUndsRParUnds'INT'Unds'Int'Unds'Int ptn2 ) ptn0 xX0 $= ( IMP-symbol-212-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-212-is-pattern substitution-disjoint substitution-app notation-cache-387 notation-cache-388 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-389 $p #Notation ( \kore-symbol-LblfreshInt'LParUndsRParUnds'INT'Unds'Int'Unds'Int ptn0 ) ( \app \kore-symbol-LblfreshInt'LParUndsRParUnds'INT'Unds'Int'Unds'Int-symbol ptn0 ) $= ( IMP-symbol-212-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-212-is-pattern IMP-symbol-212-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-212-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-212-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-LblfreshInt'LParUndsRParUnds'INT'Unds'Int'Unds'Int ptn0 ) $= ( IMP-symbol-212-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-212-is-pattern application-context-app-right notation-cache-389 notation-application-context ) DEBFBGADEBACHBIJ $. $}
notation-cache-390 $p #Notation ( \kore-symbol-LblgetGeneratedCounterCell ptn1 ) ( \app \kore-symbol-LblgetGeneratedCounterCell-symbol ptn1 ) $= ( IMP-symbol-213-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-213-is-pattern IMP-symbol-213-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-391 $p #Notation ( \kore-symbol-LblgetGeneratedCounterCell ptn2 ) ( \app \kore-symbol-LblgetGeneratedCounterCell-symbol ptn2 ) $= ( IMP-symbol-213-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-213-is-pattern IMP-symbol-213-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-213-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-213-substitution $p #Substitution ( \kore-symbol-LblgetGeneratedCounterCell ptn1 ) ( \kore-symbol-LblgetGeneratedCounterCell ptn2 ) ptn0 xX0 $= ( IMP-symbol-213-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-213-is-pattern substitution-disjoint substitution-app notation-cache-390 notation-cache-391 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-392 $p #Notation ( \kore-symbol-LblgetGeneratedCounterCell ptn0 ) ( \app \kore-symbol-LblgetGeneratedCounterCell-symbol ptn0 ) $= ( IMP-symbol-213-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-213-is-pattern IMP-symbol-213-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-213-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-213-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-LblgetGeneratedCounterCell ptn0 ) $= ( IMP-symbol-213-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-213-is-pattern application-context-app-right notation-cache-392 notation-application-context ) DEBFBGADEBACHBIJ $. $}
${ IMP-symbol-214-substitution.0 $e #Substitution ptn1 ptn4 ptn0 xX0 $.
   IMP-symbol-214-substitution.1 $e #Substitution ptn2 ptn5 ptn0 xX0 $.
   IMP-symbol-214-substitution.2 $e #Substitution ptn3 ptn6 ptn0 xX0 $.
   IMP-symbol-214-substitution $p #Substitution ( \kore-symbol-Lblif'LParUndsRParUnds'else'UndsUnds'IMP-SYNTAX'Unds'Stmt'Unds'BExp'Unds'Block'Unds'Block ptn1 ptn2 ptn3 ) ( \kore-symbol-Lblif'LParUndsRParUnds'else'UndsUnds'IMP-SYNTAX'Unds'Stmt'Unds'BExp'Unds'Block'Unds'Block ptn4 ptn5 ptn6 ) ptn0 xX0 $= ( app-is-pattern IMP-symbol-214-is-symbol symbol-is-pattern IMP-symbol-214-is-pattern substitution-app notation-reflexivity IMP-symbol-214-is-sugar notation-transitivity substitution-disjoint notation-substitution ) MNCLDLELMNFLGLHLBCDEOFGHOBABMNCLDLEMNFLGLHABMNCLDMNFLGABMNCMNFAMNBATIPJPKPCDEOMNCLDLELMNCLDLELCDERMNCLDLELQSFGHOMNFLGLHLMNFLGLHLFGHRMNFLGLHLQSBQUA $. $}
notation-cache-393 $p #Notation ( \kore-symbol-Lblif'LParUndsRParUnds'else'UndsUnds'IMP-SYNTAX'Unds'Stmt'Unds'BExp'Unds'Block'Unds'Block ptn0 ptn1 ptn2 ) ( \app ( \app ( \app \kore-symbol-Lblif'LParUndsRParUnds'else'UndsUnds'IMP-SYNTAX'Unds'Stmt'Unds'BExp'Unds'Block'Unds'Block-symbol ptn0 ) ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-214-is-symbol symbol-is-pattern notation-reflexivity notation-app IMP-symbol-214-is-pattern IMP-symbol-214-is-sugar notation-transitivity ) ABCIEFADBDCDEFADBDCDABCJEFADBDCEFADBDCEFADBEFADBEFAEFAEFGAGHBGHCGHK $.
${ $d xX0 ptn1 $.
   $d xX0 ptn2 $.
   IMP-symbol-214-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-214-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lblif'LParUndsRParUnds'else'UndsUnds'IMP-SYNTAX'Unds'Stmt'Unds'BExp'Unds'Block'Unds'Block ptn0 ptn1 ptn2 ) $= ( app-is-pattern IMP-symbol-214-is-symbol symbol-is-pattern application-context-app-left IMP-symbol-214-is-pattern application-context-app-right notation-cache-393 notation-application-context ) GHBFCFDFBCDJAGHBFCFDAGHBFCAGHBAEKIIBCDLM $. $}
${ $d xX0 ptn0 $.
   $d xX0 ptn2 $.
   IMP-symbol-214-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-214-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-Lblif'LParUndsRParUnds'else'UndsUnds'IMP-SYNTAX'Unds'Stmt'Unds'BExp'Unds'Block'Unds'Block ptn0 ptn1 ptn2 ) $= ( app-is-pattern IMP-symbol-214-is-symbol symbol-is-pattern IMP-symbol-214-is-pattern application-context-app-right application-context-app-left notation-cache-393 notation-application-context ) GHBFCFDFBCDIAGHBFCFDAGHBFCAEJKBCDLM $. $}
${ $d xX0 ptn0 $.
   $d xX0 ptn1 $.
   IMP-symbol-214-application-context-2.0 $e #ApplicationContext xX0 ptn2 $.
   IMP-symbol-214-application-context-2 $p #ApplicationContext xX0 ( \kore-symbol-Lblif'LParUndsRParUnds'else'UndsUnds'IMP-SYNTAX'Unds'Stmt'Unds'BExp'Unds'Block'Unds'Block ptn0 ptn1 ptn2 ) $= ( app-is-pattern IMP-symbol-214-is-symbol symbol-is-pattern IMP-symbol-214-is-pattern application-context-app-right notation-cache-393 notation-application-context ) GHBFCFDFBCDIAGHBFCFDAEJBCDKL $. $}
${ IMP-symbol-215-substitution $p #Substitution \kore-symbol-LblinitGeneratedCounterCell \kore-symbol-LblinitGeneratedCounterCell ptn0 xX0 $= ( IMP-symbol-215-is-pattern substitution-disjoint ) CBAD $. $}
notation-cache-394 $p #Notation ( \kore-symbol-LblinitGeneratedTopCell ptn1 ) ( \app \kore-symbol-LblinitGeneratedTopCell-symbol ptn1 ) $= ( IMP-symbol-216-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-216-is-pattern IMP-symbol-216-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-395 $p #Notation ( \kore-symbol-LblinitGeneratedTopCell ptn2 ) ( \app \kore-symbol-LblinitGeneratedTopCell-symbol ptn2 ) $= ( IMP-symbol-216-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-216-is-pattern IMP-symbol-216-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-216-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-216-substitution $p #Substitution ( \kore-symbol-LblinitGeneratedTopCell ptn1 ) ( \kore-symbol-LblinitGeneratedTopCell ptn2 ) ptn0 xX0 $= ( IMP-symbol-216-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-216-is-pattern substitution-disjoint substitution-app notation-cache-394 notation-cache-395 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-396 $p #Notation ( \kore-symbol-LblinitGeneratedTopCell ptn0 ) ( \app \kore-symbol-LblinitGeneratedTopCell-symbol ptn0 ) $= ( IMP-symbol-216-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-216-is-pattern IMP-symbol-216-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-216-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-216-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-LblinitGeneratedTopCell ptn0 ) $= ( IMP-symbol-216-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-216-is-pattern application-context-app-right notation-cache-396 notation-application-context ) DEBFBGADEBACHBIJ $. $}
notation-cache-397 $p #Notation ( \kore-symbol-LblinitKCell ptn1 ) ( \app \kore-symbol-LblinitKCell-symbol ptn1 ) $= ( IMP-symbol-217-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-217-is-pattern IMP-symbol-217-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-398 $p #Notation ( \kore-symbol-LblinitKCell ptn2 ) ( \app \kore-symbol-LblinitKCell-symbol ptn2 ) $= ( IMP-symbol-217-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-217-is-pattern IMP-symbol-217-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-217-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-217-substitution $p #Substitution ( \kore-symbol-LblinitKCell ptn1 ) ( \kore-symbol-LblinitKCell ptn2 ) ptn0 xX0 $= ( IMP-symbol-217-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-217-is-pattern substitution-disjoint substitution-app notation-cache-397 notation-cache-398 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-399 $p #Notation ( \kore-symbol-LblinitKCell ptn0 ) ( \app \kore-symbol-LblinitKCell-symbol ptn0 ) $= ( IMP-symbol-217-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-217-is-pattern IMP-symbol-217-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-217-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-217-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-LblinitKCell ptn0 ) $= ( IMP-symbol-217-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-217-is-pattern application-context-app-right notation-cache-399 notation-application-context ) DEBFBGADEBACHBIJ $. $}
${ IMP-symbol-218-substitution $p #Substitution \kore-symbol-LblinitStateCell \kore-symbol-LblinitStateCell ptn0 xX0 $= ( IMP-symbol-218-is-pattern substitution-disjoint ) CBAD $. $}
notation-cache-400 $p #Notation ( \kore-symbol-LblinitTCell ptn1 ) ( \app \kore-symbol-LblinitTCell-symbol ptn1 ) $= ( IMP-symbol-219-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-219-is-pattern IMP-symbol-219-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-401 $p #Notation ( \kore-symbol-LblinitTCell ptn2 ) ( \app \kore-symbol-LblinitTCell-symbol ptn2 ) $= ( IMP-symbol-219-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-219-is-pattern IMP-symbol-219-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-219-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-219-substitution $p #Substitution ( \kore-symbol-LblinitTCell ptn1 ) ( \kore-symbol-LblinitTCell ptn2 ) ptn0 xX0 $= ( IMP-symbol-219-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-219-is-pattern substitution-disjoint substitution-app notation-cache-400 notation-cache-401 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-402 $p #Notation ( \kore-symbol-LblinitTCell ptn0 ) ( \app \kore-symbol-LblinitTCell-symbol ptn0 ) $= ( IMP-symbol-219-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-219-is-pattern IMP-symbol-219-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-219-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-219-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-LblinitTCell ptn0 ) $= ( IMP-symbol-219-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-219-is-pattern application-context-app-right notation-cache-402 notation-application-context ) DEBFBGADEBACHBIJ $. $}
notation-cache-403 $p #Notation ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ptn1 ptn2 ) ( \app ( \app \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-220-is-symbol symbol-is-pattern IMP-symbol-220-is-pattern IMP-symbol-220-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-404 $p #Notation ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ptn3 ptn4 ) ( \app ( \app \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-220-is-symbol symbol-is-pattern IMP-symbol-220-is-pattern IMP-symbol-220-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-220-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-220-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-220-substitution $p #Substitution ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ptn1 ptn2 ) ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-220-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-220-is-pattern substitution-app substitution-disjoint notation-cache-403 notation-cache-404 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-405 $p #Notation ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-220-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-220-is-pattern IMP-symbol-220-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-220-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-220-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ptn0 ptn1 ) $= ( IMP-symbol-220-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-220-is-pattern application-context-app-right application-context-app-left notation-cache-405 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-220-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-220-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-220-is-symbol symbol-is-pattern IMP-symbol-220-is-pattern application-context-app-right notation-cache-405 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
notation-cache-406 $p #Notation ( \kore-symbol-LblintersectSet'LParUndsCommUndsRParUnds'SET'Unds'Set'Unds'Set'Unds'Set ptn1 ptn2 ) ( \app ( \app \kore-symbol-LblintersectSet'LParUndsCommUndsRParUnds'SET'Unds'Set'Unds'Set'Unds'Set-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-221-is-symbol symbol-is-pattern IMP-symbol-221-is-pattern IMP-symbol-221-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-407 $p #Notation ( \kore-symbol-LblintersectSet'LParUndsCommUndsRParUnds'SET'Unds'Set'Unds'Set'Unds'Set ptn3 ptn4 ) ( \app ( \app \kore-symbol-LblintersectSet'LParUndsCommUndsRParUnds'SET'Unds'Set'Unds'Set'Unds'Set-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-221-is-symbol symbol-is-pattern IMP-symbol-221-is-pattern IMP-symbol-221-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-221-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-221-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-221-substitution $p #Substitution ( \kore-symbol-LblintersectSet'LParUndsCommUndsRParUnds'SET'Unds'Set'Unds'Set'Unds'Set ptn1 ptn2 ) ( \kore-symbol-LblintersectSet'LParUndsCommUndsRParUnds'SET'Unds'Set'Unds'Set'Unds'Set ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-221-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-221-is-pattern substitution-app substitution-disjoint notation-cache-406 notation-cache-407 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-408 $p #Notation ( \kore-symbol-LblintersectSet'LParUndsCommUndsRParUnds'SET'Unds'Set'Unds'Set'Unds'Set ptn0 ptn1 ) ( \app ( \app \kore-symbol-LblintersectSet'LParUndsCommUndsRParUnds'SET'Unds'Set'Unds'Set'Unds'Set-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-221-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-221-is-pattern IMP-symbol-221-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-221-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-221-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-LblintersectSet'LParUndsCommUndsRParUnds'SET'Unds'Set'Unds'Set'Unds'Set ptn0 ptn1 ) $= ( IMP-symbol-221-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-221-is-pattern application-context-app-right application-context-app-left notation-cache-408 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-221-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-221-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-LblintersectSet'LParUndsCommUndsRParUnds'SET'Unds'Set'Unds'Set'Unds'Set ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-221-is-symbol symbol-is-pattern IMP-symbol-221-is-pattern application-context-app-right notation-cache-408 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
notation-cache-409 $p #Notation ( \kore-symbol-LblisAExp ptn1 ) ( \app \kore-symbol-LblisAExp-symbol ptn1 ) $= ( IMP-symbol-222-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-222-is-pattern IMP-symbol-222-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-410 $p #Notation ( \kore-symbol-LblisAExp ptn2 ) ( \app \kore-symbol-LblisAExp-symbol ptn2 ) $= ( IMP-symbol-222-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-222-is-pattern IMP-symbol-222-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-222-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-222-substitution $p #Substitution ( \kore-symbol-LblisAExp ptn1 ) ( \kore-symbol-LblisAExp ptn2 ) ptn0 xX0 $= ( IMP-symbol-222-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-222-is-pattern substitution-disjoint substitution-app notation-cache-409 notation-cache-410 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-411 $p #Notation ( \kore-symbol-LblisAExp ptn0 ) ( \app \kore-symbol-LblisAExp-symbol ptn0 ) $= ( IMP-symbol-222-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-222-is-pattern IMP-symbol-222-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-222-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-222-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-LblisAExp ptn0 ) $= ( IMP-symbol-222-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-222-is-pattern application-context-app-right notation-cache-411 notation-application-context ) DEBFBGADEBACHBIJ $. $}
notation-cache-412 $p #Notation ( \kore-symbol-LblisBExp ptn1 ) ( \app \kore-symbol-LblisBExp-symbol ptn1 ) $= ( IMP-symbol-223-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-223-is-pattern IMP-symbol-223-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-413 $p #Notation ( \kore-symbol-LblisBExp ptn2 ) ( \app \kore-symbol-LblisBExp-symbol ptn2 ) $= ( IMP-symbol-223-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-223-is-pattern IMP-symbol-223-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-223-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-223-substitution $p #Substitution ( \kore-symbol-LblisBExp ptn1 ) ( \kore-symbol-LblisBExp ptn2 ) ptn0 xX0 $= ( IMP-symbol-223-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-223-is-pattern substitution-disjoint substitution-app notation-cache-412 notation-cache-413 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-414 $p #Notation ( \kore-symbol-LblisBExp ptn0 ) ( \app \kore-symbol-LblisBExp-symbol ptn0 ) $= ( IMP-symbol-223-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-223-is-pattern IMP-symbol-223-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-223-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-223-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-LblisBExp ptn0 ) $= ( IMP-symbol-223-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-223-is-pattern application-context-app-right notation-cache-414 notation-application-context ) DEBFBGADEBACHBIJ $. $}
notation-cache-415 $p #Notation ( \kore-symbol-LblisBlock ptn1 ) ( \app \kore-symbol-LblisBlock-symbol ptn1 ) $= ( IMP-symbol-224-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-224-is-pattern IMP-symbol-224-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-416 $p #Notation ( \kore-symbol-LblisBlock ptn2 ) ( \app \kore-symbol-LblisBlock-symbol ptn2 ) $= ( IMP-symbol-224-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-224-is-pattern IMP-symbol-224-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-224-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-224-substitution $p #Substitution ( \kore-symbol-LblisBlock ptn1 ) ( \kore-symbol-LblisBlock ptn2 ) ptn0 xX0 $= ( IMP-symbol-224-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-224-is-pattern substitution-disjoint substitution-app notation-cache-415 notation-cache-416 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-417 $p #Notation ( \kore-symbol-LblisBlock ptn0 ) ( \app \kore-symbol-LblisBlock-symbol ptn0 ) $= ( IMP-symbol-224-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-224-is-pattern IMP-symbol-224-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-224-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-224-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-LblisBlock ptn0 ) $= ( IMP-symbol-224-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-224-is-pattern application-context-app-right notation-cache-417 notation-application-context ) DEBFBGADEBACHBIJ $. $}
notation-cache-418 $p #Notation ( \kore-symbol-LblisBool ptn1 ) ( \app \kore-symbol-LblisBool-symbol ptn1 ) $= ( IMP-symbol-225-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-225-is-pattern IMP-symbol-225-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-419 $p #Notation ( \kore-symbol-LblisBool ptn2 ) ( \app \kore-symbol-LblisBool-symbol ptn2 ) $= ( IMP-symbol-225-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-225-is-pattern IMP-symbol-225-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-225-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-225-substitution $p #Substitution ( \kore-symbol-LblisBool ptn1 ) ( \kore-symbol-LblisBool ptn2 ) ptn0 xX0 $= ( IMP-symbol-225-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-225-is-pattern substitution-disjoint substitution-app notation-cache-418 notation-cache-419 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-420 $p #Notation ( \kore-symbol-LblisBool ptn0 ) ( \app \kore-symbol-LblisBool-symbol ptn0 ) $= ( IMP-symbol-225-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-225-is-pattern IMP-symbol-225-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-225-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-225-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-LblisBool ptn0 ) $= ( IMP-symbol-225-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-225-is-pattern application-context-app-right notation-cache-420 notation-application-context ) DEBFBGADEBACHBIJ $. $}
notation-cache-421 $p #Notation ( \kore-symbol-LblisFloat ptn1 ) ( \app \kore-symbol-LblisFloat-symbol ptn1 ) $= ( IMP-symbol-226-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-226-is-pattern IMP-symbol-226-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-422 $p #Notation ( \kore-symbol-LblisFloat ptn2 ) ( \app \kore-symbol-LblisFloat-symbol ptn2 ) $= ( IMP-symbol-226-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-226-is-pattern IMP-symbol-226-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-226-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-226-substitution $p #Substitution ( \kore-symbol-LblisFloat ptn1 ) ( \kore-symbol-LblisFloat ptn2 ) ptn0 xX0 $= ( IMP-symbol-226-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-226-is-pattern substitution-disjoint substitution-app notation-cache-421 notation-cache-422 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-423 $p #Notation ( \kore-symbol-LblisFloat ptn0 ) ( \app \kore-symbol-LblisFloat-symbol ptn0 ) $= ( IMP-symbol-226-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-226-is-pattern IMP-symbol-226-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-226-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-226-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-LblisFloat ptn0 ) $= ( IMP-symbol-226-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-226-is-pattern application-context-app-right notation-cache-423 notation-application-context ) DEBFBGADEBACHBIJ $. $}
notation-cache-424 $p #Notation ( \kore-symbol-LblisGeneratedCounterCell ptn1 ) ( \app \kore-symbol-LblisGeneratedCounterCell-symbol ptn1 ) $= ( IMP-symbol-227-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-227-is-pattern IMP-symbol-227-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-425 $p #Notation ( \kore-symbol-LblisGeneratedCounterCell ptn2 ) ( \app \kore-symbol-LblisGeneratedCounterCell-symbol ptn2 ) $= ( IMP-symbol-227-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-227-is-pattern IMP-symbol-227-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-227-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-227-substitution $p #Substitution ( \kore-symbol-LblisGeneratedCounterCell ptn1 ) ( \kore-symbol-LblisGeneratedCounterCell ptn2 ) ptn0 xX0 $= ( IMP-symbol-227-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-227-is-pattern substitution-disjoint substitution-app notation-cache-424 notation-cache-425 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-426 $p #Notation ( \kore-symbol-LblisGeneratedCounterCell ptn0 ) ( \app \kore-symbol-LblisGeneratedCounterCell-symbol ptn0 ) $= ( IMP-symbol-227-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-227-is-pattern IMP-symbol-227-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-227-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-227-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-LblisGeneratedCounterCell ptn0 ) $= ( IMP-symbol-227-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-227-is-pattern application-context-app-right notation-cache-426 notation-application-context ) DEBFBGADEBACHBIJ $. $}
notation-cache-427 $p #Notation ( \kore-symbol-LblisGeneratedCounterCellOpt ptn1 ) ( \app \kore-symbol-LblisGeneratedCounterCellOpt-symbol ptn1 ) $= ( IMP-symbol-228-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-228-is-pattern IMP-symbol-228-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-428 $p #Notation ( \kore-symbol-LblisGeneratedCounterCellOpt ptn2 ) ( \app \kore-symbol-LblisGeneratedCounterCellOpt-symbol ptn2 ) $= ( IMP-symbol-228-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-228-is-pattern IMP-symbol-228-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-228-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-228-substitution $p #Substitution ( \kore-symbol-LblisGeneratedCounterCellOpt ptn1 ) ( \kore-symbol-LblisGeneratedCounterCellOpt ptn2 ) ptn0 xX0 $= ( IMP-symbol-228-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-228-is-pattern substitution-disjoint substitution-app notation-cache-427 notation-cache-428 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-429 $p #Notation ( \kore-symbol-LblisGeneratedCounterCellOpt ptn0 ) ( \app \kore-symbol-LblisGeneratedCounterCellOpt-symbol ptn0 ) $= ( IMP-symbol-228-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-228-is-pattern IMP-symbol-228-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-228-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-228-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-LblisGeneratedCounterCellOpt ptn0 ) $= ( IMP-symbol-228-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-228-is-pattern application-context-app-right notation-cache-429 notation-application-context ) DEBFBGADEBACHBIJ $. $}
notation-cache-430 $p #Notation ( \kore-symbol-LblisGeneratedTopCell ptn1 ) ( \app \kore-symbol-LblisGeneratedTopCell-symbol ptn1 ) $= ( IMP-symbol-229-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-229-is-pattern IMP-symbol-229-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-431 $p #Notation ( \kore-symbol-LblisGeneratedTopCell ptn2 ) ( \app \kore-symbol-LblisGeneratedTopCell-symbol ptn2 ) $= ( IMP-symbol-229-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-229-is-pattern IMP-symbol-229-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-229-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-229-substitution $p #Substitution ( \kore-symbol-LblisGeneratedTopCell ptn1 ) ( \kore-symbol-LblisGeneratedTopCell ptn2 ) ptn0 xX0 $= ( IMP-symbol-229-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-229-is-pattern substitution-disjoint substitution-app notation-cache-430 notation-cache-431 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-432 $p #Notation ( \kore-symbol-LblisGeneratedTopCell ptn0 ) ( \app \kore-symbol-LblisGeneratedTopCell-symbol ptn0 ) $= ( IMP-symbol-229-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-229-is-pattern IMP-symbol-229-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-229-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-229-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-LblisGeneratedTopCell ptn0 ) $= ( IMP-symbol-229-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-229-is-pattern application-context-app-right notation-cache-432 notation-application-context ) DEBFBGADEBACHBIJ $. $}
notation-cache-433 $p #Notation ( \kore-symbol-LblisGeneratedTopCellFragment ptn1 ) ( \app \kore-symbol-LblisGeneratedTopCellFragment-symbol ptn1 ) $= ( IMP-symbol-230-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-230-is-pattern IMP-symbol-230-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-434 $p #Notation ( \kore-symbol-LblisGeneratedTopCellFragment ptn2 ) ( \app \kore-symbol-LblisGeneratedTopCellFragment-symbol ptn2 ) $= ( IMP-symbol-230-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-230-is-pattern IMP-symbol-230-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-230-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-230-substitution $p #Substitution ( \kore-symbol-LblisGeneratedTopCellFragment ptn1 ) ( \kore-symbol-LblisGeneratedTopCellFragment ptn2 ) ptn0 xX0 $= ( IMP-symbol-230-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-230-is-pattern substitution-disjoint substitution-app notation-cache-433 notation-cache-434 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-435 $p #Notation ( \kore-symbol-LblisGeneratedTopCellFragment ptn0 ) ( \app \kore-symbol-LblisGeneratedTopCellFragment-symbol ptn0 ) $= ( IMP-symbol-230-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-230-is-pattern IMP-symbol-230-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-230-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-230-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-LblisGeneratedTopCellFragment ptn0 ) $= ( IMP-symbol-230-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-230-is-pattern application-context-app-right notation-cache-435 notation-application-context ) DEBFBGADEBACHBIJ $. $}
notation-cache-436 $p #Notation ( \kore-symbol-LblisIOError ptn1 ) ( \app \kore-symbol-LblisIOError-symbol ptn1 ) $= ( IMP-symbol-231-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-231-is-pattern IMP-symbol-231-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-437 $p #Notation ( \kore-symbol-LblisIOError ptn2 ) ( \app \kore-symbol-LblisIOError-symbol ptn2 ) $= ( IMP-symbol-231-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-231-is-pattern IMP-symbol-231-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-231-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-231-substitution $p #Substitution ( \kore-symbol-LblisIOError ptn1 ) ( \kore-symbol-LblisIOError ptn2 ) ptn0 xX0 $= ( IMP-symbol-231-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-231-is-pattern substitution-disjoint substitution-app notation-cache-436 notation-cache-437 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-438 $p #Notation ( \kore-symbol-LblisIOError ptn0 ) ( \app \kore-symbol-LblisIOError-symbol ptn0 ) $= ( IMP-symbol-231-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-231-is-pattern IMP-symbol-231-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-231-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-231-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-LblisIOError ptn0 ) $= ( IMP-symbol-231-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-231-is-pattern application-context-app-right notation-cache-438 notation-application-context ) DEBFBGADEBACHBIJ $. $}
notation-cache-439 $p #Notation ( \kore-symbol-LblisIOFile ptn1 ) ( \app \kore-symbol-LblisIOFile-symbol ptn1 ) $= ( IMP-symbol-232-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-232-is-pattern IMP-symbol-232-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-440 $p #Notation ( \kore-symbol-LblisIOFile ptn2 ) ( \app \kore-symbol-LblisIOFile-symbol ptn2 ) $= ( IMP-symbol-232-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-232-is-pattern IMP-symbol-232-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-232-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-232-substitution $p #Substitution ( \kore-symbol-LblisIOFile ptn1 ) ( \kore-symbol-LblisIOFile ptn2 ) ptn0 xX0 $= ( IMP-symbol-232-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-232-is-pattern substitution-disjoint substitution-app notation-cache-439 notation-cache-440 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-441 $p #Notation ( \kore-symbol-LblisIOFile ptn0 ) ( \app \kore-symbol-LblisIOFile-symbol ptn0 ) $= ( IMP-symbol-232-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-232-is-pattern IMP-symbol-232-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-232-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-232-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-LblisIOFile ptn0 ) $= ( IMP-symbol-232-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-232-is-pattern application-context-app-right notation-cache-441 notation-application-context ) DEBFBGADEBACHBIJ $. $}
notation-cache-442 $p #Notation ( \kore-symbol-LblisIOInt ptn1 ) ( \app \kore-symbol-LblisIOInt-symbol ptn1 ) $= ( IMP-symbol-233-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-233-is-pattern IMP-symbol-233-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-443 $p #Notation ( \kore-symbol-LblisIOInt ptn2 ) ( \app \kore-symbol-LblisIOInt-symbol ptn2 ) $= ( IMP-symbol-233-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-233-is-pattern IMP-symbol-233-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-233-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-233-substitution $p #Substitution ( \kore-symbol-LblisIOInt ptn1 ) ( \kore-symbol-LblisIOInt ptn2 ) ptn0 xX0 $= ( IMP-symbol-233-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-233-is-pattern substitution-disjoint substitution-app notation-cache-442 notation-cache-443 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-444 $p #Notation ( \kore-symbol-LblisIOInt ptn0 ) ( \app \kore-symbol-LblisIOInt-symbol ptn0 ) $= ( IMP-symbol-233-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-233-is-pattern IMP-symbol-233-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-233-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-233-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-LblisIOInt ptn0 ) $= ( IMP-symbol-233-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-233-is-pattern application-context-app-right notation-cache-444 notation-application-context ) DEBFBGADEBACHBIJ $. $}
notation-cache-445 $p #Notation ( \kore-symbol-LblisIOString ptn1 ) ( \app \kore-symbol-LblisIOString-symbol ptn1 ) $= ( IMP-symbol-234-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-234-is-pattern IMP-symbol-234-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-446 $p #Notation ( \kore-symbol-LblisIOString ptn2 ) ( \app \kore-symbol-LblisIOString-symbol ptn2 ) $= ( IMP-symbol-234-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-234-is-pattern IMP-symbol-234-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-234-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-234-substitution $p #Substitution ( \kore-symbol-LblisIOString ptn1 ) ( \kore-symbol-LblisIOString ptn2 ) ptn0 xX0 $= ( IMP-symbol-234-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-234-is-pattern substitution-disjoint substitution-app notation-cache-445 notation-cache-446 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-447 $p #Notation ( \kore-symbol-LblisIOString ptn0 ) ( \app \kore-symbol-LblisIOString-symbol ptn0 ) $= ( IMP-symbol-234-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-234-is-pattern IMP-symbol-234-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-234-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-234-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-LblisIOString ptn0 ) $= ( IMP-symbol-234-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-234-is-pattern application-context-app-right notation-cache-447 notation-application-context ) DEBFBGADEBACHBIJ $. $}
notation-cache-448 $p #Notation ( \kore-symbol-LblisId ptn1 ) ( \app \kore-symbol-LblisId-symbol ptn1 ) $= ( IMP-symbol-235-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-235-is-pattern IMP-symbol-235-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-449 $p #Notation ( \kore-symbol-LblisId ptn2 ) ( \app \kore-symbol-LblisId-symbol ptn2 ) $= ( IMP-symbol-235-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-235-is-pattern IMP-symbol-235-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-235-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-235-substitution $p #Substitution ( \kore-symbol-LblisId ptn1 ) ( \kore-symbol-LblisId ptn2 ) ptn0 xX0 $= ( IMP-symbol-235-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-235-is-pattern substitution-disjoint substitution-app notation-cache-448 notation-cache-449 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-450 $p #Notation ( \kore-symbol-LblisId ptn0 ) ( \app \kore-symbol-LblisId-symbol ptn0 ) $= ( IMP-symbol-235-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-235-is-pattern IMP-symbol-235-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-235-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-235-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-LblisId ptn0 ) $= ( IMP-symbol-235-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-235-is-pattern application-context-app-right notation-cache-450 notation-application-context ) DEBFBGADEBACHBIJ $. $}
notation-cache-451 $p #Notation ( \kore-symbol-LblisIds ptn1 ) ( \app \kore-symbol-LblisIds-symbol ptn1 ) $= ( IMP-symbol-236-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-236-is-pattern IMP-symbol-236-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-452 $p #Notation ( \kore-symbol-LblisIds ptn2 ) ( \app \kore-symbol-LblisIds-symbol ptn2 ) $= ( IMP-symbol-236-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-236-is-pattern IMP-symbol-236-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-236-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-236-substitution $p #Substitution ( \kore-symbol-LblisIds ptn1 ) ( \kore-symbol-LblisIds ptn2 ) ptn0 xX0 $= ( IMP-symbol-236-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-236-is-pattern substitution-disjoint substitution-app notation-cache-451 notation-cache-452 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-453 $p #Notation ( \kore-symbol-LblisIds ptn0 ) ( \app \kore-symbol-LblisIds-symbol ptn0 ) $= ( IMP-symbol-236-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-236-is-pattern IMP-symbol-236-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-236-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-236-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-LblisIds ptn0 ) $= ( IMP-symbol-236-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-236-is-pattern application-context-app-right notation-cache-453 notation-application-context ) DEBFBGADEBACHBIJ $. $}
notation-cache-454 $p #Notation ( \kore-symbol-LblisInt ptn1 ) ( \app \kore-symbol-LblisInt-symbol ptn1 ) $= ( IMP-symbol-237-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-237-is-pattern IMP-symbol-237-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-455 $p #Notation ( \kore-symbol-LblisInt ptn2 ) ( \app \kore-symbol-LblisInt-symbol ptn2 ) $= ( IMP-symbol-237-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-237-is-pattern IMP-symbol-237-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-237-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-237-substitution $p #Substitution ( \kore-symbol-LblisInt ptn1 ) ( \kore-symbol-LblisInt ptn2 ) ptn0 xX0 $= ( IMP-symbol-237-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-237-is-pattern substitution-disjoint substitution-app notation-cache-454 notation-cache-455 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-456 $p #Notation ( \kore-symbol-LblisInt ptn0 ) ( \app \kore-symbol-LblisInt-symbol ptn0 ) $= ( IMP-symbol-237-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-237-is-pattern IMP-symbol-237-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-237-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-237-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-LblisInt ptn0 ) $= ( IMP-symbol-237-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-237-is-pattern application-context-app-right notation-cache-456 notation-application-context ) DEBFBGADEBACHBIJ $. $}
notation-cache-457 $p #Notation ( \kore-symbol-LblisK ptn1 ) ( \app \kore-symbol-LblisK-symbol ptn1 ) $= ( IMP-symbol-238-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-238-is-pattern IMP-symbol-238-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-458 $p #Notation ( \kore-symbol-LblisK ptn2 ) ( \app \kore-symbol-LblisK-symbol ptn2 ) $= ( IMP-symbol-238-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-238-is-pattern IMP-symbol-238-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-238-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-238-substitution $p #Substitution ( \kore-symbol-LblisK ptn1 ) ( \kore-symbol-LblisK ptn2 ) ptn0 xX0 $= ( IMP-symbol-238-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-238-is-pattern substitution-disjoint substitution-app notation-cache-457 notation-cache-458 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-459 $p #Notation ( \kore-symbol-LblisK ptn0 ) ( \app \kore-symbol-LblisK-symbol ptn0 ) $= ( IMP-symbol-238-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-238-is-pattern IMP-symbol-238-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-238-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-238-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-LblisK ptn0 ) $= ( IMP-symbol-238-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-238-is-pattern application-context-app-right notation-cache-459 notation-application-context ) DEBFBGADEBACHBIJ $. $}
notation-cache-460 $p #Notation ( \kore-symbol-LblisKCell ptn1 ) ( \app \kore-symbol-LblisKCell-symbol ptn1 ) $= ( IMP-symbol-239-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-239-is-pattern IMP-symbol-239-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-461 $p #Notation ( \kore-symbol-LblisKCell ptn2 ) ( \app \kore-symbol-LblisKCell-symbol ptn2 ) $= ( IMP-symbol-239-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-239-is-pattern IMP-symbol-239-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-239-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-239-substitution $p #Substitution ( \kore-symbol-LblisKCell ptn1 ) ( \kore-symbol-LblisKCell ptn2 ) ptn0 xX0 $= ( IMP-symbol-239-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-239-is-pattern substitution-disjoint substitution-app notation-cache-460 notation-cache-461 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-462 $p #Notation ( \kore-symbol-LblisKCell ptn0 ) ( \app \kore-symbol-LblisKCell-symbol ptn0 ) $= ( IMP-symbol-239-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-239-is-pattern IMP-symbol-239-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-239-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-239-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-LblisKCell ptn0 ) $= ( IMP-symbol-239-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-239-is-pattern application-context-app-right notation-cache-462 notation-application-context ) DEBFBGADEBACHBIJ $. $}
notation-cache-463 $p #Notation ( \kore-symbol-LblisKCellOpt ptn1 ) ( \app \kore-symbol-LblisKCellOpt-symbol ptn1 ) $= ( IMP-symbol-240-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-240-is-pattern IMP-symbol-240-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-464 $p #Notation ( \kore-symbol-LblisKCellOpt ptn2 ) ( \app \kore-symbol-LblisKCellOpt-symbol ptn2 ) $= ( IMP-symbol-240-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-240-is-pattern IMP-symbol-240-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-240-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-240-substitution $p #Substitution ( \kore-symbol-LblisKCellOpt ptn1 ) ( \kore-symbol-LblisKCellOpt ptn2 ) ptn0 xX0 $= ( IMP-symbol-240-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-240-is-pattern substitution-disjoint substitution-app notation-cache-463 notation-cache-464 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-465 $p #Notation ( \kore-symbol-LblisKCellOpt ptn0 ) ( \app \kore-symbol-LblisKCellOpt-symbol ptn0 ) $= ( IMP-symbol-240-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-240-is-pattern IMP-symbol-240-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-240-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-240-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-LblisKCellOpt ptn0 ) $= ( IMP-symbol-240-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-240-is-pattern application-context-app-right notation-cache-465 notation-application-context ) DEBFBGADEBACHBIJ $. $}
notation-cache-466 $p #Notation ( \kore-symbol-LblisKConfigVar ptn1 ) ( \app \kore-symbol-LblisKConfigVar-symbol ptn1 ) $= ( IMP-symbol-241-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-241-is-pattern IMP-symbol-241-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-467 $p #Notation ( \kore-symbol-LblisKConfigVar ptn2 ) ( \app \kore-symbol-LblisKConfigVar-symbol ptn2 ) $= ( IMP-symbol-241-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-241-is-pattern IMP-symbol-241-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-241-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-241-substitution $p #Substitution ( \kore-symbol-LblisKConfigVar ptn1 ) ( \kore-symbol-LblisKConfigVar ptn2 ) ptn0 xX0 $= ( IMP-symbol-241-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-241-is-pattern substitution-disjoint substitution-app notation-cache-466 notation-cache-467 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-468 $p #Notation ( \kore-symbol-LblisKConfigVar ptn0 ) ( \app \kore-symbol-LblisKConfigVar-symbol ptn0 ) $= ( IMP-symbol-241-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-241-is-pattern IMP-symbol-241-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-241-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-241-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-LblisKConfigVar ptn0 ) $= ( IMP-symbol-241-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-241-is-pattern application-context-app-right notation-cache-468 notation-application-context ) DEBFBGADEBACHBIJ $. $}
notation-cache-469 $p #Notation ( \kore-symbol-LblisKItem ptn1 ) ( \app \kore-symbol-LblisKItem-symbol ptn1 ) $= ( IMP-symbol-242-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-242-is-pattern IMP-symbol-242-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-470 $p #Notation ( \kore-symbol-LblisKItem ptn2 ) ( \app \kore-symbol-LblisKItem-symbol ptn2 ) $= ( IMP-symbol-242-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-242-is-pattern IMP-symbol-242-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-242-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-242-substitution $p #Substitution ( \kore-symbol-LblisKItem ptn1 ) ( \kore-symbol-LblisKItem ptn2 ) ptn0 xX0 $= ( IMP-symbol-242-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-242-is-pattern substitution-disjoint substitution-app notation-cache-469 notation-cache-470 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-471 $p #Notation ( \kore-symbol-LblisKItem ptn0 ) ( \app \kore-symbol-LblisKItem-symbol ptn0 ) $= ( IMP-symbol-242-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-242-is-pattern IMP-symbol-242-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-242-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-242-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-LblisKItem ptn0 ) $= ( IMP-symbol-242-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-242-is-pattern application-context-app-right notation-cache-471 notation-application-context ) DEBFBGADEBACHBIJ $. $}
notation-cache-472 $p #Notation ( \kore-symbol-LblisKResult ptn1 ) ( \app \kore-symbol-LblisKResult-symbol ptn1 ) $= ( IMP-symbol-243-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-243-is-pattern IMP-symbol-243-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-473 $p #Notation ( \kore-symbol-LblisKResult ptn2 ) ( \app \kore-symbol-LblisKResult-symbol ptn2 ) $= ( IMP-symbol-243-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-243-is-pattern IMP-symbol-243-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-243-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-243-substitution $p #Substitution ( \kore-symbol-LblisKResult ptn1 ) ( \kore-symbol-LblisKResult ptn2 ) ptn0 xX0 $= ( IMP-symbol-243-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-243-is-pattern substitution-disjoint substitution-app notation-cache-472 notation-cache-473 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-474 $p #Notation ( \kore-symbol-LblisKResult ptn0 ) ( \app \kore-symbol-LblisKResult-symbol ptn0 ) $= ( IMP-symbol-243-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-243-is-pattern IMP-symbol-243-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-243-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-243-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-LblisKResult ptn0 ) $= ( IMP-symbol-243-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-243-is-pattern application-context-app-right notation-cache-474 notation-application-context ) DEBFBGADEBACHBIJ $. $}
notation-cache-475 $p #Notation ( \kore-symbol-LblisList ptn1 ) ( \app \kore-symbol-LblisList-symbol ptn1 ) $= ( IMP-symbol-244-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-244-is-pattern IMP-symbol-244-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-476 $p #Notation ( \kore-symbol-LblisList ptn2 ) ( \app \kore-symbol-LblisList-symbol ptn2 ) $= ( IMP-symbol-244-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-244-is-pattern IMP-symbol-244-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-244-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-244-substitution $p #Substitution ( \kore-symbol-LblisList ptn1 ) ( \kore-symbol-LblisList ptn2 ) ptn0 xX0 $= ( IMP-symbol-244-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-244-is-pattern substitution-disjoint substitution-app notation-cache-475 notation-cache-476 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-477 $p #Notation ( \kore-symbol-LblisList ptn0 ) ( \app \kore-symbol-LblisList-symbol ptn0 ) $= ( IMP-symbol-244-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-244-is-pattern IMP-symbol-244-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-244-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-244-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-LblisList ptn0 ) $= ( IMP-symbol-244-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-244-is-pattern application-context-app-right notation-cache-477 notation-application-context ) DEBFBGADEBACHBIJ $. $}
notation-cache-478 $p #Notation ( \kore-symbol-LblisMap ptn1 ) ( \app \kore-symbol-LblisMap-symbol ptn1 ) $= ( IMP-symbol-245-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-245-is-pattern IMP-symbol-245-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-479 $p #Notation ( \kore-symbol-LblisMap ptn2 ) ( \app \kore-symbol-LblisMap-symbol ptn2 ) $= ( IMP-symbol-245-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-245-is-pattern IMP-symbol-245-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-245-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-245-substitution $p #Substitution ( \kore-symbol-LblisMap ptn1 ) ( \kore-symbol-LblisMap ptn2 ) ptn0 xX0 $= ( IMP-symbol-245-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-245-is-pattern substitution-disjoint substitution-app notation-cache-478 notation-cache-479 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-480 $p #Notation ( \kore-symbol-LblisMap ptn0 ) ( \app \kore-symbol-LblisMap-symbol ptn0 ) $= ( IMP-symbol-245-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-245-is-pattern IMP-symbol-245-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-245-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-245-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-LblisMap ptn0 ) $= ( IMP-symbol-245-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-245-is-pattern application-context-app-right notation-cache-480 notation-application-context ) DEBFBGADEBACHBIJ $. $}
notation-cache-481 $p #Notation ( \kore-symbol-LblisPgm ptn1 ) ( \app \kore-symbol-LblisPgm-symbol ptn1 ) $= ( IMP-symbol-246-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-246-is-pattern IMP-symbol-246-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-482 $p #Notation ( \kore-symbol-LblisPgm ptn2 ) ( \app \kore-symbol-LblisPgm-symbol ptn2 ) $= ( IMP-symbol-246-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-246-is-pattern IMP-symbol-246-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-246-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-246-substitution $p #Substitution ( \kore-symbol-LblisPgm ptn1 ) ( \kore-symbol-LblisPgm ptn2 ) ptn0 xX0 $= ( IMP-symbol-246-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-246-is-pattern substitution-disjoint substitution-app notation-cache-481 notation-cache-482 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-483 $p #Notation ( \kore-symbol-LblisPgm ptn0 ) ( \app \kore-symbol-LblisPgm-symbol ptn0 ) $= ( IMP-symbol-246-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-246-is-pattern IMP-symbol-246-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-246-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-246-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-LblisPgm ptn0 ) $= ( IMP-symbol-246-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-246-is-pattern application-context-app-right notation-cache-483 notation-application-context ) DEBFBGADEBACHBIJ $. $}
notation-cache-484 $p #Notation ( \kore-symbol-LblisSet ptn1 ) ( \app \kore-symbol-LblisSet-symbol ptn1 ) $= ( IMP-symbol-247-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-247-is-pattern IMP-symbol-247-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-485 $p #Notation ( \kore-symbol-LblisSet ptn2 ) ( \app \kore-symbol-LblisSet-symbol ptn2 ) $= ( IMP-symbol-247-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-247-is-pattern IMP-symbol-247-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-247-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-247-substitution $p #Substitution ( \kore-symbol-LblisSet ptn1 ) ( \kore-symbol-LblisSet ptn2 ) ptn0 xX0 $= ( IMP-symbol-247-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-247-is-pattern substitution-disjoint substitution-app notation-cache-484 notation-cache-485 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-486 $p #Notation ( \kore-symbol-LblisSet ptn0 ) ( \app \kore-symbol-LblisSet-symbol ptn0 ) $= ( IMP-symbol-247-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-247-is-pattern IMP-symbol-247-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-247-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-247-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-LblisSet ptn0 ) $= ( IMP-symbol-247-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-247-is-pattern application-context-app-right notation-cache-486 notation-application-context ) DEBFBGADEBACHBIJ $. $}
notation-cache-487 $p #Notation ( \kore-symbol-LblisStateCell ptn1 ) ( \app \kore-symbol-LblisStateCell-symbol ptn1 ) $= ( IMP-symbol-248-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-248-is-pattern IMP-symbol-248-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-488 $p #Notation ( \kore-symbol-LblisStateCell ptn2 ) ( \app \kore-symbol-LblisStateCell-symbol ptn2 ) $= ( IMP-symbol-248-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-248-is-pattern IMP-symbol-248-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-248-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-248-substitution $p #Substitution ( \kore-symbol-LblisStateCell ptn1 ) ( \kore-symbol-LblisStateCell ptn2 ) ptn0 xX0 $= ( IMP-symbol-248-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-248-is-pattern substitution-disjoint substitution-app notation-cache-487 notation-cache-488 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-489 $p #Notation ( \kore-symbol-LblisStateCell ptn0 ) ( \app \kore-symbol-LblisStateCell-symbol ptn0 ) $= ( IMP-symbol-248-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-248-is-pattern IMP-symbol-248-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-248-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-248-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-LblisStateCell ptn0 ) $= ( IMP-symbol-248-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-248-is-pattern application-context-app-right notation-cache-489 notation-application-context ) DEBFBGADEBACHBIJ $. $}
notation-cache-490 $p #Notation ( \kore-symbol-LblisStateCellOpt ptn1 ) ( \app \kore-symbol-LblisStateCellOpt-symbol ptn1 ) $= ( IMP-symbol-249-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-249-is-pattern IMP-symbol-249-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-491 $p #Notation ( \kore-symbol-LblisStateCellOpt ptn2 ) ( \app \kore-symbol-LblisStateCellOpt-symbol ptn2 ) $= ( IMP-symbol-249-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-249-is-pattern IMP-symbol-249-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-249-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-249-substitution $p #Substitution ( \kore-symbol-LblisStateCellOpt ptn1 ) ( \kore-symbol-LblisStateCellOpt ptn2 ) ptn0 xX0 $= ( IMP-symbol-249-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-249-is-pattern substitution-disjoint substitution-app notation-cache-490 notation-cache-491 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-492 $p #Notation ( \kore-symbol-LblisStateCellOpt ptn0 ) ( \app \kore-symbol-LblisStateCellOpt-symbol ptn0 ) $= ( IMP-symbol-249-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-249-is-pattern IMP-symbol-249-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-249-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-249-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-LblisStateCellOpt ptn0 ) $= ( IMP-symbol-249-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-249-is-pattern application-context-app-right notation-cache-492 notation-application-context ) DEBFBGADEBACHBIJ $. $}
notation-cache-493 $p #Notation ( \kore-symbol-LblisStmt ptn1 ) ( \app \kore-symbol-LblisStmt-symbol ptn1 ) $= ( IMP-symbol-250-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-250-is-pattern IMP-symbol-250-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-494 $p #Notation ( \kore-symbol-LblisStmt ptn2 ) ( \app \kore-symbol-LblisStmt-symbol ptn2 ) $= ( IMP-symbol-250-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-250-is-pattern IMP-symbol-250-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-250-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-250-substitution $p #Substitution ( \kore-symbol-LblisStmt ptn1 ) ( \kore-symbol-LblisStmt ptn2 ) ptn0 xX0 $= ( IMP-symbol-250-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-250-is-pattern substitution-disjoint substitution-app notation-cache-493 notation-cache-494 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-495 $p #Notation ( \kore-symbol-LblisStmt ptn0 ) ( \app \kore-symbol-LblisStmt-symbol ptn0 ) $= ( IMP-symbol-250-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-250-is-pattern IMP-symbol-250-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-250-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-250-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-LblisStmt ptn0 ) $= ( IMP-symbol-250-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-250-is-pattern application-context-app-right notation-cache-495 notation-application-context ) DEBFBGADEBACHBIJ $. $}
notation-cache-496 $p #Notation ( \kore-symbol-LblisStream ptn1 ) ( \app \kore-symbol-LblisStream-symbol ptn1 ) $= ( IMP-symbol-251-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-251-is-pattern IMP-symbol-251-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-497 $p #Notation ( \kore-symbol-LblisStream ptn2 ) ( \app \kore-symbol-LblisStream-symbol ptn2 ) $= ( IMP-symbol-251-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-251-is-pattern IMP-symbol-251-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-251-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-251-substitution $p #Substitution ( \kore-symbol-LblisStream ptn1 ) ( \kore-symbol-LblisStream ptn2 ) ptn0 xX0 $= ( IMP-symbol-251-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-251-is-pattern substitution-disjoint substitution-app notation-cache-496 notation-cache-497 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-498 $p #Notation ( \kore-symbol-LblisStream ptn0 ) ( \app \kore-symbol-LblisStream-symbol ptn0 ) $= ( IMP-symbol-251-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-251-is-pattern IMP-symbol-251-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-251-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-251-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-LblisStream ptn0 ) $= ( IMP-symbol-251-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-251-is-pattern application-context-app-right notation-cache-498 notation-application-context ) DEBFBGADEBACHBIJ $. $}
notation-cache-499 $p #Notation ( \kore-symbol-LblisString ptn1 ) ( \app \kore-symbol-LblisString-symbol ptn1 ) $= ( IMP-symbol-252-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-252-is-pattern IMP-symbol-252-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-500 $p #Notation ( \kore-symbol-LblisString ptn2 ) ( \app \kore-symbol-LblisString-symbol ptn2 ) $= ( IMP-symbol-252-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-252-is-pattern IMP-symbol-252-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-252-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-252-substitution $p #Substitution ( \kore-symbol-LblisString ptn1 ) ( \kore-symbol-LblisString ptn2 ) ptn0 xX0 $= ( IMP-symbol-252-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-252-is-pattern substitution-disjoint substitution-app notation-cache-499 notation-cache-500 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-501 $p #Notation ( \kore-symbol-LblisString ptn0 ) ( \app \kore-symbol-LblisString-symbol ptn0 ) $= ( IMP-symbol-252-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-252-is-pattern IMP-symbol-252-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-252-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-252-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-LblisString ptn0 ) $= ( IMP-symbol-252-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-252-is-pattern application-context-app-right notation-cache-501 notation-application-context ) DEBFBGADEBACHBIJ $. $}
notation-cache-502 $p #Notation ( \kore-symbol-LblisTCell ptn1 ) ( \app \kore-symbol-LblisTCell-symbol ptn1 ) $= ( IMP-symbol-253-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-253-is-pattern IMP-symbol-253-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-503 $p #Notation ( \kore-symbol-LblisTCell ptn2 ) ( \app \kore-symbol-LblisTCell-symbol ptn2 ) $= ( IMP-symbol-253-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-253-is-pattern IMP-symbol-253-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-253-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-253-substitution $p #Substitution ( \kore-symbol-LblisTCell ptn1 ) ( \kore-symbol-LblisTCell ptn2 ) ptn0 xX0 $= ( IMP-symbol-253-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-253-is-pattern substitution-disjoint substitution-app notation-cache-502 notation-cache-503 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-504 $p #Notation ( \kore-symbol-LblisTCell ptn0 ) ( \app \kore-symbol-LblisTCell-symbol ptn0 ) $= ( IMP-symbol-253-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-253-is-pattern IMP-symbol-253-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-253-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-253-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-LblisTCell ptn0 ) $= ( IMP-symbol-253-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-253-is-pattern application-context-app-right notation-cache-504 notation-application-context ) DEBFBGADEBACHBIJ $. $}
notation-cache-505 $p #Notation ( \kore-symbol-LblisTCellFragment ptn1 ) ( \app \kore-symbol-LblisTCellFragment-symbol ptn1 ) $= ( IMP-symbol-254-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-254-is-pattern IMP-symbol-254-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-506 $p #Notation ( \kore-symbol-LblisTCellFragment ptn2 ) ( \app \kore-symbol-LblisTCellFragment-symbol ptn2 ) $= ( IMP-symbol-254-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-254-is-pattern IMP-symbol-254-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-254-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-254-substitution $p #Substitution ( \kore-symbol-LblisTCellFragment ptn1 ) ( \kore-symbol-LblisTCellFragment ptn2 ) ptn0 xX0 $= ( IMP-symbol-254-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-254-is-pattern substitution-disjoint substitution-app notation-cache-505 notation-cache-506 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-507 $p #Notation ( \kore-symbol-LblisTCellFragment ptn0 ) ( \app \kore-symbol-LblisTCellFragment-symbol ptn0 ) $= ( IMP-symbol-254-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-254-is-pattern IMP-symbol-254-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-254-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-254-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-LblisTCellFragment ptn0 ) $= ( IMP-symbol-254-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-254-is-pattern application-context-app-right notation-cache-507 notation-application-context ) DEBFBGADEBACHBIJ $. $}
notation-cache-508 $p #Notation ( \kore-symbol-LblisTCellOpt ptn1 ) ( \app \kore-symbol-LblisTCellOpt-symbol ptn1 ) $= ( IMP-symbol-255-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-255-is-pattern IMP-symbol-255-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-509 $p #Notation ( \kore-symbol-LblisTCellOpt ptn2 ) ( \app \kore-symbol-LblisTCellOpt-symbol ptn2 ) $= ( IMP-symbol-255-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-255-is-pattern IMP-symbol-255-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-255-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-255-substitution $p #Substitution ( \kore-symbol-LblisTCellOpt ptn1 ) ( \kore-symbol-LblisTCellOpt ptn2 ) ptn0 xX0 $= ( IMP-symbol-255-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-255-is-pattern substitution-disjoint substitution-app notation-cache-508 notation-cache-509 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-510 $p #Notation ( \kore-symbol-LblisTCellOpt ptn0 ) ( \app \kore-symbol-LblisTCellOpt-symbol ptn0 ) $= ( IMP-symbol-255-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-255-is-pattern IMP-symbol-255-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-255-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-255-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-LblisTCellOpt ptn0 ) $= ( IMP-symbol-255-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-255-is-pattern application-context-app-right notation-cache-510 notation-application-context ) DEBFBGADEBACHBIJ $. $}
notation-cache-511 $p #Notation ( \kore-symbol-Lblkeys'LParUndsRParUnds'MAP'Unds'Set'Unds'Map ptn1 ) ( \app \kore-symbol-Lblkeys'LParUndsRParUnds'MAP'Unds'Set'Unds'Map-symbol ptn1 ) $= ( IMP-symbol-256-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-256-is-pattern IMP-symbol-256-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-512 $p #Notation ( \kore-symbol-Lblkeys'LParUndsRParUnds'MAP'Unds'Set'Unds'Map ptn2 ) ( \app \kore-symbol-Lblkeys'LParUndsRParUnds'MAP'Unds'Set'Unds'Map-symbol ptn2 ) $= ( IMP-symbol-256-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-256-is-pattern IMP-symbol-256-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-256-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-256-substitution $p #Substitution ( \kore-symbol-Lblkeys'LParUndsRParUnds'MAP'Unds'Set'Unds'Map ptn1 ) ( \kore-symbol-Lblkeys'LParUndsRParUnds'MAP'Unds'Set'Unds'Map ptn2 ) ptn0 xX0 $= ( IMP-symbol-256-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-256-is-pattern substitution-disjoint substitution-app notation-cache-511 notation-cache-512 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-513 $p #Notation ( \kore-symbol-Lblkeys'LParUndsRParUnds'MAP'Unds'Set'Unds'Map ptn0 ) ( \app \kore-symbol-Lblkeys'LParUndsRParUnds'MAP'Unds'Set'Unds'Map-symbol ptn0 ) $= ( IMP-symbol-256-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-256-is-pattern IMP-symbol-256-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-256-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-256-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lblkeys'LParUndsRParUnds'MAP'Unds'Set'Unds'Map ptn0 ) $= ( IMP-symbol-256-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-256-is-pattern application-context-app-right notation-cache-513 notation-application-context ) DEBFBGADEBACHBIJ $. $}
notation-cache-514 $p #Notation ( \kore-symbol-Lblkeys'Unds'list'LParUndsRParUnds'MAP'Unds'List'Unds'Map ptn1 ) ( \app \kore-symbol-Lblkeys'Unds'list'LParUndsRParUnds'MAP'Unds'List'Unds'Map-symbol ptn1 ) $= ( IMP-symbol-257-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-257-is-pattern IMP-symbol-257-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-515 $p #Notation ( \kore-symbol-Lblkeys'Unds'list'LParUndsRParUnds'MAP'Unds'List'Unds'Map ptn2 ) ( \app \kore-symbol-Lblkeys'Unds'list'LParUndsRParUnds'MAP'Unds'List'Unds'Map-symbol ptn2 ) $= ( IMP-symbol-257-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-257-is-pattern IMP-symbol-257-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-257-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-257-substitution $p #Substitution ( \kore-symbol-Lblkeys'Unds'list'LParUndsRParUnds'MAP'Unds'List'Unds'Map ptn1 ) ( \kore-symbol-Lblkeys'Unds'list'LParUndsRParUnds'MAP'Unds'List'Unds'Map ptn2 ) ptn0 xX0 $= ( IMP-symbol-257-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-257-is-pattern substitution-disjoint substitution-app notation-cache-514 notation-cache-515 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-516 $p #Notation ( \kore-symbol-Lblkeys'Unds'list'LParUndsRParUnds'MAP'Unds'List'Unds'Map ptn0 ) ( \app \kore-symbol-Lblkeys'Unds'list'LParUndsRParUnds'MAP'Unds'List'Unds'Map-symbol ptn0 ) $= ( IMP-symbol-257-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-257-is-pattern IMP-symbol-257-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-257-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-257-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lblkeys'Unds'list'LParUndsRParUnds'MAP'Unds'List'Unds'Map ptn0 ) $= ( IMP-symbol-257-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-257-is-pattern application-context-app-right notation-cache-516 notation-application-context ) DEBFBGADEBACHBIJ $. $}
notation-cache-517 $p #Notation ( \kore-symbol-LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String ptn1 ) ( \app \kore-symbol-LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String-symbol ptn1 ) $= ( IMP-symbol-258-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-258-is-pattern IMP-symbol-258-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-518 $p #Notation ( \kore-symbol-LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String ptn2 ) ( \app \kore-symbol-LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String-symbol ptn2 ) $= ( IMP-symbol-258-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-258-is-pattern IMP-symbol-258-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-258-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-258-substitution $p #Substitution ( \kore-symbol-LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String ptn1 ) ( \kore-symbol-LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String ptn2 ) ptn0 xX0 $= ( IMP-symbol-258-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-258-is-pattern substitution-disjoint substitution-app notation-cache-517 notation-cache-518 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-519 $p #Notation ( \kore-symbol-LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String ptn0 ) ( \app \kore-symbol-LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String-symbol ptn0 ) $= ( IMP-symbol-258-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-258-is-pattern IMP-symbol-258-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-258-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-258-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String ptn0 ) $= ( IMP-symbol-258-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-258-is-pattern application-context-app-right notation-cache-519 notation-application-context ) DEBFBGADEBACHBIJ $. $}
notation-cache-520 $p #Notation ( \kore-symbol-Lbllog2Int'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int ptn1 ) ( \app \kore-symbol-Lbllog2Int'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int-symbol ptn1 ) $= ( IMP-symbol-259-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-259-is-pattern IMP-symbol-259-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-521 $p #Notation ( \kore-symbol-Lbllog2Int'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int ptn2 ) ( \app \kore-symbol-Lbllog2Int'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int-symbol ptn2 ) $= ( IMP-symbol-259-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-259-is-pattern IMP-symbol-259-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-259-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-259-substitution $p #Substitution ( \kore-symbol-Lbllog2Int'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int ptn1 ) ( \kore-symbol-Lbllog2Int'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int ptn2 ) ptn0 xX0 $= ( IMP-symbol-259-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-259-is-pattern substitution-disjoint substitution-app notation-cache-520 notation-cache-521 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-522 $p #Notation ( \kore-symbol-Lbllog2Int'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int ptn0 ) ( \app \kore-symbol-Lbllog2Int'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int-symbol ptn0 ) $= ( IMP-symbol-259-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-259-is-pattern IMP-symbol-259-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-259-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-259-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbllog2Int'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int ptn0 ) $= ( IMP-symbol-259-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-259-is-pattern application-context-app-right notation-cache-522 notation-application-context ) DEBFBGADEBACHBIJ $. $}
notation-cache-523 $p #Notation ( \kore-symbol-LblmakeList'LParUndsCommUndsRParUnds'LIST'Unds'List'Unds'Int'Unds'KItem ptn1 ptn2 ) ( \app ( \app \kore-symbol-LblmakeList'LParUndsCommUndsRParUnds'LIST'Unds'List'Unds'Int'Unds'KItem-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-260-is-symbol symbol-is-pattern IMP-symbol-260-is-pattern IMP-symbol-260-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-524 $p #Notation ( \kore-symbol-LblmakeList'LParUndsCommUndsRParUnds'LIST'Unds'List'Unds'Int'Unds'KItem ptn3 ptn4 ) ( \app ( \app \kore-symbol-LblmakeList'LParUndsCommUndsRParUnds'LIST'Unds'List'Unds'Int'Unds'KItem-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-260-is-symbol symbol-is-pattern IMP-symbol-260-is-pattern IMP-symbol-260-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-260-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-260-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-260-substitution $p #Substitution ( \kore-symbol-LblmakeList'LParUndsCommUndsRParUnds'LIST'Unds'List'Unds'Int'Unds'KItem ptn1 ptn2 ) ( \kore-symbol-LblmakeList'LParUndsCommUndsRParUnds'LIST'Unds'List'Unds'Int'Unds'KItem ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-260-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-260-is-pattern substitution-app substitution-disjoint notation-cache-523 notation-cache-524 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-525 $p #Notation ( \kore-symbol-LblmakeList'LParUndsCommUndsRParUnds'LIST'Unds'List'Unds'Int'Unds'KItem ptn0 ptn1 ) ( \app ( \app \kore-symbol-LblmakeList'LParUndsCommUndsRParUnds'LIST'Unds'List'Unds'Int'Unds'KItem-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-260-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-260-is-pattern IMP-symbol-260-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-260-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-260-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-LblmakeList'LParUndsCommUndsRParUnds'LIST'Unds'List'Unds'Int'Unds'KItem ptn0 ptn1 ) $= ( IMP-symbol-260-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-260-is-pattern application-context-app-right application-context-app-left notation-cache-525 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-260-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-260-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-LblmakeList'LParUndsCommUndsRParUnds'LIST'Unds'List'Unds'Int'Unds'KItem ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-260-is-symbol symbol-is-pattern IMP-symbol-260-is-pattern application-context-app-right notation-cache-525 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
notation-cache-526 $p #Notation ( \kore-symbol-LblmaxInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int ptn1 ptn2 ) ( \app ( \app \kore-symbol-LblmaxInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-261-is-symbol symbol-is-pattern IMP-symbol-261-is-pattern IMP-symbol-261-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-527 $p #Notation ( \kore-symbol-LblmaxInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int ptn3 ptn4 ) ( \app ( \app \kore-symbol-LblmaxInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-261-is-symbol symbol-is-pattern IMP-symbol-261-is-pattern IMP-symbol-261-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-261-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-261-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-261-substitution $p #Substitution ( \kore-symbol-LblmaxInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int ptn1 ptn2 ) ( \kore-symbol-LblmaxInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-261-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-261-is-pattern substitution-app substitution-disjoint notation-cache-526 notation-cache-527 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-528 $p #Notation ( \kore-symbol-LblmaxInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int ptn0 ptn1 ) ( \app ( \app \kore-symbol-LblmaxInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-261-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-261-is-pattern IMP-symbol-261-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-261-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-261-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-LblmaxInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int ptn0 ptn1 ) $= ( IMP-symbol-261-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-261-is-pattern application-context-app-right application-context-app-left notation-cache-528 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-261-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-261-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-LblmaxInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-261-is-symbol symbol-is-pattern IMP-symbol-261-is-pattern application-context-app-right notation-cache-528 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
notation-cache-529 $p #Notation ( \kore-symbol-LblminInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int ptn1 ptn2 ) ( \app ( \app \kore-symbol-LblminInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-262-is-symbol symbol-is-pattern IMP-symbol-262-is-pattern IMP-symbol-262-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-530 $p #Notation ( \kore-symbol-LblminInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int ptn3 ptn4 ) ( \app ( \app \kore-symbol-LblminInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-262-is-symbol symbol-is-pattern IMP-symbol-262-is-pattern IMP-symbol-262-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-262-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-262-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-262-substitution $p #Substitution ( \kore-symbol-LblminInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int ptn1 ptn2 ) ( \kore-symbol-LblminInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-262-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-262-is-pattern substitution-app substitution-disjoint notation-cache-529 notation-cache-530 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-531 $p #Notation ( \kore-symbol-LblminInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int ptn0 ptn1 ) ( \app ( \app \kore-symbol-LblminInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-262-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-262-is-pattern IMP-symbol-262-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-262-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-262-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-LblminInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int ptn0 ptn1 ) $= ( IMP-symbol-262-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-262-is-pattern application-context-app-right application-context-app-left notation-cache-531 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-262-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-262-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-LblminInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-262-is-symbol symbol-is-pattern IMP-symbol-262-is-pattern application-context-app-right notation-cache-531 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
${ IMP-symbol-263-substitution $p #Substitution \kore-symbol-LblnewUUID'Unds'STRING-COMMON'Unds'String \kore-symbol-LblnewUUID'Unds'STRING-COMMON'Unds'String ptn0 xX0 $= ( IMP-symbol-263-is-pattern substitution-disjoint ) CBAD $. $}
${ IMP-symbol-264-substitution $p #Substitution \kore-symbol-LblnoGeneratedCounterCell \kore-symbol-LblnoGeneratedCounterCell ptn0 xX0 $= ( IMP-symbol-264-is-pattern substitution-disjoint ) CBAD $. $}
${ IMP-symbol-265-substitution $p #Substitution \kore-symbol-LblnoKCell \kore-symbol-LblnoKCell ptn0 xX0 $= ( IMP-symbol-265-is-pattern substitution-disjoint ) CBAD $. $}
${ IMP-symbol-266-substitution $p #Substitution \kore-symbol-LblnoStateCell \kore-symbol-LblnoStateCell ptn0 xX0 $= ( IMP-symbol-266-is-pattern substitution-disjoint ) CBAD $. $}
${ IMP-symbol-267-substitution $p #Substitution \kore-symbol-LblnoTCell \kore-symbol-LblnoTCell ptn0 xX0 $= ( IMP-symbol-267-is-pattern substitution-disjoint ) CBAD $. $}
notation-cache-532 $p #Notation ( \kore-symbol-LblnotBool'Unds' ptn1 ) ( \app \kore-symbol-LblnotBool'Unds'-symbol ptn1 ) $= ( IMP-symbol-268-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-268-is-pattern IMP-symbol-268-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-533 $p #Notation ( \kore-symbol-LblnotBool'Unds' ptn2 ) ( \app \kore-symbol-LblnotBool'Unds'-symbol ptn2 ) $= ( IMP-symbol-268-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-268-is-pattern IMP-symbol-268-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-268-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-268-substitution $p #Substitution ( \kore-symbol-LblnotBool'Unds' ptn1 ) ( \kore-symbol-LblnotBool'Unds' ptn2 ) ptn0 xX0 $= ( IMP-symbol-268-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-268-is-pattern substitution-disjoint substitution-app notation-cache-532 notation-cache-533 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-534 $p #Notation ( \kore-symbol-LblnotBool'Unds' ptn0 ) ( \app \kore-symbol-LblnotBool'Unds'-symbol ptn0 ) $= ( IMP-symbol-268-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-268-is-pattern IMP-symbol-268-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-268-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-268-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-LblnotBool'Unds' ptn0 ) $= ( IMP-symbol-268-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-268-is-pattern application-context-app-right notation-cache-534 notation-application-context ) DEBFBGADEBACHBIJ $. $}
notation-cache-535 $p #Notation ( \kore-symbol-LblordChar'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String ptn1 ) ( \app \kore-symbol-LblordChar'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String-symbol ptn1 ) $= ( IMP-symbol-269-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-269-is-pattern IMP-symbol-269-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-536 $p #Notation ( \kore-symbol-LblordChar'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String ptn2 ) ( \app \kore-symbol-LblordChar'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String-symbol ptn2 ) $= ( IMP-symbol-269-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-269-is-pattern IMP-symbol-269-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-269-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-269-substitution $p #Substitution ( \kore-symbol-LblordChar'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String ptn1 ) ( \kore-symbol-LblordChar'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String ptn2 ) ptn0 xX0 $= ( IMP-symbol-269-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-269-is-pattern substitution-disjoint substitution-app notation-cache-535 notation-cache-536 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-537 $p #Notation ( \kore-symbol-LblordChar'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String ptn0 ) ( \app \kore-symbol-LblordChar'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String-symbol ptn0 ) $= ( IMP-symbol-269-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-269-is-pattern IMP-symbol-269-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-269-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-269-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-LblordChar'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String ptn0 ) $= ( IMP-symbol-269-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-269-is-pattern application-context-app-right notation-cache-537 notation-application-context ) DEBFBGADEBACHBIJ $. $}
notation-cache-538 $p #Notation ( \kore-symbol-Lblproject'ColnHash'tempFile'Coln'fd ptn1 ) ( \app \kore-symbol-Lblproject'ColnHash'tempFile'Coln'fd-symbol ptn1 ) $= ( IMP-symbol-270-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-270-is-pattern IMP-symbol-270-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-539 $p #Notation ( \kore-symbol-Lblproject'ColnHash'tempFile'Coln'fd ptn2 ) ( \app \kore-symbol-Lblproject'ColnHash'tempFile'Coln'fd-symbol ptn2 ) $= ( IMP-symbol-270-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-270-is-pattern IMP-symbol-270-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-270-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-270-substitution $p #Substitution ( \kore-symbol-Lblproject'ColnHash'tempFile'Coln'fd ptn1 ) ( \kore-symbol-Lblproject'ColnHash'tempFile'Coln'fd ptn2 ) ptn0 xX0 $= ( IMP-symbol-270-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-270-is-pattern substitution-disjoint substitution-app notation-cache-538 notation-cache-539 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-540 $p #Notation ( \kore-symbol-Lblproject'ColnHash'tempFile'Coln'fd ptn0 ) ( \app \kore-symbol-Lblproject'ColnHash'tempFile'Coln'fd-symbol ptn0 ) $= ( IMP-symbol-270-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-270-is-pattern IMP-symbol-270-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-270-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-270-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lblproject'ColnHash'tempFile'Coln'fd ptn0 ) $= ( IMP-symbol-270-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-270-is-pattern application-context-app-right notation-cache-540 notation-application-context ) DEBFBGADEBACHBIJ $. $}
notation-cache-541 $p #Notation ( \kore-symbol-Lblproject'ColnHash'tempFile'Coln'path ptn1 ) ( \app \kore-symbol-Lblproject'ColnHash'tempFile'Coln'path-symbol ptn1 ) $= ( IMP-symbol-271-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-271-is-pattern IMP-symbol-271-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-542 $p #Notation ( \kore-symbol-Lblproject'ColnHash'tempFile'Coln'path ptn2 ) ( \app \kore-symbol-Lblproject'ColnHash'tempFile'Coln'path-symbol ptn2 ) $= ( IMP-symbol-271-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-271-is-pattern IMP-symbol-271-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-271-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-271-substitution $p #Substitution ( \kore-symbol-Lblproject'ColnHash'tempFile'Coln'path ptn1 ) ( \kore-symbol-Lblproject'ColnHash'tempFile'Coln'path ptn2 ) ptn0 xX0 $= ( IMP-symbol-271-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-271-is-pattern substitution-disjoint substitution-app notation-cache-541 notation-cache-542 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-543 $p #Notation ( \kore-symbol-Lblproject'ColnHash'tempFile'Coln'path ptn0 ) ( \app \kore-symbol-Lblproject'ColnHash'tempFile'Coln'path-symbol ptn0 ) $= ( IMP-symbol-271-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-271-is-pattern IMP-symbol-271-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-271-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-271-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lblproject'ColnHash'tempFile'Coln'path ptn0 ) $= ( IMP-symbol-271-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-271-is-pattern application-context-app-right notation-cache-543 notation-application-context ) DEBFBGADEBACHBIJ $. $}
notation-cache-544 $p #Notation ( \kore-symbol-Lblproject'ColnHash'unknownIOError'Coln'errno ptn1 ) ( \app \kore-symbol-Lblproject'ColnHash'unknownIOError'Coln'errno-symbol ptn1 ) $= ( IMP-symbol-272-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-272-is-pattern IMP-symbol-272-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-545 $p #Notation ( \kore-symbol-Lblproject'ColnHash'unknownIOError'Coln'errno ptn2 ) ( \app \kore-symbol-Lblproject'ColnHash'unknownIOError'Coln'errno-symbol ptn2 ) $= ( IMP-symbol-272-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-272-is-pattern IMP-symbol-272-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-272-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-272-substitution $p #Substitution ( \kore-symbol-Lblproject'ColnHash'unknownIOError'Coln'errno ptn1 ) ( \kore-symbol-Lblproject'ColnHash'unknownIOError'Coln'errno ptn2 ) ptn0 xX0 $= ( IMP-symbol-272-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-272-is-pattern substitution-disjoint substitution-app notation-cache-544 notation-cache-545 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-546 $p #Notation ( \kore-symbol-Lblproject'ColnHash'unknownIOError'Coln'errno ptn0 ) ( \app \kore-symbol-Lblproject'ColnHash'unknownIOError'Coln'errno-symbol ptn0 ) $= ( IMP-symbol-272-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-272-is-pattern IMP-symbol-272-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-272-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-272-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lblproject'ColnHash'unknownIOError'Coln'errno ptn0 ) $= ( IMP-symbol-272-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-272-is-pattern application-context-app-right notation-cache-546 notation-application-context ) DEBFBGADEBACHBIJ $. $}
notation-cache-547 $p #Notation ( \kore-symbol-Lblproject'Coln'AExp ptn1 ) ( \app \kore-symbol-Lblproject'Coln'AExp-symbol ptn1 ) $= ( IMP-symbol-273-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-273-is-pattern IMP-symbol-273-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-548 $p #Notation ( \kore-symbol-Lblproject'Coln'AExp ptn2 ) ( \app \kore-symbol-Lblproject'Coln'AExp-symbol ptn2 ) $= ( IMP-symbol-273-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-273-is-pattern IMP-symbol-273-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-273-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-273-substitution $p #Substitution ( \kore-symbol-Lblproject'Coln'AExp ptn1 ) ( \kore-symbol-Lblproject'Coln'AExp ptn2 ) ptn0 xX0 $= ( IMP-symbol-273-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-273-is-pattern substitution-disjoint substitution-app notation-cache-547 notation-cache-548 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-549 $p #Notation ( \kore-symbol-Lblproject'Coln'AExp ptn0 ) ( \app \kore-symbol-Lblproject'Coln'AExp-symbol ptn0 ) $= ( IMP-symbol-273-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-273-is-pattern IMP-symbol-273-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-273-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-273-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lblproject'Coln'AExp ptn0 ) $= ( IMP-symbol-273-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-273-is-pattern application-context-app-right notation-cache-549 notation-application-context ) DEBFBGADEBACHBIJ $. $}
notation-cache-550 $p #Notation ( \kore-symbol-Lblproject'Coln'BExp ptn1 ) ( \app \kore-symbol-Lblproject'Coln'BExp-symbol ptn1 ) $= ( IMP-symbol-274-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-274-is-pattern IMP-symbol-274-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-551 $p #Notation ( \kore-symbol-Lblproject'Coln'BExp ptn2 ) ( \app \kore-symbol-Lblproject'Coln'BExp-symbol ptn2 ) $= ( IMP-symbol-274-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-274-is-pattern IMP-symbol-274-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-274-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-274-substitution $p #Substitution ( \kore-symbol-Lblproject'Coln'BExp ptn1 ) ( \kore-symbol-Lblproject'Coln'BExp ptn2 ) ptn0 xX0 $= ( IMP-symbol-274-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-274-is-pattern substitution-disjoint substitution-app notation-cache-550 notation-cache-551 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-552 $p #Notation ( \kore-symbol-Lblproject'Coln'BExp ptn0 ) ( \app \kore-symbol-Lblproject'Coln'BExp-symbol ptn0 ) $= ( IMP-symbol-274-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-274-is-pattern IMP-symbol-274-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-274-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-274-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lblproject'Coln'BExp ptn0 ) $= ( IMP-symbol-274-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-274-is-pattern application-context-app-right notation-cache-552 notation-application-context ) DEBFBGADEBACHBIJ $. $}
notation-cache-553 $p #Notation ( \kore-symbol-Lblproject'Coln'Block ptn1 ) ( \app \kore-symbol-Lblproject'Coln'Block-symbol ptn1 ) $= ( IMP-symbol-275-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-275-is-pattern IMP-symbol-275-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-554 $p #Notation ( \kore-symbol-Lblproject'Coln'Block ptn2 ) ( \app \kore-symbol-Lblproject'Coln'Block-symbol ptn2 ) $= ( IMP-symbol-275-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-275-is-pattern IMP-symbol-275-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-275-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-275-substitution $p #Substitution ( \kore-symbol-Lblproject'Coln'Block ptn1 ) ( \kore-symbol-Lblproject'Coln'Block ptn2 ) ptn0 xX0 $= ( IMP-symbol-275-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-275-is-pattern substitution-disjoint substitution-app notation-cache-553 notation-cache-554 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-555 $p #Notation ( \kore-symbol-Lblproject'Coln'Block ptn0 ) ( \app \kore-symbol-Lblproject'Coln'Block-symbol ptn0 ) $= ( IMP-symbol-275-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-275-is-pattern IMP-symbol-275-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-275-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-275-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lblproject'Coln'Block ptn0 ) $= ( IMP-symbol-275-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-275-is-pattern application-context-app-right notation-cache-555 notation-application-context ) DEBFBGADEBACHBIJ $. $}
notation-cache-556 $p #Notation ( \kore-symbol-Lblproject'Coln'Bool ptn1 ) ( \app \kore-symbol-Lblproject'Coln'Bool-symbol ptn1 ) $= ( IMP-symbol-276-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-276-is-pattern IMP-symbol-276-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-557 $p #Notation ( \kore-symbol-Lblproject'Coln'Bool ptn2 ) ( \app \kore-symbol-Lblproject'Coln'Bool-symbol ptn2 ) $= ( IMP-symbol-276-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-276-is-pattern IMP-symbol-276-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-276-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-276-substitution $p #Substitution ( \kore-symbol-Lblproject'Coln'Bool ptn1 ) ( \kore-symbol-Lblproject'Coln'Bool ptn2 ) ptn0 xX0 $= ( IMP-symbol-276-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-276-is-pattern substitution-disjoint substitution-app notation-cache-556 notation-cache-557 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-558 $p #Notation ( \kore-symbol-Lblproject'Coln'Bool ptn0 ) ( \app \kore-symbol-Lblproject'Coln'Bool-symbol ptn0 ) $= ( IMP-symbol-276-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-276-is-pattern IMP-symbol-276-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-276-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-276-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lblproject'Coln'Bool ptn0 ) $= ( IMP-symbol-276-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-276-is-pattern application-context-app-right notation-cache-558 notation-application-context ) DEBFBGADEBACHBIJ $. $}
notation-cache-559 $p #Notation ( \kore-symbol-Lblproject'Coln'Float ptn1 ) ( \app \kore-symbol-Lblproject'Coln'Float-symbol ptn1 ) $= ( IMP-symbol-277-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-277-is-pattern IMP-symbol-277-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-560 $p #Notation ( \kore-symbol-Lblproject'Coln'Float ptn2 ) ( \app \kore-symbol-Lblproject'Coln'Float-symbol ptn2 ) $= ( IMP-symbol-277-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-277-is-pattern IMP-symbol-277-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-277-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-277-substitution $p #Substitution ( \kore-symbol-Lblproject'Coln'Float ptn1 ) ( \kore-symbol-Lblproject'Coln'Float ptn2 ) ptn0 xX0 $= ( IMP-symbol-277-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-277-is-pattern substitution-disjoint substitution-app notation-cache-559 notation-cache-560 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-561 $p #Notation ( \kore-symbol-Lblproject'Coln'Float ptn0 ) ( \app \kore-symbol-Lblproject'Coln'Float-symbol ptn0 ) $= ( IMP-symbol-277-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-277-is-pattern IMP-symbol-277-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-277-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-277-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lblproject'Coln'Float ptn0 ) $= ( IMP-symbol-277-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-277-is-pattern application-context-app-right notation-cache-561 notation-application-context ) DEBFBGADEBACHBIJ $. $}
notation-cache-562 $p #Notation ( \kore-symbol-Lblproject'Coln'GeneratedCounterCell ptn1 ) ( \app \kore-symbol-Lblproject'Coln'GeneratedCounterCell-symbol ptn1 ) $= ( IMP-symbol-278-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-278-is-pattern IMP-symbol-278-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-563 $p #Notation ( \kore-symbol-Lblproject'Coln'GeneratedCounterCell ptn2 ) ( \app \kore-symbol-Lblproject'Coln'GeneratedCounterCell-symbol ptn2 ) $= ( IMP-symbol-278-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-278-is-pattern IMP-symbol-278-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-278-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-278-substitution $p #Substitution ( \kore-symbol-Lblproject'Coln'GeneratedCounterCell ptn1 ) ( \kore-symbol-Lblproject'Coln'GeneratedCounterCell ptn2 ) ptn0 xX0 $= ( IMP-symbol-278-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-278-is-pattern substitution-disjoint substitution-app notation-cache-562 notation-cache-563 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-564 $p #Notation ( \kore-symbol-Lblproject'Coln'GeneratedCounterCell ptn0 ) ( \app \kore-symbol-Lblproject'Coln'GeneratedCounterCell-symbol ptn0 ) $= ( IMP-symbol-278-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-278-is-pattern IMP-symbol-278-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-278-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-278-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lblproject'Coln'GeneratedCounterCell ptn0 ) $= ( IMP-symbol-278-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-278-is-pattern application-context-app-right notation-cache-564 notation-application-context ) DEBFBGADEBACHBIJ $. $}
notation-cache-565 $p #Notation ( \kore-symbol-Lblproject'Coln'GeneratedCounterCellOpt ptn1 ) ( \app \kore-symbol-Lblproject'Coln'GeneratedCounterCellOpt-symbol ptn1 ) $= ( IMP-symbol-279-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-279-is-pattern IMP-symbol-279-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-566 $p #Notation ( \kore-symbol-Lblproject'Coln'GeneratedCounterCellOpt ptn2 ) ( \app \kore-symbol-Lblproject'Coln'GeneratedCounterCellOpt-symbol ptn2 ) $= ( IMP-symbol-279-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-279-is-pattern IMP-symbol-279-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-279-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-279-substitution $p #Substitution ( \kore-symbol-Lblproject'Coln'GeneratedCounterCellOpt ptn1 ) ( \kore-symbol-Lblproject'Coln'GeneratedCounterCellOpt ptn2 ) ptn0 xX0 $= ( IMP-symbol-279-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-279-is-pattern substitution-disjoint substitution-app notation-cache-565 notation-cache-566 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-567 $p #Notation ( \kore-symbol-Lblproject'Coln'GeneratedCounterCellOpt ptn0 ) ( \app \kore-symbol-Lblproject'Coln'GeneratedCounterCellOpt-symbol ptn0 ) $= ( IMP-symbol-279-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-279-is-pattern IMP-symbol-279-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-279-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-279-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lblproject'Coln'GeneratedCounterCellOpt ptn0 ) $= ( IMP-symbol-279-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-279-is-pattern application-context-app-right notation-cache-567 notation-application-context ) DEBFBGADEBACHBIJ $. $}
notation-cache-568 $p #Notation ( \kore-symbol-Lblproject'Coln'GeneratedTopCell ptn1 ) ( \app \kore-symbol-Lblproject'Coln'GeneratedTopCell-symbol ptn1 ) $= ( IMP-symbol-280-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-280-is-pattern IMP-symbol-280-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-569 $p #Notation ( \kore-symbol-Lblproject'Coln'GeneratedTopCell ptn2 ) ( \app \kore-symbol-Lblproject'Coln'GeneratedTopCell-symbol ptn2 ) $= ( IMP-symbol-280-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-280-is-pattern IMP-symbol-280-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-280-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-280-substitution $p #Substitution ( \kore-symbol-Lblproject'Coln'GeneratedTopCell ptn1 ) ( \kore-symbol-Lblproject'Coln'GeneratedTopCell ptn2 ) ptn0 xX0 $= ( IMP-symbol-280-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-280-is-pattern substitution-disjoint substitution-app notation-cache-568 notation-cache-569 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-570 $p #Notation ( \kore-symbol-Lblproject'Coln'GeneratedTopCell ptn0 ) ( \app \kore-symbol-Lblproject'Coln'GeneratedTopCell-symbol ptn0 ) $= ( IMP-symbol-280-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-280-is-pattern IMP-symbol-280-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-280-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-280-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lblproject'Coln'GeneratedTopCell ptn0 ) $= ( IMP-symbol-280-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-280-is-pattern application-context-app-right notation-cache-570 notation-application-context ) DEBFBGADEBACHBIJ $. $}
notation-cache-571 $p #Notation ( \kore-symbol-Lblproject'Coln'GeneratedTopCellFragment ptn1 ) ( \app \kore-symbol-Lblproject'Coln'GeneratedTopCellFragment-symbol ptn1 ) $= ( IMP-symbol-281-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-281-is-pattern IMP-symbol-281-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-572 $p #Notation ( \kore-symbol-Lblproject'Coln'GeneratedTopCellFragment ptn2 ) ( \app \kore-symbol-Lblproject'Coln'GeneratedTopCellFragment-symbol ptn2 ) $= ( IMP-symbol-281-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-281-is-pattern IMP-symbol-281-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-281-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-281-substitution $p #Substitution ( \kore-symbol-Lblproject'Coln'GeneratedTopCellFragment ptn1 ) ( \kore-symbol-Lblproject'Coln'GeneratedTopCellFragment ptn2 ) ptn0 xX0 $= ( IMP-symbol-281-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-281-is-pattern substitution-disjoint substitution-app notation-cache-571 notation-cache-572 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-573 $p #Notation ( \kore-symbol-Lblproject'Coln'GeneratedTopCellFragment ptn0 ) ( \app \kore-symbol-Lblproject'Coln'GeneratedTopCellFragment-symbol ptn0 ) $= ( IMP-symbol-281-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-281-is-pattern IMP-symbol-281-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-281-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-281-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lblproject'Coln'GeneratedTopCellFragment ptn0 ) $= ( IMP-symbol-281-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-281-is-pattern application-context-app-right notation-cache-573 notation-application-context ) DEBFBGADEBACHBIJ $. $}
notation-cache-574 $p #Notation ( \kore-symbol-Lblproject'Coln'IOError ptn1 ) ( \app \kore-symbol-Lblproject'Coln'IOError-symbol ptn1 ) $= ( IMP-symbol-282-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-282-is-pattern IMP-symbol-282-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-575 $p #Notation ( \kore-symbol-Lblproject'Coln'IOError ptn2 ) ( \app \kore-symbol-Lblproject'Coln'IOError-symbol ptn2 ) $= ( IMP-symbol-282-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-282-is-pattern IMP-symbol-282-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-282-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-282-substitution $p #Substitution ( \kore-symbol-Lblproject'Coln'IOError ptn1 ) ( \kore-symbol-Lblproject'Coln'IOError ptn2 ) ptn0 xX0 $= ( IMP-symbol-282-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-282-is-pattern substitution-disjoint substitution-app notation-cache-574 notation-cache-575 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-576 $p #Notation ( \kore-symbol-Lblproject'Coln'IOError ptn0 ) ( \app \kore-symbol-Lblproject'Coln'IOError-symbol ptn0 ) $= ( IMP-symbol-282-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-282-is-pattern IMP-symbol-282-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-282-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-282-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lblproject'Coln'IOError ptn0 ) $= ( IMP-symbol-282-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-282-is-pattern application-context-app-right notation-cache-576 notation-application-context ) DEBFBGADEBACHBIJ $. $}
notation-cache-577 $p #Notation ( \kore-symbol-Lblproject'Coln'IOFile ptn1 ) ( \app \kore-symbol-Lblproject'Coln'IOFile-symbol ptn1 ) $= ( IMP-symbol-283-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-283-is-pattern IMP-symbol-283-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-578 $p #Notation ( \kore-symbol-Lblproject'Coln'IOFile ptn2 ) ( \app \kore-symbol-Lblproject'Coln'IOFile-symbol ptn2 ) $= ( IMP-symbol-283-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-283-is-pattern IMP-symbol-283-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-283-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-283-substitution $p #Substitution ( \kore-symbol-Lblproject'Coln'IOFile ptn1 ) ( \kore-symbol-Lblproject'Coln'IOFile ptn2 ) ptn0 xX0 $= ( IMP-symbol-283-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-283-is-pattern substitution-disjoint substitution-app notation-cache-577 notation-cache-578 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-579 $p #Notation ( \kore-symbol-Lblproject'Coln'IOFile ptn0 ) ( \app \kore-symbol-Lblproject'Coln'IOFile-symbol ptn0 ) $= ( IMP-symbol-283-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-283-is-pattern IMP-symbol-283-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-283-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-283-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lblproject'Coln'IOFile ptn0 ) $= ( IMP-symbol-283-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-283-is-pattern application-context-app-right notation-cache-579 notation-application-context ) DEBFBGADEBACHBIJ $. $}
notation-cache-580 $p #Notation ( \kore-symbol-Lblproject'Coln'IOInt ptn1 ) ( \app \kore-symbol-Lblproject'Coln'IOInt-symbol ptn1 ) $= ( IMP-symbol-284-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-284-is-pattern IMP-symbol-284-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-581 $p #Notation ( \kore-symbol-Lblproject'Coln'IOInt ptn2 ) ( \app \kore-symbol-Lblproject'Coln'IOInt-symbol ptn2 ) $= ( IMP-symbol-284-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-284-is-pattern IMP-symbol-284-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-284-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-284-substitution $p #Substitution ( \kore-symbol-Lblproject'Coln'IOInt ptn1 ) ( \kore-symbol-Lblproject'Coln'IOInt ptn2 ) ptn0 xX0 $= ( IMP-symbol-284-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-284-is-pattern substitution-disjoint substitution-app notation-cache-580 notation-cache-581 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-582 $p #Notation ( \kore-symbol-Lblproject'Coln'IOInt ptn0 ) ( \app \kore-symbol-Lblproject'Coln'IOInt-symbol ptn0 ) $= ( IMP-symbol-284-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-284-is-pattern IMP-symbol-284-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-284-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-284-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lblproject'Coln'IOInt ptn0 ) $= ( IMP-symbol-284-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-284-is-pattern application-context-app-right notation-cache-582 notation-application-context ) DEBFBGADEBACHBIJ $. $}
notation-cache-583 $p #Notation ( \kore-symbol-Lblproject'Coln'IOString ptn1 ) ( \app \kore-symbol-Lblproject'Coln'IOString-symbol ptn1 ) $= ( IMP-symbol-285-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-285-is-pattern IMP-symbol-285-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-584 $p #Notation ( \kore-symbol-Lblproject'Coln'IOString ptn2 ) ( \app \kore-symbol-Lblproject'Coln'IOString-symbol ptn2 ) $= ( IMP-symbol-285-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-285-is-pattern IMP-symbol-285-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-285-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-285-substitution $p #Substitution ( \kore-symbol-Lblproject'Coln'IOString ptn1 ) ( \kore-symbol-Lblproject'Coln'IOString ptn2 ) ptn0 xX0 $= ( IMP-symbol-285-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-285-is-pattern substitution-disjoint substitution-app notation-cache-583 notation-cache-584 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-585 $p #Notation ( \kore-symbol-Lblproject'Coln'IOString ptn0 ) ( \app \kore-symbol-Lblproject'Coln'IOString-symbol ptn0 ) $= ( IMP-symbol-285-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-285-is-pattern IMP-symbol-285-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-285-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-285-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lblproject'Coln'IOString ptn0 ) $= ( IMP-symbol-285-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-285-is-pattern application-context-app-right notation-cache-585 notation-application-context ) DEBFBGADEBACHBIJ $. $}
notation-cache-586 $p #Notation ( \kore-symbol-Lblproject'Coln'Id ptn1 ) ( \app \kore-symbol-Lblproject'Coln'Id-symbol ptn1 ) $= ( IMP-symbol-286-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-286-is-pattern IMP-symbol-286-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-587 $p #Notation ( \kore-symbol-Lblproject'Coln'Id ptn2 ) ( \app \kore-symbol-Lblproject'Coln'Id-symbol ptn2 ) $= ( IMP-symbol-286-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-286-is-pattern IMP-symbol-286-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-286-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-286-substitution $p #Substitution ( \kore-symbol-Lblproject'Coln'Id ptn1 ) ( \kore-symbol-Lblproject'Coln'Id ptn2 ) ptn0 xX0 $= ( IMP-symbol-286-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-286-is-pattern substitution-disjoint substitution-app notation-cache-586 notation-cache-587 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-588 $p #Notation ( \kore-symbol-Lblproject'Coln'Id ptn0 ) ( \app \kore-symbol-Lblproject'Coln'Id-symbol ptn0 ) $= ( IMP-symbol-286-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-286-is-pattern IMP-symbol-286-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-286-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-286-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lblproject'Coln'Id ptn0 ) $= ( IMP-symbol-286-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-286-is-pattern application-context-app-right notation-cache-588 notation-application-context ) DEBFBGADEBACHBIJ $. $}
notation-cache-589 $p #Notation ( \kore-symbol-Lblproject'Coln'Ids ptn1 ) ( \app \kore-symbol-Lblproject'Coln'Ids-symbol ptn1 ) $= ( IMP-symbol-287-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-287-is-pattern IMP-symbol-287-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-590 $p #Notation ( \kore-symbol-Lblproject'Coln'Ids ptn2 ) ( \app \kore-symbol-Lblproject'Coln'Ids-symbol ptn2 ) $= ( IMP-symbol-287-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-287-is-pattern IMP-symbol-287-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-287-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-287-substitution $p #Substitution ( \kore-symbol-Lblproject'Coln'Ids ptn1 ) ( \kore-symbol-Lblproject'Coln'Ids ptn2 ) ptn0 xX0 $= ( IMP-symbol-287-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-287-is-pattern substitution-disjoint substitution-app notation-cache-589 notation-cache-590 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-591 $p #Notation ( \kore-symbol-Lblproject'Coln'Ids ptn0 ) ( \app \kore-symbol-Lblproject'Coln'Ids-symbol ptn0 ) $= ( IMP-symbol-287-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-287-is-pattern IMP-symbol-287-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-287-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-287-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lblproject'Coln'Ids ptn0 ) $= ( IMP-symbol-287-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-287-is-pattern application-context-app-right notation-cache-591 notation-application-context ) DEBFBGADEBACHBIJ $. $}
notation-cache-592 $p #Notation ( \kore-symbol-Lblproject'Coln'Int ptn1 ) ( \app \kore-symbol-Lblproject'Coln'Int-symbol ptn1 ) $= ( IMP-symbol-288-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-288-is-pattern IMP-symbol-288-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-593 $p #Notation ( \kore-symbol-Lblproject'Coln'Int ptn2 ) ( \app \kore-symbol-Lblproject'Coln'Int-symbol ptn2 ) $= ( IMP-symbol-288-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-288-is-pattern IMP-symbol-288-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-288-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-288-substitution $p #Substitution ( \kore-symbol-Lblproject'Coln'Int ptn1 ) ( \kore-symbol-Lblproject'Coln'Int ptn2 ) ptn0 xX0 $= ( IMP-symbol-288-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-288-is-pattern substitution-disjoint substitution-app notation-cache-592 notation-cache-593 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-594 $p #Notation ( \kore-symbol-Lblproject'Coln'Int ptn0 ) ( \app \kore-symbol-Lblproject'Coln'Int-symbol ptn0 ) $= ( IMP-symbol-288-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-288-is-pattern IMP-symbol-288-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-288-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-288-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lblproject'Coln'Int ptn0 ) $= ( IMP-symbol-288-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-288-is-pattern application-context-app-right notation-cache-594 notation-application-context ) DEBFBGADEBACHBIJ $. $}
notation-cache-595 $p #Notation ( \kore-symbol-Lblproject'Coln'K ptn1 ) ( \app \kore-symbol-Lblproject'Coln'K-symbol ptn1 ) $= ( IMP-symbol-289-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-289-is-pattern IMP-symbol-289-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-596 $p #Notation ( \kore-symbol-Lblproject'Coln'K ptn2 ) ( \app \kore-symbol-Lblproject'Coln'K-symbol ptn2 ) $= ( IMP-symbol-289-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-289-is-pattern IMP-symbol-289-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-289-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-289-substitution $p #Substitution ( \kore-symbol-Lblproject'Coln'K ptn1 ) ( \kore-symbol-Lblproject'Coln'K ptn2 ) ptn0 xX0 $= ( IMP-symbol-289-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-289-is-pattern substitution-disjoint substitution-app notation-cache-595 notation-cache-596 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-597 $p #Notation ( \kore-symbol-Lblproject'Coln'K ptn0 ) ( \app \kore-symbol-Lblproject'Coln'K-symbol ptn0 ) $= ( IMP-symbol-289-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-289-is-pattern IMP-symbol-289-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-289-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-289-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lblproject'Coln'K ptn0 ) $= ( IMP-symbol-289-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-289-is-pattern application-context-app-right notation-cache-597 notation-application-context ) DEBFBGADEBACHBIJ $. $}
notation-cache-598 $p #Notation ( \kore-symbol-Lblproject'Coln'KCell ptn1 ) ( \app \kore-symbol-Lblproject'Coln'KCell-symbol ptn1 ) $= ( IMP-symbol-290-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-290-is-pattern IMP-symbol-290-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-599 $p #Notation ( \kore-symbol-Lblproject'Coln'KCell ptn2 ) ( \app \kore-symbol-Lblproject'Coln'KCell-symbol ptn2 ) $= ( IMP-symbol-290-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-290-is-pattern IMP-symbol-290-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-290-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-290-substitution $p #Substitution ( \kore-symbol-Lblproject'Coln'KCell ptn1 ) ( \kore-symbol-Lblproject'Coln'KCell ptn2 ) ptn0 xX0 $= ( IMP-symbol-290-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-290-is-pattern substitution-disjoint substitution-app notation-cache-598 notation-cache-599 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-600 $p #Notation ( \kore-symbol-Lblproject'Coln'KCell ptn0 ) ( \app \kore-symbol-Lblproject'Coln'KCell-symbol ptn0 ) $= ( IMP-symbol-290-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-290-is-pattern IMP-symbol-290-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-290-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-290-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lblproject'Coln'KCell ptn0 ) $= ( IMP-symbol-290-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-290-is-pattern application-context-app-right notation-cache-600 notation-application-context ) DEBFBGADEBACHBIJ $. $}
notation-cache-601 $p #Notation ( \kore-symbol-Lblproject'Coln'KCellOpt ptn1 ) ( \app \kore-symbol-Lblproject'Coln'KCellOpt-symbol ptn1 ) $= ( IMP-symbol-291-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-291-is-pattern IMP-symbol-291-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-602 $p #Notation ( \kore-symbol-Lblproject'Coln'KCellOpt ptn2 ) ( \app \kore-symbol-Lblproject'Coln'KCellOpt-symbol ptn2 ) $= ( IMP-symbol-291-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-291-is-pattern IMP-symbol-291-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-291-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-291-substitution $p #Substitution ( \kore-symbol-Lblproject'Coln'KCellOpt ptn1 ) ( \kore-symbol-Lblproject'Coln'KCellOpt ptn2 ) ptn0 xX0 $= ( IMP-symbol-291-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-291-is-pattern substitution-disjoint substitution-app notation-cache-601 notation-cache-602 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-603 $p #Notation ( \kore-symbol-Lblproject'Coln'KCellOpt ptn0 ) ( \app \kore-symbol-Lblproject'Coln'KCellOpt-symbol ptn0 ) $= ( IMP-symbol-291-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-291-is-pattern IMP-symbol-291-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-291-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-291-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lblproject'Coln'KCellOpt ptn0 ) $= ( IMP-symbol-291-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-291-is-pattern application-context-app-right notation-cache-603 notation-application-context ) DEBFBGADEBACHBIJ $. $}
notation-cache-604 $p #Notation ( \kore-symbol-Lblproject'Coln'KItem ptn1 ) ( \app \kore-symbol-Lblproject'Coln'KItem-symbol ptn1 ) $= ( IMP-symbol-292-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-292-is-pattern IMP-symbol-292-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-605 $p #Notation ( \kore-symbol-Lblproject'Coln'KItem ptn2 ) ( \app \kore-symbol-Lblproject'Coln'KItem-symbol ptn2 ) $= ( IMP-symbol-292-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-292-is-pattern IMP-symbol-292-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-292-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-292-substitution $p #Substitution ( \kore-symbol-Lblproject'Coln'KItem ptn1 ) ( \kore-symbol-Lblproject'Coln'KItem ptn2 ) ptn0 xX0 $= ( IMP-symbol-292-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-292-is-pattern substitution-disjoint substitution-app notation-cache-604 notation-cache-605 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-606 $p #Notation ( \kore-symbol-Lblproject'Coln'KItem ptn0 ) ( \app \kore-symbol-Lblproject'Coln'KItem-symbol ptn0 ) $= ( IMP-symbol-292-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-292-is-pattern IMP-symbol-292-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-292-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-292-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lblproject'Coln'KItem ptn0 ) $= ( IMP-symbol-292-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-292-is-pattern application-context-app-right notation-cache-606 notation-application-context ) DEBFBGADEBACHBIJ $. $}
notation-cache-607 $p #Notation ( \kore-symbol-Lblproject'Coln'KResult ptn1 ) ( \app \kore-symbol-Lblproject'Coln'KResult-symbol ptn1 ) $= ( IMP-symbol-293-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-293-is-pattern IMP-symbol-293-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-608 $p #Notation ( \kore-symbol-Lblproject'Coln'KResult ptn2 ) ( \app \kore-symbol-Lblproject'Coln'KResult-symbol ptn2 ) $= ( IMP-symbol-293-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-293-is-pattern IMP-symbol-293-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-293-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-293-substitution $p #Substitution ( \kore-symbol-Lblproject'Coln'KResult ptn1 ) ( \kore-symbol-Lblproject'Coln'KResult ptn2 ) ptn0 xX0 $= ( IMP-symbol-293-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-293-is-pattern substitution-disjoint substitution-app notation-cache-607 notation-cache-608 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-609 $p #Notation ( \kore-symbol-Lblproject'Coln'KResult ptn0 ) ( \app \kore-symbol-Lblproject'Coln'KResult-symbol ptn0 ) $= ( IMP-symbol-293-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-293-is-pattern IMP-symbol-293-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-293-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-293-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lblproject'Coln'KResult ptn0 ) $= ( IMP-symbol-293-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-293-is-pattern application-context-app-right notation-cache-609 notation-application-context ) DEBFBGADEBACHBIJ $. $}
notation-cache-610 $p #Notation ( \kore-symbol-Lblproject'Coln'List ptn1 ) ( \app \kore-symbol-Lblproject'Coln'List-symbol ptn1 ) $= ( IMP-symbol-294-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-294-is-pattern IMP-symbol-294-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-611 $p #Notation ( \kore-symbol-Lblproject'Coln'List ptn2 ) ( \app \kore-symbol-Lblproject'Coln'List-symbol ptn2 ) $= ( IMP-symbol-294-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-294-is-pattern IMP-symbol-294-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-294-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-294-substitution $p #Substitution ( \kore-symbol-Lblproject'Coln'List ptn1 ) ( \kore-symbol-Lblproject'Coln'List ptn2 ) ptn0 xX0 $= ( IMP-symbol-294-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-294-is-pattern substitution-disjoint substitution-app notation-cache-610 notation-cache-611 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-612 $p #Notation ( \kore-symbol-Lblproject'Coln'List ptn0 ) ( \app \kore-symbol-Lblproject'Coln'List-symbol ptn0 ) $= ( IMP-symbol-294-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-294-is-pattern IMP-symbol-294-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-294-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-294-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lblproject'Coln'List ptn0 ) $= ( IMP-symbol-294-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-294-is-pattern application-context-app-right notation-cache-612 notation-application-context ) DEBFBGADEBACHBIJ $. $}
notation-cache-613 $p #Notation ( \kore-symbol-Lblproject'Coln'Map ptn1 ) ( \app \kore-symbol-Lblproject'Coln'Map-symbol ptn1 ) $= ( IMP-symbol-295-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-295-is-pattern IMP-symbol-295-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-614 $p #Notation ( \kore-symbol-Lblproject'Coln'Map ptn2 ) ( \app \kore-symbol-Lblproject'Coln'Map-symbol ptn2 ) $= ( IMP-symbol-295-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-295-is-pattern IMP-symbol-295-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-295-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-295-substitution $p #Substitution ( \kore-symbol-Lblproject'Coln'Map ptn1 ) ( \kore-symbol-Lblproject'Coln'Map ptn2 ) ptn0 xX0 $= ( IMP-symbol-295-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-295-is-pattern substitution-disjoint substitution-app notation-cache-613 notation-cache-614 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-615 $p #Notation ( \kore-symbol-Lblproject'Coln'Map ptn0 ) ( \app \kore-symbol-Lblproject'Coln'Map-symbol ptn0 ) $= ( IMP-symbol-295-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-295-is-pattern IMP-symbol-295-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-295-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-295-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lblproject'Coln'Map ptn0 ) $= ( IMP-symbol-295-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-295-is-pattern application-context-app-right notation-cache-615 notation-application-context ) DEBFBGADEBACHBIJ $. $}
notation-cache-616 $p #Notation ( \kore-symbol-Lblproject'Coln'Pgm ptn1 ) ( \app \kore-symbol-Lblproject'Coln'Pgm-symbol ptn1 ) $= ( IMP-symbol-296-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-296-is-pattern IMP-symbol-296-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-617 $p #Notation ( \kore-symbol-Lblproject'Coln'Pgm ptn2 ) ( \app \kore-symbol-Lblproject'Coln'Pgm-symbol ptn2 ) $= ( IMP-symbol-296-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-296-is-pattern IMP-symbol-296-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-296-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-296-substitution $p #Substitution ( \kore-symbol-Lblproject'Coln'Pgm ptn1 ) ( \kore-symbol-Lblproject'Coln'Pgm ptn2 ) ptn0 xX0 $= ( IMP-symbol-296-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-296-is-pattern substitution-disjoint substitution-app notation-cache-616 notation-cache-617 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-618 $p #Notation ( \kore-symbol-Lblproject'Coln'Pgm ptn0 ) ( \app \kore-symbol-Lblproject'Coln'Pgm-symbol ptn0 ) $= ( IMP-symbol-296-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-296-is-pattern IMP-symbol-296-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-296-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-296-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lblproject'Coln'Pgm ptn0 ) $= ( IMP-symbol-296-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-296-is-pattern application-context-app-right notation-cache-618 notation-application-context ) DEBFBGADEBACHBIJ $. $}
notation-cache-619 $p #Notation ( \kore-symbol-Lblproject'Coln'Set ptn1 ) ( \app \kore-symbol-Lblproject'Coln'Set-symbol ptn1 ) $= ( IMP-symbol-297-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-297-is-pattern IMP-symbol-297-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-620 $p #Notation ( \kore-symbol-Lblproject'Coln'Set ptn2 ) ( \app \kore-symbol-Lblproject'Coln'Set-symbol ptn2 ) $= ( IMP-symbol-297-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-297-is-pattern IMP-symbol-297-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-297-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-297-substitution $p #Substitution ( \kore-symbol-Lblproject'Coln'Set ptn1 ) ( \kore-symbol-Lblproject'Coln'Set ptn2 ) ptn0 xX0 $= ( IMP-symbol-297-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-297-is-pattern substitution-disjoint substitution-app notation-cache-619 notation-cache-620 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-621 $p #Notation ( \kore-symbol-Lblproject'Coln'Set ptn0 ) ( \app \kore-symbol-Lblproject'Coln'Set-symbol ptn0 ) $= ( IMP-symbol-297-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-297-is-pattern IMP-symbol-297-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-297-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-297-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lblproject'Coln'Set ptn0 ) $= ( IMP-symbol-297-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-297-is-pattern application-context-app-right notation-cache-621 notation-application-context ) DEBFBGADEBACHBIJ $. $}
notation-cache-622 $p #Notation ( \kore-symbol-Lblproject'Coln'StateCell ptn1 ) ( \app \kore-symbol-Lblproject'Coln'StateCell-symbol ptn1 ) $= ( IMP-symbol-298-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-298-is-pattern IMP-symbol-298-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-623 $p #Notation ( \kore-symbol-Lblproject'Coln'StateCell ptn2 ) ( \app \kore-symbol-Lblproject'Coln'StateCell-symbol ptn2 ) $= ( IMP-symbol-298-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-298-is-pattern IMP-symbol-298-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-298-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-298-substitution $p #Substitution ( \kore-symbol-Lblproject'Coln'StateCell ptn1 ) ( \kore-symbol-Lblproject'Coln'StateCell ptn2 ) ptn0 xX0 $= ( IMP-symbol-298-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-298-is-pattern substitution-disjoint substitution-app notation-cache-622 notation-cache-623 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-624 $p #Notation ( \kore-symbol-Lblproject'Coln'StateCell ptn0 ) ( \app \kore-symbol-Lblproject'Coln'StateCell-symbol ptn0 ) $= ( IMP-symbol-298-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-298-is-pattern IMP-symbol-298-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-298-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-298-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lblproject'Coln'StateCell ptn0 ) $= ( IMP-symbol-298-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-298-is-pattern application-context-app-right notation-cache-624 notation-application-context ) DEBFBGADEBACHBIJ $. $}
notation-cache-625 $p #Notation ( \kore-symbol-Lblproject'Coln'StateCellOpt ptn1 ) ( \app \kore-symbol-Lblproject'Coln'StateCellOpt-symbol ptn1 ) $= ( IMP-symbol-299-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-299-is-pattern IMP-symbol-299-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-626 $p #Notation ( \kore-symbol-Lblproject'Coln'StateCellOpt ptn2 ) ( \app \kore-symbol-Lblproject'Coln'StateCellOpt-symbol ptn2 ) $= ( IMP-symbol-299-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-299-is-pattern IMP-symbol-299-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-299-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-299-substitution $p #Substitution ( \kore-symbol-Lblproject'Coln'StateCellOpt ptn1 ) ( \kore-symbol-Lblproject'Coln'StateCellOpt ptn2 ) ptn0 xX0 $= ( IMP-symbol-299-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-299-is-pattern substitution-disjoint substitution-app notation-cache-625 notation-cache-626 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-627 $p #Notation ( \kore-symbol-Lblproject'Coln'StateCellOpt ptn0 ) ( \app \kore-symbol-Lblproject'Coln'StateCellOpt-symbol ptn0 ) $= ( IMP-symbol-299-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-299-is-pattern IMP-symbol-299-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-299-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-299-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lblproject'Coln'StateCellOpt ptn0 ) $= ( IMP-symbol-299-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-299-is-pattern application-context-app-right notation-cache-627 notation-application-context ) DEBFBGADEBACHBIJ $. $}
notation-cache-628 $p #Notation ( \kore-symbol-Lblproject'Coln'Stmt ptn1 ) ( \app \kore-symbol-Lblproject'Coln'Stmt-symbol ptn1 ) $= ( IMP-symbol-300-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-300-is-pattern IMP-symbol-300-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-629 $p #Notation ( \kore-symbol-Lblproject'Coln'Stmt ptn2 ) ( \app \kore-symbol-Lblproject'Coln'Stmt-symbol ptn2 ) $= ( IMP-symbol-300-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-300-is-pattern IMP-symbol-300-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-300-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-300-substitution $p #Substitution ( \kore-symbol-Lblproject'Coln'Stmt ptn1 ) ( \kore-symbol-Lblproject'Coln'Stmt ptn2 ) ptn0 xX0 $= ( IMP-symbol-300-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-300-is-pattern substitution-disjoint substitution-app notation-cache-628 notation-cache-629 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-630 $p #Notation ( \kore-symbol-Lblproject'Coln'Stmt ptn0 ) ( \app \kore-symbol-Lblproject'Coln'Stmt-symbol ptn0 ) $= ( IMP-symbol-300-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-300-is-pattern IMP-symbol-300-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-300-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-300-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lblproject'Coln'Stmt ptn0 ) $= ( IMP-symbol-300-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-300-is-pattern application-context-app-right notation-cache-630 notation-application-context ) DEBFBGADEBACHBIJ $. $}
notation-cache-631 $p #Notation ( \kore-symbol-Lblproject'Coln'Stream ptn1 ) ( \app \kore-symbol-Lblproject'Coln'Stream-symbol ptn1 ) $= ( IMP-symbol-301-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-301-is-pattern IMP-symbol-301-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-632 $p #Notation ( \kore-symbol-Lblproject'Coln'Stream ptn2 ) ( \app \kore-symbol-Lblproject'Coln'Stream-symbol ptn2 ) $= ( IMP-symbol-301-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-301-is-pattern IMP-symbol-301-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-301-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-301-substitution $p #Substitution ( \kore-symbol-Lblproject'Coln'Stream ptn1 ) ( \kore-symbol-Lblproject'Coln'Stream ptn2 ) ptn0 xX0 $= ( IMP-symbol-301-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-301-is-pattern substitution-disjoint substitution-app notation-cache-631 notation-cache-632 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-633 $p #Notation ( \kore-symbol-Lblproject'Coln'Stream ptn0 ) ( \app \kore-symbol-Lblproject'Coln'Stream-symbol ptn0 ) $= ( IMP-symbol-301-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-301-is-pattern IMP-symbol-301-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-301-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-301-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lblproject'Coln'Stream ptn0 ) $= ( IMP-symbol-301-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-301-is-pattern application-context-app-right notation-cache-633 notation-application-context ) DEBFBGADEBACHBIJ $. $}
notation-cache-634 $p #Notation ( \kore-symbol-Lblproject'Coln'String ptn1 ) ( \app \kore-symbol-Lblproject'Coln'String-symbol ptn1 ) $= ( IMP-symbol-302-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-302-is-pattern IMP-symbol-302-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-635 $p #Notation ( \kore-symbol-Lblproject'Coln'String ptn2 ) ( \app \kore-symbol-Lblproject'Coln'String-symbol ptn2 ) $= ( IMP-symbol-302-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-302-is-pattern IMP-symbol-302-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-302-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-302-substitution $p #Substitution ( \kore-symbol-Lblproject'Coln'String ptn1 ) ( \kore-symbol-Lblproject'Coln'String ptn2 ) ptn0 xX0 $= ( IMP-symbol-302-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-302-is-pattern substitution-disjoint substitution-app notation-cache-634 notation-cache-635 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-636 $p #Notation ( \kore-symbol-Lblproject'Coln'String ptn0 ) ( \app \kore-symbol-Lblproject'Coln'String-symbol ptn0 ) $= ( IMP-symbol-302-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-302-is-pattern IMP-symbol-302-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-302-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-302-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lblproject'Coln'String ptn0 ) $= ( IMP-symbol-302-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-302-is-pattern application-context-app-right notation-cache-636 notation-application-context ) DEBFBGADEBACHBIJ $. $}
notation-cache-637 $p #Notation ( \kore-symbol-Lblproject'Coln'TCell ptn1 ) ( \app \kore-symbol-Lblproject'Coln'TCell-symbol ptn1 ) $= ( IMP-symbol-303-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-303-is-pattern IMP-symbol-303-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-638 $p #Notation ( \kore-symbol-Lblproject'Coln'TCell ptn2 ) ( \app \kore-symbol-Lblproject'Coln'TCell-symbol ptn2 ) $= ( IMP-symbol-303-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-303-is-pattern IMP-symbol-303-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-303-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-303-substitution $p #Substitution ( \kore-symbol-Lblproject'Coln'TCell ptn1 ) ( \kore-symbol-Lblproject'Coln'TCell ptn2 ) ptn0 xX0 $= ( IMP-symbol-303-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-303-is-pattern substitution-disjoint substitution-app notation-cache-637 notation-cache-638 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-639 $p #Notation ( \kore-symbol-Lblproject'Coln'TCell ptn0 ) ( \app \kore-symbol-Lblproject'Coln'TCell-symbol ptn0 ) $= ( IMP-symbol-303-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-303-is-pattern IMP-symbol-303-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-303-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-303-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lblproject'Coln'TCell ptn0 ) $= ( IMP-symbol-303-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-303-is-pattern application-context-app-right notation-cache-639 notation-application-context ) DEBFBGADEBACHBIJ $. $}
notation-cache-640 $p #Notation ( \kore-symbol-Lblproject'Coln'TCellFragment ptn1 ) ( \app \kore-symbol-Lblproject'Coln'TCellFragment-symbol ptn1 ) $= ( IMP-symbol-304-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-304-is-pattern IMP-symbol-304-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-641 $p #Notation ( \kore-symbol-Lblproject'Coln'TCellFragment ptn2 ) ( \app \kore-symbol-Lblproject'Coln'TCellFragment-symbol ptn2 ) $= ( IMP-symbol-304-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-304-is-pattern IMP-symbol-304-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-304-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-304-substitution $p #Substitution ( \kore-symbol-Lblproject'Coln'TCellFragment ptn1 ) ( \kore-symbol-Lblproject'Coln'TCellFragment ptn2 ) ptn0 xX0 $= ( IMP-symbol-304-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-304-is-pattern substitution-disjoint substitution-app notation-cache-640 notation-cache-641 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-642 $p #Notation ( \kore-symbol-Lblproject'Coln'TCellFragment ptn0 ) ( \app \kore-symbol-Lblproject'Coln'TCellFragment-symbol ptn0 ) $= ( IMP-symbol-304-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-304-is-pattern IMP-symbol-304-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-304-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-304-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lblproject'Coln'TCellFragment ptn0 ) $= ( IMP-symbol-304-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-304-is-pattern application-context-app-right notation-cache-642 notation-application-context ) DEBFBGADEBACHBIJ $. $}
notation-cache-643 $p #Notation ( \kore-symbol-Lblproject'Coln'TCellOpt ptn1 ) ( \app \kore-symbol-Lblproject'Coln'TCellOpt-symbol ptn1 ) $= ( IMP-symbol-305-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-305-is-pattern IMP-symbol-305-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-644 $p #Notation ( \kore-symbol-Lblproject'Coln'TCellOpt ptn2 ) ( \app \kore-symbol-Lblproject'Coln'TCellOpt-symbol ptn2 ) $= ( IMP-symbol-305-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-305-is-pattern IMP-symbol-305-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-305-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-305-substitution $p #Substitution ( \kore-symbol-Lblproject'Coln'TCellOpt ptn1 ) ( \kore-symbol-Lblproject'Coln'TCellOpt ptn2 ) ptn0 xX0 $= ( IMP-symbol-305-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-305-is-pattern substitution-disjoint substitution-app notation-cache-643 notation-cache-644 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-645 $p #Notation ( \kore-symbol-Lblproject'Coln'TCellOpt ptn0 ) ( \app \kore-symbol-Lblproject'Coln'TCellOpt-symbol ptn0 ) $= ( IMP-symbol-305-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-305-is-pattern IMP-symbol-305-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-305-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-305-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lblproject'Coln'TCellOpt ptn0 ) $= ( IMP-symbol-305-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-305-is-pattern application-context-app-right notation-cache-645 notation-application-context ) DEBFBGADEBACHBIJ $. $}
notation-cache-646 $p #Notation ( \kore-symbol-LblrandInt'LParUndsRParUnds'INT'Unds'Int'Unds'Int ptn1 ) ( \app \kore-symbol-LblrandInt'LParUndsRParUnds'INT'Unds'Int'Unds'Int-symbol ptn1 ) $= ( IMP-symbol-306-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-306-is-pattern IMP-symbol-306-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-647 $p #Notation ( \kore-symbol-LblrandInt'LParUndsRParUnds'INT'Unds'Int'Unds'Int ptn2 ) ( \app \kore-symbol-LblrandInt'LParUndsRParUnds'INT'Unds'Int'Unds'Int-symbol ptn2 ) $= ( IMP-symbol-306-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-306-is-pattern IMP-symbol-306-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-306-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-306-substitution $p #Substitution ( \kore-symbol-LblrandInt'LParUndsRParUnds'INT'Unds'Int'Unds'Int ptn1 ) ( \kore-symbol-LblrandInt'LParUndsRParUnds'INT'Unds'Int'Unds'Int ptn2 ) ptn0 xX0 $= ( IMP-symbol-306-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-306-is-pattern substitution-disjoint substitution-app notation-cache-646 notation-cache-647 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-648 $p #Notation ( \kore-symbol-LblrandInt'LParUndsRParUnds'INT'Unds'Int'Unds'Int ptn0 ) ( \app \kore-symbol-LblrandInt'LParUndsRParUnds'INT'Unds'Int'Unds'Int-symbol ptn0 ) $= ( IMP-symbol-306-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-306-is-pattern IMP-symbol-306-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-306-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-306-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-LblrandInt'LParUndsRParUnds'INT'Unds'Int'Unds'Int ptn0 ) $= ( IMP-symbol-306-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-306-is-pattern application-context-app-right notation-cache-648 notation-application-context ) DEBFBGADEBACHBIJ $. $}
notation-cache-649 $p #Notation ( \kore-symbol-LblremoveAll'LParUndsCommUndsRParUnds'MAP'Unds'Map'Unds'Map'Unds'Set ptn1 ptn2 ) ( \app ( \app \kore-symbol-LblremoveAll'LParUndsCommUndsRParUnds'MAP'Unds'Map'Unds'Map'Unds'Set-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-307-is-symbol symbol-is-pattern IMP-symbol-307-is-pattern IMP-symbol-307-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-650 $p #Notation ( \kore-symbol-LblremoveAll'LParUndsCommUndsRParUnds'MAP'Unds'Map'Unds'Map'Unds'Set ptn3 ptn4 ) ( \app ( \app \kore-symbol-LblremoveAll'LParUndsCommUndsRParUnds'MAP'Unds'Map'Unds'Map'Unds'Set-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-307-is-symbol symbol-is-pattern IMP-symbol-307-is-pattern IMP-symbol-307-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-307-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-307-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-307-substitution $p #Substitution ( \kore-symbol-LblremoveAll'LParUndsCommUndsRParUnds'MAP'Unds'Map'Unds'Map'Unds'Set ptn1 ptn2 ) ( \kore-symbol-LblremoveAll'LParUndsCommUndsRParUnds'MAP'Unds'Map'Unds'Map'Unds'Set ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-307-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-307-is-pattern substitution-app substitution-disjoint notation-cache-649 notation-cache-650 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-651 $p #Notation ( \kore-symbol-LblremoveAll'LParUndsCommUndsRParUnds'MAP'Unds'Map'Unds'Map'Unds'Set ptn0 ptn1 ) ( \app ( \app \kore-symbol-LblremoveAll'LParUndsCommUndsRParUnds'MAP'Unds'Map'Unds'Map'Unds'Set-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-307-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-307-is-pattern IMP-symbol-307-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-307-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-307-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-LblremoveAll'LParUndsCommUndsRParUnds'MAP'Unds'Map'Unds'Map'Unds'Set ptn0 ptn1 ) $= ( IMP-symbol-307-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-307-is-pattern application-context-app-right application-context-app-left notation-cache-651 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-307-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-307-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-LblremoveAll'LParUndsCommUndsRParUnds'MAP'Unds'Map'Unds'Map'Unds'Set ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-307-is-symbol symbol-is-pattern IMP-symbol-307-is-pattern application-context-app-right notation-cache-651 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
${ IMP-symbol-308-substitution.0 $e #Substitution ptn1 ptn5 ptn0 xX0 $.
   IMP-symbol-308-substitution.1 $e #Substitution ptn2 ptn6 ptn0 xX0 $.
   IMP-symbol-308-substitution.2 $e #Substitution ptn3 ptn7 ptn0 xX0 $.
   IMP-symbol-308-substitution.3 $e #Substitution ptn4 ptn8 ptn0 xX0 $.
   IMP-symbol-308-substitution $p #Substitution ( \kore-symbol-Lblreplace'LParUndsCommUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String'Unds'Int ptn1 ptn2 ptn3 ptn4 ) ( \kore-symbol-Lblreplace'LParUndsCommUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String'Unds'Int ptn5 ptn6 ptn7 ptn8 ) ptn0 xX0 $= ( app-is-pattern IMP-symbol-308-is-symbol symbol-is-pattern IMP-symbol-308-is-pattern substitution-app notation-reflexivity IMP-symbol-308-is-sugar notation-transitivity substitution-disjoint notation-substitution ) PQCODOEOFOPQGOHOIOJOBCDEFRGHIJRBABPQCODOEOFPQGOHOIOJABPQCODOEPQGOHOIABPQCODPQGOHABPQCPQGAPQBAUCKSLSMSNSCDEFRPQCODOEOFOPQCODOEOFOCDEFUAPQCODOEOFOTUBGHIJRPQGOHOIOJOPQGOHOIOJOGHIJUAPQGOHOIOJOTUBBTUD $. $}
notation-cache-652 $p #Notation ( \kore-symbol-Lblreplace'LParUndsCommUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String'Unds'Int ptn0 ptn1 ptn2 ptn3 ) ( \app ( \app ( \app ( \app \kore-symbol-Lblreplace'LParUndsCommUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String'Unds'Int-symbol ptn0 ) ptn1 ) ptn2 ) ptn3 ) $= ( app-is-pattern IMP-symbol-308-is-symbol symbol-is-pattern notation-reflexivity notation-app IMP-symbol-308-is-pattern IMP-symbol-308-is-sugar notation-transitivity ) ABCDJFGAEBECEDEFGAEBECEDEABCDKFGAEBECEDFGAEBECEDFGAEBECFGAEBECFGAEBFGAEBFGAFGAFGHAHIBHICHIDHIL $.
${ $d xX0 ptn1 $.
   $d xX0 ptn2 $.
   $d xX0 ptn3 $.
   IMP-symbol-308-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-308-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lblreplace'LParUndsCommUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String'Unds'Int ptn0 ptn1 ptn2 ptn3 ) $= ( app-is-pattern IMP-symbol-308-is-symbol symbol-is-pattern application-context-app-left IMP-symbol-308-is-pattern application-context-app-right notation-cache-652 notation-application-context ) HIBGCGDGEGBCDEKAHIBGCGDGEAHIBGCGDAHIBGCAHIBAFLJJJBCDEMN $. $}
${ $d xX0 ptn0 $.
   $d xX0 ptn2 $.
   $d xX0 ptn3 $.
   IMP-symbol-308-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-308-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-Lblreplace'LParUndsCommUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String'Unds'Int ptn0 ptn1 ptn2 ptn3 ) $= ( app-is-pattern IMP-symbol-308-is-symbol symbol-is-pattern application-context-app-left IMP-symbol-308-is-pattern application-context-app-right notation-cache-652 notation-application-context ) HIBGCGDGEGBCDEKAHIBGCGDGEAHIBGCGDAHIBGCAFLJJBCDEMN $. $}
${ $d xX0 ptn0 $.
   $d xX0 ptn1 $.
   $d xX0 ptn3 $.
   IMP-symbol-308-application-context-2.0 $e #ApplicationContext xX0 ptn2 $.
   IMP-symbol-308-application-context-2 $p #ApplicationContext xX0 ( \kore-symbol-Lblreplace'LParUndsCommUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String'Unds'Int ptn0 ptn1 ptn2 ptn3 ) $= ( app-is-pattern IMP-symbol-308-is-symbol symbol-is-pattern IMP-symbol-308-is-pattern application-context-app-right application-context-app-left notation-cache-652 notation-application-context ) HIBGCGDGEGBCDEJAHIBGCGDGEAHIBGCGDAFKLBCDEMN $. $}
${ $d xX0 ptn0 $.
   $d xX0 ptn1 $.
   $d xX0 ptn2 $.
   IMP-symbol-308-application-context-3.0 $e #ApplicationContext xX0 ptn3 $.
   IMP-symbol-308-application-context-3 $p #ApplicationContext xX0 ( \kore-symbol-Lblreplace'LParUndsCommUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String'Unds'Int ptn0 ptn1 ptn2 ptn3 ) $= ( app-is-pattern IMP-symbol-308-is-symbol symbol-is-pattern IMP-symbol-308-is-pattern application-context-app-right notation-cache-652 notation-application-context ) HIBGCGDGEGBCDEJAHIBGCGDGEAFKBCDELM $. $}
${ IMP-symbol-309-substitution.0 $e #Substitution ptn1 ptn4 ptn0 xX0 $.
   IMP-symbol-309-substitution.1 $e #Substitution ptn2 ptn5 ptn0 xX0 $.
   IMP-symbol-309-substitution.2 $e #Substitution ptn3 ptn6 ptn0 xX0 $.
   IMP-symbol-309-substitution $p #Substitution ( \kore-symbol-LblreplaceAll'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String ptn1 ptn2 ptn3 ) ( \kore-symbol-LblreplaceAll'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String ptn4 ptn5 ptn6 ) ptn0 xX0 $= ( app-is-pattern IMP-symbol-309-is-symbol symbol-is-pattern IMP-symbol-309-is-pattern substitution-app notation-reflexivity IMP-symbol-309-is-sugar notation-transitivity substitution-disjoint notation-substitution ) MNCLDLELMNFLGLHLBCDEOFGHOBABMNCLDLEMNFLGLHABMNCLDMNFLGABMNCMNFAMNBATIPJPKPCDEOMNCLDLELMNCLDLELCDERMNCLDLELQSFGHOMNFLGLHLMNFLGLHLFGHRMNFLGLHLQSBQUA $. $}
notation-cache-653 $p #Notation ( \kore-symbol-LblreplaceAll'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String ptn0 ptn1 ptn2 ) ( \app ( \app ( \app \kore-symbol-LblreplaceAll'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String-symbol ptn0 ) ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-309-is-symbol symbol-is-pattern notation-reflexivity notation-app IMP-symbol-309-is-pattern IMP-symbol-309-is-sugar notation-transitivity ) ABCIEFADBDCDEFADBDCDABCJEFADBDCEFADBDCEFADBEFADBEFAEFAEFGAGHBGHCGHK $.
${ $d xX0 ptn1 $.
   $d xX0 ptn2 $.
   IMP-symbol-309-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-309-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-LblreplaceAll'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String ptn0 ptn1 ptn2 ) $= ( app-is-pattern IMP-symbol-309-is-symbol symbol-is-pattern application-context-app-left IMP-symbol-309-is-pattern application-context-app-right notation-cache-653 notation-application-context ) GHBFCFDFBCDJAGHBFCFDAGHBFCAGHBAEKIIBCDLM $. $}
${ $d xX0 ptn0 $.
   $d xX0 ptn2 $.
   IMP-symbol-309-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-309-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-LblreplaceAll'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String ptn0 ptn1 ptn2 ) $= ( app-is-pattern IMP-symbol-309-is-symbol symbol-is-pattern IMP-symbol-309-is-pattern application-context-app-right application-context-app-left notation-cache-653 notation-application-context ) GHBFCFDFBCDIAGHBFCFDAGHBFCAEJKBCDLM $. $}
${ $d xX0 ptn0 $.
   $d xX0 ptn1 $.
   IMP-symbol-309-application-context-2.0 $e #ApplicationContext xX0 ptn2 $.
   IMP-symbol-309-application-context-2 $p #ApplicationContext xX0 ( \kore-symbol-LblreplaceAll'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String ptn0 ptn1 ptn2 ) $= ( app-is-pattern IMP-symbol-309-is-symbol symbol-is-pattern IMP-symbol-309-is-pattern application-context-app-right notation-cache-653 notation-application-context ) GHBFCFDFBCDIAGHBFCFDAEJBCDKL $. $}
${ IMP-symbol-310-substitution.0 $e #Substitution ptn1 ptn4 ptn0 xX0 $.
   IMP-symbol-310-substitution.1 $e #Substitution ptn2 ptn5 ptn0 xX0 $.
   IMP-symbol-310-substitution.2 $e #Substitution ptn3 ptn6 ptn0 xX0 $.
   IMP-symbol-310-substitution $p #Substitution ( \kore-symbol-LblreplaceFirst'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String ptn1 ptn2 ptn3 ) ( \kore-symbol-LblreplaceFirst'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String ptn4 ptn5 ptn6 ) ptn0 xX0 $= ( app-is-pattern IMP-symbol-310-is-symbol symbol-is-pattern IMP-symbol-310-is-pattern substitution-app notation-reflexivity IMP-symbol-310-is-sugar notation-transitivity substitution-disjoint notation-substitution ) MNCLDLELMNFLGLHLBCDEOFGHOBABMNCLDLEMNFLGLHABMNCLDMNFLGABMNCMNFAMNBATIPJPKPCDEOMNCLDLELMNCLDLELCDERMNCLDLELQSFGHOMNFLGLHLMNFLGLHLFGHRMNFLGLHLQSBQUA $. $}
notation-cache-654 $p #Notation ( \kore-symbol-LblreplaceFirst'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String ptn0 ptn1 ptn2 ) ( \app ( \app ( \app \kore-symbol-LblreplaceFirst'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String-symbol ptn0 ) ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-310-is-symbol symbol-is-pattern notation-reflexivity notation-app IMP-symbol-310-is-pattern IMP-symbol-310-is-sugar notation-transitivity ) ABCIEFADBDCDEFADBDCDABCJEFADBDCEFADBDCEFADBEFADBEFAEFAEFGAGHBGHCGHK $.
${ $d xX0 ptn1 $.
   $d xX0 ptn2 $.
   IMP-symbol-310-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-310-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-LblreplaceFirst'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String ptn0 ptn1 ptn2 ) $= ( app-is-pattern IMP-symbol-310-is-symbol symbol-is-pattern application-context-app-left IMP-symbol-310-is-pattern application-context-app-right notation-cache-654 notation-application-context ) GHBFCFDFBCDJAGHBFCFDAGHBFCAGHBAEKIIBCDLM $. $}
${ $d xX0 ptn0 $.
   $d xX0 ptn2 $.
   IMP-symbol-310-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-310-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-LblreplaceFirst'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String ptn0 ptn1 ptn2 ) $= ( app-is-pattern IMP-symbol-310-is-symbol symbol-is-pattern IMP-symbol-310-is-pattern application-context-app-right application-context-app-left notation-cache-654 notation-application-context ) GHBFCFDFBCDIAGHBFCFDAGHBFCAEJKBCDLM $. $}
${ $d xX0 ptn0 $.
   $d xX0 ptn1 $.
   IMP-symbol-310-application-context-2.0 $e #ApplicationContext xX0 ptn2 $.
   IMP-symbol-310-application-context-2 $p #ApplicationContext xX0 ( \kore-symbol-LblreplaceFirst'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String ptn0 ptn1 ptn2 ) $= ( app-is-pattern IMP-symbol-310-is-symbol symbol-is-pattern IMP-symbol-310-is-pattern application-context-app-right notation-cache-654 notation-application-context ) GHBFCFDFBCDIAGHBFCFDAEJBCDKL $. $}
${ IMP-symbol-311-substitution.0 $e #Substitution ptn1 ptn4 ptn0 xX0 $.
   IMP-symbol-311-substitution.1 $e #Substitution ptn2 ptn5 ptn0 xX0 $.
   IMP-symbol-311-substitution.2 $e #Substitution ptn3 ptn6 ptn0 xX0 $.
   IMP-symbol-311-substitution $p #Substitution ( \kore-symbol-LblrfindChar'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int ptn1 ptn2 ptn3 ) ( \kore-symbol-LblrfindChar'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int ptn4 ptn5 ptn6 ) ptn0 xX0 $= ( app-is-pattern IMP-symbol-311-is-symbol symbol-is-pattern IMP-symbol-311-is-pattern substitution-app notation-reflexivity IMP-symbol-311-is-sugar notation-transitivity substitution-disjoint notation-substitution ) MNCLDLELMNFLGLHLBCDEOFGHOBABMNCLDLEMNFLGLHABMNCLDMNFLGABMNCMNFAMNBATIPJPKPCDEOMNCLDLELMNCLDLELCDERMNCLDLELQSFGHOMNFLGLHLMNFLGLHLFGHRMNFLGLHLQSBQUA $. $}
notation-cache-655 $p #Notation ( \kore-symbol-LblrfindChar'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int ptn0 ptn1 ptn2 ) ( \app ( \app ( \app \kore-symbol-LblrfindChar'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int-symbol ptn0 ) ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-311-is-symbol symbol-is-pattern notation-reflexivity notation-app IMP-symbol-311-is-pattern IMP-symbol-311-is-sugar notation-transitivity ) ABCIEFADBDCDEFADBDCDABCJEFADBDCEFADBDCEFADBEFADBEFAEFAEFGAGHBGHCGHK $.
${ $d xX0 ptn1 $.
   $d xX0 ptn2 $.
   IMP-symbol-311-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-311-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-LblrfindChar'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int ptn0 ptn1 ptn2 ) $= ( app-is-pattern IMP-symbol-311-is-symbol symbol-is-pattern application-context-app-left IMP-symbol-311-is-pattern application-context-app-right notation-cache-655 notation-application-context ) GHBFCFDFBCDJAGHBFCFDAGHBFCAGHBAEKIIBCDLM $. $}
${ $d xX0 ptn0 $.
   $d xX0 ptn2 $.
   IMP-symbol-311-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-311-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-LblrfindChar'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int ptn0 ptn1 ptn2 ) $= ( app-is-pattern IMP-symbol-311-is-symbol symbol-is-pattern IMP-symbol-311-is-pattern application-context-app-right application-context-app-left notation-cache-655 notation-application-context ) GHBFCFDFBCDIAGHBFCFDAGHBFCAEJKBCDLM $. $}
${ $d xX0 ptn0 $.
   $d xX0 ptn1 $.
   IMP-symbol-311-application-context-2.0 $e #ApplicationContext xX0 ptn2 $.
   IMP-symbol-311-application-context-2 $p #ApplicationContext xX0 ( \kore-symbol-LblrfindChar'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int ptn0 ptn1 ptn2 ) $= ( app-is-pattern IMP-symbol-311-is-symbol symbol-is-pattern IMP-symbol-311-is-pattern application-context-app-right notation-cache-655 notation-application-context ) GHBFCFDFBCDIAGHBFCFDAEJBCDKL $. $}
${ IMP-symbol-312-substitution.0 $e #Substitution ptn1 ptn4 ptn0 xX0 $.
   IMP-symbol-312-substitution.1 $e #Substitution ptn2 ptn5 ptn0 xX0 $.
   IMP-symbol-312-substitution.2 $e #Substitution ptn3 ptn6 ptn0 xX0 $.
   IMP-symbol-312-substitution $p #Substitution ( \kore-symbol-LblrfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int ptn1 ptn2 ptn3 ) ( \kore-symbol-LblrfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int ptn4 ptn5 ptn6 ) ptn0 xX0 $= ( app-is-pattern IMP-symbol-312-is-symbol symbol-is-pattern IMP-symbol-312-is-pattern substitution-app notation-reflexivity IMP-symbol-312-is-sugar notation-transitivity substitution-disjoint notation-substitution ) MNCLDLELMNFLGLHLBCDEOFGHOBABMNCLDLEMNFLGLHABMNCLDMNFLGABMNCMNFAMNBATIPJPKPCDEOMNCLDLELMNCLDLELCDERMNCLDLELQSFGHOMNFLGLHLMNFLGLHLFGHRMNFLGLHLQSBQUA $. $}
notation-cache-656 $p #Notation ( \kore-symbol-LblrfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int ptn0 ptn1 ptn2 ) ( \app ( \app ( \app \kore-symbol-LblrfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int-symbol ptn0 ) ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-312-is-symbol symbol-is-pattern notation-reflexivity notation-app IMP-symbol-312-is-pattern IMP-symbol-312-is-sugar notation-transitivity ) ABCIEFADBDCDEFADBDCDABCJEFADBDCEFADBDCEFADBEFADBEFAEFAEFGAGHBGHCGHK $.
${ $d xX0 ptn1 $.
   $d xX0 ptn2 $.
   IMP-symbol-312-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-312-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-LblrfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int ptn0 ptn1 ptn2 ) $= ( app-is-pattern IMP-symbol-312-is-symbol symbol-is-pattern application-context-app-left IMP-symbol-312-is-pattern application-context-app-right notation-cache-656 notation-application-context ) GHBFCFDFBCDJAGHBFCFDAGHBFCAGHBAEKIIBCDLM $. $}
${ $d xX0 ptn0 $.
   $d xX0 ptn2 $.
   IMP-symbol-312-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-312-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-LblrfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int ptn0 ptn1 ptn2 ) $= ( app-is-pattern IMP-symbol-312-is-symbol symbol-is-pattern IMP-symbol-312-is-pattern application-context-app-right application-context-app-left notation-cache-656 notation-application-context ) GHBFCFDFBCDIAGHBFCFDAGHBFCAEJKBCDLM $. $}
${ $d xX0 ptn0 $.
   $d xX0 ptn1 $.
   IMP-symbol-312-application-context-2.0 $e #ApplicationContext xX0 ptn2 $.
   IMP-symbol-312-application-context-2 $p #ApplicationContext xX0 ( \kore-symbol-LblrfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int ptn0 ptn1 ptn2 ) $= ( app-is-pattern IMP-symbol-312-is-symbol symbol-is-pattern IMP-symbol-312-is-pattern application-context-app-right notation-cache-656 notation-application-context ) GHBFCFDFBCDIAGHBFCFDAEJBCDKL $. $}
${ IMP-symbol-313-substitution.0 $e #Substitution ptn1 ptn4 ptn0 xX0 $.
   IMP-symbol-313-substitution.1 $e #Substitution ptn2 ptn5 ptn0 xX0 $.
   IMP-symbol-313-substitution.2 $e #Substitution ptn3 ptn6 ptn0 xX0 $.
   IMP-symbol-313-substitution $p #Substitution ( \kore-symbol-LblsignExtendBitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int'Unds'Int ptn1 ptn2 ptn3 ) ( \kore-symbol-LblsignExtendBitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int'Unds'Int ptn4 ptn5 ptn6 ) ptn0 xX0 $= ( app-is-pattern IMP-symbol-313-is-symbol symbol-is-pattern IMP-symbol-313-is-pattern substitution-app notation-reflexivity IMP-symbol-313-is-sugar notation-transitivity substitution-disjoint notation-substitution ) MNCLDLELMNFLGLHLBCDEOFGHOBABMNCLDLEMNFLGLHABMNCLDMNFLGABMNCMNFAMNBATIPJPKPCDEOMNCLDLELMNCLDLELCDERMNCLDLELQSFGHOMNFLGLHLMNFLGLHLFGHRMNFLGLHLQSBQUA $. $}
notation-cache-657 $p #Notation ( \kore-symbol-LblsignExtendBitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int'Unds'Int ptn0 ptn1 ptn2 ) ( \app ( \app ( \app \kore-symbol-LblsignExtendBitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int'Unds'Int-symbol ptn0 ) ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-313-is-symbol symbol-is-pattern notation-reflexivity notation-app IMP-symbol-313-is-pattern IMP-symbol-313-is-sugar notation-transitivity ) ABCIEFADBDCDEFADBDCDABCJEFADBDCEFADBDCEFADBEFADBEFAEFAEFGAGHBGHCGHK $.
${ $d xX0 ptn1 $.
   $d xX0 ptn2 $.
   IMP-symbol-313-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-313-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-LblsignExtendBitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int'Unds'Int ptn0 ptn1 ptn2 ) $= ( app-is-pattern IMP-symbol-313-is-symbol symbol-is-pattern application-context-app-left IMP-symbol-313-is-pattern application-context-app-right notation-cache-657 notation-application-context ) GHBFCFDFBCDJAGHBFCFDAGHBFCAGHBAEKIIBCDLM $. $}
${ $d xX0 ptn0 $.
   $d xX0 ptn2 $.
   IMP-symbol-313-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-313-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-LblsignExtendBitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int'Unds'Int ptn0 ptn1 ptn2 ) $= ( app-is-pattern IMP-symbol-313-is-symbol symbol-is-pattern IMP-symbol-313-is-pattern application-context-app-right application-context-app-left notation-cache-657 notation-application-context ) GHBFCFDFBCDIAGHBFCFDAGHBFCAEJKBCDLM $. $}
${ $d xX0 ptn0 $.
   $d xX0 ptn1 $.
   IMP-symbol-313-application-context-2.0 $e #ApplicationContext xX0 ptn2 $.
   IMP-symbol-313-application-context-2 $p #ApplicationContext xX0 ( \kore-symbol-LblsignExtendBitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int'Unds'Int ptn0 ptn1 ptn2 ) $= ( app-is-pattern IMP-symbol-313-is-symbol symbol-is-pattern IMP-symbol-313-is-pattern application-context-app-right notation-cache-657 notation-application-context ) GHBFCFDFBCDIAGHBFCFDAEJBCDKL $. $}
notation-cache-658 $p #Notation ( \kore-symbol-Lblsize'LParUndsRParUnds'LIST'Unds'Int'Unds'List ptn1 ) ( \app \kore-symbol-Lblsize'LParUndsRParUnds'LIST'Unds'Int'Unds'List-symbol ptn1 ) $= ( IMP-symbol-314-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-314-is-pattern IMP-symbol-314-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-659 $p #Notation ( \kore-symbol-Lblsize'LParUndsRParUnds'LIST'Unds'Int'Unds'List ptn2 ) ( \app \kore-symbol-Lblsize'LParUndsRParUnds'LIST'Unds'Int'Unds'List-symbol ptn2 ) $= ( IMP-symbol-314-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-314-is-pattern IMP-symbol-314-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-314-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-314-substitution $p #Substitution ( \kore-symbol-Lblsize'LParUndsRParUnds'LIST'Unds'Int'Unds'List ptn1 ) ( \kore-symbol-Lblsize'LParUndsRParUnds'LIST'Unds'Int'Unds'List ptn2 ) ptn0 xX0 $= ( IMP-symbol-314-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-314-is-pattern substitution-disjoint substitution-app notation-cache-658 notation-cache-659 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-660 $p #Notation ( \kore-symbol-Lblsize'LParUndsRParUnds'LIST'Unds'Int'Unds'List ptn0 ) ( \app \kore-symbol-Lblsize'LParUndsRParUnds'LIST'Unds'Int'Unds'List-symbol ptn0 ) $= ( IMP-symbol-314-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-314-is-pattern IMP-symbol-314-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-314-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-314-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lblsize'LParUndsRParUnds'LIST'Unds'Int'Unds'List ptn0 ) $= ( IMP-symbol-314-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-314-is-pattern application-context-app-right notation-cache-660 notation-application-context ) DEBFBGADEBACHBIJ $. $}
notation-cache-661 $p #Notation ( \kore-symbol-Lblsize'LParUndsRParUnds'MAP'Unds'Int'Unds'Map ptn1 ) ( \app \kore-symbol-Lblsize'LParUndsRParUnds'MAP'Unds'Int'Unds'Map-symbol ptn1 ) $= ( IMP-symbol-315-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-315-is-pattern IMP-symbol-315-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-662 $p #Notation ( \kore-symbol-Lblsize'LParUndsRParUnds'MAP'Unds'Int'Unds'Map ptn2 ) ( \app \kore-symbol-Lblsize'LParUndsRParUnds'MAP'Unds'Int'Unds'Map-symbol ptn2 ) $= ( IMP-symbol-315-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-315-is-pattern IMP-symbol-315-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-315-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-315-substitution $p #Substitution ( \kore-symbol-Lblsize'LParUndsRParUnds'MAP'Unds'Int'Unds'Map ptn1 ) ( \kore-symbol-Lblsize'LParUndsRParUnds'MAP'Unds'Int'Unds'Map ptn2 ) ptn0 xX0 $= ( IMP-symbol-315-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-315-is-pattern substitution-disjoint substitution-app notation-cache-661 notation-cache-662 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-663 $p #Notation ( \kore-symbol-Lblsize'LParUndsRParUnds'MAP'Unds'Int'Unds'Map ptn0 ) ( \app \kore-symbol-Lblsize'LParUndsRParUnds'MAP'Unds'Int'Unds'Map-symbol ptn0 ) $= ( IMP-symbol-315-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-315-is-pattern IMP-symbol-315-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-315-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-315-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lblsize'LParUndsRParUnds'MAP'Unds'Int'Unds'Map ptn0 ) $= ( IMP-symbol-315-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-315-is-pattern application-context-app-right notation-cache-663 notation-application-context ) DEBFBGADEBACHBIJ $. $}
notation-cache-664 $p #Notation ( \kore-symbol-Lblsize'LParUndsRParUnds'SET'Unds'Int'Unds'Set ptn1 ) ( \app \kore-symbol-Lblsize'LParUndsRParUnds'SET'Unds'Int'Unds'Set-symbol ptn1 ) $= ( IMP-symbol-316-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-316-is-pattern IMP-symbol-316-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-665 $p #Notation ( \kore-symbol-Lblsize'LParUndsRParUnds'SET'Unds'Int'Unds'Set ptn2 ) ( \app \kore-symbol-Lblsize'LParUndsRParUnds'SET'Unds'Int'Unds'Set-symbol ptn2 ) $= ( IMP-symbol-316-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-316-is-pattern IMP-symbol-316-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-316-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-316-substitution $p #Substitution ( \kore-symbol-Lblsize'LParUndsRParUnds'SET'Unds'Int'Unds'Set ptn1 ) ( \kore-symbol-Lblsize'LParUndsRParUnds'SET'Unds'Int'Unds'Set ptn2 ) ptn0 xX0 $= ( IMP-symbol-316-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-316-is-pattern substitution-disjoint substitution-app notation-cache-664 notation-cache-665 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-666 $p #Notation ( \kore-symbol-Lblsize'LParUndsRParUnds'SET'Unds'Int'Unds'Set ptn0 ) ( \app \kore-symbol-Lblsize'LParUndsRParUnds'SET'Unds'Int'Unds'Set-symbol ptn0 ) $= ( IMP-symbol-316-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-316-is-pattern IMP-symbol-316-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-316-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-316-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lblsize'LParUndsRParUnds'SET'Unds'Int'Unds'Set ptn0 ) $= ( IMP-symbol-316-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-316-is-pattern application-context-app-right notation-cache-666 notation-application-context ) DEBFBGADEBACHBIJ $. $}
notation-cache-667 $p #Notation ( \kore-symbol-LblsrandInt'LParUndsRParUnds'INT'Unds'K'Unds'Int ptn1 ) ( \app \kore-symbol-LblsrandInt'LParUndsRParUnds'INT'Unds'K'Unds'Int-symbol ptn1 ) $= ( IMP-symbol-317-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-317-is-pattern IMP-symbol-317-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-668 $p #Notation ( \kore-symbol-LblsrandInt'LParUndsRParUnds'INT'Unds'K'Unds'Int ptn2 ) ( \app \kore-symbol-LblsrandInt'LParUndsRParUnds'INT'Unds'K'Unds'Int-symbol ptn2 ) $= ( IMP-symbol-317-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-317-is-pattern IMP-symbol-317-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-317-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-317-substitution $p #Substitution ( \kore-symbol-LblsrandInt'LParUndsRParUnds'INT'Unds'K'Unds'Int ptn1 ) ( \kore-symbol-LblsrandInt'LParUndsRParUnds'INT'Unds'K'Unds'Int ptn2 ) ptn0 xX0 $= ( IMP-symbol-317-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-317-is-pattern substitution-disjoint substitution-app notation-cache-667 notation-cache-668 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-669 $p #Notation ( \kore-symbol-LblsrandInt'LParUndsRParUnds'INT'Unds'K'Unds'Int ptn0 ) ( \app \kore-symbol-LblsrandInt'LParUndsRParUnds'INT'Unds'K'Unds'Int-symbol ptn0 ) $= ( IMP-symbol-317-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-317-is-pattern IMP-symbol-317-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-317-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-317-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-LblsrandInt'LParUndsRParUnds'INT'Unds'K'Unds'Int ptn0 ) $= ( IMP-symbol-317-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-317-is-pattern application-context-app-right notation-cache-669 notation-application-context ) DEBFBGADEBACHBIJ $. $}
${ IMP-symbol-318-substitution.0 $e #Substitution ptn1 ptn4 ptn0 xX0 $.
   IMP-symbol-318-substitution.1 $e #Substitution ptn2 ptn5 ptn0 xX0 $.
   IMP-symbol-318-substitution.2 $e #Substitution ptn3 ptn6 ptn0 xX0 $.
   IMP-symbol-318-substitution $p #Substitution ( \kore-symbol-LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int ptn1 ptn2 ptn3 ) ( \kore-symbol-LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int ptn4 ptn5 ptn6 ) ptn0 xX0 $= ( app-is-pattern IMP-symbol-318-is-symbol symbol-is-pattern IMP-symbol-318-is-pattern substitution-app notation-reflexivity IMP-symbol-318-is-sugar notation-transitivity substitution-disjoint notation-substitution ) MNCLDLELMNFLGLHLBCDEOFGHOBABMNCLDLEMNFLGLHABMNCLDMNFLGABMNCMNFAMNBATIPJPKPCDEOMNCLDLELMNCLDLELCDERMNCLDLELQSFGHOMNFLGLHLMNFLGLHLFGHRMNFLGLHLQSBQUA $. $}
notation-cache-670 $p #Notation ( \kore-symbol-LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int ptn0 ptn1 ptn2 ) ( \app ( \app ( \app \kore-symbol-LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int-symbol ptn0 ) ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-318-is-symbol symbol-is-pattern notation-reflexivity notation-app IMP-symbol-318-is-pattern IMP-symbol-318-is-sugar notation-transitivity ) ABCIEFADBDCDEFADBDCDABCJEFADBDCEFADBDCEFADBEFADBEFAEFAEFGAGHBGHCGHK $.
${ $d xX0 ptn1 $.
   $d xX0 ptn2 $.
   IMP-symbol-318-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-318-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int ptn0 ptn1 ptn2 ) $= ( app-is-pattern IMP-symbol-318-is-symbol symbol-is-pattern application-context-app-left IMP-symbol-318-is-pattern application-context-app-right notation-cache-670 notation-application-context ) GHBFCFDFBCDJAGHBFCFDAGHBFCAGHBAEKIIBCDLM $. $}
${ $d xX0 ptn0 $.
   $d xX0 ptn2 $.
   IMP-symbol-318-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-318-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int ptn0 ptn1 ptn2 ) $= ( app-is-pattern IMP-symbol-318-is-symbol symbol-is-pattern IMP-symbol-318-is-pattern application-context-app-right application-context-app-left notation-cache-670 notation-application-context ) GHBFCFDFBCDIAGHBFCFDAGHBFCAEJKBCDLM $. $}
${ $d xX0 ptn0 $.
   $d xX0 ptn1 $.
   IMP-symbol-318-application-context-2.0 $e #ApplicationContext xX0 ptn2 $.
   IMP-symbol-318-application-context-2 $p #ApplicationContext xX0 ( \kore-symbol-LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int ptn0 ptn1 ptn2 ) $= ( app-is-pattern IMP-symbol-318-is-symbol symbol-is-pattern IMP-symbol-318-is-pattern application-context-app-right notation-cache-670 notation-application-context ) GHBFCFDFBCDIAGHBFCFDAEJBCDKL $. $}
${ IMP-symbol-319-substitution.0 $e #Substitution ptn1 ptn4 ptn0 xX0 $.
   IMP-symbol-319-substitution.1 $e #Substitution ptn2 ptn5 ptn0 xX0 $.
   IMP-symbol-319-substitution.2 $e #Substitution ptn3 ptn6 ptn0 xX0 $.
   IMP-symbol-319-substitution $p #Substitution ( \kore-symbol-LblupdateList'LParUndsCommUndsCommUndsRParUnds'LIST'Unds'List'Unds'List'Unds'Int'Unds'List ptn1 ptn2 ptn3 ) ( \kore-symbol-LblupdateList'LParUndsCommUndsCommUndsRParUnds'LIST'Unds'List'Unds'List'Unds'Int'Unds'List ptn4 ptn5 ptn6 ) ptn0 xX0 $= ( app-is-pattern IMP-symbol-319-is-symbol symbol-is-pattern IMP-symbol-319-is-pattern substitution-app notation-reflexivity IMP-symbol-319-is-sugar notation-transitivity substitution-disjoint notation-substitution ) MNCLDLELMNFLGLHLBCDEOFGHOBABMNCLDLEMNFLGLHABMNCLDMNFLGABMNCMNFAMNBATIPJPKPCDEOMNCLDLELMNCLDLELCDERMNCLDLELQSFGHOMNFLGLHLMNFLGLHLFGHRMNFLGLHLQSBQUA $. $}
notation-cache-671 $p #Notation ( \kore-symbol-LblupdateList'LParUndsCommUndsCommUndsRParUnds'LIST'Unds'List'Unds'List'Unds'Int'Unds'List ptn0 ptn1 ptn2 ) ( \app ( \app ( \app \kore-symbol-LblupdateList'LParUndsCommUndsCommUndsRParUnds'LIST'Unds'List'Unds'List'Unds'Int'Unds'List-symbol ptn0 ) ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-319-is-symbol symbol-is-pattern notation-reflexivity notation-app IMP-symbol-319-is-pattern IMP-symbol-319-is-sugar notation-transitivity ) ABCIEFADBDCDEFADBDCDABCJEFADBDCEFADBDCEFADBEFADBEFAEFAEFGAGHBGHCGHK $.
${ $d xX0 ptn1 $.
   $d xX0 ptn2 $.
   IMP-symbol-319-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-319-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-LblupdateList'LParUndsCommUndsCommUndsRParUnds'LIST'Unds'List'Unds'List'Unds'Int'Unds'List ptn0 ptn1 ptn2 ) $= ( app-is-pattern IMP-symbol-319-is-symbol symbol-is-pattern application-context-app-left IMP-symbol-319-is-pattern application-context-app-right notation-cache-671 notation-application-context ) GHBFCFDFBCDJAGHBFCFDAGHBFCAGHBAEKIIBCDLM $. $}
${ $d xX0 ptn0 $.
   $d xX0 ptn2 $.
   IMP-symbol-319-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-319-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-LblupdateList'LParUndsCommUndsCommUndsRParUnds'LIST'Unds'List'Unds'List'Unds'Int'Unds'List ptn0 ptn1 ptn2 ) $= ( app-is-pattern IMP-symbol-319-is-symbol symbol-is-pattern IMP-symbol-319-is-pattern application-context-app-right application-context-app-left notation-cache-671 notation-application-context ) GHBFCFDFBCDIAGHBFCFDAGHBFCAEJKBCDLM $. $}
${ $d xX0 ptn0 $.
   $d xX0 ptn1 $.
   IMP-symbol-319-application-context-2.0 $e #ApplicationContext xX0 ptn2 $.
   IMP-symbol-319-application-context-2 $p #ApplicationContext xX0 ( \kore-symbol-LblupdateList'LParUndsCommUndsCommUndsRParUnds'LIST'Unds'List'Unds'List'Unds'Int'Unds'List ptn0 ptn1 ptn2 ) $= ( app-is-pattern IMP-symbol-319-is-symbol symbol-is-pattern IMP-symbol-319-is-pattern application-context-app-right notation-cache-671 notation-application-context ) GHBFCFDFBCDIAGHBFCFDAEJBCDKL $. $}
notation-cache-672 $p #Notation ( \kore-symbol-LblupdateMap'LParUndsCommUndsRParUnds'MAP'Unds'Map'Unds'Map'Unds'Map ptn1 ptn2 ) ( \app ( \app \kore-symbol-LblupdateMap'LParUndsCommUndsRParUnds'MAP'Unds'Map'Unds'Map'Unds'Map-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-320-is-symbol symbol-is-pattern IMP-symbol-320-is-pattern IMP-symbol-320-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-673 $p #Notation ( \kore-symbol-LblupdateMap'LParUndsCommUndsRParUnds'MAP'Unds'Map'Unds'Map'Unds'Map ptn3 ptn4 ) ( \app ( \app \kore-symbol-LblupdateMap'LParUndsCommUndsRParUnds'MAP'Unds'Map'Unds'Map'Unds'Map-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-320-is-symbol symbol-is-pattern IMP-symbol-320-is-pattern IMP-symbol-320-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-320-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-320-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-320-substitution $p #Substitution ( \kore-symbol-LblupdateMap'LParUndsCommUndsRParUnds'MAP'Unds'Map'Unds'Map'Unds'Map ptn1 ptn2 ) ( \kore-symbol-LblupdateMap'LParUndsCommUndsRParUnds'MAP'Unds'Map'Unds'Map'Unds'Map ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-320-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-320-is-pattern substitution-app substitution-disjoint notation-cache-672 notation-cache-673 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-674 $p #Notation ( \kore-symbol-LblupdateMap'LParUndsCommUndsRParUnds'MAP'Unds'Map'Unds'Map'Unds'Map ptn0 ptn1 ) ( \app ( \app \kore-symbol-LblupdateMap'LParUndsCommUndsRParUnds'MAP'Unds'Map'Unds'Map'Unds'Map-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-320-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-320-is-pattern IMP-symbol-320-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-320-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-320-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-LblupdateMap'LParUndsCommUndsRParUnds'MAP'Unds'Map'Unds'Map'Unds'Map ptn0 ptn1 ) $= ( IMP-symbol-320-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-320-is-pattern application-context-app-right application-context-app-left notation-cache-674 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-320-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-320-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-LblupdateMap'LParUndsCommUndsRParUnds'MAP'Unds'Map'Unds'Map'Unds'Map ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-320-is-symbol symbol-is-pattern IMP-symbol-320-is-pattern application-context-app-right notation-cache-674 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
notation-cache-675 $p #Notation ( \kore-symbol-Lblvalues'LParUndsRParUnds'MAP'Unds'List'Unds'Map ptn1 ) ( \app \kore-symbol-Lblvalues'LParUndsRParUnds'MAP'Unds'List'Unds'Map-symbol ptn1 ) $= ( IMP-symbol-321-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-321-is-pattern IMP-symbol-321-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-676 $p #Notation ( \kore-symbol-Lblvalues'LParUndsRParUnds'MAP'Unds'List'Unds'Map ptn2 ) ( \app \kore-symbol-Lblvalues'LParUndsRParUnds'MAP'Unds'List'Unds'Map-symbol ptn2 ) $= ( IMP-symbol-321-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-321-is-pattern IMP-symbol-321-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-321-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-321-substitution $p #Substitution ( \kore-symbol-Lblvalues'LParUndsRParUnds'MAP'Unds'List'Unds'Map ptn1 ) ( \kore-symbol-Lblvalues'LParUndsRParUnds'MAP'Unds'List'Unds'Map ptn2 ) ptn0 xX0 $= ( IMP-symbol-321-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-321-is-pattern substitution-disjoint substitution-app notation-cache-675 notation-cache-676 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-677 $p #Notation ( \kore-symbol-Lblvalues'LParUndsRParUnds'MAP'Unds'List'Unds'Map ptn0 ) ( \app \kore-symbol-Lblvalues'LParUndsRParUnds'MAP'Unds'List'Unds'Map-symbol ptn0 ) $= ( IMP-symbol-321-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-321-is-pattern IMP-symbol-321-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-321-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-321-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lblvalues'LParUndsRParUnds'MAP'Unds'List'Unds'Map ptn0 ) $= ( IMP-symbol-321-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-321-is-pattern application-context-app-right notation-cache-677 notation-application-context ) DEBFBGADEBACHBIJ $. $}
notation-cache-678 $p #Notation ( \kore-symbol-Lblwhile'LParUndsRParUndsUnds'IMP-SYNTAX'Unds'Stmt'Unds'BExp'Unds'Block ptn1 ptn2 ) ( \app ( \app \kore-symbol-Lblwhile'LParUndsRParUndsUnds'IMP-SYNTAX'Unds'Stmt'Unds'BExp'Unds'Block-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-322-is-symbol symbol-is-pattern IMP-symbol-322-is-pattern IMP-symbol-322-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-679 $p #Notation ( \kore-symbol-Lblwhile'LParUndsRParUndsUnds'IMP-SYNTAX'Unds'Stmt'Unds'BExp'Unds'Block ptn3 ptn4 ) ( \app ( \app \kore-symbol-Lblwhile'LParUndsRParUndsUnds'IMP-SYNTAX'Unds'Stmt'Unds'BExp'Unds'Block-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-322-is-symbol symbol-is-pattern IMP-symbol-322-is-pattern IMP-symbol-322-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-322-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-322-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-322-substitution $p #Substitution ( \kore-symbol-Lblwhile'LParUndsRParUndsUnds'IMP-SYNTAX'Unds'Stmt'Unds'BExp'Unds'Block ptn1 ptn2 ) ( \kore-symbol-Lblwhile'LParUndsRParUndsUnds'IMP-SYNTAX'Unds'Stmt'Unds'BExp'Unds'Block ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-322-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-322-is-pattern substitution-app substitution-disjoint notation-cache-678 notation-cache-679 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-680 $p #Notation ( \kore-symbol-Lblwhile'LParUndsRParUndsUnds'IMP-SYNTAX'Unds'Stmt'Unds'BExp'Unds'Block ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lblwhile'LParUndsRParUndsUnds'IMP-SYNTAX'Unds'Stmt'Unds'BExp'Unds'Block-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-322-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-322-is-pattern IMP-symbol-322-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-322-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-322-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lblwhile'LParUndsRParUndsUnds'IMP-SYNTAX'Unds'Stmt'Unds'BExp'Unds'Block ptn0 ptn1 ) $= ( IMP-symbol-322-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-322-is-pattern application-context-app-right application-context-app-left notation-cache-680 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-322-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-322-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-Lblwhile'LParUndsRParUndsUnds'IMP-SYNTAX'Unds'Stmt'Unds'BExp'Unds'Block ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-322-is-symbol symbol-is-pattern IMP-symbol-322-is-pattern application-context-app-right notation-cache-680 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
notation-cache-681 $p #Notation ( \kore-symbol-Lbl'LBraUndsRBraUnds'IMP-SYNTAX'Unds'Block'Unds'Stmt ptn1 ) ( \app \kore-symbol-Lbl'LBraUndsRBraUnds'IMP-SYNTAX'Unds'Block'Unds'Stmt-symbol ptn1 ) $= ( IMP-symbol-323-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-323-is-pattern IMP-symbol-323-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-682 $p #Notation ( \kore-symbol-Lbl'LBraUndsRBraUnds'IMP-SYNTAX'Unds'Block'Unds'Stmt ptn2 ) ( \app \kore-symbol-Lbl'LBraUndsRBraUnds'IMP-SYNTAX'Unds'Block'Unds'Stmt-symbol ptn2 ) $= ( IMP-symbol-323-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-323-is-pattern IMP-symbol-323-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-323-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-323-substitution $p #Substitution ( \kore-symbol-Lbl'LBraUndsRBraUnds'IMP-SYNTAX'Unds'Block'Unds'Stmt ptn1 ) ( \kore-symbol-Lbl'LBraUndsRBraUnds'IMP-SYNTAX'Unds'Block'Unds'Stmt ptn2 ) ptn0 xX0 $= ( IMP-symbol-323-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-323-is-pattern substitution-disjoint substitution-app notation-cache-681 notation-cache-682 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-683 $p #Notation ( \kore-symbol-Lbl'LBraUndsRBraUnds'IMP-SYNTAX'Unds'Block'Unds'Stmt ptn0 ) ( \app \kore-symbol-Lbl'LBraUndsRBraUnds'IMP-SYNTAX'Unds'Block'Unds'Stmt-symbol ptn0 ) $= ( IMP-symbol-323-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-323-is-pattern IMP-symbol-323-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-323-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-323-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'LBraUndsRBraUnds'IMP-SYNTAX'Unds'Block'Unds'Stmt ptn0 ) $= ( IMP-symbol-323-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-323-is-pattern application-context-app-right notation-cache-683 notation-application-context ) DEBFBGADEBACHBIJ $. $}
${ IMP-symbol-324-substitution $p #Substitution \kore-symbol-Lbl'LBraRBraUnds'IMP-SYNTAX'Unds'Block \kore-symbol-Lbl'LBraRBraUnds'IMP-SYNTAX'Unds'Block ptn0 xX0 $= ( IMP-symbol-324-is-pattern substitution-disjoint ) CBAD $. $}
notation-cache-684 $p #Notation ( \kore-symbol-Lbl'Tild'Int'Unds' ptn1 ) ( \app \kore-symbol-Lbl'Tild'Int'Unds'-symbol ptn1 ) $= ( IMP-symbol-325-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-325-is-pattern IMP-symbol-325-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-685 $p #Notation ( \kore-symbol-Lbl'Tild'Int'Unds' ptn2 ) ( \app \kore-symbol-Lbl'Tild'Int'Unds'-symbol ptn2 ) $= ( IMP-symbol-325-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-325-is-pattern IMP-symbol-325-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-325-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-325-substitution $p #Substitution ( \kore-symbol-Lbl'Tild'Int'Unds' ptn1 ) ( \kore-symbol-Lbl'Tild'Int'Unds' ptn2 ) ptn0 xX0 $= ( IMP-symbol-325-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-325-is-pattern substitution-disjoint substitution-app notation-cache-684 notation-cache-685 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-686 $p #Notation ( \kore-symbol-Lbl'Tild'Int'Unds' ptn0 ) ( \app \kore-symbol-Lbl'Tild'Int'Unds'-symbol ptn0 ) $= ( IMP-symbol-325-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-325-is-pattern IMP-symbol-325-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-325-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-325-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Tild'Int'Unds' ptn0 ) $= ( IMP-symbol-325-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-325-is-pattern application-context-app-right notation-cache-686 notation-application-context ) DEBFBGADEBACHBIJ $. $}
${ string-literal-0-substitution $p #Substitution "true" "true" ptn0 xX0 $= ( string-literal-0-is-pattern substitution-disjoint ) CBAD $. $}
${ string-literal-1-substitution $p #Substitution "0" "0" ptn0 xX0 $= ( string-literal-1-is-pattern substitution-disjoint ) CBAD $. $}
${ string-literal-2-substitution $p #Substitution "r%2B" "r%2B" ptn0 xX0 $= ( string-literal-2-is-pattern substitution-disjoint ) CBAD $. $}
${ string-literal-3-substitution $p #Substitution "2" "2" ptn0 xX0 $= ( string-literal-3-is-pattern substitution-disjoint ) CBAD $. $}
${ string-literal-4-substitution $p #Substitution "1" "1" ptn0 xX0 $= ( string-literal-4-is-pattern substitution-disjoint ) CBAD $. $}
${ string-literal-5-substitution $p #Substitution "false" "false" ptn0 xX0 $= ( string-literal-5-is-pattern substitution-disjoint ) CBAD $. $}
${ string-literal-6-substitution $p #Substitution "-1" "-1" ptn0 xX0 $= ( string-literal-6-is-pattern substitution-disjoint ) CBAD $. $}
${ string-literal-7-substitution $p #Substitution "" "" ptn0 xX0 $= ( string-literal-7-is-pattern substitution-disjoint ) CBAD $. $}
${ string-literal-8-substitution $p #Substitution "_" "_" ptn0 xX0 $= ( string-literal-8-is-pattern substitution-disjoint ) CBAD $. $}
${ string-literal-9-substitution $p #Substitution "%24PGM" "%24PGM" ptn0 xX0 $= ( string-literal-9-is-pattern substitution-disjoint ) CBAD $. $}
${ string-literal-10-substitution $p #Substitution "10" "10" ptn0 xX0 $= ( string-literal-10-is-pattern substitution-disjoint ) CBAD $. $}
${ string-literal-11-substitution $p #Substitution "a" "a" ptn0 xX0 $= ( string-literal-11-is-pattern substitution-disjoint ) CBAD $. $}
sorting-cache-0 $p |- ( \imp \top ( \in-sort ( \kore-top \kore-sort-SortGeneratedTopCell ) \kore-sort-SortGeneratedTopCell ) ) $= ( IMP-sort-8-is-pattern kore-top-is-pattern in-sort-is-pattern top-is-pattern imp-is-pattern proof-rule-prop-1 kore-top-sorting proof-rule-mp ) ABACDABACEABACDFAGH $.
sorting-cache-1 $p |- ( \imp \top ( \kore-is-sort \kore-sort-SortPgm ) ) $= ( IMP-sort-26-is-pattern kore-is-sort-is-pattern top-is-pattern imp-is-pattern proof-rule-prop-1 IMP-sort-26-sort proof-rule-mp ) ABCABDABCEFG $.
sorting-cache-2 $p |- ( \imp \top ( \kore-is-sort \kore-sort-SortKItem ) ) $= ( BASIC-K-sort-1-is-pattern kore-is-sort-is-pattern top-is-pattern imp-is-pattern proof-rule-prop-1 BASIC-K-sort-1-sort proof-rule-mp ) ABCABDABCEFG $.
sorting-cache-3 $p |- ( \imp \top ( \in-sort \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids \kore-sort-SortIds ) ) $= ( IMP-symbol-111-is-pattern IMP-sort-0-is-pattern in-sort-is-pattern top-is-pattern imp-is-pattern proof-rule-prop-1 IMP-symbol-111-sorting proof-rule-mp ) ABCDABCEABCDFGH $.
sorting-cache-4 $p |- ( \imp \top ( \in-sort ( \kore-dv \kore-sort-SortId "a" ) \kore-sort-SortId ) ) $= ( IMP-sort-17-is-pattern string-literal-11-is-pattern kore-dv-is-pattern in-sort-is-pattern top-is-pattern imp-is-pattern proof-rule-prop-1 kore-dv-sorting proof-rule-mp ) ABCADEABCADFABCADEGABHI $.
sorting-cache-5 $p |- ( \imp \top ( \kore-is-sort \kore-sort-SortInt ) ) $= ( IMP-sort-22-is-pattern kore-is-sort-is-pattern top-is-pattern imp-is-pattern proof-rule-prop-1 IMP-sort-22-sort proof-rule-mp ) ABCABDABCEFG $.
sorting-cache-6 $p |- ( \imp \top ( \kore-is-sort \kore-sort-SortAExp ) ) $= ( IMP-sort-13-is-pattern kore-is-sort-is-pattern top-is-pattern imp-is-pattern proof-rule-prop-1 IMP-sort-13-sort proof-rule-mp ) ABCABDABCEFG $.
sorting-cache-7 $p |- ( \imp \top ( \in-sort ( \kore-dv \kore-sort-SortInt "10" ) \kore-sort-SortInt ) ) $= ( IMP-sort-22-is-pattern string-literal-10-is-pattern kore-dv-is-pattern in-sort-is-pattern top-is-pattern imp-is-pattern proof-rule-prop-1 kore-dv-sorting proof-rule-mp ) ABCADEABCADFABCADEGABHI $.
sorting-cache-8 $p |- ( \imp \top ( \in-sort ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) \kore-sort-SortAExp ) ) $= ( IMP-sort-22-is-pattern kore-is-sort-is-pattern IMP-sort-13-is-pattern string-literal-10-is-pattern kore-dv-is-pattern top-is-pattern and-is-pattern in-sort-is-pattern rule-and-intro-alt2-sugar kore-inj-is-pattern sorting-cache-5 sorting-cache-6 sorting-cache-7 INJ-symbol-0-sorting rule-imp-transitivity ) FABCBGADEAHGACADEJCHFABCBGADEAHFABCBKLIMIACADENO $.
sorting-cache-9 $p |- ( \imp \top ( \in-sort ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) \kore-sort-SortStmt ) ) $= ( kore-dv-is-pattern IMP-sort-22-is-pattern IMP-sort-17-is-pattern IMP-sort-13-is-pattern in-sort-is-pattern string-literal-11-is-pattern string-literal-10-is-pattern kore-inj-is-pattern top-is-pattern and-is-pattern IMP-symbol-169-is-pattern IMP-sort-30-is-pattern sorting-cache-4 sorting-cache-8 rule-and-intro-alt2-sugar IMP-symbol-169-sorting rule-imp-transitivity ) ICFACEBDBGAHDEJCFABDBGAHKLEICFACEBDBGAHDEMNOCFABDBGAHPQ $.
sorting-cache-10 $p |- ( \imp \top ( \in-sort ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) \kore-sort-SortPgm ) ) $= ( kore-dv-is-pattern IMP-sort-22-is-pattern in-sort-is-pattern IMP-symbol-111-is-pattern IMP-sort-17-is-pattern string-literal-11-is-pattern IMP-sort-13-is-pattern string-literal-10-is-pattern kore-inj-is-pattern IMP-symbol-169-is-pattern top-is-pattern IMP-sort-0-is-pattern IMP-sort-30-is-pattern and-is-pattern IMP-symbol-220-is-pattern IMP-sort-26-is-pattern sorting-cache-3 sorting-cache-9 rule-and-intro-alt2-sugar IMP-symbol-220-sorting rule-imp-transitivity ) KDLCEFABGBHAIJMCNDEFABGBHAIJOPCKDLCEFABGBHAIJMCQRSDEFABGBHAIJTUA $.
sorting-cache-11 $p |- ( \imp \top ( \in-sort ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) \kore-sort-SortKItem ) ) $= ( kore-dv-is-pattern IMP-sort-22-is-pattern IMP-sort-26-is-pattern kore-is-sort-is-pattern BASIC-K-sort-1-is-pattern kore-inj-is-pattern IMP-symbol-111-is-pattern IMP-sort-17-is-pattern string-literal-11-is-pattern IMP-sort-13-is-pattern string-literal-10-is-pattern IMP-symbol-169-is-pattern IMP-symbol-220-is-pattern top-is-pattern and-is-pattern in-sort-is-pattern rule-and-intro-alt2-sugar sorting-cache-1 sorting-cache-2 sorting-cache-10 INJ-symbol-0-sorting rule-imp-transitivity ) NCDEDOGHIABJBKAFLMCPOCEGHIABJBKAFLMFEPNCDEDOGHIABJBKAFLMCPNCDEDRSQTQCEGHIABJBKAFLMUAUB $.
sorting-cache-12 $p |- ( \imp \top ( \in-sort \kore-symbol-dotk \kore-sort-SortK ) ) $= ( KSEQ-symbol-1-is-pattern BASIC-K-sort-0-is-pattern in-sort-is-pattern top-is-pattern imp-is-pattern proof-rule-prop-1 KSEQ-symbol-1-sorting proof-rule-mp ) ABCDABCEABCDFGH $.
sorting-cache-13 $p |- ( \imp \top ( \in-sort ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) \kore-symbol-dotk ) \kore-sort-SortK ) ) $= ( kore-dv-is-pattern IMP-sort-22-is-pattern kore-inj-is-pattern BASIC-K-sort-1-is-pattern in-sort-is-pattern IMP-sort-26-is-pattern IMP-symbol-111-is-pattern IMP-sort-17-is-pattern string-literal-11-is-pattern IMP-sort-13-is-pattern string-literal-10-is-pattern IMP-symbol-169-is-pattern IMP-symbol-220-is-pattern KSEQ-symbol-1-is-pattern BASIC-K-sort-0-is-pattern top-is-pattern and-is-pattern KSEQ-symbol-0-is-pattern sorting-cache-11 sorting-cache-12 rule-and-intro-alt2-sugar KSEQ-symbol-0-sorting rule-imp-transitivity ) PFDGHIABJBKACLMCDENOEQFDGHIABJBKACLMCNROEPFDGHIABJBKACLMCDENOESTUAFDGHIABJBKACLMCNUBUC $.
sorting-cache-14 $p |- ( \imp \top ( \in-sort ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) \kore-symbol-dotk ) ) \kore-sort-SortKCell ) ) $= ( kore-dv-is-pattern IMP-sort-22-is-pattern kore-inj-is-pattern IMP-sort-26-is-pattern BASIC-K-sort-1-is-pattern IMP-symbol-111-is-pattern IMP-sort-17-is-pattern string-literal-11-is-pattern IMP-sort-13-is-pattern string-literal-10-is-pattern IMP-symbol-169-is-pattern IMP-symbol-220-is-pattern KSEQ-symbol-1-is-pattern KSEQ-symbol-0-is-pattern in-sort-is-pattern top-is-pattern BASIC-K-sort-0-is-pattern IMP-symbol-119-is-pattern IMP-sort-7-is-pattern sorting-cache-13 IMP-symbol-119-sorting rule-imp-transitivity ) PDEFGHABIBJACKLCMNQODEFGHABIBJACKLCMNRSOTDEFGHABIBJACKLCMNUAUB $.
sorting-cache-15 $p |- ( \imp \top ( \in-sort \kore-symbol-Lbl'Stop'Map \kore-sort-SortMap ) ) $= ( IMP-symbol-112-is-pattern IMP-sort-14-is-pattern in-sort-is-pattern top-is-pattern imp-is-pattern proof-rule-prop-1 IMP-symbol-112-sorting proof-rule-mp ) ABCDABCEABCDFGH $.
sorting-cache-16 $p |- ( \imp \top ( \kore-is-sort \kore-sort-SortId ) ) $= ( IMP-sort-17-is-pattern kore-is-sort-is-pattern top-is-pattern imp-is-pattern proof-rule-prop-1 IMP-sort-17-sort proof-rule-mp ) ABCABDABCEFG $.
sorting-cache-17 $p |- ( \imp \top ( \in-sort ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem ( \kore-dv \kore-sort-SortId "a" ) ) \kore-sort-SortKItem ) ) $= ( IMP-sort-17-is-pattern kore-is-sort-is-pattern BASIC-K-sort-1-is-pattern string-literal-11-is-pattern kore-dv-is-pattern top-is-pattern and-is-pattern in-sort-is-pattern rule-and-intro-alt2-sugar kore-inj-is-pattern sorting-cache-16 sorting-cache-2 sorting-cache-4 INJ-symbol-0-sorting rule-imp-transitivity ) FABCBGADEAHGACADEJCHFABCBGADEAHFABCBKLIMIACADENO $.
sorting-cache-18 $p |- ( \imp \top ( \in-sort ( \kore-dv \kore-sort-SortInt "0" ) \kore-sort-SortInt ) ) $= ( IMP-sort-22-is-pattern string-literal-1-is-pattern kore-dv-is-pattern in-sort-is-pattern top-is-pattern imp-is-pattern proof-rule-prop-1 kore-dv-sorting proof-rule-mp ) ABCADEABCADFABCADEGABHI $.
sorting-cache-19 $p |- ( \imp \top ( \in-sort ( \kore-inj \kore-sort-SortInt \kore-sort-SortKItem ( \kore-dv \kore-sort-SortInt "0" ) ) \kore-sort-SortKItem ) ) $= ( IMP-sort-22-is-pattern kore-is-sort-is-pattern BASIC-K-sort-1-is-pattern string-literal-1-is-pattern kore-dv-is-pattern top-is-pattern and-is-pattern in-sort-is-pattern rule-and-intro-alt2-sugar kore-inj-is-pattern sorting-cache-5 sorting-cache-2 sorting-cache-18 INJ-symbol-0-sorting rule-imp-transitivity ) FABCBGADEAHGACADEJCHFABCBGADEAHFABCBKLIMIACADENO $.
sorting-cache-20 $p |- ( \imp \top ( \in-sort ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem ( \kore-dv \kore-sort-SortId "a" ) ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortKItem ( \kore-dv \kore-sort-SortInt "0" ) ) ) \kore-sort-SortMap ) ) $= ( BASIC-K-sort-1-is-pattern IMP-sort-17-is-pattern kore-dv-is-pattern kore-inj-is-pattern IMP-sort-22-is-pattern in-sort-is-pattern string-literal-11-is-pattern string-literal-1-is-pattern top-is-pattern and-is-pattern IMP-symbol-196-is-pattern IMP-sort-14-is-pattern sorting-cache-17 sorting-cache-19 rule-and-intro-alt2-sugar IMP-symbol-196-sorting rule-imp-transitivity ) IBABGCDAFEAEHCDAFJBABGCDEAEHCDKLFIBABGCDAFEAEHCDAFMNOBABGCDEAEHCDPQ $.
sorting-cache-21 $p |- ( \imp \top ( \in-sort ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem ( \kore-dv \kore-sort-SortId "a" ) ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortKItem ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) \kore-sort-SortMap ) ) $= ( IMP-sort-17-is-pattern BASIC-K-sort-1-is-pattern kore-dv-is-pattern kore-inj-is-pattern IMP-sort-22-is-pattern IMP-sort-14-is-pattern in-sort-is-pattern IMP-symbol-112-is-pattern string-literal-11-is-pattern string-literal-1-is-pattern IMP-symbol-196-is-pattern top-is-pattern and-is-pattern IMP-symbol-176-is-pattern sorting-cache-15 sorting-cache-20 rule-and-intro-alt2-sugar IMP-symbol-176-sorting rule-imp-transitivity ) LHFGABAICDEBEJCDKFGMHABAICDEBEJCDKNFGLHFGABAICDEBEJCDKFGOPQHABAICDEBEJCDKRS $.
sorting-cache-22 $p |- ( \imp \top ( \in-sort ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) \kore-symbol-dotk ) ) ( \kore-symbol-Lbl'-LT-'state'-GT-' ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem ( \kore-dv \kore-sort-SortId "a" ) ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortKItem ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) \kore-sort-SortTCell ) ) $= ( kore-dv-is-pattern IMP-sort-22-is-pattern kore-inj-is-pattern BASIC-K-sort-1-is-pattern IMP-sort-17-is-pattern string-literal-11-is-pattern in-sort-is-pattern IMP-symbol-112-is-pattern string-literal-1-is-pattern IMP-symbol-196-is-pattern IMP-symbol-176-is-pattern IMP-symbol-120-is-pattern IMP-sort-26-is-pattern IMP-symbol-111-is-pattern IMP-sort-13-is-pattern string-literal-10-is-pattern IMP-symbol-169-is-pattern IMP-symbol-220-is-pattern KSEQ-symbol-1-is-pattern KSEQ-symbol-0-is-pattern IMP-symbol-119-is-pattern top-is-pattern IMP-sort-9-is-pattern IMP-sort-7-is-pattern rule-imp-transitivity and-is-pattern IMP-symbol-114-is-pattern IMP-sort-29-is-pattern sorting-cache-14 IMP-sort-14-is-pattern sorting-cache-21 IMP-symbol-120-sorting rule-and-intro-alt2-sugar IMP-symbol-114-sorting ) UBMDNEFABOBPACQRCSTUAUDGHEDEFACBDBIACJKLUCGUFMDNEFABOBPACQRCSTUAHEDEFACBDBIACJKLUGUHGUBMDNEFABOBPACQRCSTUAUDGHEDEFACBDBIACJKLUCGUIUBHEDEFACBDBIACJKUJGHEDEFACBDBIACJKLUCGUKHEDEFACBDBIACJKULUEUMMDNEFABOBPACQRCSTUAHEDEFACBDBIACJKLUNUE $.
sorting-cache-23 $p |- ( \imp \top ( \in-sort ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) \kore-sort-SortGeneratedCounterCell ) ) $= ( IMP-sort-22-is-pattern string-literal-1-is-pattern kore-dv-is-pattern in-sort-is-pattern top-is-pattern IMP-symbol-116-is-pattern IMP-sort-10-is-pattern sorting-cache-18 IMP-symbol-116-sorting rule-imp-transitivity ) EABCADABCFGDHABCIJ $.
sorting-cache-24 $p |- ( \imp \top ( \in-sort ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-top \kore-sort-SortGeneratedTopCell ) ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) \kore-symbol-dotk ) ) ( \kore-symbol-Lbl'-LT-'state'-GT-' ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem ( \kore-dv \kore-sort-SortId "a" ) ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortKItem ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) \kore-sort-SortGeneratedTopCell ) ) $= ( kore-dv-is-pattern IMP-sort-22-is-pattern IMP-sort-8-is-pattern kore-inj-is-pattern BASIC-K-sort-1-is-pattern IMP-sort-17-is-pattern kore-top-is-pattern string-literal-11-is-pattern string-literal-1-is-pattern in-sort-is-pattern IMP-sort-26-is-pattern IMP-symbol-111-is-pattern IMP-sort-13-is-pattern string-literal-10-is-pattern IMP-symbol-169-is-pattern IMP-symbol-220-is-pattern KSEQ-symbol-1-is-pattern KSEQ-symbol-0-is-pattern IMP-symbol-119-is-pattern IMP-symbol-112-is-pattern IMP-symbol-196-is-pattern IMP-symbol-176-is-pattern IMP-symbol-120-is-pattern IMP-symbol-114-is-pattern IMP-symbol-116-is-pattern top-is-pattern kore-and-is-pattern IMP-symbol-117-is-pattern and-is-pattern rule-and-intro-alt2-sugar rule-imp-transitivity sorting-cache-0 kore-and-sorting IMP-sort-29-is-pattern IMP-sort-10-is-pattern sorting-cache-22 sorting-cache-23 IMP-symbol-117-sorting ) UFCCGCGUGCJKELFHABMBNADOPDQRSTFEFHADBEBIADUAUBUCUDBIAUEUHCJUICCCGCGUGKELFHABMBNADOPDQRSTFEFHADBEBIADUAUBUCUDBIAUEUHUGCJUFCCGCGUGCJKELFHABMBNADOPDQRSTFEFHADBEBIADUAUBUCUDBIAUEUHCJUFCGCJCGCJUICCGCGUGCJUFCGCJCGCJULULUJCCGCGUMUKUFKELFHABMBNADOPDQRSTFEFHADBEBIADUAUBUCUDUNJBIAUEUOJUIKELFHABMBNADOPDQRSTFEFHADBEBIADUAUBUCUDBIAUEUHCJUFKELFHABMBNADOPDQRSTFEFHADBEBIADUAUBUCUDUNJBIAUEUOJUPUQUJKELFHABMBNADOPDQRSTFEFHADBEBIADUAUBUCUDBIAUEURUKUJCCCGCGUGKELFHABMBNADOPDQRSTFEFHADBEBIADUAUBUCUDBIAUEUHUMUK $.
sorting-cache-25 $p |- ( \imp \top ( \kore-is-sort \kore-sort-SortStmt ) ) $= ( IMP-sort-30-is-pattern kore-is-sort-is-pattern top-is-pattern imp-is-pattern proof-rule-prop-1 IMP-sort-30-sort proof-rule-mp ) ABCABDABCEFG $.
sorting-cache-26 $p |- ( \imp \top ( \in-sort ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) \kore-sort-SortKItem ) ) $= ( kore-dv-is-pattern IMP-sort-22-is-pattern IMP-sort-30-is-pattern kore-is-sort-is-pattern BASIC-K-sort-1-is-pattern kore-inj-is-pattern IMP-sort-17-is-pattern string-literal-11-is-pattern IMP-sort-13-is-pattern string-literal-10-is-pattern IMP-symbol-169-is-pattern top-is-pattern and-is-pattern in-sort-is-pattern rule-and-intro-alt2-sugar sorting-cache-25 sorting-cache-2 sorting-cache-9 INJ-symbol-0-sorting rule-imp-transitivity ) LCDEDMGHABIBJAFKCNMCEGHABIBJAFKFENLCDEDMGHABIBJAFKCNLCDEDPQOROCEGHABIBJAFKST $.
sorting-cache-27 $p |- ( \imp \top ( \in-sort ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) \kore-symbol-dotk ) \kore-sort-SortK ) ) $= ( kore-dv-is-pattern IMP-sort-22-is-pattern kore-inj-is-pattern BASIC-K-sort-1-is-pattern in-sort-is-pattern IMP-sort-30-is-pattern IMP-sort-17-is-pattern string-literal-11-is-pattern IMP-sort-13-is-pattern string-literal-10-is-pattern IMP-symbol-169-is-pattern KSEQ-symbol-1-is-pattern BASIC-K-sort-0-is-pattern top-is-pattern and-is-pattern KSEQ-symbol-0-is-pattern sorting-cache-26 sorting-cache-12 rule-and-intro-alt2-sugar KSEQ-symbol-0-sorting rule-imp-transitivity ) NFDGHABIBJACKCDELMEOFDGHABIBJACKCLPMENFDGHABIBJACKCDELMEQRSFDGHABIBJACKCLTUA $.
sorting-cache-28 $p |- ( \imp \top ( \in-sort ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) \kore-symbol-dotk ) ) \kore-sort-SortKCell ) ) $= ( kore-dv-is-pattern IMP-sort-22-is-pattern kore-inj-is-pattern IMP-sort-30-is-pattern BASIC-K-sort-1-is-pattern IMP-sort-17-is-pattern string-literal-11-is-pattern IMP-sort-13-is-pattern string-literal-10-is-pattern IMP-symbol-169-is-pattern KSEQ-symbol-1-is-pattern KSEQ-symbol-0-is-pattern in-sort-is-pattern top-is-pattern BASIC-K-sort-0-is-pattern IMP-symbol-119-is-pattern IMP-sort-7-is-pattern sorting-cache-27 IMP-symbol-119-sorting rule-imp-transitivity ) NDEFGABHBIACJCKLOMDEFGABHBIACJCKLPQMRDEFGABHBIACJCKLST $.
sorting-cache-29 $p |- ( \imp \top ( \in-sort ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) \kore-symbol-dotk ) ) ( \kore-symbol-Lbl'-LT-'state'-GT-' ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem ( \kore-dv \kore-sort-SortId "a" ) ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortKItem ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) \kore-sort-SortTCell ) ) $= ( kore-dv-is-pattern IMP-sort-22-is-pattern kore-inj-is-pattern BASIC-K-sort-1-is-pattern IMP-sort-17-is-pattern string-literal-11-is-pattern in-sort-is-pattern string-literal-1-is-pattern IMP-symbol-196-is-pattern IMP-symbol-120-is-pattern IMP-sort-30-is-pattern IMP-sort-13-is-pattern string-literal-10-is-pattern IMP-symbol-169-is-pattern KSEQ-symbol-1-is-pattern KSEQ-symbol-0-is-pattern IMP-symbol-119-is-pattern top-is-pattern IMP-sort-9-is-pattern IMP-sort-7-is-pattern rule-imp-transitivity and-is-pattern IMP-symbol-114-is-pattern IMP-sort-29-is-pattern sorting-cache-28 IMP-sort-14-is-pattern sorting-cache-20 IMP-symbol-120-sorting rule-and-intro-alt2-sugar IMP-symbol-114-sorting ) RKDEFABLBMACNCOPQTGEDEFACBDBHACIJSGUBKDEFABLBMACNCOPQEDEFACBDBHACIJUCUDGRKDEFABLBMACNCOPQTGEDEFACBDBHACIJSGUEREDEFACBDBHACIUFGEDEFACBDBHACIJSGUGEDEFACBDBHACIUHUAUIKDEFABLBMACNCOPQEDEFACBDBHACIJUJUA $.
sorting-cache-30 $p |- ( \imp \top ( \in-sort ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-top \kore-sort-SortGeneratedTopCell ) ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) \kore-symbol-dotk ) ) ( \kore-symbol-Lbl'-LT-'state'-GT-' ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem ( \kore-dv \kore-sort-SortId "a" ) ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortKItem ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) \kore-sort-SortGeneratedTopCell ) ) $= ( kore-dv-is-pattern IMP-sort-22-is-pattern IMP-sort-8-is-pattern kore-inj-is-pattern BASIC-K-sort-1-is-pattern IMP-sort-17-is-pattern kore-top-is-pattern string-literal-11-is-pattern string-literal-1-is-pattern in-sort-is-pattern IMP-sort-30-is-pattern IMP-sort-13-is-pattern string-literal-10-is-pattern IMP-symbol-169-is-pattern KSEQ-symbol-1-is-pattern KSEQ-symbol-0-is-pattern IMP-symbol-119-is-pattern IMP-symbol-196-is-pattern IMP-symbol-120-is-pattern IMP-symbol-114-is-pattern IMP-symbol-116-is-pattern top-is-pattern kore-and-is-pattern IMP-symbol-117-is-pattern and-is-pattern rule-and-intro-alt2-sugar rule-imp-transitivity sorting-cache-0 kore-and-sorting IMP-sort-29-is-pattern IMP-sort-10-is-pattern sorting-cache-29 sorting-cache-23 IMP-symbol-117-sorting ) UBCCGCGUCCJKEFHABLBMADNDOPQFEFHADBEBIADRSTBIAUAUDCJUECCCGCGUCKEFHABLBMADNDOPQFEFHADBEBIADRSTBIAUAUDUCCJUBCCGCGUCCJKEFHABLBMADNDOPQFEFHADBEBIADRSTBIAUAUDCJUBCGCJCGCJUECCGCGUCCJUBCGCJCGCJUHUHUFCCGCGUIUGUBKEFHABLBMADNDOPQFEFHADBEBIADRSTUJJBIAUAUKJUEKEFHABLBMADNDOPQFEFHADBEBIADRSTBIAUAUDCJUBKEFHABLBMADNDOPQFEFHADBEBIADRSTUJJBIAUAUKJULUMUFKEFHABLBMADNDOPQFEFHADBEBIADRSTBIAUAUNUGUFCCCGCGUCKEFHABLBMADNDOPQFEFHADBEBIADRSTBIAUAUDUIUG $.
sorting-cache-31 $p |- ( \imp \top ( \in-sort ( \kore-symbol-Lbl'-LT-'k'-GT-' \kore-symbol-dotk ) \kore-sort-SortKCell ) ) $= ( KSEQ-symbol-1-is-pattern in-sort-is-pattern top-is-pattern BASIC-K-sort-0-is-pattern IMP-symbol-119-is-pattern IMP-sort-7-is-pattern sorting-cache-12 IMP-symbol-119-sorting rule-imp-transitivity ) CADBAEFBGAHI $.
sorting-cache-32 $p |- ( \imp \top ( \in-sort ( \kore-inj \kore-sort-SortInt \kore-sort-SortKItem ( \kore-dv \kore-sort-SortInt "10" ) ) \kore-sort-SortKItem ) ) $= ( IMP-sort-22-is-pattern kore-is-sort-is-pattern BASIC-K-sort-1-is-pattern string-literal-10-is-pattern kore-dv-is-pattern top-is-pattern and-is-pattern in-sort-is-pattern rule-and-intro-alt2-sugar kore-inj-is-pattern sorting-cache-5 sorting-cache-2 sorting-cache-7 INJ-symbol-0-sorting rule-imp-transitivity ) FABCBGADEAHGACADEJCHFABCBGADEAHFABCBKLIMIACADENO $.
sorting-cache-33 $p |- ( \imp \top ( \in-sort ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem ( \kore-dv \kore-sort-SortId "a" ) ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortKItem ( \kore-dv \kore-sort-SortInt "10" ) ) ) \kore-sort-SortMap ) ) $= ( BASIC-K-sort-1-is-pattern IMP-sort-17-is-pattern kore-dv-is-pattern kore-inj-is-pattern IMP-sort-22-is-pattern in-sort-is-pattern string-literal-11-is-pattern string-literal-10-is-pattern top-is-pattern and-is-pattern IMP-symbol-196-is-pattern IMP-sort-14-is-pattern sorting-cache-17 sorting-cache-32 rule-and-intro-alt2-sugar IMP-symbol-196-sorting rule-imp-transitivity ) IBABGCDAFEAEHCDAFJBABGCDEAEHCDKLFIBABGCDAFEAEHCDAFMNOBABGCDEAEHCDPQ $.
sorting-cache-34 $p |- ( \imp \top ( \in-sort ( \kore-symbol-Lbl'Unds'Map'Unds' ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem ( \kore-dv \kore-sort-SortId "a" ) ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortKItem ( \kore-dv \kore-sort-SortInt "10" ) ) ) \kore-symbol-Lbl'Stop'Map ) \kore-sort-SortMap ) ) $= ( IMP-sort-17-is-pattern BASIC-K-sort-1-is-pattern kore-dv-is-pattern kore-inj-is-pattern IMP-sort-22-is-pattern IMP-sort-14-is-pattern in-sort-is-pattern string-literal-11-is-pattern string-literal-10-is-pattern IMP-symbol-196-is-pattern IMP-symbol-112-is-pattern top-is-pattern and-is-pattern IMP-symbol-176-is-pattern sorting-cache-33 sorting-cache-15 rule-and-intro-alt2-sugar IMP-symbol-176-sorting rule-imp-transitivity ) LABAHCDEBEICDJFGKFGMABAHCDEBEICDJKNFGLABAHCDEBEICDJFGKFGOPQABAHCDEBEICDJKRS $.
sorting-cache-35 $p |- ( \imp \top ( \and ( \in-sort ( \kore-symbol-Lbl'-LT-'k'-GT-' \kore-symbol-dotk ) \kore-sort-SortKCell ) ( \in-sort ( \kore-symbol-Lbl'-LT-'state'-GT-' ( \kore-symbol-Lbl'Unds'Map'Unds' ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem ( \kore-dv \kore-sort-SortId "a" ) ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortKItem ( \kore-dv \kore-sort-SortInt "10" ) ) ) \kore-symbol-Lbl'Stop'Map ) ) \kore-sort-SortStateCell ) ) ) $= ( IMP-sort-17-is-pattern BASIC-K-sort-1-is-pattern kore-dv-is-pattern kore-inj-is-pattern IMP-sort-22-is-pattern in-sort-is-pattern string-literal-11-is-pattern string-literal-10-is-pattern IMP-symbol-196-is-pattern IMP-symbol-112-is-pattern IMP-symbol-176-is-pattern top-is-pattern IMP-symbol-120-is-pattern IMP-sort-9-is-pattern KSEQ-symbol-1-is-pattern IMP-symbol-119-is-pattern IMP-sort-7-is-pattern sorting-cache-31 IMP-sort-14-is-pattern sorting-cache-34 IMP-symbol-120-sorting rule-imp-transitivity rule-and-intro-alt2-sugar ) LOPQFABAGCDEBEHCDIJKMNFRLABAGCDEBEHCDIJKSFABAGCDEBEHCDIJKMNFTABAGCDEBEHCDIJKUAUBUC $.
sorting-cache-36 $p |- ( \imp \top ( \in-sort ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' \kore-symbol-dotk ) ( \kore-symbol-Lbl'-LT-'state'-GT-' ( \kore-symbol-Lbl'Unds'Map'Unds' ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem ( \kore-dv \kore-sort-SortId "a" ) ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortKItem ( \kore-dv \kore-sort-SortInt "10" ) ) ) \kore-symbol-Lbl'Stop'Map ) ) ) \kore-sort-SortTCell ) ) $= ( IMP-sort-17-is-pattern BASIC-K-sort-1-is-pattern kore-dv-is-pattern kore-inj-is-pattern IMP-sort-22-is-pattern KSEQ-symbol-1-is-pattern IMP-symbol-119-is-pattern in-sort-is-pattern string-literal-11-is-pattern string-literal-10-is-pattern IMP-symbol-196-is-pattern IMP-symbol-112-is-pattern IMP-symbol-176-is-pattern IMP-symbol-120-is-pattern top-is-pattern IMP-sort-7-is-pattern IMP-sort-9-is-pattern and-is-pattern IMP-symbol-114-is-pattern IMP-sort-29-is-pattern sorting-cache-35 IMP-symbol-114-sorting rule-imp-transitivity ) OFGPHABAICDEBEJCDKLMNQHRFGABAICDEBEJCDKLMNSTHUAFGABAICDEBEJCDKLMNUBUC $.
sorting-cache-37 $p |- ( \imp \top ( \in-sort ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' \kore-symbol-dotk ) ( \kore-symbol-Lbl'-LT-'state'-GT-' ( \kore-symbol-Lbl'Unds'Map'Unds' ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem ( \kore-dv \kore-sort-SortId "a" ) ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortKItem ( \kore-dv \kore-sort-SortInt "10" ) ) ) \kore-symbol-Lbl'Stop'Map ) ) ) ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) ) \kore-sort-SortGeneratedTopCell ) ) $= ( kore-dv-is-pattern IMP-sort-22-is-pattern IMP-sort-17-is-pattern BASIC-K-sort-1-is-pattern kore-inj-is-pattern in-sort-is-pattern KSEQ-symbol-1-is-pattern IMP-symbol-119-is-pattern string-literal-11-is-pattern string-literal-10-is-pattern IMP-symbol-196-is-pattern IMP-symbol-112-is-pattern IMP-symbol-176-is-pattern IMP-symbol-120-is-pattern IMP-symbol-114-is-pattern string-literal-1-is-pattern IMP-symbol-116-is-pattern top-is-pattern IMP-sort-29-is-pattern IMP-sort-10-is-pattern and-is-pattern IMP-symbol-117-is-pattern IMP-sort-8-is-pattern sorting-cache-36 sorting-cache-23 rule-and-intro-alt2-sugar IMP-symbol-117-sorting rule-imp-transitivity ) RGHCDCIAEBDBJAEKLMNOSFBPAQTFUAGHCDCIAEBDBJAEKLMNOBPAQUBUCFRGHCDCIAEBDBJAEKLMNOSFBPAQTFUDUEUFGHCDCIAEBDBJAEKLMNOBPAQUGUH $.
sorting-cache-38 $p |- ( \imp \top ( \in-sort ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-top \kore-sort-SortGeneratedTopCell ) ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' \kore-symbol-dotk ) ( \kore-symbol-Lbl'-LT-'state'-GT-' ( \kore-symbol-Lbl'Unds'Map'Unds' ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem ( \kore-dv \kore-sort-SortId "a" ) ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortKItem ( \kore-dv \kore-sort-SortInt "10" ) ) ) \kore-symbol-Lbl'Stop'Map ) ) ) ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) \kore-sort-SortGeneratedTopCell ) ) $= ( IMP-sort-8-is-pattern kore-top-is-pattern kore-dv-is-pattern IMP-sort-22-is-pattern in-sort-is-pattern IMP-sort-17-is-pattern BASIC-K-sort-1-is-pattern kore-inj-is-pattern kore-and-is-pattern top-is-pattern KSEQ-symbol-1-is-pattern IMP-symbol-119-is-pattern string-literal-11-is-pattern string-literal-10-is-pattern IMP-symbol-196-is-pattern IMP-symbol-112-is-pattern IMP-symbol-176-is-pattern IMP-symbol-120-is-pattern IMP-symbol-114-is-pattern string-literal-1-is-pattern IMP-symbol-116-is-pattern IMP-symbol-117-is-pattern and-is-pattern sorting-cache-0 rule-and-intro-alt2-sugar kore-and-sorting rule-imp-transitivity sorting-cache-37 ) JAABABIAEKLFGFMCHDGDNCHOPQRSDTCUAUBAEUCAAABABIKLFGFMCHDGDNCHOPQRSDTCUAUBIAEJAABABIAEKLFGFMCHDGDNCHOPQRSDTCUAUBAEJABAEABAEUCAABABIAEJABAEABAEUDUDUEAABABUFUGUHUEAAABABIKLFGFMCHDGDNCHOPQRSDTCUAUBUFUG $.
sorting-cache-39 $p |- ( \imp \top ( \kore-is-sort \kore-sort-SortKConfigVar ) ) $= ( IMP-sort-20-is-pattern kore-is-sort-is-pattern top-is-pattern imp-is-pattern proof-rule-prop-1 IMP-sort-20-sort proof-rule-mp ) ABCABDABCEFG $.
sorting-cache-40 $p |- ( \imp \top ( \in-sort ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) \kore-sort-SortKConfigVar ) ) $= ( IMP-sort-20-is-pattern string-literal-9-is-pattern kore-dv-is-pattern in-sort-is-pattern top-is-pattern imp-is-pattern proof-rule-prop-1 kore-dv-sorting proof-rule-mp ) ABCADEABCADFABCADEGABHI $.
sorting-cache-41 $p |- ( \imp \top ( \in-sort ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) \kore-sort-SortKItem ) ) $= ( IMP-sort-20-is-pattern kore-is-sort-is-pattern BASIC-K-sort-1-is-pattern string-literal-9-is-pattern kore-dv-is-pattern top-is-pattern and-is-pattern in-sort-is-pattern rule-and-intro-alt2-sugar kore-inj-is-pattern sorting-cache-39 sorting-cache-2 sorting-cache-40 INJ-symbol-0-sorting rule-imp-transitivity ) FABCBGADEAHGACADEJCHFABCBGADEAHFABCBKLIMIACADENO $.
sorting-cache-42 $p |- ( \imp \top ( \in-sort ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) \kore-sort-SortIds ) ) $= ( IMP-sort-17-is-pattern in-sort-is-pattern string-literal-11-is-pattern kore-dv-is-pattern IMP-symbol-111-is-pattern IMP-sort-0-is-pattern top-is-pattern and-is-pattern IMP-symbol-148-is-pattern sorting-cache-4 sorting-cache-3 rule-and-intro-alt2-sugar IMP-symbol-148-sorting rule-imp-transitivity ) GACDABEFBHACDEIFBGACDABEFBJKLACDEMN $.
sorting-cache-43 $p |- ( \imp \top ( \in-sort ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) \kore-sort-SortPgm ) ) $= ( kore-dv-is-pattern IMP-sort-17-is-pattern string-literal-11-is-pattern IMP-sort-22-is-pattern in-sort-is-pattern IMP-symbol-111-is-pattern IMP-symbol-148-is-pattern IMP-sort-13-is-pattern string-literal-10-is-pattern kore-inj-is-pattern IMP-symbol-169-is-pattern top-is-pattern IMP-sort-0-is-pattern IMP-sort-30-is-pattern and-is-pattern IMP-symbol-220-is-pattern IMP-sort-26-is-pattern sorting-cache-42 sorting-cache-9 rule-and-intro-alt2-sugar IMP-symbol-220-sorting rule-imp-transitivity ) LBCAFGMEBCADHDIAJKNEOBCAFGBCADHDIAJKPQELBCAFGMEBCADHDIAJKNERSTBCAFGBCADHDIAJKUAUB $.
sorting-cache-44 $p |- ( \imp \top ( \in-sort ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) \kore-sort-SortKItem ) ) $= ( kore-dv-is-pattern IMP-sort-17-is-pattern string-literal-11-is-pattern IMP-sort-22-is-pattern IMP-sort-26-is-pattern kore-is-sort-is-pattern BASIC-K-sort-1-is-pattern kore-inj-is-pattern IMP-symbol-111-is-pattern IMP-symbol-148-is-pattern IMP-sort-13-is-pattern string-literal-10-is-pattern IMP-symbol-169-is-pattern IMP-symbol-220-is-pattern top-is-pattern and-is-pattern in-sort-is-pattern rule-and-intro-alt2-sugar sorting-cache-1 sorting-cache-2 sorting-cache-43 INJ-symbol-0-sorting rule-imp-transitivity ) OEFGFPBCAIJBCADKDLAHMNEQPEGBCAIJBCADKDLAHMNHGQOEFGFPBCAIJBCADKDLAHMNEQOEFGFSTRUAREGBCAIJBCADKDLAHMNUBUC $.
sorting-cache-45 $p |- ( \imp \top ( \in-sort ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) ) ) \kore-sort-SortMap ) ) $= ( kore-dv-is-pattern kore-inj-is-pattern BASIC-K-sort-1-is-pattern IMP-sort-20-is-pattern IMP-sort-17-is-pattern string-literal-11-is-pattern IMP-sort-22-is-pattern in-sort-is-pattern string-literal-9-is-pattern IMP-sort-26-is-pattern IMP-symbol-111-is-pattern IMP-symbol-148-is-pattern IMP-sort-13-is-pattern string-literal-10-is-pattern IMP-symbol-169-is-pattern IMP-symbol-220-is-pattern IMP-sort-14-is-pattern IMP-symbol-196-is-pattern top-is-pattern IMP-symbol-112-is-pattern and-is-pattern rule-and-intro-alt2-sugar rule-imp-transitivity IMP-symbol-176-is-pattern sorting-cache-15 sorting-cache-41 sorting-cache-44 IMP-symbol-196-sorting IMP-symbol-176-sorting ) STQHDCDIABJCEFAKLEFAGMGNABOPBRQHUATDCDIABJCEFAKLEFAGMGNABOPBRUDQHSTQHDCDIABJCEFAKLEFAGMGNABOPBRQHUESDCDIABCHJCEFAKLEFAGMGNABOPBCHUADCDIABJCEFAKLEFAGMGNABOPBRQHSDCDIABCHJCEFAKLEFAGMGNABOPBCHUFUGUBDCDIABJCEFAKLEFAGMGNABOPBUHUCUBTDCDIABJCEFAKLEFAGMGNABOPBRUIUC $.
sorting-cache-46 $p |- ( \imp \top ( \in-sort ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-top \kore-sort-SortGeneratedTopCell ) ) ( \kore-symbol-LblinitGeneratedTopCell ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) ) ) ) ) \kore-sort-SortGeneratedTopCell ) ) $= ( IMP-sort-8-is-pattern kore-dv-is-pattern kore-inj-is-pattern kore-top-is-pattern IMP-sort-20-is-pattern BASIC-K-sort-1-is-pattern IMP-sort-17-is-pattern string-literal-11-is-pattern IMP-sort-22-is-pattern in-sort-is-pattern IMP-symbol-112-is-pattern string-literal-9-is-pattern IMP-sort-26-is-pattern IMP-symbol-111-is-pattern IMP-symbol-148-is-pattern IMP-sort-13-is-pattern string-literal-10-is-pattern IMP-symbol-169-is-pattern IMP-symbol-220-is-pattern IMP-symbol-196-is-pattern IMP-symbol-176-is-pattern kore-and-is-pattern top-is-pattern IMP-symbol-216-is-pattern rule-imp-transitivity and-is-pattern sorting-cache-0 rule-and-intro-alt2-sugar kore-and-sorting IMP-sort-14-is-pattern sorting-cache-45 IMP-symbol-216-sorting ) UCAADADUBAJKEFELBCMFGHBNOGHBIPIQBCRSCTUAUDAJUFAAADADUBKEFELBCMFGHBNOGHBIPIQBCRSCTUAUDUBAJUCAADADUBAJKEFELBCMFGHBNOGHBIPIQBCRSCTUAUDAJUCADAJADAJUFAADADUBAJUCADAJADAJUGUGUHAADADUIUEUCKEFELBCMFGHBNOGHBIPIQBCRSCTUAUJJKEFELBCMFGHBNOGHBIPIQBCRSCTUAUDAJUKKEFELBCMFGHBNOGHBIPIQBCRSCTUAULUEUHAAADADUBKEFELBCMFGHBNOGHBIPIQBCRSCTUAUDUIUE $.
typecode-cache-Pattern-0 $p #Pattern x $= ( element-var-is-var var-is-pattern ) ABC $.
typecode-cache-Pattern-1 $p #Pattern ( \eq x \unit-sort ) $= ( typecode-cache-Pattern-0 unit-sort-is-symbol symbol-is-pattern eq-is-pattern ) ABCDE $.
typecode-cache-Pattern-2 $p #Pattern kore-sort-var-R $= ( element-var-is-var var-is-pattern ) ABC $.
sorting-cache-47 $p |- ( \imp ( \and \top ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ) ( \kore-is-sort kore-sort-var-R ) ) $= ( typecode-cache-Pattern-2 kore-is-sort-is-pattern top-is-pattern and-is-pattern rule-imp-transitivity and-elim-right-sugar and-elim-left-sugar imp-reflexivity ) DABCDEEABCDEABCDABCDEGABCDEABCABCABCDHABCIFF $.
typecode-cache-Pattern-3 $p #Pattern kore-element-var-Val $= ( element-var-is-var var-is-pattern ) ABC $.
typecode-cache-Pattern-4 $p #Pattern ( \kore-equals \kore-sort-SortMap kore-sort-var-R kore-element-var-Val \kore-symbol-Lbl'Stop'Map ) $= ( IMP-sort-14-is-pattern typecode-cache-Pattern-2 typecode-cache-Pattern-3 IMP-symbol-112-is-pattern kore-equals-is-pattern ) CADBEFG $.
sorting-rearrange-0 $p |- ( \imp ( \and \top ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortMap kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortMap kore-sort-var-R kore-element-var-Val \kore-symbol-Lbl'Stop'Map ) ) ) ) $= ( top-is-pattern typecode-cache-Pattern-2 and-is-pattern kore-is-sort-is-pattern IMP-sort-14-is-pattern typecode-cache-Pattern-4 kore-exists-is-pattern kore-valid-is-pattern sorting-cache-47 top-intro rule-weakening rule-and-intro-alt2-sugar IMP-axiom-2657 rule-imp-transitivity ) CADFCEEADFCEADGADABHBIJCADFCEEADFCAKCADFCEECLMNABOP $.
typecode-cache-Pattern-5 $p #Pattern ( \kore-equals \kore-sort-SortMap \unit-sort kore-element-var-Val \kore-symbol-Lbl'Stop'Map ) $= ( IMP-sort-14-is-pattern unit-sort-is-symbol symbol-is-pattern typecode-cache-Pattern-3 IMP-symbol-112-is-pattern kore-equals-is-pattern ) BCDAEFG $.
typecode-cache-Pattern-6 $p #Pattern kore-sort-var-x0 $= ( element-var-is-var var-is-pattern ) ABC $.
typecode-cache-Pattern-7 $p #Pattern ( \kore-equals \kore-sort-SortMap kore-sort-var-x0 kore-element-var-Val \kore-symbol-Lbl'Stop'Map ) $= ( IMP-sort-14-is-pattern typecode-cache-Pattern-6 typecode-cache-Pattern-3 IMP-symbol-112-is-pattern kore-equals-is-pattern ) CBDAEFG $.
substitution-0 $p #Substitution ( \kore-is-sort \unit-sort ) ( \kore-is-sort kore-sort-var-R ) \unit-sort kore-sort-var-R $= ( unit-sort-is-symbol symbol-is-pattern element-var-is-var typecode-cache-Pattern-2 substitution-var-same substitution-kore-is-sort ) BCAEBCADBCADFG $.
substitution-1 $p #Substitution \top \top \unit-sort kore-sort-var-R $= ( top-is-pattern unit-sort-is-symbol symbol-is-pattern element-var-is-var substitution-disjoint ) BCDAEF $.
substitution-2 $p #Substitution ( \and ( \kore-is-sort \unit-sort ) \top ) ( \and ( \kore-is-sort kore-sort-var-R ) \top ) \unit-sort kore-sort-var-R $= ( unit-sort-is-symbol symbol-is-pattern kore-is-sort-is-pattern top-is-pattern typecode-cache-Pattern-2 element-var-is-var substitution-0 substitution-1 substitution-and ) BCBCDEAFDEAGAHAIJ $.
substitution-3 $p #Substitution \kore-sort-SortMap \kore-sort-SortMap \unit-sort kore-sort-var-R $= ( IMP-sort-14-is-pattern unit-sort-is-symbol symbol-is-pattern element-var-is-var substitution-disjoint ) BCDAEF $.
substitution-4 $p #Substitution kore-element-var-Val kore-element-var-Val \unit-sort kore-sort-var-R $= ( typecode-cache-Pattern-3 unit-sort-is-symbol symbol-is-pattern element-var-is-var substitution-disjoint ) BCDEAFG $.
substitution-5 $p #Substitution \kore-symbol-Lbl'Stop'Map \kore-symbol-Lbl'Stop'Map \unit-sort kore-sort-var-R $= ( IMP-symbol-112-is-pattern unit-sort-is-symbol symbol-is-pattern element-var-is-var substitution-disjoint ) BCDAEF $.
substitution-6 $p #Substitution ( \kore-equals \kore-sort-SortMap \unit-sort kore-element-var-Val \kore-symbol-Lbl'Stop'Map ) ( \kore-equals \kore-sort-SortMap kore-sort-var-R kore-element-var-Val \kore-symbol-Lbl'Stop'Map ) \unit-sort kore-sort-var-R $= ( unit-sort-is-symbol symbol-is-pattern IMP-sort-14-is-pattern typecode-cache-Pattern-3 IMP-symbol-112-is-pattern element-var-is-var typecode-cache-Pattern-2 substitution-3 substitution-var-same substitution-4 substitution-5 substitution-kore-equals ) ECDBFGEAIBFGCDAHAJCDAHKABLAMN $.
substitution-7 $p #Substitution ( \kore-is-sort kore-sort-var-x0 ) ( \kore-is-sort kore-sort-var-R ) kore-sort-var-x0 kore-sort-var-R $= ( typecode-cache-Pattern-6 element-var-is-var typecode-cache-Pattern-2 substitution-var-same substitution-kore-is-sort ) BCAEBCADBCADFG $.
substitution-8 $p #Substitution \top \top kore-sort-var-x0 kore-sort-var-R $= ( top-is-pattern typecode-cache-Pattern-6 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-9 $p #Substitution ( \and ( \kore-is-sort kore-sort-var-x0 ) \top ) ( \and ( \kore-is-sort kore-sort-var-R ) \top ) kore-sort-var-x0 kore-sort-var-R $= ( typecode-cache-Pattern-6 kore-is-sort-is-pattern top-is-pattern typecode-cache-Pattern-2 element-var-is-var substitution-7 substitution-8 substitution-and ) BCBCDEAFDEAGABHABIJ $.
substitution-10 $p #Substitution \kore-sort-SortMap \kore-sort-SortMap kore-sort-var-x0 kore-sort-var-R $= ( IMP-sort-14-is-pattern typecode-cache-Pattern-6 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-11 $p #Substitution kore-element-var-Val kore-element-var-Val kore-sort-var-x0 kore-sort-var-R $= ( typecode-cache-Pattern-3 typecode-cache-Pattern-6 element-var-is-var substitution-disjoint ) BDCEAFG $.
substitution-12 $p #Substitution \kore-symbol-Lbl'Stop'Map \kore-symbol-Lbl'Stop'Map kore-sort-var-x0 kore-sort-var-R $= ( IMP-symbol-112-is-pattern typecode-cache-Pattern-6 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-13 $p #Substitution ( \kore-equals \kore-sort-SortMap kore-sort-var-x0 kore-element-var-Val \kore-symbol-Lbl'Stop'Map ) ( \kore-equals \kore-sort-SortMap kore-sort-var-R kore-element-var-Val \kore-symbol-Lbl'Stop'Map ) kore-sort-var-x0 kore-sort-var-R $= ( typecode-cache-Pattern-6 IMP-sort-14-is-pattern typecode-cache-Pattern-3 IMP-symbol-112-is-pattern element-var-is-var typecode-cache-Pattern-2 substitution-10 substitution-var-same substitution-11 substitution-12 substitution-kore-equals ) ECDBFGEAIBFGCDAHACJCDAHKABCLACMN $.
substitution-14 $p #Substitution ( \kore-exists \kore-sort-SortMap kore-sort-var-x0 kore-element-var-Val ( \kore-equals \kore-sort-SortMap kore-sort-var-x0 kore-element-var-Val \kore-symbol-Lbl'Stop'Map ) ) ( \kore-exists \kore-sort-SortMap kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortMap kore-sort-var-R kore-element-var-Val \kore-symbol-Lbl'Stop'Map ) ) kore-sort-var-x0 kore-sort-var-R $= ( typecode-cache-Pattern-6 IMP-sort-14-is-pattern element-var-is-var typecode-cache-Pattern-7 typecode-cache-Pattern-2 typecode-cache-Pattern-4 substitution-10 substitution-var-same substitution-13 substitution-kore-exists-alt ) ECDBCGEAHABICDBAFACJCDAFKABCLM $.
sorting-cache-48 $p |- ( \imp \top ( \kore-is-sort \unit-sort ) ) $= ( unit-sort-is-symbol symbol-is-pattern kore-is-sort-is-pattern top-is-pattern imp-is-pattern proof-rule-prop-1 unit-sort-is-kore-sort proof-rule-mp ) ABCDABCEABCDFGH $.
sorting-cache-49 $p |- ( \imp \top ( \and ( \kore-is-sort \unit-sort ) \top ) ) $= ( top-is-pattern unit-sort-is-symbol symbol-is-pattern kore-is-sort-is-pattern sorting-cache-48 top-intro rule-weakening rule-and-intro-alt2-sugar ) ABCDAEAAFGH $.
sorting-rearrange-1 $p |- ( \imp \top ( \kore-valid \unit-sort ( \kore-exists \kore-sort-SortMap \unit-sort kore-element-var-Val ( \kore-equals \kore-sort-SortMap \unit-sort kore-element-var-Val \kore-symbol-Lbl'Stop'Map ) ) ) ) $= ( kore-sort-var-R-elementvariable unit-sort-is-symbol symbol-is-pattern top-is-pattern kore-sort-var-x0-elementvariable IMP-sort-14-is-pattern typecode-cache-Pattern-2 kore-exists-is-pattern typecode-cache-Pattern-6 and-is-pattern kore-is-sort-is-pattern kore-valid-is-pattern element-var-is-var typecode-cache-Pattern-4 typecode-cache-Pattern-5 x-is-element-var typecode-cache-Pattern-7 substitution-var-same rule-weakening substitution-kore-valid substitution-imp top-intro sorting-cache-49 rule-and-intro-alt2-sugar typecode-cache-Pattern-1 exists-is-pattern unit-sort-is-functional sorting-rearrange-0 substitution-2 substitution-3 substitution-6 substitution-kore-exists-alt substitution-9 substitution-14 functional-substitution-alt rule-imp-transitivity ) EECDLEKKCDGCDAPAIMEECDLEKEEUCTUDUECDBHGBHBAOAIMCDGCDAPAIMFJGFJAFRAIMEBHLEKCDLEKFJLEKQBFEQUFQUGQUHTBAUICDCDLEKCDGCDAPAIMBHLEKBHGBHBAOAIMBNBUJCDGCDAPAIBHGBHBAOAICDBNCDBNSGCDAPGBHBAOCDABNBUKCDBNSBAULUMUAUBFJFJLEKFJGFJAFRAIMBHLEKBHGBHBAOAIMBNBFUNFJGFJAFRAIBHGBHBAOAIFJBNFJBNSBAFUOUAUBUPUQ $.
typecode-cache-Pattern-8 $p #Pattern kore-element-var-V2 $= ( element-var-is-var var-is-pattern ) ABC $.
typecode-cache-Pattern-9 $p #Pattern ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-V2 \kore-sort-SortMap ) \top ) ) $= ( and-is-pattern typecode-cache-Pattern-2 kore-is-sort-is-pattern typecode-cache-Pattern-8 IMP-sort-14-is-pattern in-sort-is-pattern top-is-pattern ) ADEBFGHICC $.
sorting-rearrange-2 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-V2 \kore-sort-SortMap ) \top ) ) ( \exists kore-element-var-Val ( \eq kore-element-var-Val \kore-symbol-Lbl'Stop'Map ) ) ) $= ( top-is-pattern typecode-cache-Pattern-9 IMP-symbol-112-is-pattern typecode-cache-Pattern-3 eq-is-pattern exists-is-pattern top-intro rule-weakening IMP-sort-14-is-pattern sorting-cache-15 sorting-rearrange-1 kore-functional rule-imp-transitivity ) ABEDCGFHCIABEDJKLFDCMCNOP $.
typecode-cache-Pattern-10 $p #Pattern kore-element-var-V1 $= ( element-var-is-var var-is-pattern ) ABC $.
sorting-cache-50 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-V2 \kore-sort-SortMap ) \top ) ) ( \kore-is-sort kore-sort-var-R ) ) $= ( typecode-cache-Pattern-2 kore-is-sort-is-pattern typecode-cache-Pattern-9 typecode-cache-Pattern-8 IMP-sort-14-is-pattern in-sort-is-pattern top-is-pattern and-is-pattern and-elim-left-sugar imp-reflexivity rule-imp-transitivity ) ABEACDACDACDBFGHIJKACDLM $.
sorting-cache-51 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-V2 \kore-sort-SortMap ) \top ) ) ( \in-sort kore-element-var-V2 \kore-sort-SortMap ) ) $= ( typecode-cache-Pattern-8 IMP-sort-14-is-pattern in-sort-is-pattern top-is-pattern and-is-pattern rule-imp-transitivity typecode-cache-Pattern-9 typecode-cache-Pattern-2 kore-is-sort-is-pattern and-elim-right-sugar and-elim-left-sugar imp-reflexivity ) ABIBCDEFGBCDEAJKBCDEFGLBCDEFGBCDEBCDEBCDEFMBCDENHH $.
sorting-cache-52 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-V2 \kore-sort-SortMap ) \top ) ) ( \and ( \in-sort kore-element-var-V1 \kore-sort-SortMap ) \top ) ) ( \and ( \in-sort kore-element-var-V1 \kore-sort-SortMap ) ( \and ( \in-sort kore-element-var-V2 \kore-sort-SortMap ) \top ) ) ) $= ( IMP-sort-14-is-pattern in-sort-is-pattern typecode-cache-Pattern-10 and-is-pattern top-is-pattern typecode-cache-Pattern-9 typecode-cache-Pattern-8 rule-imp-transitivity and-elim-left-sugar rule-and-intro-alt2-sugar and-elim-right-sugar imp-reflexivity sorting-cache-51 top-intro rule-weakening ) ACIBFDEHGGBFDECJDEHGACIBFDEHGGBFDEHGBFDEACIBFDEHGNBFDEHGBFDEBFDEBFDEHLBFDEOKKACIBFDEHGGCJDEHACIBFDEHGGACICJDEACIBFDEHGLACPKACIBFDEHGGHQRMM $.
typecode-cache-Pattern-11 $p #Pattern ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-V1 \kore-sort-SortMap ) ( \and ( \in-sort kore-element-var-V2 \kore-sort-SortMap ) \top ) ) ) $= ( and-is-pattern IMP-sort-14-is-pattern in-sort-is-pattern typecode-cache-Pattern-2 kore-is-sort-is-pattern typecode-cache-Pattern-10 typecode-cache-Pattern-8 top-is-pattern ) AGHBIEFCJEFKDDD $.
typecode-cache-Pattern-12 $p #Pattern kore-element-var-V0 $= ( element-var-is-var var-is-pattern ) ABC $.
typecode-cache-Pattern-13 $p #Pattern ( \kore-symbol-Lbl'Unds'Map'Unds' kore-element-var-V1 kore-element-var-V2 ) $= ( typecode-cache-Pattern-10 typecode-cache-Pattern-8 IMP-symbol-176-is-pattern ) ACBDE $.
typecode-cache-Pattern-14 $p #Pattern ( \kore-equals \kore-sort-SortMap kore-sort-var-R kore-element-var-V0 ( \kore-symbol-Lbl'Unds'Map'Unds' kore-element-var-V1 kore-element-var-V2 ) ) $= ( IMP-sort-14-is-pattern typecode-cache-Pattern-2 typecode-cache-Pattern-12 typecode-cache-Pattern-13 kore-equals-is-pattern ) EAFBGCDHI $.
sorting-rearrange-3 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-V2 \kore-sort-SortMap ) \top ) ) ( \and ( \in-sort kore-element-var-V1 \kore-sort-SortMap ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortMap kore-sort-var-R kore-element-var-V0 ( \kore-equals \kore-sort-SortMap kore-sort-var-R kore-element-var-V0 ( \kore-symbol-Lbl'Unds'Map'Unds' kore-element-var-V1 kore-element-var-V2 ) ) ) ) ) $= ( and-is-pattern IMP-sort-14-is-pattern in-sort-is-pattern typecode-cache-Pattern-9 typecode-cache-Pattern-10 top-is-pattern typecode-cache-Pattern-2 kore-is-sort-is-pattern rule-imp-transitivity typecode-cache-Pattern-11 typecode-cache-Pattern-14 kore-exists-is-pattern kore-valid-is-pattern typecode-cache-Pattern-8 and-elim-left-sugar sorting-cache-50 sorting-cache-52 rule-and-intro-alt2-sugar IMP-axiom-3071 ) ADHCIFGJEEACDNAKFAKABCDOBPQADHCIFGJEEAKLCIFGDRFGJEEADHCIFGJEEADHAKLADHCIFGJESADTMACDUAUBABCDUCM $.
typecode-cache-Pattern-15 $p #Pattern ( \kore-equals \kore-sort-SortMap kore-sort-var-R kore-element-var-V0 ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map kore-element-var-V2 ) ) $= ( IMP-sort-14-is-pattern typecode-cache-Pattern-2 typecode-cache-Pattern-12 IMP-symbol-112-is-pattern typecode-cache-Pattern-8 IMP-symbol-176-is-pattern kore-equals-is-pattern ) DAEBFGCHIJ $.
typecode-cache-Pattern-16 $p #Pattern kore-element-var-x0 $= ( element-var-is-var var-is-pattern ) ABC $.
typecode-cache-Pattern-17 $p #Pattern ( \kore-symbol-Lbl'Unds'Map'Unds' kore-element-var-x0 kore-element-var-V2 ) $= ( typecode-cache-Pattern-16 typecode-cache-Pattern-8 IMP-symbol-176-is-pattern ) BCADE $.
typecode-cache-Pattern-18 $p #Pattern ( \kore-equals \kore-sort-SortMap kore-sort-var-R kore-element-var-V0 ( \kore-symbol-Lbl'Unds'Map'Unds' kore-element-var-x0 kore-element-var-V2 ) ) $= ( IMP-sort-14-is-pattern typecode-cache-Pattern-2 typecode-cache-Pattern-12 typecode-cache-Pattern-17 kore-equals-is-pattern ) EAFBGCDHI $.
substitution-15 $p #Substitution ( \and ( \in-sort \kore-symbol-Lbl'Stop'Map \kore-sort-SortMap ) \top ) ( \and ( \in-sort kore-element-var-V1 \kore-sort-SortMap ) \top ) \kore-symbol-Lbl'Stop'Map kore-element-var-V1 $= ( IMP-symbol-112-is-pattern IMP-sort-14-is-pattern element-var-is-var top-is-pattern in-sort-is-pattern typecode-cache-Pattern-10 substitution-disjoint substitution-var-same substitution-in-sort substitution-and ) BBCFEAGCFEADBBCAGCADBADICBADHJEBADHK $.
substitution-16 $p #Substitution kore-sort-var-R kore-sort-var-R \kore-symbol-Lbl'Stop'Map kore-element-var-V1 $= ( typecode-cache-Pattern-2 IMP-symbol-112-is-pattern element-var-is-var substitution-disjoint ) ACDBEF $.
substitution-17 $p #Substitution kore-element-var-V0 kore-element-var-V0 \kore-symbol-Lbl'Stop'Map kore-element-var-V1 $= ( typecode-cache-Pattern-12 IMP-symbol-112-is-pattern element-var-is-var substitution-disjoint ) ACDBEF $.
substitution-18 $p #Substitution kore-element-var-V2 kore-element-var-V2 \kore-symbol-Lbl'Stop'Map kore-element-var-V1 $= ( typecode-cache-Pattern-8 IMP-symbol-112-is-pattern element-var-is-var substitution-disjoint ) BCDAEF $.
substitution-19 $p #Substitution ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map kore-element-var-V2 ) ( \kore-symbol-Lbl'Unds'Map'Unds' kore-element-var-V1 kore-element-var-V2 ) \kore-symbol-Lbl'Stop'Map kore-element-var-V1 $= ( IMP-symbol-112-is-pattern element-var-is-var typecode-cache-Pattern-8 typecode-cache-Pattern-10 substitution-var-same substitution-18 IMP-symbol-176-substitution ) ADCCBEAFBECADGABHI $.
substitution-20 $p #Substitution ( \kore-equals \kore-sort-SortMap kore-sort-var-R kore-element-var-V0 ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map kore-element-var-V2 ) ) ( \kore-equals \kore-sort-SortMap kore-sort-var-R kore-element-var-V0 ( \kore-symbol-Lbl'Unds'Map'Unds' kore-element-var-V1 kore-element-var-V2 ) ) \kore-symbol-Lbl'Stop'Map kore-element-var-V1 $= ( IMP-sort-14-is-pattern IMP-symbol-112-is-pattern typecode-cache-Pattern-2 typecode-cache-Pattern-12 element-var-is-var typecode-cache-Pattern-8 IMP-symbol-176-is-pattern typecode-cache-Pattern-13 substitution-disjoint substitution-16 substitution-17 substitution-19 substitution-kore-equals ) EAGBHFDJKEAGBHCDLFCIEFCIMACNBCOCDPQ $.
substitution-21 $p #Substitution ( \kore-exists \kore-sort-SortMap kore-sort-var-R kore-element-var-V0 ( \kore-equals \kore-sort-SortMap kore-sort-var-R kore-element-var-V0 ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map kore-element-var-V2 ) ) ) ( \kore-exists \kore-sort-SortMap kore-sort-var-R kore-element-var-V0 ( \kore-equals \kore-sort-SortMap kore-sort-var-R kore-element-var-V0 ( \kore-symbol-Lbl'Unds'Map'Unds' kore-element-var-V1 kore-element-var-V2 ) ) ) \kore-symbol-Lbl'Stop'Map kore-element-var-V1 $= ( IMP-sort-14-is-pattern typecode-cache-Pattern-2 IMP-symbol-112-is-pattern element-var-is-var typecode-cache-Pattern-15 typecode-cache-Pattern-14 substitution-disjoint substitution-16 substitution-20 substitution-kore-exists-alt ) EAFABDIEAFABCDJGBCHEGCHKACLABCDMN $.
substitution-22 $p #Substitution \kore-sort-SortMap \kore-sort-SortMap kore-element-var-x0 kore-element-var-V1 $= ( IMP-sort-14-is-pattern typecode-cache-Pattern-16 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-23 $p #Substitution ( \in-sort kore-element-var-x0 \kore-sort-SortMap ) ( \in-sort kore-element-var-V1 \kore-sort-SortMap ) kore-element-var-x0 kore-element-var-V1 $= ( typecode-cache-Pattern-16 IMP-sort-14-is-pattern element-var-is-var typecode-cache-Pattern-10 substitution-var-same substitution-22 substitution-in-sort ) BCBCDAFDAEBCAEGABHI $.
substitution-24 $p #Substitution \top \top kore-element-var-x0 kore-element-var-V1 $= ( top-is-pattern typecode-cache-Pattern-16 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-25 $p #Substitution ( \and ( \in-sort kore-element-var-x0 \kore-sort-SortMap ) \top ) ( \and ( \in-sort kore-element-var-V1 \kore-sort-SortMap ) \top ) kore-element-var-x0 kore-element-var-V1 $= ( typecode-cache-Pattern-16 IMP-sort-14-is-pattern in-sort-is-pattern top-is-pattern typecode-cache-Pattern-10 element-var-is-var substitution-23 substitution-24 substitution-and ) BCBCDEFAGDEFAHABIABJK $.
substitution-26 $p #Substitution kore-sort-var-R kore-sort-var-R kore-element-var-x0 kore-element-var-V1 $= ( typecode-cache-Pattern-2 typecode-cache-Pattern-16 element-var-is-var substitution-disjoint ) ADCEBFG $.
substitution-27 $p #Substitution kore-element-var-V0 kore-element-var-V0 kore-element-var-x0 kore-element-var-V1 $= ( typecode-cache-Pattern-12 typecode-cache-Pattern-16 element-var-is-var substitution-disjoint ) ADCEBFG $.
substitution-28 $p #Substitution kore-element-var-V2 kore-element-var-V2 kore-element-var-x0 kore-element-var-V1 $= ( typecode-cache-Pattern-8 typecode-cache-Pattern-16 element-var-is-var substitution-disjoint ) BDCEAFG $.
substitution-29 $p #Substitution ( \kore-symbol-Lbl'Unds'Map'Unds' kore-element-var-x0 kore-element-var-V2 ) ( \kore-symbol-Lbl'Unds'Map'Unds' kore-element-var-V1 kore-element-var-V2 ) kore-element-var-x0 kore-element-var-V1 $= ( typecode-cache-Pattern-16 element-var-is-var typecode-cache-Pattern-8 typecode-cache-Pattern-10 substitution-var-same substitution-28 IMP-symbol-176-substitution ) AECDCDBFAGBFCDAEHABCIJ $.
substitution-30 $p #Substitution ( \kore-equals \kore-sort-SortMap kore-sort-var-R kore-element-var-V0 ( \kore-symbol-Lbl'Unds'Map'Unds' kore-element-var-x0 kore-element-var-V2 ) ) ( \kore-equals \kore-sort-SortMap kore-sort-var-R kore-element-var-V0 ( \kore-symbol-Lbl'Unds'Map'Unds' kore-element-var-V1 kore-element-var-V2 ) ) kore-element-var-x0 kore-element-var-V1 $= ( IMP-sort-14-is-pattern typecode-cache-Pattern-2 typecode-cache-Pattern-12 typecode-cache-Pattern-17 typecode-cache-Pattern-13 typecode-cache-Pattern-16 element-var-is-var substitution-22 substitution-26 substitution-27 substitution-29 substitution-kore-equals ) FAGBHDEIFAGBHCDJEKCLCEMACENBCEOCDEPQ $.
substitution-31 $p #Substitution ( \kore-exists \kore-sort-SortMap kore-sort-var-R kore-element-var-V0 ( \kore-equals \kore-sort-SortMap kore-sort-var-R kore-element-var-V0 ( \kore-symbol-Lbl'Unds'Map'Unds' kore-element-var-x0 kore-element-var-V2 ) ) ) ( \kore-exists \kore-sort-SortMap kore-sort-var-R kore-element-var-V0 ( \kore-equals \kore-sort-SortMap kore-sort-var-R kore-element-var-V0 ( \kore-symbol-Lbl'Unds'Map'Unds' kore-element-var-V1 kore-element-var-V2 ) ) ) kore-element-var-x0 kore-element-var-V1 $= ( IMP-sort-14-is-pattern typecode-cache-Pattern-2 typecode-cache-Pattern-18 typecode-cache-Pattern-14 typecode-cache-Pattern-16 element-var-is-var substitution-22 substitution-26 substitution-30 substitution-kore-exists-alt ) FAGABDEHFAGABCDIEJBCKCELACEMABCDENO $.
substitution-32 $p #Substitution ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortMap kore-sort-var-R kore-element-var-V0 ( \kore-equals \kore-sort-SortMap kore-sort-var-R kore-element-var-V0 ( \kore-symbol-Lbl'Unds'Map'Unds' kore-element-var-x0 kore-element-var-V2 ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortMap kore-sort-var-R kore-element-var-V0 ( \kore-equals \kore-sort-SortMap kore-sort-var-R kore-element-var-V0 ( \kore-symbol-Lbl'Unds'Map'Unds' kore-element-var-V1 kore-element-var-V2 ) ) ) ) kore-element-var-x0 kore-element-var-V1 $= ( typecode-cache-Pattern-2 IMP-sort-14-is-pattern kore-exists-is-pattern typecode-cache-Pattern-18 typecode-cache-Pattern-14 typecode-cache-Pattern-16 element-var-is-var substitution-26 substitution-31 substitution-kore-valid ) AFGAFABDEIBHAFGAFABCDJBHEKCLACEMABCDENO $.
sorting-cache-53 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-V2 \kore-sort-SortMap ) \top ) ) ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-V2 \kore-sort-SortMap ) \top ) ) ) $= ( typecode-cache-Pattern-9 top-is-pattern typecode-cache-Pattern-8 IMP-sort-14-is-pattern in-sort-is-pattern rule-and-intro-alt2-sugar typecode-cache-Pattern-2 kore-is-sort-is-pattern and-is-pattern sorting-cache-50 sorting-cache-51 top-intro rule-weakening ) ABCAIJBEFGDKABLABCBEFGDABMABCDNOHH $.
sorting-rearrange-4 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-V2 \kore-sort-SortMap ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortMap kore-sort-var-R kore-element-var-V0 ( \kore-equals \kore-sort-SortMap kore-sort-var-R kore-element-var-V0 ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map kore-element-var-V2 ) ) ) ) ) $= ( IMP-sort-14-is-pattern typecode-cache-Pattern-2 kore-element-var-V1-elementvariable in-sort-is-pattern IMP-symbol-112-is-pattern top-is-pattern and-is-pattern kore-exists-is-pattern typecode-cache-Pattern-9 kore-valid-is-pattern kore-element-var-x0-elementvariable typecode-cache-Pattern-15 typecode-cache-Pattern-14 typecode-cache-Pattern-10 typecode-cache-Pattern-16 element-var-is-var rule-and-intro-alt2-sugar typecode-cache-Pattern-18 kore-element-var-Val-elementvariable substitution-imp sorting-cache-53 imp-is-pattern proof-rule-prop-1 IMP-symbol-112-sorting proof-rule-mp top-intro rule-weakening sorting-rearrange-2 sorting-rearrange-3 substitution-15 substitution-16 substitution-21 substitution-kore-valid substitution-25 substitution-32 functional-substitution-alt rule-imp-transitivity ) ACLACLHDGIJJAEDAEABCOBKMACLACLHDGIJACUDACLHDGIHDGACLHDGUEHDGACLUFUGUHACLIUIUJTTHAEDAEABFCPBKMAEDAEABCOBKMAEDAEABCNUABKMACLFQDGIJHDGIJNRDGIJUBFNACUBUKABFCULHHDGIJAEDAEABCOBKMFQDGIJAEDAEABFCPBKMFSFUMAEDAEABCOBKAEDAEABFCPBKHFSAFUNABFCUOUPUCNRNRDGIJAEDAEABCNUABKMFQDGIJAEDAEABFCPBKMFSFNUQABFCNURUCUSUT $.
sorting-cache-54 $p |- ( \imp ( \and \top ( \and ( \kore-is-sort kore-sort-var-x0 ) \top ) ) ( \kore-is-sort kore-sort-var-x0 ) ) $= ( typecode-cache-Pattern-6 kore-is-sort-is-pattern top-is-pattern and-is-pattern rule-imp-transitivity and-elim-right-sugar and-elim-left-sugar imp-reflexivity ) DABCDEEABCDEABCDABCDEGABCDEABCABCABCDHABCIFF $.
typecode-cache-Pattern-19 $p #Pattern kore-element-var-x1 $= ( element-var-is-var var-is-pattern ) ABC $.
sorting-rearrange-5 $p |- ( \imp ( \and \top ( \and ( \kore-is-sort kore-sort-var-x0 ) \top ) ) ( \kore-valid kore-sort-var-x0 ( \kore-exists \kore-sort-SortKConfigVar kore-sort-var-x0 kore-element-var-x1 ( \kore-equals \kore-sort-SortKConfigVar kore-sort-var-x0 kore-element-var-x1 ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ) ) ) $= ( top-is-pattern typecode-cache-Pattern-6 and-is-pattern kore-is-sort-is-pattern IMP-sort-20-is-pattern typecode-cache-Pattern-19 string-literal-9-is-pattern kore-dv-is-pattern kore-equals-is-pattern kore-exists-is-pattern kore-valid-is-pattern sorting-cache-54 top-intro rule-weakening rule-and-intro-alt2-sugar domain-value-11-functional rule-imp-transitivity ) CADFCEEADFCEADGADGADBHGIJKBLMCADFCEEADFCANCADFCEECOPQABRS $.
typecode-cache-Pattern-20 $p #Pattern kore-sort-var-x1 $= ( element-var-is-var var-is-pattern ) ABC $.
substitution-33 $p #Substitution ( \kore-is-sort \unit-sort ) ( \kore-is-sort kore-sort-var-x0 ) \unit-sort kore-sort-var-x0 $= ( unit-sort-is-symbol symbol-is-pattern element-var-is-var typecode-cache-Pattern-6 substitution-var-same substitution-kore-is-sort ) BCAEBCADBCADFG $.
substitution-34 $p #Substitution \top \top \unit-sort kore-sort-var-x0 $= ( top-is-pattern unit-sort-is-symbol symbol-is-pattern element-var-is-var substitution-disjoint ) BCDAEF $.
substitution-35 $p #Substitution ( \and ( \kore-is-sort \unit-sort ) \top ) ( \and ( \kore-is-sort kore-sort-var-x0 ) \top ) \unit-sort kore-sort-var-x0 $= ( unit-sort-is-symbol symbol-is-pattern kore-is-sort-is-pattern top-is-pattern typecode-cache-Pattern-6 element-var-is-var substitution-33 substitution-34 substitution-and ) BCBCDEAFDEAGAHAIJ $.
substitution-36 $p #Substitution \kore-sort-SortKConfigVar \kore-sort-SortKConfigVar \unit-sort kore-sort-var-x0 $= ( IMP-sort-20-is-pattern unit-sort-is-symbol symbol-is-pattern element-var-is-var substitution-disjoint ) BCDAEF $.
substitution-37 $p #Substitution kore-element-var-x1 kore-element-var-x1 \unit-sort kore-sort-var-x0 $= ( typecode-cache-Pattern-19 unit-sort-is-symbol symbol-is-pattern element-var-is-var substitution-disjoint ) BCDEAFG $.
substitution-38 $p #Substitution ( \kore-equals \kore-sort-SortKConfigVar \unit-sort kore-element-var-x1 ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ( \kore-equals \kore-sort-SortKConfigVar kore-sort-var-x0 kore-element-var-x1 ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) \unit-sort kore-sort-var-x0 $= ( IMP-sort-20-is-pattern unit-sort-is-symbol symbol-is-pattern string-literal-9-is-pattern kore-dv-is-pattern element-var-is-var typecode-cache-Pattern-19 typecode-cache-Pattern-6 substitution-36 substitution-var-same substitution-37 substitution-disjoint substitution-kore-equals ) CDEBICFGCAJBICFGDEAHAKDEAHLABMCFGDEAHNO $.
substitution-39 $p #Substitution ( \kore-is-sort kore-sort-var-x1 ) ( \kore-is-sort kore-sort-var-x0 ) kore-sort-var-x1 kore-sort-var-x0 $= ( typecode-cache-Pattern-20 element-var-is-var typecode-cache-Pattern-6 substitution-var-same substitution-kore-is-sort ) BCAEBCADBCADFG $.
substitution-40 $p #Substitution \top \top kore-sort-var-x1 kore-sort-var-x0 $= ( top-is-pattern typecode-cache-Pattern-20 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-41 $p #Substitution ( \and ( \kore-is-sort kore-sort-var-x1 ) \top ) ( \and ( \kore-is-sort kore-sort-var-x0 ) \top ) kore-sort-var-x1 kore-sort-var-x0 $= ( typecode-cache-Pattern-20 kore-is-sort-is-pattern top-is-pattern typecode-cache-Pattern-6 element-var-is-var substitution-39 substitution-40 substitution-and ) BCBCDEAFDEAGABHABIJ $.
substitution-42 $p #Substitution \kore-sort-SortKConfigVar \kore-sort-SortKConfigVar kore-sort-var-x1 kore-sort-var-x0 $= ( IMP-sort-20-is-pattern typecode-cache-Pattern-20 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-43 $p #Substitution kore-element-var-x1 kore-element-var-x1 kore-sort-var-x1 kore-sort-var-x0 $= ( typecode-cache-Pattern-19 typecode-cache-Pattern-20 element-var-is-var substitution-disjoint ) BDCEAFG $.
substitution-44 $p #Substitution ( \kore-equals \kore-sort-SortKConfigVar kore-sort-var-x1 kore-element-var-x1 ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ( \kore-equals \kore-sort-SortKConfigVar kore-sort-var-x0 kore-element-var-x1 ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) kore-sort-var-x1 kore-sort-var-x0 $= ( IMP-sort-20-is-pattern typecode-cache-Pattern-20 string-literal-9-is-pattern kore-dv-is-pattern element-var-is-var typecode-cache-Pattern-19 typecode-cache-Pattern-6 substitution-42 substitution-var-same substitution-43 substitution-disjoint substitution-kore-equals ) DCEBIDFGDAJBIDFGCEAHACKCEAHLABCMDFGCEAHNO $.
sorting-rearrange-6 $p |- ( \imp \top ( \kore-valid \unit-sort ( \kore-exists \kore-sort-SortKConfigVar \unit-sort kore-element-var-x1 ( \kore-equals \kore-sort-SortKConfigVar \unit-sort kore-element-var-x1 ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ) ) ) $= ( IMP-sort-20-is-pattern kore-sort-var-x0-elementvariable unit-sort-is-symbol symbol-is-pattern typecode-cache-Pattern-6 kore-sort-var-x1-elementvariable typecode-cache-Pattern-20 top-is-pattern typecode-cache-Pattern-19 string-literal-9-is-pattern kore-dv-is-pattern kore-equals-is-pattern kore-exists-is-pattern and-is-pattern element-var-is-var kore-is-sort-is-pattern kore-valid-is-pattern x-is-element-var substitution-var-same rule-weakening substitution-kore-exists-alt substitution-kore-valid substitution-imp top-intro sorting-cache-49 rule-and-intro-alt2-sugar typecode-cache-Pattern-1 exists-is-pattern unit-sort-is-functional sorting-rearrange-5 substitution-35 substitution-36 substitution-38 substitution-41 substitution-42 substitution-44 functional-substitution-alt rule-imp-transitivity ) IIDEQIOODEBDEBDEAJBKLMANRIIDEQIOIIUEUAUFUGDECFBCFBCFAJBKLMANRDEBDEBDEAJBKLMANRGHBGHBGHAJBKLMANRICFQIODEQIOGHQIOSCGISUHSUISUJUACAUKDEDEQIODEBDEBDEAJBKLMANRCFQIOCFBCFBCFAJBKLMANRCPCULDEBDEBDEAJBKLMANCFBCFBCFAJBKLMANDECPDECPTBDEBDEAJBKLMBCFBCFAJBKLMDEACPCUMDECPTCAUNUBUCUDGHGHQIOGHBGHBGHAJBKLMANRCFQIOCFBCFBCFAJBKLMANRCPCGUOGHBGHBGHAJBKLMANCFBCFBCFAJBKLMANGHCPGHCPTBGHBGHAJBKLMBCFBCFAJBKLMGHACPCGUPGHCPTCAGUQUBUCUDURUS $.
sorting-rearrange-7 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \exists kore-element-var-x1 ( \eq kore-element-var-x1 ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ) ) $= ( top-is-pattern IMP-sort-20-is-pattern typecode-cache-Pattern-2 kore-is-sort-is-pattern and-is-pattern string-literal-9-is-pattern kore-dv-is-pattern typecode-cache-Pattern-19 eq-is-pattern exists-is-pattern top-intro rule-weakening sorting-cache-40 sorting-rearrange-6 kore-functional rule-imp-transitivity ) AEFCGCBJDHIKBLAEFCGCMNDDHICBOBPQR $.
typecode-cache-Pattern-21 $p #Pattern kore-element-var-From $= ( element-var-is-var var-is-pattern ) ABC $.
sorting-cache-55 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \in-sort kore-element-var-From \kore-sort-SortKConfigVar ) \top ) ) ( \kore-is-sort kore-sort-var-R ) ) $= ( typecode-cache-Pattern-2 kore-is-sort-is-pattern top-is-pattern and-is-pattern typecode-cache-Pattern-21 IMP-sort-20-is-pattern in-sort-is-pattern and-elim-left-sugar rule-imp-transitivity imp-reflexivity ) ACDEFBGHIEFFACDEFACDACDEFBGHIEFJACDEFACDACDACDEJACDLKK $.
sorting-cache-56 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \in-sort kore-element-var-From \kore-sort-SortKConfigVar ) \top ) ) ( \in-sort kore-element-var-From \kore-sort-SortKConfigVar ) ) $= ( typecode-cache-Pattern-21 IMP-sort-20-is-pattern in-sort-is-pattern top-is-pattern and-is-pattern typecode-cache-Pattern-2 kore-is-sort-is-pattern rule-imp-transitivity and-elim-right-sugar and-elim-left-sugar imp-reflexivity ) AHIFGBCDEFGGBCDEFGBCDEAHIFGBCDEFGKBCDEFGBCDEBCDEBCDEFLBCDEMJJ $.
sorting-cache-57 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \in-sort kore-element-var-From \kore-sort-SortKConfigVar ) \top ) ) ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-From \kore-sort-SortKConfigVar ) \top ) ) ) $= ( and-is-pattern top-is-pattern typecode-cache-Pattern-21 IMP-sort-20-is-pattern in-sort-is-pattern typecode-cache-Pattern-2 kore-is-sort-is-pattern rule-and-intro-alt2-sugar sorting-cache-55 sorting-cache-56 top-intro rule-weakening ) AHIDCBEFGDCCAHIBEFGDCABKAHIDCBEFGDCCBEFGDABLAHIDCBEFGDCCDMNJJ $.
typecode-cache-Pattern-22 $p #Pattern ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-From \kore-sort-SortKConfigVar ) \top ) ) $= ( and-is-pattern typecode-cache-Pattern-2 kore-is-sort-is-pattern typecode-cache-Pattern-21 IMP-sort-20-is-pattern in-sort-is-pattern top-is-pattern ) ADEBFGHICC $.
typecode-cache-Pattern-23 $p #Pattern ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem kore-element-var-From ) ) $= ( BASIC-K-sort-1-is-pattern typecode-cache-Pattern-2 typecode-cache-Pattern-3 IMP-sort-20-is-pattern typecode-cache-Pattern-21 kore-inj-is-pattern kore-equals-is-pattern ) DAEBFGDCHIJ $.
sorting-rearrange-8 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \in-sort kore-element-var-From \kore-sort-SortKConfigVar ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem kore-element-var-From ) ) ) ) ) $= ( typecode-cache-Pattern-2 and-is-pattern top-is-pattern kore-is-sort-is-pattern typecode-cache-Pattern-21 IMP-sort-20-is-pattern in-sort-is-pattern typecode-cache-Pattern-22 BASIC-K-sort-1-is-pattern typecode-cache-Pattern-23 kore-exists-is-pattern kore-valid-is-pattern sorting-cache-57 IMP-axiom-3074 rule-imp-transitivity ) ADGFECHIJFEEACKADLADABCMBNOACPABCQR $.
typecode-cache-Pattern-24 $p #Pattern ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem kore-element-var-x0 ) ) $= ( BASIC-K-sort-1-is-pattern typecode-cache-Pattern-2 typecode-cache-Pattern-3 IMP-sort-20-is-pattern typecode-cache-Pattern-16 kore-inj-is-pattern kore-equals-is-pattern ) DAEBFGDCHIJ $.
substitution-45 $p #Substitution kore-sort-var-R kore-sort-var-R ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) kore-element-var-From $= ( typecode-cache-Pattern-2 IMP-sort-20-is-pattern string-literal-9-is-pattern kore-dv-is-pattern element-var-is-var substitution-disjoint ) ACDEFBGH $.
substitution-46 $p #Substitution kore-element-var-Val kore-element-var-Val ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) kore-element-var-From $= ( typecode-cache-Pattern-3 IMP-sort-20-is-pattern string-literal-9-is-pattern kore-dv-is-pattern element-var-is-var substitution-disjoint ) ACDEFBGH $.
substitution-47 $p #Substitution ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ) ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem kore-element-var-From ) ) ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) kore-element-var-From $= ( IMP-sort-20-is-pattern BASIC-K-sort-1-is-pattern string-literal-9-is-pattern kore-dv-is-pattern element-var-is-var substitution-disjoint typecode-cache-Pattern-2 typecode-cache-Pattern-3 kore-inj-is-pattern typecode-cache-Pattern-21 substitution-45 substitution-46 substitution-var-same substitution-kore-inj substitution-kore-equals ) EAJBKDEDFGLEAJBKDECMLDFGCHEDFGCHIACNBCODEDFGDECMDFGCHDDFGCHIEDFGCHIDFGCHPQR $.
substitution-48 $p #Substitution \kore-sort-SortKConfigVar \kore-sort-SortKConfigVar kore-element-var-x0 kore-element-var-From $= ( IMP-sort-20-is-pattern typecode-cache-Pattern-16 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-49 $p #Substitution ( \in-sort kore-element-var-x0 \kore-sort-SortKConfigVar ) ( \in-sort kore-element-var-From \kore-sort-SortKConfigVar ) kore-element-var-x0 kore-element-var-From $= ( typecode-cache-Pattern-16 IMP-sort-20-is-pattern element-var-is-var typecode-cache-Pattern-21 substitution-var-same substitution-48 substitution-in-sort ) BCBCDAFDAEBCAEGABHI $.
substitution-50 $p #Substitution \top \top kore-element-var-x0 kore-element-var-From $= ( top-is-pattern typecode-cache-Pattern-16 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-51 $p #Substitution ( \and ( \in-sort kore-element-var-x0 \kore-sort-SortKConfigVar ) \top ) ( \and ( \in-sort kore-element-var-From \kore-sort-SortKConfigVar ) \top ) kore-element-var-x0 kore-element-var-From $= ( typecode-cache-Pattern-16 IMP-sort-20-is-pattern in-sort-is-pattern top-is-pattern typecode-cache-Pattern-21 element-var-is-var substitution-49 substitution-50 substitution-and ) BCBCDEFAGDEFAHABIABJK $.
substitution-52 $p #Substitution kore-sort-var-R kore-sort-var-R kore-element-var-x0 kore-element-var-From $= ( typecode-cache-Pattern-2 typecode-cache-Pattern-16 element-var-is-var substitution-disjoint ) ADCEBFG $.
substitution-53 $p #Substitution \kore-sort-SortKItem \kore-sort-SortKItem kore-element-var-x0 kore-element-var-From $= ( BASIC-K-sort-1-is-pattern typecode-cache-Pattern-16 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-54 $p #Substitution kore-element-var-Val kore-element-var-Val kore-element-var-x0 kore-element-var-From $= ( typecode-cache-Pattern-3 typecode-cache-Pattern-16 element-var-is-var substitution-disjoint ) ADCEBFG $.
substitution-55 $p #Substitution ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem kore-element-var-x0 ) ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem kore-element-var-From ) kore-element-var-x0 kore-element-var-From $= ( typecode-cache-Pattern-16 IMP-sort-20-is-pattern BASIC-K-sort-1-is-pattern element-var-is-var typecode-cache-Pattern-21 substitution-48 substitution-53 substitution-var-same substitution-kore-inj ) DEBCDEAGBCAFABHABIBCAFJK $.
substitution-56 $p #Substitution ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem kore-element-var-x0 ) ) ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem kore-element-var-From ) ) kore-element-var-x0 kore-element-var-From $= ( BASIC-K-sort-1-is-pattern typecode-cache-Pattern-2 typecode-cache-Pattern-3 IMP-sort-20-is-pattern typecode-cache-Pattern-16 kore-inj-is-pattern typecode-cache-Pattern-21 element-var-is-var substitution-53 substitution-52 substitution-54 substitution-55 substitution-kore-equals ) EAFBGHEDIJEAFBGHECKJDICLCDMACDNBCDOCDPQ $.
substitution-57 $p #Substitution ( \kore-exists \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem kore-element-var-x0 ) ) ) ( \kore-exists \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem kore-element-var-From ) ) ) kore-element-var-x0 kore-element-var-From $= ( BASIC-K-sort-1-is-pattern typecode-cache-Pattern-2 typecode-cache-Pattern-24 typecode-cache-Pattern-23 typecode-cache-Pattern-16 element-var-is-var substitution-53 substitution-52 substitution-56 substitution-kore-exists-alt ) EAFABDGEAFABCHDIBCJCDKACDLABCDMN $.
sorting-cache-58 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ) $= ( typecode-cache-Pattern-2 kore-is-sort-is-pattern top-is-pattern and-is-pattern and-elim-left-sugar imp-reflexivity rule-imp-transitivity top-intro rule-weakening rule-and-intro-alt2-sugar ) ABCDEABCDABCDEABCABCABCDFABCGHABCDEDIJK $.
sorting-cache-59 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \in-sort ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) \kore-sort-SortKConfigVar ) ) $= ( IMP-sort-20-is-pattern string-literal-9-is-pattern kore-dv-is-pattern in-sort-is-pattern typecode-cache-Pattern-2 kore-is-sort-is-pattern top-is-pattern and-is-pattern imp-is-pattern proof-rule-prop-1 kore-dv-sorting proof-rule-mp ) BCDBEAFGHIBCDBEJBCDBEAFGHIKBCLM $.
sorting-cache-60 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \in-sort ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) \kore-sort-SortKConfigVar ) \top ) ) $= ( top-is-pattern typecode-cache-Pattern-2 kore-is-sort-is-pattern and-is-pattern IMP-sort-20-is-pattern string-literal-9-is-pattern kore-dv-is-pattern in-sort-is-pattern sorting-cache-59 top-intro rule-weakening rule-and-intro-alt2-sugar ) ACDBEFGHFIBAJACDBEBKLM $.
sorting-rearrange-9 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ) ) ) ) $= ( IMP-sort-20-is-pattern typecode-cache-Pattern-2 kore-element-var-From-elementvariable BASIC-K-sort-1-is-pattern string-literal-9-is-pattern kore-dv-is-pattern top-is-pattern and-is-pattern kore-exists-is-pattern in-sort-is-pattern kore-element-var-x0-elementvariable element-var-is-var kore-valid-is-pattern typecode-cache-Pattern-23 kore-is-sort-is-pattern typecode-cache-Pattern-3 kore-inj-is-pattern kore-equals-is-pattern typecode-cache-Pattern-21 typecode-cache-Pattern-16 typecode-cache-Pattern-24 substitution-disjoint kore-element-var-x1-elementvariable substitution-45 substitution-kore-valid substitution-imp sorting-cache-58 sorting-cache-60 rule-and-intro-alt2-sugar sorting-rearrange-7 sorting-rearrange-8 substitution-var-same substitution-in-sort substitution-and substitution-47 substitution-kore-exists-alt substitution-51 substitution-52 substitution-57 functional-substitution-alt rule-imp-transitivity ) ADQIJADQIJCGHCLIJJADFADFADBRCFCGHSTBKOADQIJADQIJCGHCLIJAUIAUJUKCGHADFADABEPBKOADFADFADBRCFCGHSTBKOADFADABMUCBKOADQIJEUACLIJCGHCLIJMUBCLIJUEEMAUEULABEUMCGHCGHCLIJADFADFADBRCFCGHSTBKOEUACLIJADFADABEPBKOENCGHCGHCLIEUACLIENCGHCGHCEUACENCGHENUNCCGHENUDUOICGHENUDUPADFADFADBRCFCGHSTBKADFADABEPBKCGHENAEUFFADFADBRCFCGHSTFADABEPCGHBENFCGHENUDAEUFABEUQURUGUHMUBMUBCLIJADFADABMUCBKOEUACLIJADFADABEPBKOENEMUSADFADABMUCBKADFADABEPBKMUBENAEMUTABEMVAUGUHVBVC $.
sorting-rearrange-10 $p |- ( \imp ( \and \top ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ) ) ) ) $= ( top-is-pattern typecode-cache-Pattern-2 and-is-pattern kore-is-sort-is-pattern BASIC-K-sort-1-is-pattern IMP-sort-20-is-pattern typecode-cache-Pattern-3 string-literal-9-is-pattern kore-dv-is-pattern kore-inj-is-pattern kore-equals-is-pattern kore-exists-is-pattern kore-valid-is-pattern sorting-cache-47 top-intro rule-weakening rule-and-intro-alt2-sugar sorting-rearrange-9 rule-imp-transitivity ) CADFCEEADFCEADGADGADBIHGHJKLMBNOCADFCEEADFCAPCADFCEECQRSABTUA $.
substitution-58 $p #Substitution \kore-sort-SortKItem \kore-sort-SortKItem \unit-sort kore-sort-var-R $= ( BASIC-K-sort-1-is-pattern unit-sort-is-symbol symbol-is-pattern element-var-is-var substitution-disjoint ) BCDAEF $.
substitution-59 $p #Substitution \kore-sort-SortKItem \kore-sort-SortKItem kore-sort-var-x0 kore-sort-var-R $= ( BASIC-K-sort-1-is-pattern typecode-cache-Pattern-6 element-var-is-var substitution-disjoint ) CBDAEF $.
sorting-rearrange-11 $p |- ( \imp \top ( \kore-valid \unit-sort ( \kore-exists \kore-sort-SortKItem \unit-sort kore-element-var-Val ( \kore-equals \kore-sort-SortKItem \unit-sort kore-element-var-Val ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ) ) ) ) $= ( BASIC-K-sort-1-is-pattern kore-sort-var-R-elementvariable IMP-sort-20-is-pattern unit-sort-is-symbol symbol-is-pattern kore-sort-var-x0-elementvariable typecode-cache-Pattern-2 string-literal-9-is-pattern kore-dv-is-pattern kore-inj-is-pattern typecode-cache-Pattern-6 typecode-cache-Pattern-3 top-is-pattern kore-equals-is-pattern element-var-is-var kore-exists-is-pattern and-is-pattern kore-is-sort-is-pattern kore-valid-is-pattern substitution-var-same x-is-element-var rule-weakening substitution-58 substitution-disjoint substitution-kore-equals substitution-kore-exists-alt substitution-kore-valid substitution-imp substitution-59 top-intro sorting-cache-49 rule-and-intro-alt2-sugar typecode-cache-Pattern-1 exists-is-pattern unit-sort-is-functional sorting-rearrange-10 substitution-2 substitution-4 substitution-9 substitution-11 functional-substitution-alt rule-imp-transitivity ) NNEFSNRREFBEFBEFAMDBDIJKOAQTNNEFSNRNNUKUCULUMEFCHBCHBCHAMDBDIJKOAQTEFBEFBEFAMDBDIJKOAQTGLBGLBGLAMDBDIJKOAQTNCHSNREFSNRGLSNRUBCGNUBUNUBUOUBUPUCCAUQEFEFSNREFBEFBEFAMDBDIJKOAQTCHSNRCHBCHBCHAMDBDIJKOAQTCPCUREFBEFBEFAMDBDIJKOAQCHBCHBCHAMDBDIJKOAQEFCPEFCPUABEFBEFAMDBDIJKOBCHBCHAMDBDIJKOEFACPCUDEFCPUABEFAMDBDIJKBCHAMDBDIJKEFCPCUDEFCPUACAUSDBDIJKEFCPUEUFUGUHUIGLGLSNRGLBGLBGLAMDBDIJKOAQTCHSNRCHBCHBCHAMDBDIJKOAQTCPCGUTGLBGLBGLAMDBDIJKOAQCHBCHBCHAMDBDIJKOAQGLCPGLCPUABGLBGLAMDBDIJKOBCHBCHAMDBDIJKOGLACPCGUJGLCPUABGLAMDBDIJKBCHAMDBDIJKGLCPCGUJGLCPUACAGVADBDIJKGLCPUEUFUGUHUIVBVC $.
typecode-cache-Pattern-25 $p #Pattern kore-element-var-K1 $= ( element-var-is-var var-is-pattern ) ABC $.
typecode-cache-Pattern-26 $p #Pattern ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortKItem ) \top ) ) $= ( and-is-pattern typecode-cache-Pattern-2 kore-is-sort-is-pattern typecode-cache-Pattern-25 BASIC-K-sort-1-is-pattern in-sort-is-pattern top-is-pattern ) ADEBFGHICC $.
sorting-rearrange-12 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortKItem ) \top ) ) ( \exists kore-element-var-Val ( \eq kore-element-var-Val ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ) ) ) $= ( IMP-sort-20-is-pattern top-is-pattern BASIC-K-sort-1-is-pattern typecode-cache-Pattern-26 string-literal-9-is-pattern kore-dv-is-pattern kore-inj-is-pattern typecode-cache-Pattern-3 eq-is-pattern exists-is-pattern top-intro rule-weakening sorting-cache-41 sorting-rearrange-11 kore-functional rule-imp-transitivity ) ACGEBKDFDHIJLBMACGENOFDFDHIJEBPBQRS $.
typecode-cache-Pattern-27 $p #Pattern kore-element-var-K0 $= ( element-var-is-var var-is-pattern ) ABC $.
sorting-cache-61 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortKItem ) \top ) ) ( \kore-is-sort kore-sort-var-R ) ) $= ( typecode-cache-Pattern-2 kore-is-sort-is-pattern typecode-cache-Pattern-26 typecode-cache-Pattern-25 BASIC-K-sort-1-is-pattern in-sort-is-pattern top-is-pattern and-is-pattern and-elim-left-sugar imp-reflexivity rule-imp-transitivity ) ABEACDACDACDBFGHIJKACDLM $.
sorting-cache-62 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortKItem ) \top ) ) ( \in-sort kore-element-var-K1 \kore-sort-SortKItem ) ) $= ( typecode-cache-Pattern-25 BASIC-K-sort-1-is-pattern in-sort-is-pattern top-is-pattern and-is-pattern rule-imp-transitivity typecode-cache-Pattern-26 typecode-cache-Pattern-2 kore-is-sort-is-pattern and-elim-right-sugar and-elim-left-sugar imp-reflexivity ) ABIBCDEFGBCDEAJKBCDEFGLBCDEFGBCDEBCDEBCDEFMBCDENHH $.
sorting-cache-63 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortKItem ) \top ) ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortKItem ) \top ) ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortKItem ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortKItem ) \top ) ) ) $= ( BASIC-K-sort-1-is-pattern in-sort-is-pattern typecode-cache-Pattern-27 and-is-pattern top-is-pattern typecode-cache-Pattern-26 typecode-cache-Pattern-25 rule-imp-transitivity and-elim-left-sugar rule-and-intro-alt2-sugar and-elim-right-sugar imp-reflexivity sorting-cache-62 top-intro rule-weakening ) ACIBFDEHGGBFDECJDEHGACIBFDEHGGBFDEHGBFDEACIBFDEHGNBFDEHGBFDEBFDEBFDEHLBFDEOKKACIBFDEHGGCJDEHACIBFDEHGGACICJDEACIBFDEHGLACPKACIBFDEHGGHQRMM $.
typecode-cache-Pattern-28 $p #Pattern ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortKItem ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortKItem ) \top ) ) ) $= ( and-is-pattern BASIC-K-sort-1-is-pattern in-sort-is-pattern typecode-cache-Pattern-2 kore-is-sort-is-pattern typecode-cache-Pattern-27 typecode-cache-Pattern-25 top-is-pattern ) AGHBIEFCJEFKDDD $.
typecode-cache-Pattern-29 $p #Pattern ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' kore-element-var-K0 kore-element-var-K1 ) $= ( typecode-cache-Pattern-27 typecode-cache-Pattern-25 IMP-symbol-196-is-pattern ) ACBDE $.
typecode-cache-Pattern-30 $p #Pattern ( \kore-equals \kore-sort-SortMap kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' kore-element-var-K0 kore-element-var-K1 ) ) $= ( IMP-sort-14-is-pattern typecode-cache-Pattern-2 typecode-cache-Pattern-3 typecode-cache-Pattern-29 kore-equals-is-pattern ) EAFBGCDHI $.
sorting-rearrange-13 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortKItem ) \top ) ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortKItem ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortMap kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortMap kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) $= ( and-is-pattern BASIC-K-sort-1-is-pattern in-sort-is-pattern typecode-cache-Pattern-26 typecode-cache-Pattern-27 top-is-pattern typecode-cache-Pattern-2 kore-is-sort-is-pattern rule-imp-transitivity typecode-cache-Pattern-28 IMP-sort-14-is-pattern typecode-cache-Pattern-30 kore-exists-is-pattern kore-valid-is-pattern typecode-cache-Pattern-25 and-elim-left-sugar sorting-cache-61 sorting-cache-63 rule-and-intro-alt2-sugar IMP-axiom-2757 ) ADHCIFGJEEACDNAKOAKABCDPBQRADHCIFGJEEAKLCIFGDSFGJEEADHCIFGJEEADHAKLADHCIFGJETADUAMACDUBUCABCDUDM $.
typecode-cache-Pattern-31 $p #Pattern ( \kore-equals \kore-sort-SortMap kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) kore-element-var-K1 ) ) $= ( IMP-sort-20-is-pattern IMP-sort-14-is-pattern typecode-cache-Pattern-2 typecode-cache-Pattern-3 BASIC-K-sort-1-is-pattern string-literal-9-is-pattern kore-dv-is-pattern kore-inj-is-pattern typecode-cache-Pattern-25 IMP-symbol-196-is-pattern kore-equals-is-pattern ) EAFBGDHDIJKCLMN $.
typecode-cache-Pattern-32 $p #Pattern ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' kore-element-var-x0 kore-element-var-K1 ) $= ( typecode-cache-Pattern-16 typecode-cache-Pattern-25 IMP-symbol-196-is-pattern ) BCADE $.
typecode-cache-Pattern-33 $p #Pattern ( \kore-equals \kore-sort-SortMap kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' kore-element-var-x0 kore-element-var-K1 ) ) $= ( IMP-sort-14-is-pattern typecode-cache-Pattern-2 typecode-cache-Pattern-3 typecode-cache-Pattern-32 kore-equals-is-pattern ) EAFBGCDHI $.
substitution-60 $p #Substitution ( \kore-exists \kore-sort-SortMap kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortMap kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) kore-element-var-K1 ) ) ) ( \kore-exists \kore-sort-SortMap kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortMap kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' kore-element-var-K0 kore-element-var-K1 ) ) ) ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) kore-element-var-K0 $= ( IMP-sort-20-is-pattern BASIC-K-sort-1-is-pattern string-literal-9-is-pattern kore-dv-is-pattern kore-inj-is-pattern element-var-is-var IMP-sort-14-is-pattern typecode-cache-Pattern-2 substitution-disjoint typecode-cache-Pattern-25 typecode-cache-Pattern-3 typecode-cache-Pattern-31 typecode-cache-Pattern-30 IMP-symbol-196-is-pattern typecode-cache-Pattern-29 typecode-cache-Pattern-27 substitution-var-same IMP-symbol-196-substitution substitution-kore-equals substitution-kore-exists-alt ) KALABDPKALABCDQEFEGHIBCJKEFEGHICJMALEFEGHICJMKALBOEFEGHIDNRKALBOCDSEFEGHICJKEFEGHICJMALEFEGHICJMBOEFEGHICJMCJEFEGHIEFEGHIDNCTDNEFEGHICJUADNEFEGHICJMUBUCUD $.
substitution-61 $p #Substitution \kore-sort-SortKItem \kore-sort-SortKItem kore-element-var-x0 kore-element-var-K0 $= ( BASIC-K-sort-1-is-pattern typecode-cache-Pattern-16 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-62 $p #Substitution ( \in-sort kore-element-var-x0 \kore-sort-SortKItem ) ( \in-sort kore-element-var-K0 \kore-sort-SortKItem ) kore-element-var-x0 kore-element-var-K0 $= ( typecode-cache-Pattern-16 BASIC-K-sort-1-is-pattern element-var-is-var typecode-cache-Pattern-27 substitution-var-same substitution-61 substitution-in-sort ) BCBCDAFDAEBCAEGABHI $.
substitution-63 $p #Substitution \top \top kore-element-var-x0 kore-element-var-K0 $= ( top-is-pattern typecode-cache-Pattern-16 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-64 $p #Substitution ( \and ( \in-sort kore-element-var-x0 \kore-sort-SortKItem ) \top ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortKItem ) \top ) kore-element-var-x0 kore-element-var-K0 $= ( typecode-cache-Pattern-16 BASIC-K-sort-1-is-pattern in-sort-is-pattern top-is-pattern typecode-cache-Pattern-27 element-var-is-var substitution-62 substitution-63 substitution-and ) BCBCDEFAGDEFAHABIABJK $.
substitution-65 $p #Substitution kore-sort-var-R kore-sort-var-R kore-element-var-x0 kore-element-var-K0 $= ( typecode-cache-Pattern-2 typecode-cache-Pattern-16 element-var-is-var substitution-disjoint ) ADCEBFG $.
substitution-66 $p #Substitution \kore-sort-SortMap \kore-sort-SortMap kore-element-var-x0 kore-element-var-K0 $= ( IMP-sort-14-is-pattern typecode-cache-Pattern-16 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-67 $p #Substitution kore-element-var-Val kore-element-var-Val kore-element-var-x0 kore-element-var-K0 $= ( typecode-cache-Pattern-3 typecode-cache-Pattern-16 element-var-is-var substitution-disjoint ) ADCEBFG $.
substitution-68 $p #Substitution kore-element-var-K1 kore-element-var-K1 kore-element-var-x0 kore-element-var-K0 $= ( typecode-cache-Pattern-25 typecode-cache-Pattern-16 element-var-is-var substitution-disjoint ) BDCEAFG $.
substitution-69 $p #Substitution ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' kore-element-var-x0 kore-element-var-K1 ) ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' kore-element-var-K0 kore-element-var-K1 ) kore-element-var-x0 kore-element-var-K0 $= ( typecode-cache-Pattern-16 element-var-is-var typecode-cache-Pattern-25 typecode-cache-Pattern-27 substitution-var-same substitution-68 IMP-symbol-196-substitution ) AECDCDBFAGBFCDAEHABCIJ $.
substitution-70 $p #Substitution ( \kore-equals \kore-sort-SortMap kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' kore-element-var-x0 kore-element-var-K1 ) ) ( \kore-equals \kore-sort-SortMap kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' kore-element-var-K0 kore-element-var-K1 ) ) kore-element-var-x0 kore-element-var-K0 $= ( IMP-sort-14-is-pattern typecode-cache-Pattern-2 typecode-cache-Pattern-3 typecode-cache-Pattern-32 typecode-cache-Pattern-29 typecode-cache-Pattern-16 element-var-is-var substitution-66 substitution-65 substitution-67 substitution-69 substitution-kore-equals ) FAGBHDEIFAGBHCDJEKCLCEMACENBCEOCDEPQ $.
substitution-71 $p #Substitution ( \kore-exists \kore-sort-SortMap kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortMap kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' kore-element-var-x0 kore-element-var-K1 ) ) ) ( \kore-exists \kore-sort-SortMap kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortMap kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' kore-element-var-K0 kore-element-var-K1 ) ) ) kore-element-var-x0 kore-element-var-K0 $= ( IMP-sort-14-is-pattern typecode-cache-Pattern-2 typecode-cache-Pattern-33 typecode-cache-Pattern-30 typecode-cache-Pattern-16 element-var-is-var substitution-66 substitution-65 substitution-70 substitution-kore-exists-alt ) FAGABDEHFAGABCDIEJBCKCELACEMABCDENO $.
substitution-72 $p #Substitution ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortMap kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortMap kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' kore-element-var-x0 kore-element-var-K1 ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortMap kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortMap kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' kore-element-var-K0 kore-element-var-K1 ) ) ) ) kore-element-var-x0 kore-element-var-K0 $= ( typecode-cache-Pattern-2 IMP-sort-14-is-pattern kore-exists-is-pattern typecode-cache-Pattern-33 typecode-cache-Pattern-30 typecode-cache-Pattern-16 element-var-is-var substitution-65 substitution-71 substitution-kore-valid ) AFGAFABDEIBHAFGAFABCDJBHEKCLACEMABCDENO $.
sorting-cache-64 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortKItem ) \top ) ) ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortKItem ) \top ) ) ) $= ( typecode-cache-Pattern-26 top-is-pattern typecode-cache-Pattern-25 BASIC-K-sort-1-is-pattern in-sort-is-pattern rule-and-intro-alt2-sugar typecode-cache-Pattern-2 kore-is-sort-is-pattern and-is-pattern sorting-cache-61 sorting-cache-62 top-intro rule-weakening ) ABCAIJBEFGDKABLABCBEFGDABMABCDNOHH $.
sorting-cache-65 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortKItem ) \top ) ) ( \and ( \kore-is-sort \kore-sort-SortKConfigVar ) ( \kore-is-sort \kore-sort-SortKItem ) ) ) $= ( kore-is-sort-is-pattern typecode-cache-Pattern-26 IMP-sort-20-is-pattern BASIC-K-sort-1-is-pattern imp-is-pattern proof-rule-prop-1 proof-rule-mp IMP-sort-20-sort BASIC-K-sort-1-sort rule-and-intro-alt2-sugar ) ABDECFCECABDECGECABDHJIFCABDFCGFCABDHKIL $.
sorting-cache-66 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortKItem ) \top ) ) ( \in-sort ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) \kore-sort-SortKItem ) ) $= ( IMP-sort-20-is-pattern string-literal-9-is-pattern kore-dv-is-pattern in-sort-is-pattern BASIC-K-sort-1-is-pattern typecode-cache-Pattern-26 kore-is-sort-is-pattern and-is-pattern kore-inj-is-pattern sorting-cache-65 imp-is-pattern proof-rule-prop-1 kore-dv-sorting proof-rule-mp rule-and-intro-alt2-sugar INJ-symbol-0-sorting rule-imp-transitivity ) ABHCIGIJCDECFJCGCDEKGFABHCIGIJCDECFABLCDECFABHCDECFMCDECFABHNCDOPQCGCDERS $.
sorting-rearrange-14 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortKItem ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortMap kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortMap kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) kore-element-var-K1 ) ) ) ) ) $= ( IMP-sort-20-is-pattern BASIC-K-sort-1-is-pattern kore-element-var-K0-elementvariable typecode-cache-Pattern-2 string-literal-9-is-pattern kore-dv-is-pattern kore-inj-is-pattern top-is-pattern in-sort-is-pattern and-is-pattern IMP-sort-14-is-pattern kore-exists-is-pattern element-var-is-var kore-valid-is-pattern kore-element-var-x0-elementvariable typecode-cache-Pattern-26 typecode-cache-Pattern-27 typecode-cache-Pattern-31 typecode-cache-Pattern-30 typecode-cache-Pattern-16 substitution-disjoint rule-and-intro-alt2-sugar typecode-cache-Pattern-33 substitution-imp sorting-cache-64 sorting-cache-66 top-intro rule-weakening sorting-rearrange-12 sorting-rearrange-13 substitution-var-same substitution-in-sort substitution-and substitution-60 substitution-kore-valid substitution-64 substitution-72 functional-substitution-alt rule-imp-transitivity ) ACSACSDEDHIJELKMMAGNAGABCUABOQACSACSDEDHIJELKMACUHACSDEDHIJELKACUIACSKUJUKUEUEDEDHIJAGNAGABFCUBBOQAGNAGABCUABOQAGNAGABCRUFBOQACSFTELKMDEDHIJELKMRUCELKMBFRABCULABFCUMDEDHIJDEDHIJELKMAGNAGABCUABOQFTELKMAGNAGABFCUBBOQFPDEDHIJDEDHIJELKFTELKFPDEDHIJDEDHIJEFTEFPDEDHIJFPUNEDEDHIJFPUDUOKDEDHIJFPUDUPAGNAGABCUABOAGNAGABFCUBBODEDHIJFPAGDEDHIJFPUDABFCUQURUGRUCRUCELKMAGNAGABCRUFBOQFTELKMAGNAGABFCUBBOQFPFRUSABFCRUTUGVAVB $.
sorting-rearrange-15 $p |- ( \imp ( \and \top ( \and ( \kore-is-sort kore-sort-var-x0 ) \top ) ) ( \kore-valid kore-sort-var-x0 ( \kore-exists \kore-sort-SortId kore-sort-var-x0 kore-element-var-x1 ( \kore-equals \kore-sort-SortId kore-sort-var-x0 kore-element-var-x1 ( \kore-dv \kore-sort-SortId "a" ) ) ) ) ) $= ( top-is-pattern typecode-cache-Pattern-6 and-is-pattern kore-is-sort-is-pattern IMP-sort-17-is-pattern typecode-cache-Pattern-19 string-literal-11-is-pattern kore-dv-is-pattern kore-equals-is-pattern kore-exists-is-pattern kore-valid-is-pattern sorting-cache-54 top-intro rule-weakening rule-and-intro-alt2-sugar domain-value-13-functional rule-imp-transitivity ) CADFCEEADFCEADGADGADBHGIJKBLMCADFCEEADFCANCADFCEECOPQABRS $.
substitution-73 $p #Substitution \kore-sort-SortId \kore-sort-SortId \unit-sort kore-sort-var-x0 $= ( IMP-sort-17-is-pattern unit-sort-is-symbol symbol-is-pattern element-var-is-var substitution-disjoint ) BCDAEF $.
substitution-74 $p #Substitution ( \kore-equals \kore-sort-SortId \unit-sort kore-element-var-x1 ( \kore-dv \kore-sort-SortId "a" ) ) ( \kore-equals \kore-sort-SortId kore-sort-var-x0 kore-element-var-x1 ( \kore-dv \kore-sort-SortId "a" ) ) \unit-sort kore-sort-var-x0 $= ( IMP-sort-17-is-pattern unit-sort-is-symbol symbol-is-pattern string-literal-11-is-pattern kore-dv-is-pattern element-var-is-var typecode-cache-Pattern-19 typecode-cache-Pattern-6 substitution-73 substitution-var-same substitution-37 substitution-disjoint substitution-kore-equals ) CDEBICFGCAJBICFGDEAHAKDEAHLABMCFGDEAHNO $.
substitution-75 $p #Substitution \kore-sort-SortId \kore-sort-SortId kore-sort-var-x1 kore-sort-var-x0 $= ( IMP-sort-17-is-pattern typecode-cache-Pattern-20 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-76 $p #Substitution ( \kore-equals \kore-sort-SortId kore-sort-var-x1 kore-element-var-x1 ( \kore-dv \kore-sort-SortId "a" ) ) ( \kore-equals \kore-sort-SortId kore-sort-var-x0 kore-element-var-x1 ( \kore-dv \kore-sort-SortId "a" ) ) kore-sort-var-x1 kore-sort-var-x0 $= ( IMP-sort-17-is-pattern typecode-cache-Pattern-20 string-literal-11-is-pattern kore-dv-is-pattern element-var-is-var typecode-cache-Pattern-19 typecode-cache-Pattern-6 substitution-75 substitution-var-same substitution-43 substitution-disjoint substitution-kore-equals ) DCEBIDFGDAJBIDFGCEAHACKCEAHLABCMDFGCEAHNO $.
sorting-rearrange-16 $p |- ( \imp \top ( \kore-valid \unit-sort ( \kore-exists \kore-sort-SortId \unit-sort kore-element-var-x1 ( \kore-equals \kore-sort-SortId \unit-sort kore-element-var-x1 ( \kore-dv \kore-sort-SortId "a" ) ) ) ) ) $= ( IMP-sort-17-is-pattern kore-sort-var-x0-elementvariable unit-sort-is-symbol symbol-is-pattern typecode-cache-Pattern-6 kore-sort-var-x1-elementvariable typecode-cache-Pattern-20 top-is-pattern typecode-cache-Pattern-19 string-literal-11-is-pattern kore-dv-is-pattern kore-equals-is-pattern kore-exists-is-pattern and-is-pattern element-var-is-var kore-is-sort-is-pattern kore-valid-is-pattern x-is-element-var substitution-var-same rule-weakening substitution-kore-exists-alt substitution-kore-valid substitution-imp top-intro sorting-cache-49 rule-and-intro-alt2-sugar typecode-cache-Pattern-1 exists-is-pattern unit-sort-is-functional sorting-rearrange-15 substitution-35 substitution-73 substitution-74 substitution-41 substitution-75 substitution-76 functional-substitution-alt rule-imp-transitivity ) IIDEQIOODEBDEBDEAJBKLMANRIIDEQIOIIUEUAUFUGDECFBCFBCFAJBKLMANRDEBDEBDEAJBKLMANRGHBGHBGHAJBKLMANRICFQIODEQIOGHQIOSCGISUHSUISUJUACAUKDEDEQIODEBDEBDEAJBKLMANRCFQIOCFBCFBCFAJBKLMANRCPCULDEBDEBDEAJBKLMANCFBCFBCFAJBKLMANDECPDECPTBDEBDEAJBKLMBCFBCFAJBKLMDEACPCUMDECPTCAUNUBUCUDGHGHQIOGHBGHBGHAJBKLMANRCFQIOCFBCFBCFAJBKLMANRCPCGUOGHBGHBGHAJBKLMANCFBCFBCFAJBKLMANGHCPGHCPTBGHBGHAJBKLMBCFBCFAJBKLMGHACPCGUPGHCPTCAGUQUBUCUDURUS $.
typecode-cache-Pattern-34 $p #Pattern ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortIds ) \top ) ) $= ( and-is-pattern typecode-cache-Pattern-2 kore-is-sort-is-pattern typecode-cache-Pattern-25 IMP-sort-0-is-pattern in-sort-is-pattern top-is-pattern ) ADEBFGHICC $.
sorting-rearrange-17 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortIds ) \top ) ) ( \exists kore-element-var-x1 ( \eq kore-element-var-x1 ( \kore-dv \kore-sort-SortId "a" ) ) ) ) $= ( top-is-pattern IMP-sort-17-is-pattern typecode-cache-Pattern-34 string-literal-11-is-pattern kore-dv-is-pattern typecode-cache-Pattern-19 eq-is-pattern exists-is-pattern top-intro rule-weakening sorting-cache-4 sorting-rearrange-16 kore-functional rule-imp-transitivity ) ABFDCIEGHJCKABFDLMEEGHDCNCOPQ $.
sorting-cache-67 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortIds ) \top ) ) ( \kore-is-sort kore-sort-var-R ) ) $= ( typecode-cache-Pattern-2 kore-is-sort-is-pattern typecode-cache-Pattern-34 typecode-cache-Pattern-25 IMP-sort-0-is-pattern in-sort-is-pattern top-is-pattern and-is-pattern and-elim-left-sugar imp-reflexivity rule-imp-transitivity ) ABEACDACDACDBFGHIJKACDLM $.
sorting-cache-68 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortIds ) \top ) ) ( \in-sort kore-element-var-K1 \kore-sort-SortIds ) ) $= ( typecode-cache-Pattern-25 IMP-sort-0-is-pattern in-sort-is-pattern top-is-pattern and-is-pattern rule-imp-transitivity typecode-cache-Pattern-34 typecode-cache-Pattern-2 kore-is-sort-is-pattern and-elim-right-sugar and-elim-left-sugar imp-reflexivity ) ABIBCDEFGBCDEAJKBCDEFGLBCDEFGBCDEBCDEBCDEFMBCDENHH $.
sorting-cache-69 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortIds ) \top ) ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortId ) \top ) ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortIds ) \top ) ) $= ( and-is-pattern in-sort-is-pattern top-is-pattern typecode-cache-Pattern-34 typecode-cache-Pattern-27 IMP-sort-17-is-pattern typecode-cache-Pattern-25 IMP-sort-0-is-pattern and-elim-left-sugar sorting-cache-68 rule-imp-transitivity top-intro rule-weakening rule-and-intro-alt2-sugar ) ACGBHIEFDDCJKEFACGBHIEFDDACGCJKEACGBHIEFDLACMNACGBHIEFDDFOPQ $.
typecode-cache-Pattern-35 $p #Pattern ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortId ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortIds ) \top ) ) $= ( in-sort-is-pattern and-is-pattern typecode-cache-Pattern-27 IMP-sort-17-is-pattern typecode-cache-Pattern-25 IMP-sort-0-is-pattern top-is-pattern ) AEFCBGHCIDD $.
sorting-cache-70 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortIds ) \top ) ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortId ) \top ) ) ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortId ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortIds ) \top ) ) ) ) $= ( in-sort-is-pattern typecode-cache-Pattern-27 IMP-sort-17-is-pattern and-is-pattern top-is-pattern typecode-cache-Pattern-34 rule-imp-transitivity typecode-cache-Pattern-2 kore-is-sort-is-pattern and-elim-left-sugar rule-and-intro-alt2-sugar typecode-cache-Pattern-35 sorting-cache-67 typecode-cache-Pattern-25 IMP-sort-0-is-pattern and-elim-right-sugar imp-reflexivity sorting-cache-69 ) ACIBEFDHGGAKLBCOACIBEFDHGGACIAKLACIBEFDHGMACPJACIBEFDHGGBEFDCQRDHGACIBEFDHGGBEFDHGBEFDACIBEFDHGSBEFDHGBEFDBEFDBEFDHMBEFDTJJABCUANN $.
typecode-cache-Pattern-36 $p #Pattern ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids kore-element-var-K0 kore-element-var-K1 ) $= ( typecode-cache-Pattern-27 typecode-cache-Pattern-25 IMP-symbol-148-is-pattern ) ACBDE $.
typecode-cache-Pattern-37 $p #Pattern ( \kore-equals \kore-sort-SortIds kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids kore-element-var-K0 kore-element-var-K1 ) ) $= ( IMP-sort-0-is-pattern typecode-cache-Pattern-2 typecode-cache-Pattern-3 typecode-cache-Pattern-36 kore-equals-is-pattern ) EAFBGCDHI $.
sorting-rearrange-18 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortIds ) \top ) ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortId ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortIds kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortIds kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) $= ( and-is-pattern typecode-cache-Pattern-2 typecode-cache-Pattern-34 typecode-cache-Pattern-27 IMP-sort-17-is-pattern in-sort-is-pattern top-is-pattern kore-is-sort-is-pattern typecode-cache-Pattern-35 IMP-sort-0-is-pattern typecode-cache-Pattern-37 kore-exists-is-pattern kore-valid-is-pattern sorting-cache-70 IMP-axiom-2697 rule-imp-transitivity ) ADGCHIJKEEAFLCDMEAFNAFABCDOBPQACDRABCDST $.
typecode-cache-Pattern-38 $p #Pattern ( \kore-equals \kore-sort-SortIds kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) kore-element-var-K1 ) ) $= ( IMP-sort-0-is-pattern typecode-cache-Pattern-2 typecode-cache-Pattern-3 IMP-sort-17-is-pattern string-literal-11-is-pattern kore-dv-is-pattern typecode-cache-Pattern-25 IMP-symbol-148-is-pattern kore-equals-is-pattern ) DAEBFGHICJKL $.
typecode-cache-Pattern-39 $p #Pattern ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids kore-element-var-x0 kore-element-var-K1 ) $= ( typecode-cache-Pattern-16 typecode-cache-Pattern-25 IMP-symbol-148-is-pattern ) BCADE $.
typecode-cache-Pattern-40 $p #Pattern ( \kore-equals \kore-sort-SortIds kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids kore-element-var-x0 kore-element-var-K1 ) ) $= ( IMP-sort-0-is-pattern typecode-cache-Pattern-2 typecode-cache-Pattern-3 typecode-cache-Pattern-39 kore-equals-is-pattern ) EAFBGCDHI $.
substitution-77 $p #Substitution kore-sort-var-R kore-sort-var-R ( \kore-dv \kore-sort-SortId "a" ) kore-element-var-K0 $= ( typecode-cache-Pattern-2 IMP-sort-17-is-pattern string-literal-11-is-pattern kore-dv-is-pattern element-var-is-var substitution-disjoint ) ACDEFBGH $.
substitution-78 $p #Substitution kore-element-var-Val kore-element-var-Val ( \kore-dv \kore-sort-SortId "a" ) kore-element-var-K0 $= ( typecode-cache-Pattern-3 IMP-sort-17-is-pattern string-literal-11-is-pattern kore-dv-is-pattern element-var-is-var substitution-disjoint ) ACDEFBGH $.
substitution-79 $p #Substitution kore-element-var-K1 kore-element-var-K1 ( \kore-dv \kore-sort-SortId "a" ) kore-element-var-K0 $= ( typecode-cache-Pattern-25 IMP-sort-17-is-pattern string-literal-11-is-pattern kore-dv-is-pattern element-var-is-var substitution-disjoint ) BCDEFAGH $.
substitution-80 $p #Substitution ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) kore-element-var-K1 ) ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids kore-element-var-K0 kore-element-var-K1 ) ( \kore-dv \kore-sort-SortId "a" ) kore-element-var-K0 $= ( IMP-sort-17-is-pattern string-literal-11-is-pattern kore-dv-is-pattern element-var-is-var typecode-cache-Pattern-25 typecode-cache-Pattern-27 substitution-var-same substitution-79 IMP-symbol-148-substitution ) AFCDECDEBGAHBGCDEAFIABJK $.
substitution-81 $p #Substitution ( \kore-equals \kore-sort-SortIds kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) kore-element-var-K1 ) ) ( \kore-equals \kore-sort-SortIds kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids kore-element-var-K0 kore-element-var-K1 ) ) ( \kore-dv \kore-sort-SortId "a" ) kore-element-var-K0 $= ( IMP-sort-0-is-pattern IMP-sort-17-is-pattern string-literal-11-is-pattern kore-dv-is-pattern typecode-cache-Pattern-2 typecode-cache-Pattern-3 element-var-is-var typecode-cache-Pattern-25 IMP-symbol-148-is-pattern typecode-cache-Pattern-36 substitution-disjoint substitution-77 substitution-78 substitution-80 substitution-kore-equals ) EAIBJFGHDLMEAIBJCDNFGHCKEFGHCKOACPBCQCDRS $.
substitution-82 $p #Substitution \kore-sort-SortId \kore-sort-SortId kore-element-var-x0 kore-element-var-K0 $= ( IMP-sort-17-is-pattern typecode-cache-Pattern-16 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-83 $p #Substitution ( \in-sort kore-element-var-x0 \kore-sort-SortId ) ( \in-sort kore-element-var-K0 \kore-sort-SortId ) kore-element-var-x0 kore-element-var-K0 $= ( typecode-cache-Pattern-16 IMP-sort-17-is-pattern element-var-is-var typecode-cache-Pattern-27 substitution-var-same substitution-82 substitution-in-sort ) BCBCDAFDAEBCAEGABHI $.
substitution-84 $p #Substitution ( \and ( \in-sort kore-element-var-x0 \kore-sort-SortId ) \top ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortId ) \top ) kore-element-var-x0 kore-element-var-K0 $= ( typecode-cache-Pattern-16 IMP-sort-17-is-pattern in-sort-is-pattern top-is-pattern typecode-cache-Pattern-27 element-var-is-var substitution-83 substitution-63 substitution-and ) BCBCDEFAGDEFAHABIABJK $.
substitution-85 $p #Substitution \kore-sort-SortIds \kore-sort-SortIds kore-element-var-x0 kore-element-var-K0 $= ( IMP-sort-0-is-pattern typecode-cache-Pattern-16 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-86 $p #Substitution ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids kore-element-var-x0 kore-element-var-K1 ) ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids kore-element-var-K0 kore-element-var-K1 ) kore-element-var-x0 kore-element-var-K0 $= ( typecode-cache-Pattern-16 element-var-is-var typecode-cache-Pattern-25 typecode-cache-Pattern-27 substitution-var-same substitution-68 IMP-symbol-148-substitution ) AECDCDBFAGBFCDAEHABCIJ $.
substitution-87 $p #Substitution ( \kore-equals \kore-sort-SortIds kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids kore-element-var-x0 kore-element-var-K1 ) ) ( \kore-equals \kore-sort-SortIds kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids kore-element-var-K0 kore-element-var-K1 ) ) kore-element-var-x0 kore-element-var-K0 $= ( IMP-sort-0-is-pattern typecode-cache-Pattern-2 typecode-cache-Pattern-3 typecode-cache-Pattern-39 typecode-cache-Pattern-36 typecode-cache-Pattern-16 element-var-is-var substitution-85 substitution-65 substitution-67 substitution-86 substitution-kore-equals ) FAGBHDEIFAGBHCDJEKCLCEMACENBCEOCDEPQ $.
substitution-88 $p #Substitution ( \kore-exists \kore-sort-SortIds kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortIds kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids kore-element-var-x0 kore-element-var-K1 ) ) ) ( \kore-exists \kore-sort-SortIds kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortIds kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids kore-element-var-K0 kore-element-var-K1 ) ) ) kore-element-var-x0 kore-element-var-K0 $= ( IMP-sort-0-is-pattern typecode-cache-Pattern-2 typecode-cache-Pattern-40 typecode-cache-Pattern-37 typecode-cache-Pattern-16 element-var-is-var substitution-85 substitution-65 substitution-87 substitution-kore-exists-alt ) FAGABDEHFAGABCDIEJBCKCELACEMABCDENO $.
substitution-89 $p #Substitution ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortIds kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortIds kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids kore-element-var-x0 kore-element-var-K1 ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortIds kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortIds kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids kore-element-var-K0 kore-element-var-K1 ) ) ) ) kore-element-var-x0 kore-element-var-K0 $= ( typecode-cache-Pattern-2 IMP-sort-0-is-pattern kore-exists-is-pattern typecode-cache-Pattern-40 typecode-cache-Pattern-37 typecode-cache-Pattern-16 element-var-is-var substitution-65 substitution-88 substitution-kore-valid ) AFGAFABDEIBHAFGAFABCDJBHEKCLACEMABCDENO $.
sorting-cache-71 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortIds ) \top ) ) ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortIds ) \top ) ) ) $= ( typecode-cache-Pattern-34 top-is-pattern typecode-cache-Pattern-25 IMP-sort-0-is-pattern in-sort-is-pattern rule-and-intro-alt2-sugar typecode-cache-Pattern-2 kore-is-sort-is-pattern and-is-pattern sorting-cache-67 sorting-cache-68 top-intro rule-weakening ) ABCAIJBEFGDKABLABCBEFGDABMABCDNOHH $.
sorting-rearrange-19 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortIds ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortIds kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortIds kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) kore-element-var-K1 ) ) ) ) ) $= ( IMP-sort-17-is-pattern kore-element-var-K0-elementvariable typecode-cache-Pattern-2 string-literal-11-is-pattern kore-dv-is-pattern in-sort-is-pattern top-is-pattern IMP-sort-0-is-pattern and-is-pattern kore-exists-is-pattern element-var-is-var typecode-cache-Pattern-34 kore-valid-is-pattern kore-element-var-x0-elementvariable typecode-cache-Pattern-38 typecode-cache-Pattern-37 typecode-cache-Pattern-27 typecode-cache-Pattern-16 substitution-disjoint rule-and-intro-alt2-sugar typecode-cache-Pattern-40 kore-element-var-x1-elementvariable substitution-77 substitution-imp sorting-cache-71 imp-is-pattern proof-rule-prop-1 kore-dv-sorting proof-rule-mp top-intro rule-weakening sorting-rearrange-17 sorting-rearrange-18 substitution-var-same substitution-in-sort substitution-and substitution-81 substitution-kore-exists-alt substitution-kore-valid substitution-84 substitution-89 functional-substitution-alt rule-imp-transitivity ) ACOACODGHDIJLLAFKAFABCRBMPACOACODGHDIJLACUHACODGHDIJDGHDIACODGHDIUIDGHDIACOUJDGUKULACOJUMUNUCUCDGHAFKAFABECSBMPAFKAFABCRBMPAFKAFABCQUDBMPACOETDIJLDGHDIJLQUADIJLUEEQACUEUOABECUPDGHDGHDIJLAFKAFABCRBMPETDIJLAFKAFABECSBMPENDGHDGHDIJETDIJENDGHDGHDETDENDGHENUQDDGHENUBURJDGHENUBUSAFKAFABCRBMAFKAFABECSBMDGHENAEUFKAFABCRKAFABECSDGHBENKDGHENUBAEUFABECUTVAVBUGQUAQUADIJLAFKAFABCQUDBMPETDIJLAFKAFABECSBMPENEQVCABECQVDUGVEVF $.
typecode-cache-Pattern-41 $p #Pattern ( \kore-equals \kore-sort-SortIds kore-sort-var-R kore-element-var-Val \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) $= ( IMP-sort-0-is-pattern typecode-cache-Pattern-2 typecode-cache-Pattern-3 IMP-symbol-111-is-pattern kore-equals-is-pattern ) CADBEFG $.
sorting-rearrange-20 $p |- ( \imp ( \and \top ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortIds kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortIds kore-sort-var-R kore-element-var-Val \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) ) ) ) $= ( top-is-pattern typecode-cache-Pattern-2 and-is-pattern kore-is-sort-is-pattern IMP-sort-0-is-pattern typecode-cache-Pattern-41 kore-exists-is-pattern kore-valid-is-pattern sorting-cache-47 top-intro rule-weakening rule-and-intro-alt2-sugar IMP-axiom-2655 rule-imp-transitivity ) CADFCEEADFCEADGADABHBIJCADFCEEADFCAKCADFCEECLMNABOP $.
typecode-cache-Pattern-42 $p #Pattern ( \kore-equals \kore-sort-SortIds \unit-sort kore-element-var-Val \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) $= ( IMP-sort-0-is-pattern unit-sort-is-symbol symbol-is-pattern typecode-cache-Pattern-3 IMP-symbol-111-is-pattern kore-equals-is-pattern ) BCDAEFG $.
typecode-cache-Pattern-43 $p #Pattern ( \kore-equals \kore-sort-SortIds kore-sort-var-x0 kore-element-var-Val \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) $= ( IMP-sort-0-is-pattern typecode-cache-Pattern-6 typecode-cache-Pattern-3 IMP-symbol-111-is-pattern kore-equals-is-pattern ) CBDAEFG $.
substitution-90 $p #Substitution \kore-sort-SortIds \kore-sort-SortIds \unit-sort kore-sort-var-R $= ( IMP-sort-0-is-pattern unit-sort-is-symbol symbol-is-pattern element-var-is-var substitution-disjoint ) BCDAEF $.
substitution-91 $p #Substitution \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids \unit-sort kore-sort-var-R $= ( IMP-symbol-111-is-pattern unit-sort-is-symbol symbol-is-pattern element-var-is-var substitution-disjoint ) BCDAEF $.
substitution-92 $p #Substitution ( \kore-equals \kore-sort-SortIds \unit-sort kore-element-var-Val \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) ( \kore-equals \kore-sort-SortIds kore-sort-var-R kore-element-var-Val \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) \unit-sort kore-sort-var-R $= ( unit-sort-is-symbol symbol-is-pattern IMP-sort-0-is-pattern typecode-cache-Pattern-3 IMP-symbol-111-is-pattern element-var-is-var typecode-cache-Pattern-2 substitution-90 substitution-var-same substitution-4 substitution-91 substitution-kore-equals ) ECDBFGEAIBFGCDAHAJCDAHKABLAMN $.
substitution-93 $p #Substitution \kore-sort-SortIds \kore-sort-SortIds kore-sort-var-x0 kore-sort-var-R $= ( IMP-sort-0-is-pattern typecode-cache-Pattern-6 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-94 $p #Substitution \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids kore-sort-var-x0 kore-sort-var-R $= ( IMP-symbol-111-is-pattern typecode-cache-Pattern-6 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-95 $p #Substitution ( \kore-equals \kore-sort-SortIds kore-sort-var-x0 kore-element-var-Val \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) ( \kore-equals \kore-sort-SortIds kore-sort-var-R kore-element-var-Val \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) kore-sort-var-x0 kore-sort-var-R $= ( typecode-cache-Pattern-6 IMP-sort-0-is-pattern typecode-cache-Pattern-3 IMP-symbol-111-is-pattern element-var-is-var typecode-cache-Pattern-2 substitution-93 substitution-var-same substitution-11 substitution-94 substitution-kore-equals ) ECDBFGEAIBFGCDAHACJCDAHKABCLACMN $.
substitution-96 $p #Substitution ( \kore-exists \kore-sort-SortIds kore-sort-var-x0 kore-element-var-Val ( \kore-equals \kore-sort-SortIds kore-sort-var-x0 kore-element-var-Val \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) ) ( \kore-exists \kore-sort-SortIds kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortIds kore-sort-var-R kore-element-var-Val \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) ) kore-sort-var-x0 kore-sort-var-R $= ( typecode-cache-Pattern-6 IMP-sort-0-is-pattern element-var-is-var typecode-cache-Pattern-43 typecode-cache-Pattern-2 typecode-cache-Pattern-41 substitution-93 substitution-var-same substitution-95 substitution-kore-exists-alt ) ECDBCGEAHABICDBAFACJCDAFKABCLM $.
sorting-rearrange-21 $p |- ( \imp \top ( \kore-valid \unit-sort ( \kore-exists \kore-sort-SortIds \unit-sort kore-element-var-Val ( \kore-equals \kore-sort-SortIds \unit-sort kore-element-var-Val \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) ) ) ) $= ( kore-sort-var-R-elementvariable unit-sort-is-symbol symbol-is-pattern top-is-pattern kore-sort-var-x0-elementvariable IMP-sort-0-is-pattern typecode-cache-Pattern-2 kore-exists-is-pattern typecode-cache-Pattern-6 and-is-pattern kore-is-sort-is-pattern kore-valid-is-pattern element-var-is-var typecode-cache-Pattern-41 typecode-cache-Pattern-42 x-is-element-var typecode-cache-Pattern-43 substitution-var-same rule-weakening substitution-kore-valid substitution-imp top-intro sorting-cache-49 rule-and-intro-alt2-sugar typecode-cache-Pattern-1 exists-is-pattern unit-sort-is-functional sorting-rearrange-20 substitution-2 substitution-90 substitution-92 substitution-kore-exists-alt substitution-9 substitution-96 functional-substitution-alt rule-imp-transitivity ) EECDLEKKCDGCDAPAIMEECDLEKEEUCTUDUECDBHGBHBAOAIMCDGCDAPAIMFJGFJAFRAIMEBHLEKCDLEKFJLEKQBFEQUFQUGQUHTBAUICDCDLEKCDGCDAPAIMBHLEKBHGBHBAOAIMBNBUJCDGCDAPAIBHGBHBAOAICDBNCDBNSGCDAPGBHBAOCDABNBUKCDBNSBAULUMUAUBFJFJLEKFJGFJAFRAIMBHLEKBHGBHBAOAIMBNBFUNFJGFJAFRAIBHGBHBAOAIFJBNFJBNSBAFUOUAUBUPUQ $.
sorting-rearrange-22 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \exists kore-element-var-Val ( \eq kore-element-var-Val \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) ) ) $= ( top-is-pattern typecode-cache-Pattern-2 kore-is-sort-is-pattern and-is-pattern IMP-symbol-111-is-pattern typecode-cache-Pattern-3 eq-is-pattern exists-is-pattern top-intro rule-weakening IMP-sort-0-is-pattern sorting-cache-3 sorting-rearrange-21 kore-functional rule-imp-transitivity ) ADECFCBHGIBJADECFCKLMGCBNBOPQ $.
sorting-cache-72 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortIds ) \top ) ) ( \kore-is-sort kore-sort-var-R ) ) $= ( typecode-cache-Pattern-2 kore-is-sort-is-pattern top-is-pattern and-is-pattern typecode-cache-Pattern-25 IMP-sort-0-is-pattern in-sort-is-pattern and-elim-left-sugar rule-imp-transitivity imp-reflexivity ) ACDEFBGHIEFFACDEFACDACDEFBGHIEFJACDEFACDACDACDEJACDLKK $.
sorting-cache-73 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortIds ) \top ) ) ( \in-sort kore-element-var-K1 \kore-sort-SortIds ) ) $= ( typecode-cache-Pattern-25 IMP-sort-0-is-pattern in-sort-is-pattern top-is-pattern and-is-pattern typecode-cache-Pattern-2 kore-is-sort-is-pattern rule-imp-transitivity and-elim-right-sugar and-elim-left-sugar imp-reflexivity ) AHIFGBCDEFGGBCDEFGBCDEAHIFGBCDEFGKBCDEFGBCDEBCDEBCDEFLBCDEMJJ $.
sorting-cache-74 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortIds ) \top ) ) ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortIds ) \top ) ) ) $= ( and-is-pattern top-is-pattern typecode-cache-Pattern-25 IMP-sort-0-is-pattern in-sort-is-pattern typecode-cache-Pattern-2 kore-is-sort-is-pattern rule-and-intro-alt2-sugar sorting-cache-72 sorting-cache-73 top-intro rule-weakening ) AHIDCBEFGDCCAHIBEFGDCABKAHIDCBEFGDCCBEFGDABLAHIDCBEFGDCCDMNJJ $.
sorting-rearrange-23 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortIds ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortIds kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortIds kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) kore-element-var-K1 ) ) ) ) ) $= ( typecode-cache-Pattern-2 and-is-pattern top-is-pattern IMP-sort-0-is-pattern kore-is-sort-is-pattern typecode-cache-Pattern-25 in-sort-is-pattern typecode-cache-Pattern-34 typecode-cache-Pattern-38 kore-exists-is-pattern kore-valid-is-pattern sorting-cache-74 sorting-rearrange-19 rule-imp-transitivity ) ADHFECIGJFEEACKADGADABCLBMNACOABCPQ $.
typecode-cache-Pattern-44 $p #Pattern ( \kore-equals \kore-sort-SortIds kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) ) $= ( IMP-sort-0-is-pattern typecode-cache-Pattern-2 typecode-cache-Pattern-3 IMP-sort-17-is-pattern string-literal-11-is-pattern kore-dv-is-pattern IMP-symbol-111-is-pattern IMP-symbol-148-is-pattern kore-equals-is-pattern ) CADBEFGHIJK $.
typecode-cache-Pattern-45 $p #Pattern ( \kore-equals \kore-sort-SortIds kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) kore-element-var-x0 ) ) $= ( IMP-sort-0-is-pattern typecode-cache-Pattern-2 typecode-cache-Pattern-3 IMP-sort-17-is-pattern string-literal-11-is-pattern kore-dv-is-pattern typecode-cache-Pattern-16 IMP-symbol-148-is-pattern kore-equals-is-pattern ) DAEBFGHICJKL $.
substitution-97 $p #Substitution ( \and ( \in-sort \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids \kore-sort-SortIds ) \top ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortIds ) \top ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids kore-element-var-K1 $= ( IMP-symbol-111-is-pattern IMP-sort-0-is-pattern element-var-is-var top-is-pattern in-sort-is-pattern typecode-cache-Pattern-25 substitution-disjoint substitution-var-same substitution-in-sort substitution-and ) BBCFEAGCFEADBBCAGCADBADICBADHJEBADHK $.
substitution-98 $p #Substitution kore-sort-var-R kore-sort-var-R \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids kore-element-var-K1 $= ( typecode-cache-Pattern-2 IMP-symbol-111-is-pattern element-var-is-var substitution-disjoint ) ACDBEF $.
substitution-99 $p #Substitution kore-element-var-Val kore-element-var-Val \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids kore-element-var-K1 $= ( typecode-cache-Pattern-3 IMP-symbol-111-is-pattern element-var-is-var substitution-disjoint ) ACDBEF $.
substitution-100 $p #Substitution ( \kore-equals \kore-sort-SortIds kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) ) ( \kore-equals \kore-sort-SortIds kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) kore-element-var-K1 ) ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids kore-element-var-K1 $= ( IMP-symbol-111-is-pattern IMP-sort-17-is-pattern string-literal-11-is-pattern kore-dv-is-pattern element-var-is-var IMP-sort-0-is-pattern typecode-cache-Pattern-2 typecode-cache-Pattern-3 IMP-symbol-148-is-pattern typecode-cache-Pattern-25 substitution-disjoint substitution-98 substitution-99 substitution-var-same IMP-symbol-148-substitution substitution-kore-equals ) IAJBKEFGDLIAJBKEFGCMLDCHIDCHNACOBCPCHDEFGDEFGCMEFGDCHNDCHQRS $.
substitution-101 $p #Substitution \kore-sort-SortIds \kore-sort-SortIds kore-element-var-x0 kore-element-var-K1 $= ( IMP-sort-0-is-pattern typecode-cache-Pattern-16 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-102 $p #Substitution ( \in-sort kore-element-var-x0 \kore-sort-SortIds ) ( \in-sort kore-element-var-K1 \kore-sort-SortIds ) kore-element-var-x0 kore-element-var-K1 $= ( typecode-cache-Pattern-16 IMP-sort-0-is-pattern element-var-is-var typecode-cache-Pattern-25 substitution-var-same substitution-101 substitution-in-sort ) BCBCDAFDAEBCAEGABHI $.
substitution-103 $p #Substitution \top \top kore-element-var-x0 kore-element-var-K1 $= ( top-is-pattern typecode-cache-Pattern-16 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-104 $p #Substitution ( \and ( \in-sort kore-element-var-x0 \kore-sort-SortIds ) \top ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortIds ) \top ) kore-element-var-x0 kore-element-var-K1 $= ( typecode-cache-Pattern-16 IMP-sort-0-is-pattern in-sort-is-pattern top-is-pattern typecode-cache-Pattern-25 element-var-is-var substitution-102 substitution-103 substitution-and ) BCBCDEFAGDEFAHABIABJK $.
substitution-105 $p #Substitution kore-sort-var-R kore-sort-var-R kore-element-var-x0 kore-element-var-K1 $= ( typecode-cache-Pattern-2 typecode-cache-Pattern-16 element-var-is-var substitution-disjoint ) ADCEBFG $.
substitution-106 $p #Substitution kore-element-var-Val kore-element-var-Val kore-element-var-x0 kore-element-var-K1 $= ( typecode-cache-Pattern-3 typecode-cache-Pattern-16 element-var-is-var substitution-disjoint ) ADCEBFG $.
substitution-107 $p #Substitution ( \kore-equals \kore-sort-SortIds kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) kore-element-var-x0 ) ) ( \kore-equals \kore-sort-SortIds kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) kore-element-var-K1 ) ) kore-element-var-x0 kore-element-var-K1 $= ( typecode-cache-Pattern-16 IMP-sort-17-is-pattern string-literal-11-is-pattern kore-dv-is-pattern element-var-is-var IMP-sort-0-is-pattern typecode-cache-Pattern-2 typecode-cache-Pattern-3 IMP-symbol-148-is-pattern typecode-cache-Pattern-25 substitution-101 substitution-105 substitution-106 substitution-disjoint substitution-var-same IMP-symbol-148-substitution substitution-kore-equals ) JAKBLFGHDEMJAKBLFGHCNMDECICDOACDPBCDQCIDEFGHDEFGHCNFGHDECIRDECISTUA $.
sorting-cache-75 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \in-sort \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids \kore-sort-SortIds ) ) $= ( IMP-symbol-111-is-pattern IMP-sort-0-is-pattern in-sort-is-pattern typecode-cache-Pattern-2 kore-is-sort-is-pattern top-is-pattern and-is-pattern imp-is-pattern proof-rule-prop-1 IMP-symbol-111-sorting proof-rule-mp ) BCDAEFGHBCDIBCDAEFGHJKL $.
sorting-cache-76 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \in-sort \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids \kore-sort-SortIds ) \top ) ) $= ( top-is-pattern typecode-cache-Pattern-2 kore-is-sort-is-pattern and-is-pattern IMP-symbol-111-is-pattern IMP-sort-0-is-pattern in-sort-is-pattern sorting-cache-75 top-intro rule-weakening rule-and-intro-alt2-sugar ) ACDBEFGHBAIACDBEBJKL $.
sorting-rearrange-24 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortIds kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortIds kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) ) ) ) ) $= ( typecode-cache-Pattern-2 kore-element-var-K1-elementvariable IMP-sort-0-is-pattern and-is-pattern kore-element-var-x0-elementvariable top-is-pattern kore-exists-is-pattern IMP-symbol-111-is-pattern in-sort-is-pattern kore-valid-is-pattern typecode-cache-Pattern-38 element-var-is-var kore-is-sort-is-pattern typecode-cache-Pattern-44 typecode-cache-Pattern-16 typecode-cache-Pattern-45 typecode-cache-Pattern-25 substitution-98 substitution-kore-exists-alt substitution-kore-valid substitution-imp substitution-105 sorting-cache-58 sorting-cache-76 rule-and-intro-alt2-sugar sorting-rearrange-22 sorting-rearrange-23 substitution-97 substitution-disjoint substitution-100 substitution-104 substitution-101 substitution-107 functional-substitution-alt rule-imp-transitivity ) ACOHFACOHFJEKHFFACEACABPBILACOHFACOHFJEKHFAUEAUFUGJACEACABDMBILACEACABPBILACEACABGRBILACOHFDSEKHFJEKHFGQEKHFBDGABUHABDUIJJEKHFACEACABPBILDSEKHFACEACABDMBILDNDUJACEACABPBIACEACABDMBIJDNADTEACABPEACABDMJBDNEJDNUKADTABDULUAUBUCGQGQEKHFACEACABGRBILDSEKHFACEACABDMBILDNDGUMACEACABGRBIACEACABDMBIGQDNADGUDEACABGREACABDMGQBDNDGUNADGUDABDGUOUAUBUCUPUQ $.
typecode-cache-Pattern-46 $p #Pattern ( \kore-equals \kore-sort-SortIds \unit-sort kore-element-var-Val ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) ) $= ( IMP-sort-0-is-pattern unit-sort-is-symbol symbol-is-pattern typecode-cache-Pattern-3 IMP-sort-17-is-pattern string-literal-11-is-pattern kore-dv-is-pattern IMP-symbol-111-is-pattern IMP-symbol-148-is-pattern kore-equals-is-pattern ) BCDAEFGHIJK $.
typecode-cache-Pattern-47 $p #Pattern ( \kore-equals \kore-sort-SortIds kore-sort-var-x0 kore-element-var-Val ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) ) $= ( IMP-sort-0-is-pattern typecode-cache-Pattern-6 typecode-cache-Pattern-3 IMP-sort-17-is-pattern string-literal-11-is-pattern kore-dv-is-pattern IMP-symbol-111-is-pattern IMP-symbol-148-is-pattern kore-equals-is-pattern ) CBDAEFGHIJK $.
substitution-108 $p #Substitution ( \kore-equals \kore-sort-SortIds \unit-sort kore-element-var-Val ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) ) ( \kore-equals \kore-sort-SortIds kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) ) \unit-sort kore-sort-var-R $= ( unit-sort-is-symbol symbol-is-pattern IMP-sort-17-is-pattern string-literal-11-is-pattern kore-dv-is-pattern IMP-symbol-111-is-pattern IMP-symbol-148-is-pattern element-var-is-var IMP-sort-0-is-pattern typecode-cache-Pattern-3 typecode-cache-Pattern-2 substitution-90 substitution-var-same substitution-4 substitution-disjoint substitution-kore-equals ) KCDBLEFGHIKAMBLEFGHICDAJANCDAJOABPEFGHICDAJQR $.
substitution-109 $p #Substitution ( \kore-equals \kore-sort-SortIds kore-sort-var-x0 kore-element-var-Val ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) ) ( \kore-equals \kore-sort-SortIds kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) ) kore-sort-var-x0 kore-sort-var-R $= ( typecode-cache-Pattern-6 IMP-sort-17-is-pattern string-literal-11-is-pattern kore-dv-is-pattern IMP-symbol-111-is-pattern IMP-symbol-148-is-pattern element-var-is-var IMP-sort-0-is-pattern typecode-cache-Pattern-3 typecode-cache-Pattern-2 substitution-93 substitution-var-same substitution-11 substitution-disjoint substitution-kore-equals ) KCDBLEFGHIKAMBLEFGHICDAJACNCDAJOABCPEFGHICDAJQR $.
sorting-rearrange-25 $p |- ( \imp \top ( \kore-valid \unit-sort ( \kore-exists \kore-sort-SortIds \unit-sort kore-element-var-Val ( \kore-equals \kore-sort-SortIds \unit-sort kore-element-var-Val ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) ) ) ) ) $= ( kore-sort-var-R-elementvariable top-is-pattern typecode-cache-Pattern-2 kore-sort-var-x0-elementvariable unit-sort-is-symbol symbol-is-pattern and-is-pattern IMP-sort-0-is-pattern kore-is-sort-is-pattern typecode-cache-Pattern-6 kore-exists-is-pattern element-var-is-var kore-valid-is-pattern typecode-cache-Pattern-44 typecode-cache-Pattern-46 typecode-cache-Pattern-47 x-is-element-var substitution-var-same rule-weakening top-intro rule-and-intro-alt2-sugar rule-imp-transitivity substitution-kore-exists-alt substitution-kore-valid substitution-imp sorting-cache-49 typecode-cache-Pattern-1 exists-is-pattern unit-sort-is-functional sorting-cache-47 sorting-rearrange-24 substitution-2 substitution-90 substitution-108 substitution-9 substitution-93 substitution-109 functional-substitution-alt ) CCFGJCHHFGIFGAPALNCCFGJCHCCUATUGUBFGBDIBDBAOALNFGIFGAPALNEKIEKAEQALNCBDJCHFGJCHEKJCHRBECRUHRUIRUJTCBDJCHHBDJCHBDIBDBAOALNCBDJCHHBDJCBUKCBDJCHHCUATUBBAULUCFGFGJCHFGIFGAPALNBDJCHBDIBDBAOALNBMBUMFGIFGAPALBDIBDBAOALFGBMFGBMSIFGAPIBDBAOFGABMBUNFGBMSBAUOUDUEUFEKEKJCHEKIEKAEQALNBDJCHBDIBDBAOALNBMBEUPEKIEKAEQALBDIBDBAOALEKBMEKBMSIEKAEQIBDBAOEKABMBEUQEKBMSBAEURUDUEUFUSUC $.
typecode-cache-Pattern-48 $p #Pattern ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortStmt ) \top ) ) $= ( and-is-pattern typecode-cache-Pattern-2 kore-is-sort-is-pattern typecode-cache-Pattern-25 IMP-sort-30-is-pattern in-sort-is-pattern top-is-pattern ) ADEBFGHICC $.
sorting-rearrange-26 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortStmt ) \top ) ) ( \exists kore-element-var-Val ( \eq kore-element-var-Val ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) ) ) ) $= ( top-is-pattern typecode-cache-Pattern-48 IMP-sort-17-is-pattern string-literal-11-is-pattern kore-dv-is-pattern IMP-symbol-111-is-pattern IMP-symbol-148-is-pattern typecode-cache-Pattern-3 eq-is-pattern exists-is-pattern top-intro rule-weakening IMP-sort-0-is-pattern sorting-cache-42 sorting-rearrange-25 kore-functional rule-imp-transitivity ) ACEDBKFGHIJLBMACEDNOPFGHIJDBQBRST $.
sorting-cache-77 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortStmt ) \top ) ) ( \kore-is-sort kore-sort-var-R ) ) $= ( typecode-cache-Pattern-2 kore-is-sort-is-pattern typecode-cache-Pattern-48 typecode-cache-Pattern-25 IMP-sort-30-is-pattern in-sort-is-pattern top-is-pattern and-is-pattern and-elim-left-sugar imp-reflexivity rule-imp-transitivity ) ABEACDACDACDBFGHIJKACDLM $.
sorting-cache-78 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortStmt ) \top ) ) ( \in-sort kore-element-var-K1 \kore-sort-SortStmt ) ) $= ( typecode-cache-Pattern-25 IMP-sort-30-is-pattern in-sort-is-pattern top-is-pattern and-is-pattern rule-imp-transitivity typecode-cache-Pattern-48 typecode-cache-Pattern-2 kore-is-sort-is-pattern and-elim-right-sugar and-elim-left-sugar imp-reflexivity ) ABIBCDEFGBCDEAJKBCDEFGLBCDEFGBCDEBCDEBCDEFMBCDENHH $.
sorting-cache-79 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortStmt ) \top ) ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortIds ) \top ) ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortStmt ) \top ) ) $= ( and-is-pattern in-sort-is-pattern top-is-pattern typecode-cache-Pattern-48 typecode-cache-Pattern-27 IMP-sort-0-is-pattern typecode-cache-Pattern-25 IMP-sort-30-is-pattern and-elim-left-sugar sorting-cache-78 rule-imp-transitivity top-intro rule-weakening rule-and-intro-alt2-sugar ) ACGBHIEFDDCJKEFACGBHIEFDDACGCJKEACGBHIEFDLACMNACGBHIEFDDFOPQ $.
typecode-cache-Pattern-49 $p #Pattern ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortIds ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortStmt ) \top ) ) $= ( in-sort-is-pattern and-is-pattern typecode-cache-Pattern-27 IMP-sort-0-is-pattern typecode-cache-Pattern-25 IMP-sort-30-is-pattern top-is-pattern ) AEFCBGHCIDD $.
sorting-cache-80 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortStmt ) \top ) ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortIds ) \top ) ) ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortIds ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortStmt ) \top ) ) ) ) $= ( in-sort-is-pattern typecode-cache-Pattern-27 IMP-sort-0-is-pattern and-is-pattern top-is-pattern typecode-cache-Pattern-48 rule-imp-transitivity typecode-cache-Pattern-2 kore-is-sort-is-pattern and-elim-left-sugar rule-and-intro-alt2-sugar typecode-cache-Pattern-49 sorting-cache-77 typecode-cache-Pattern-25 IMP-sort-30-is-pattern and-elim-right-sugar imp-reflexivity sorting-cache-79 ) ACIBEFDHGGAKLBCOACIBEFDHGGACIAKLACIBEFDHGMACPJACIBEFDHGGBEFDCQRDHGACIBEFDHGGBEFDHGBEFDACIBEFDHGSBEFDHGBEFDBEFDBEFDHMBEFDTJJABCUANN $.
typecode-cache-Pattern-50 $p #Pattern ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt kore-element-var-K0 kore-element-var-K1 ) $= ( typecode-cache-Pattern-27 typecode-cache-Pattern-25 IMP-symbol-220-is-pattern ) ACBDE $.
typecode-cache-Pattern-51 $p #Pattern ( \kore-equals \kore-sort-SortPgm kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt kore-element-var-K0 kore-element-var-K1 ) ) $= ( IMP-sort-26-is-pattern typecode-cache-Pattern-2 typecode-cache-Pattern-3 typecode-cache-Pattern-50 kore-equals-is-pattern ) EAFBGCDHI $.
sorting-rearrange-27 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortStmt ) \top ) ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortIds ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortPgm kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortPgm kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) $= ( and-is-pattern typecode-cache-Pattern-2 typecode-cache-Pattern-48 typecode-cache-Pattern-27 IMP-sort-0-is-pattern in-sort-is-pattern top-is-pattern kore-is-sort-is-pattern typecode-cache-Pattern-49 IMP-sort-26-is-pattern typecode-cache-Pattern-51 kore-exists-is-pattern kore-valid-is-pattern sorting-cache-80 IMP-axiom-2767 rule-imp-transitivity ) ADGCHIJKEEAFLCDMEAFNAFABCDOBPQACDRABCDST $.
typecode-cache-Pattern-52 $p #Pattern ( \kore-equals \kore-sort-SortPgm kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) kore-element-var-K1 ) ) $= ( IMP-sort-26-is-pattern typecode-cache-Pattern-2 typecode-cache-Pattern-3 IMP-sort-17-is-pattern string-literal-11-is-pattern kore-dv-is-pattern IMP-symbol-111-is-pattern IMP-symbol-148-is-pattern typecode-cache-Pattern-25 IMP-symbol-220-is-pattern kore-equals-is-pattern ) DAEBFGHIJKCLMN $.
typecode-cache-Pattern-53 $p #Pattern ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt kore-element-var-x0 kore-element-var-K1 ) $= ( typecode-cache-Pattern-16 typecode-cache-Pattern-25 IMP-symbol-220-is-pattern ) BCADE $.
typecode-cache-Pattern-54 $p #Pattern ( \kore-equals \kore-sort-SortPgm kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt kore-element-var-x0 kore-element-var-K1 ) ) $= ( IMP-sort-26-is-pattern typecode-cache-Pattern-2 typecode-cache-Pattern-3 typecode-cache-Pattern-53 kore-equals-is-pattern ) EAFBGCDHI $.
substitution-110 $p #Substitution kore-sort-var-R kore-sort-var-R ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) kore-element-var-K0 $= ( typecode-cache-Pattern-2 IMP-sort-17-is-pattern string-literal-11-is-pattern kore-dv-is-pattern IMP-symbol-111-is-pattern IMP-symbol-148-is-pattern element-var-is-var substitution-disjoint ) ACDEFGHBIJ $.
substitution-111 $p #Substitution kore-element-var-Val kore-element-var-Val ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) kore-element-var-K0 $= ( typecode-cache-Pattern-3 IMP-sort-17-is-pattern string-literal-11-is-pattern kore-dv-is-pattern IMP-symbol-111-is-pattern IMP-symbol-148-is-pattern element-var-is-var substitution-disjoint ) ACDEFGHBIJ $.
substitution-112 $p #Substitution kore-element-var-K1 kore-element-var-K1 ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) kore-element-var-K0 $= ( typecode-cache-Pattern-25 IMP-sort-17-is-pattern string-literal-11-is-pattern kore-dv-is-pattern IMP-symbol-111-is-pattern IMP-symbol-148-is-pattern element-var-is-var substitution-disjoint ) BCDEFGHAIJ $.
substitution-113 $p #Substitution ( \kore-equals \kore-sort-SortPgm kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) kore-element-var-K1 ) ) ( \kore-equals \kore-sort-SortPgm kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt kore-element-var-K0 kore-element-var-K1 ) ) ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) kore-element-var-K0 $= ( IMP-sort-17-is-pattern string-literal-11-is-pattern kore-dv-is-pattern IMP-symbol-111-is-pattern IMP-symbol-148-is-pattern element-var-is-var IMP-sort-26-is-pattern typecode-cache-Pattern-25 typecode-cache-Pattern-2 typecode-cache-Pattern-3 IMP-symbol-220-is-pattern typecode-cache-Pattern-50 substitution-disjoint substitution-110 substitution-111 typecode-cache-Pattern-27 substitution-var-same substitution-112 IMP-symbol-220-substitution substitution-kore-equals ) KAMBNEFGHIDLOKAMBNCDPEFGHICJKEFGHICJQACRBCSCJEFGHIEFGHIDLCTDLEFGHICJUACDUBUCUD $.
substitution-114 $p #Substitution ( \in-sort kore-element-var-x0 \kore-sort-SortIds ) ( \in-sort kore-element-var-K0 \kore-sort-SortIds ) kore-element-var-x0 kore-element-var-K0 $= ( typecode-cache-Pattern-16 IMP-sort-0-is-pattern element-var-is-var typecode-cache-Pattern-27 substitution-var-same substitution-85 substitution-in-sort ) BCBCDAFDAEBCAEGABHI $.
substitution-115 $p #Substitution ( \and ( \in-sort kore-element-var-x0 \kore-sort-SortIds ) \top ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortIds ) \top ) kore-element-var-x0 kore-element-var-K0 $= ( typecode-cache-Pattern-16 IMP-sort-0-is-pattern in-sort-is-pattern top-is-pattern typecode-cache-Pattern-27 element-var-is-var substitution-114 substitution-63 substitution-and ) BCBCDEFAGDEFAHABIABJK $.
substitution-116 $p #Substitution \kore-sort-SortPgm \kore-sort-SortPgm kore-element-var-x0 kore-element-var-K0 $= ( IMP-sort-26-is-pattern typecode-cache-Pattern-16 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-117 $p #Substitution ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt kore-element-var-x0 kore-element-var-K1 ) ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt kore-element-var-K0 kore-element-var-K1 ) kore-element-var-x0 kore-element-var-K0 $= ( typecode-cache-Pattern-16 element-var-is-var typecode-cache-Pattern-25 typecode-cache-Pattern-27 substitution-var-same substitution-68 IMP-symbol-220-substitution ) AECDCDBFAGBFCDAEHABCIJ $.
substitution-118 $p #Substitution ( \kore-equals \kore-sort-SortPgm kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt kore-element-var-x0 kore-element-var-K1 ) ) ( \kore-equals \kore-sort-SortPgm kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt kore-element-var-K0 kore-element-var-K1 ) ) kore-element-var-x0 kore-element-var-K0 $= ( IMP-sort-26-is-pattern typecode-cache-Pattern-2 typecode-cache-Pattern-3 typecode-cache-Pattern-53 typecode-cache-Pattern-50 typecode-cache-Pattern-16 element-var-is-var substitution-116 substitution-65 substitution-67 substitution-117 substitution-kore-equals ) FAGBHDEIFAGBHCDJEKCLCEMACENBCEOCDEPQ $.
substitution-119 $p #Substitution ( \kore-exists \kore-sort-SortPgm kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortPgm kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt kore-element-var-x0 kore-element-var-K1 ) ) ) ( \kore-exists \kore-sort-SortPgm kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortPgm kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt kore-element-var-K0 kore-element-var-K1 ) ) ) kore-element-var-x0 kore-element-var-K0 $= ( IMP-sort-26-is-pattern typecode-cache-Pattern-2 typecode-cache-Pattern-54 typecode-cache-Pattern-51 typecode-cache-Pattern-16 element-var-is-var substitution-116 substitution-65 substitution-118 substitution-kore-exists-alt ) FAGABDEHFAGABCDIEJBCKCELACEMABCDENO $.
substitution-120 $p #Substitution ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortPgm kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortPgm kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt kore-element-var-x0 kore-element-var-K1 ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortPgm kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortPgm kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt kore-element-var-K0 kore-element-var-K1 ) ) ) ) kore-element-var-x0 kore-element-var-K0 $= ( typecode-cache-Pattern-2 IMP-sort-26-is-pattern kore-exists-is-pattern typecode-cache-Pattern-54 typecode-cache-Pattern-51 typecode-cache-Pattern-16 element-var-is-var substitution-65 substitution-119 substitution-kore-valid ) AFGAFABDEIBHAFGAFABCDJBHEKCLACEMABCDENO $.
sorting-cache-81 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortStmt ) \top ) ) ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortStmt ) \top ) ) ) $= ( typecode-cache-Pattern-48 top-is-pattern typecode-cache-Pattern-25 IMP-sort-30-is-pattern in-sort-is-pattern rule-and-intro-alt2-sugar typecode-cache-Pattern-2 kore-is-sort-is-pattern and-is-pattern sorting-cache-77 sorting-cache-78 top-intro rule-weakening ) ABCAIJBEFGDKABLABCBEFGDABMABCDNOHH $.
sorting-cache-82 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortStmt ) \top ) ) ( \in-sort ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) \kore-sort-SortIds ) ) $= ( IMP-sort-17-is-pattern in-sort-is-pattern string-literal-11-is-pattern kore-dv-is-pattern IMP-symbol-111-is-pattern typecode-cache-Pattern-48 IMP-sort-0-is-pattern imp-is-pattern proof-rule-prop-1 proof-rule-mp and-is-pattern IMP-symbol-148-is-pattern kore-dv-sorting IMP-symbol-111-sorting rule-and-intro-alt2-sugar IMP-symbol-148-sorting rule-imp-transitivity ) ABHCEFCDGIDMCEFGNIDABHCEFCDGIDCEFCDABHCEFCDJCEFCDABHKCEOLGIDABHGIDJGIDABHKPLQCEFGRS $.
sorting-rearrange-28 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortStmt ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortPgm kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortPgm kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) kore-element-var-K1 ) ) ) ) ) $= ( kore-element-var-K0-elementvariable typecode-cache-Pattern-2 IMP-sort-17-is-pattern string-literal-11-is-pattern kore-dv-is-pattern IMP-symbol-111-is-pattern IMP-symbol-148-is-pattern IMP-sort-0-is-pattern top-is-pattern IMP-sort-26-is-pattern in-sort-is-pattern and-is-pattern kore-exists-is-pattern element-var-is-var kore-valid-is-pattern kore-element-var-x0-elementvariable typecode-cache-Pattern-48 typecode-cache-Pattern-52 typecode-cache-Pattern-51 typecode-cache-Pattern-27 typecode-cache-Pattern-16 substitution-disjoint rule-and-intro-alt2-sugar typecode-cache-Pattern-54 substitution-110 substitution-imp sorting-cache-81 sorting-cache-82 top-intro rule-weakening sorting-rearrange-26 sorting-rearrange-27 substitution-var-same substitution-in-sort substitution-and substitution-113 substitution-kore-exists-alt substitution-kore-valid substitution-115 substitution-120 functional-substitution-alt rule-imp-transitivity ) ACTACTFGHIJKNLOOAEMAEABCUABPRACTACTFGHIJKNLOACUJACTFGHIJKNLACUKACTLULUMUFUFFGHIJAEMAEABDCUBBPRAEMAEABCUABPRAEMAEABCSUGBPRACTDUCKNLOFGHIJKNLOSUDKNLOBDSABCUNABDCUOFGHIJFGHIJKNLOAEMAEABCUABPRDUCKNLOAEMAEABDCUBBPRDQFGHIJFGHIJKNLDUCKNLDQFGHIJFGHIJKDUCKDQFGHIJDQUPKFGHIJDQUEUQLFGHIJDQUEURAEMAEABCUABPAEMAEABDCUBBPFGHIJDQADUHMAEABCUAMAEABDCUBFGHIJBDQMFGHIJDQUEADUHABDCUSUTVAUISUDSUDKNLOAEMAEABCSUGBPRDUCKNLOAEMAEABDCUBBPRDQDSVBABDCSVCUIVDVE $.
typecode-cache-Pattern-55 $p #Pattern ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortAExp ) \top ) ) $= ( and-is-pattern typecode-cache-Pattern-2 kore-is-sort-is-pattern typecode-cache-Pattern-25 IMP-sort-13-is-pattern in-sort-is-pattern top-is-pattern ) ADEBFGHICC $.
sorting-rearrange-29 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortAExp ) \top ) ) ( \exists kore-element-var-x1 ( \eq kore-element-var-x1 ( \kore-dv \kore-sort-SortId "a" ) ) ) ) $= ( top-is-pattern IMP-sort-17-is-pattern typecode-cache-Pattern-55 string-literal-11-is-pattern kore-dv-is-pattern typecode-cache-Pattern-19 eq-is-pattern exists-is-pattern top-intro rule-weakening sorting-cache-4 sorting-rearrange-16 kore-functional rule-imp-transitivity ) ABFDCIEGHJCKABFDLMEEGHDCNCOPQ $.
sorting-cache-83 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortAExp ) \top ) ) ( \kore-is-sort kore-sort-var-R ) ) $= ( typecode-cache-Pattern-2 kore-is-sort-is-pattern typecode-cache-Pattern-55 typecode-cache-Pattern-25 IMP-sort-13-is-pattern in-sort-is-pattern top-is-pattern and-is-pattern and-elim-left-sugar imp-reflexivity rule-imp-transitivity ) ABEACDACDACDBFGHIJKACDLM $.
sorting-cache-84 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortAExp ) \top ) ) ( \in-sort kore-element-var-K1 \kore-sort-SortAExp ) ) $= ( typecode-cache-Pattern-25 IMP-sort-13-is-pattern in-sort-is-pattern top-is-pattern and-is-pattern rule-imp-transitivity typecode-cache-Pattern-55 typecode-cache-Pattern-2 kore-is-sort-is-pattern and-elim-right-sugar and-elim-left-sugar imp-reflexivity ) ABIBCDEFGBCDEAJKBCDEFGLBCDEFGBCDEBCDEBCDEFMBCDENHH $.
sorting-cache-85 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortAExp ) \top ) ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortId ) \top ) ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortAExp ) \top ) ) $= ( and-is-pattern in-sort-is-pattern top-is-pattern typecode-cache-Pattern-55 typecode-cache-Pattern-27 IMP-sort-17-is-pattern typecode-cache-Pattern-25 IMP-sort-13-is-pattern and-elim-left-sugar sorting-cache-84 rule-imp-transitivity top-intro rule-weakening rule-and-intro-alt2-sugar ) ACGBHIEFDDCJKEFACGBHIEFDDACGCJKEACGBHIEFDLACMNACGBHIEFDDFOPQ $.
typecode-cache-Pattern-56 $p #Pattern ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortId ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortAExp ) \top ) ) $= ( in-sort-is-pattern and-is-pattern typecode-cache-Pattern-27 IMP-sort-17-is-pattern typecode-cache-Pattern-25 IMP-sort-13-is-pattern top-is-pattern ) AEFCBGHCIDD $.
sorting-cache-86 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortAExp ) \top ) ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortId ) \top ) ) ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortId ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortAExp ) \top ) ) ) ) $= ( in-sort-is-pattern typecode-cache-Pattern-27 IMP-sort-17-is-pattern and-is-pattern top-is-pattern typecode-cache-Pattern-55 rule-imp-transitivity typecode-cache-Pattern-2 kore-is-sort-is-pattern and-elim-left-sugar rule-and-intro-alt2-sugar typecode-cache-Pattern-56 sorting-cache-83 typecode-cache-Pattern-25 IMP-sort-13-is-pattern and-elim-right-sugar imp-reflexivity sorting-cache-85 ) ACIBEFDHGGAKLBCOACIBEFDHGGACIAKLACIBEFDHGMACPJACIBEFDHGGBEFDCQRDHGACIBEFDHGGBEFDHGBEFDACIBEFDHGSBEFDHGBEFDBEFDBEFDHMBEFDTJJABCUANN $.
typecode-cache-Pattern-57 $p #Pattern ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp kore-element-var-K0 kore-element-var-K1 ) $= ( typecode-cache-Pattern-27 typecode-cache-Pattern-25 IMP-symbol-169-is-pattern ) ACBDE $.
typecode-cache-Pattern-58 $p #Pattern ( \kore-equals \kore-sort-SortStmt kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp kore-element-var-K0 kore-element-var-K1 ) ) $= ( IMP-sort-30-is-pattern typecode-cache-Pattern-2 typecode-cache-Pattern-3 typecode-cache-Pattern-57 kore-equals-is-pattern ) EAFBGCDHI $.
sorting-rearrange-30 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortAExp ) \top ) ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortId ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortStmt kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortStmt kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) $= ( and-is-pattern typecode-cache-Pattern-2 typecode-cache-Pattern-55 typecode-cache-Pattern-27 IMP-sort-17-is-pattern in-sort-is-pattern top-is-pattern kore-is-sort-is-pattern typecode-cache-Pattern-56 IMP-sort-30-is-pattern typecode-cache-Pattern-58 kore-exists-is-pattern kore-valid-is-pattern sorting-cache-86 IMP-axiom-2719 rule-imp-transitivity ) ADGCHIJKEEAFLCDMEAFNAFABCDOBPQACDRABCDST $.
typecode-cache-Pattern-59 $p #Pattern ( \kore-equals \kore-sort-SortStmt kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) kore-element-var-K1 ) ) $= ( IMP-sort-30-is-pattern typecode-cache-Pattern-2 typecode-cache-Pattern-3 IMP-sort-17-is-pattern string-literal-11-is-pattern kore-dv-is-pattern typecode-cache-Pattern-25 IMP-symbol-169-is-pattern kore-equals-is-pattern ) DAEBFGHICJKL $.
typecode-cache-Pattern-60 $p #Pattern ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp kore-element-var-x0 kore-element-var-K1 ) $= ( typecode-cache-Pattern-16 typecode-cache-Pattern-25 IMP-symbol-169-is-pattern ) BCADE $.
typecode-cache-Pattern-61 $p #Pattern ( \kore-equals \kore-sort-SortStmt kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp kore-element-var-x0 kore-element-var-K1 ) ) $= ( IMP-sort-30-is-pattern typecode-cache-Pattern-2 typecode-cache-Pattern-3 typecode-cache-Pattern-60 kore-equals-is-pattern ) EAFBGCDHI $.
substitution-121 $p #Substitution ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) kore-element-var-K1 ) ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp kore-element-var-K0 kore-element-var-K1 ) ( \kore-dv \kore-sort-SortId "a" ) kore-element-var-K0 $= ( IMP-sort-17-is-pattern string-literal-11-is-pattern kore-dv-is-pattern element-var-is-var typecode-cache-Pattern-25 typecode-cache-Pattern-27 substitution-var-same substitution-79 IMP-symbol-169-substitution ) AFCDECDEBGAHBGCDEAFIABJK $.
substitution-122 $p #Substitution ( \kore-equals \kore-sort-SortStmt kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) kore-element-var-K1 ) ) ( \kore-equals \kore-sort-SortStmt kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp kore-element-var-K0 kore-element-var-K1 ) ) ( \kore-dv \kore-sort-SortId "a" ) kore-element-var-K0 $= ( IMP-sort-30-is-pattern IMP-sort-17-is-pattern string-literal-11-is-pattern kore-dv-is-pattern typecode-cache-Pattern-2 typecode-cache-Pattern-3 element-var-is-var typecode-cache-Pattern-25 IMP-symbol-169-is-pattern typecode-cache-Pattern-57 substitution-disjoint substitution-77 substitution-78 substitution-121 substitution-kore-equals ) EAIBJFGHDLMEAIBJCDNFGHCKEFGHCKOACPBCQCDRS $.
substitution-123 $p #Substitution \kore-sort-SortStmt \kore-sort-SortStmt kore-element-var-x0 kore-element-var-K0 $= ( IMP-sort-30-is-pattern typecode-cache-Pattern-16 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-124 $p #Substitution ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp kore-element-var-x0 kore-element-var-K1 ) ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp kore-element-var-K0 kore-element-var-K1 ) kore-element-var-x0 kore-element-var-K0 $= ( typecode-cache-Pattern-16 element-var-is-var typecode-cache-Pattern-25 typecode-cache-Pattern-27 substitution-var-same substitution-68 IMP-symbol-169-substitution ) AECDCDBFAGBFCDAEHABCIJ $.
substitution-125 $p #Substitution ( \kore-equals \kore-sort-SortStmt kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp kore-element-var-x0 kore-element-var-K1 ) ) ( \kore-equals \kore-sort-SortStmt kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp kore-element-var-K0 kore-element-var-K1 ) ) kore-element-var-x0 kore-element-var-K0 $= ( IMP-sort-30-is-pattern typecode-cache-Pattern-2 typecode-cache-Pattern-3 typecode-cache-Pattern-60 typecode-cache-Pattern-57 typecode-cache-Pattern-16 element-var-is-var substitution-123 substitution-65 substitution-67 substitution-124 substitution-kore-equals ) FAGBHDEIFAGBHCDJEKCLCEMACENBCEOCDEPQ $.
substitution-126 $p #Substitution ( \kore-exists \kore-sort-SortStmt kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortStmt kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp kore-element-var-x0 kore-element-var-K1 ) ) ) ( \kore-exists \kore-sort-SortStmt kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortStmt kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp kore-element-var-K0 kore-element-var-K1 ) ) ) kore-element-var-x0 kore-element-var-K0 $= ( IMP-sort-30-is-pattern typecode-cache-Pattern-2 typecode-cache-Pattern-61 typecode-cache-Pattern-58 typecode-cache-Pattern-16 element-var-is-var substitution-123 substitution-65 substitution-125 substitution-kore-exists-alt ) FAGABDEHFAGABCDIEJBCKCELACEMABCDENO $.
substitution-127 $p #Substitution ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortStmt kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortStmt kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp kore-element-var-x0 kore-element-var-K1 ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortStmt kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortStmt kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp kore-element-var-K0 kore-element-var-K1 ) ) ) ) kore-element-var-x0 kore-element-var-K0 $= ( typecode-cache-Pattern-2 IMP-sort-30-is-pattern kore-exists-is-pattern typecode-cache-Pattern-61 typecode-cache-Pattern-58 typecode-cache-Pattern-16 element-var-is-var substitution-65 substitution-126 substitution-kore-valid ) AFGAFABDEIBHAFGAFABCDJBHEKCLACEMABCDENO $.
sorting-cache-87 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortAExp ) \top ) ) ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortAExp ) \top ) ) ) $= ( typecode-cache-Pattern-55 top-is-pattern typecode-cache-Pattern-25 IMP-sort-13-is-pattern in-sort-is-pattern rule-and-intro-alt2-sugar typecode-cache-Pattern-2 kore-is-sort-is-pattern and-is-pattern sorting-cache-83 sorting-cache-84 top-intro rule-weakening ) ABCAIJBEFGDKABLABCBEFGDABMABCDNOHH $.
sorting-rearrange-31 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortAExp ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortStmt kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortStmt kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) kore-element-var-K1 ) ) ) ) ) $= ( IMP-sort-17-is-pattern kore-element-var-K0-elementvariable typecode-cache-Pattern-2 string-literal-11-is-pattern kore-dv-is-pattern in-sort-is-pattern top-is-pattern IMP-sort-30-is-pattern and-is-pattern kore-exists-is-pattern element-var-is-var typecode-cache-Pattern-55 kore-valid-is-pattern kore-element-var-x0-elementvariable typecode-cache-Pattern-59 typecode-cache-Pattern-58 typecode-cache-Pattern-27 typecode-cache-Pattern-16 substitution-disjoint rule-and-intro-alt2-sugar typecode-cache-Pattern-61 kore-element-var-x1-elementvariable substitution-77 substitution-imp sorting-cache-87 imp-is-pattern proof-rule-prop-1 kore-dv-sorting proof-rule-mp top-intro rule-weakening sorting-rearrange-29 sorting-rearrange-30 substitution-var-same substitution-in-sort substitution-and substitution-122 substitution-kore-exists-alt substitution-kore-valid substitution-84 substitution-127 functional-substitution-alt rule-imp-transitivity ) ACOACODGHDIJLLAFKAFABCRBMPACOACODGHDIJLACUHACODGHDIJDGHDIACODGHDIUIDGHDIACOUJDGUKULACOJUMUNUCUCDGHAFKAFABECSBMPAFKAFABCRBMPAFKAFABCQUDBMPACOETDIJLDGHDIJLQUADIJLUEEQACUEUOABECUPDGHDGHDIJLAFKAFABCRBMPETDIJLAFKAFABECSBMPENDGHDGHDIJETDIJENDGHDGHDETDENDGHENUQDDGHENUBURJDGHENUBUSAFKAFABCRBMAFKAFABECSBMDGHENAEUFKAFABCRKAFABECSDGHBENKDGHENUBAEUFABECUTVAVBUGQUAQUADIJLAFKAFABCQUDBMPETDIJLAFKAFABECSBMPENEQVCABECQVDUGVEVF $.
sorting-rearrange-32 $p |- ( \imp ( \and \top ( \and ( \kore-is-sort kore-sort-var-x0 ) \top ) ) ( \kore-valid kore-sort-var-x0 ( \kore-exists \kore-sort-SortInt kore-sort-var-x0 kore-element-var-x1 ( \kore-equals \kore-sort-SortInt kore-sort-var-x0 kore-element-var-x1 ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) $= ( top-is-pattern typecode-cache-Pattern-6 and-is-pattern kore-is-sort-is-pattern IMP-sort-22-is-pattern typecode-cache-Pattern-19 string-literal-10-is-pattern kore-dv-is-pattern kore-equals-is-pattern kore-exists-is-pattern kore-valid-is-pattern sorting-cache-54 top-intro rule-weakening rule-and-intro-alt2-sugar domain-value-12-functional rule-imp-transitivity ) CADFCEEADFCEADGADGADBHGIJKBLMCADFCEEADFCANCADFCEECOPQABRS $.
substitution-128 $p #Substitution \kore-sort-SortInt \kore-sort-SortInt \unit-sort kore-sort-var-x0 $= ( IMP-sort-22-is-pattern unit-sort-is-symbol symbol-is-pattern element-var-is-var substitution-disjoint ) BCDAEF $.
substitution-129 $p #Substitution ( \kore-equals \kore-sort-SortInt \unit-sort kore-element-var-x1 ( \kore-dv \kore-sort-SortInt "10" ) ) ( \kore-equals \kore-sort-SortInt kore-sort-var-x0 kore-element-var-x1 ( \kore-dv \kore-sort-SortInt "10" ) ) \unit-sort kore-sort-var-x0 $= ( IMP-sort-22-is-pattern unit-sort-is-symbol symbol-is-pattern string-literal-10-is-pattern kore-dv-is-pattern element-var-is-var typecode-cache-Pattern-19 typecode-cache-Pattern-6 substitution-128 substitution-var-same substitution-37 substitution-disjoint substitution-kore-equals ) CDEBICFGCAJBICFGDEAHAKDEAHLABMCFGDEAHNO $.
substitution-130 $p #Substitution \kore-sort-SortInt \kore-sort-SortInt kore-sort-var-x1 kore-sort-var-x0 $= ( IMP-sort-22-is-pattern typecode-cache-Pattern-20 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-131 $p #Substitution ( \kore-equals \kore-sort-SortInt kore-sort-var-x1 kore-element-var-x1 ( \kore-dv \kore-sort-SortInt "10" ) ) ( \kore-equals \kore-sort-SortInt kore-sort-var-x0 kore-element-var-x1 ( \kore-dv \kore-sort-SortInt "10" ) ) kore-sort-var-x1 kore-sort-var-x0 $= ( IMP-sort-22-is-pattern typecode-cache-Pattern-20 string-literal-10-is-pattern kore-dv-is-pattern element-var-is-var typecode-cache-Pattern-19 typecode-cache-Pattern-6 substitution-130 substitution-var-same substitution-43 substitution-disjoint substitution-kore-equals ) DCEBIDFGDAJBIDFGCEAHACKCEAHLABCMDFGCEAHNO $.
sorting-rearrange-33 $p |- ( \imp \top ( \kore-valid \unit-sort ( \kore-exists \kore-sort-SortInt \unit-sort kore-element-var-x1 ( \kore-equals \kore-sort-SortInt \unit-sort kore-element-var-x1 ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) $= ( IMP-sort-22-is-pattern kore-sort-var-x0-elementvariable unit-sort-is-symbol symbol-is-pattern typecode-cache-Pattern-6 kore-sort-var-x1-elementvariable typecode-cache-Pattern-20 top-is-pattern typecode-cache-Pattern-19 string-literal-10-is-pattern kore-dv-is-pattern kore-equals-is-pattern kore-exists-is-pattern and-is-pattern element-var-is-var kore-is-sort-is-pattern kore-valid-is-pattern x-is-element-var substitution-var-same rule-weakening substitution-kore-exists-alt substitution-kore-valid substitution-imp top-intro sorting-cache-49 rule-and-intro-alt2-sugar typecode-cache-Pattern-1 exists-is-pattern unit-sort-is-functional sorting-rearrange-32 substitution-35 substitution-128 substitution-129 substitution-41 substitution-130 substitution-131 functional-substitution-alt rule-imp-transitivity ) IIDEQIOODEBDEBDEAJBKLMANRIIDEQIOIIUEUAUFUGDECFBCFBCFAJBKLMANRDEBDEBDEAJBKLMANRGHBGHBGHAJBKLMANRICFQIODEQIOGHQIOSCGISUHSUISUJUACAUKDEDEQIODEBDEBDEAJBKLMANRCFQIOCFBCFBCFAJBKLMANRCPCULDEBDEBDEAJBKLMANCFBCFBCFAJBKLMANDECPDECPTBDEBDEAJBKLMBCFBCFAJBKLMDEACPCUMDECPTCAUNUBUCUDGHGHQIOGHBGHBGHAJBKLMANRCFQIOCFBCFBCFAJBKLMANRCPCGUOGHBGHBGHAJBKLMANCFBCFBCFAJBKLMANGHCPGHCPTBGHBGHAJBKLMBCFBCFAJBKLMGHACPCGUPGHCPTCAGUQUBUCUDURUS $.
sorting-rearrange-34 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \exists kore-element-var-x1 ( \eq kore-element-var-x1 ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) $= ( top-is-pattern IMP-sort-22-is-pattern typecode-cache-Pattern-2 kore-is-sort-is-pattern and-is-pattern string-literal-10-is-pattern kore-dv-is-pattern typecode-cache-Pattern-19 eq-is-pattern exists-is-pattern top-intro rule-weakening sorting-cache-7 sorting-rearrange-33 kore-functional rule-imp-transitivity ) AEFCGCBJDHIKBLAEFCGCMNDDHICBOBPQR $.
sorting-cache-88 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \in-sort kore-element-var-From \kore-sort-SortInt ) \top ) ) ( \kore-is-sort kore-sort-var-R ) ) $= ( typecode-cache-Pattern-2 kore-is-sort-is-pattern top-is-pattern and-is-pattern typecode-cache-Pattern-21 IMP-sort-22-is-pattern in-sort-is-pattern and-elim-left-sugar rule-imp-transitivity imp-reflexivity ) ACDEFBGHIEFFACDEFACDACDEFBGHIEFJACDEFACDACDACDEJACDLKK $.
sorting-cache-89 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \in-sort kore-element-var-From \kore-sort-SortInt ) \top ) ) ( \in-sort kore-element-var-From \kore-sort-SortInt ) ) $= ( typecode-cache-Pattern-21 IMP-sort-22-is-pattern in-sort-is-pattern top-is-pattern and-is-pattern typecode-cache-Pattern-2 kore-is-sort-is-pattern rule-imp-transitivity and-elim-right-sugar and-elim-left-sugar imp-reflexivity ) AHIFGBCDEFGGBCDEFGBCDEAHIFGBCDEFGKBCDEFGBCDEBCDEBCDEFLBCDEMJJ $.
sorting-cache-90 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \in-sort kore-element-var-From \kore-sort-SortInt ) \top ) ) ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-From \kore-sort-SortInt ) \top ) ) ) $= ( and-is-pattern top-is-pattern typecode-cache-Pattern-21 IMP-sort-22-is-pattern in-sort-is-pattern typecode-cache-Pattern-2 kore-is-sort-is-pattern rule-and-intro-alt2-sugar sorting-cache-88 sorting-cache-89 top-intro rule-weakening ) AHIDCBEFGDCCAHIBEFGDCABKAHIDCBEFGDCCBEFGDABLAHIDCBEFGDCCDMNJJ $.
typecode-cache-Pattern-62 $p #Pattern ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-From \kore-sort-SortInt ) \top ) ) $= ( and-is-pattern typecode-cache-Pattern-2 kore-is-sort-is-pattern typecode-cache-Pattern-21 IMP-sort-22-is-pattern in-sort-is-pattern top-is-pattern ) ADEBFGHICC $.
typecode-cache-Pattern-63 $p #Pattern ( \kore-equals \kore-sort-SortAExp kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp kore-element-var-From ) ) $= ( IMP-sort-13-is-pattern typecode-cache-Pattern-2 typecode-cache-Pattern-3 IMP-sort-22-is-pattern typecode-cache-Pattern-21 kore-inj-is-pattern kore-equals-is-pattern ) DAEBFGDCHIJ $.
sorting-rearrange-35 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \in-sort kore-element-var-From \kore-sort-SortInt ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortAExp kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortAExp kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp kore-element-var-From ) ) ) ) ) $= ( typecode-cache-Pattern-2 and-is-pattern top-is-pattern kore-is-sort-is-pattern typecode-cache-Pattern-21 IMP-sort-22-is-pattern in-sort-is-pattern typecode-cache-Pattern-62 IMP-sort-13-is-pattern typecode-cache-Pattern-63 kore-exists-is-pattern kore-valid-is-pattern sorting-cache-90 IMP-axiom-27 rule-imp-transitivity ) ADGFECHIJFEEACKADLADABCMBNOACPABCQR $.
typecode-cache-Pattern-64 $p #Pattern ( \kore-equals \kore-sort-SortAExp kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp kore-element-var-x0 ) ) $= ( IMP-sort-13-is-pattern typecode-cache-Pattern-2 typecode-cache-Pattern-3 IMP-sort-22-is-pattern typecode-cache-Pattern-16 kore-inj-is-pattern kore-equals-is-pattern ) DAEBFGDCHIJ $.
substitution-132 $p #Substitution kore-sort-var-R kore-sort-var-R ( \kore-dv \kore-sort-SortInt "10" ) kore-element-var-From $= ( typecode-cache-Pattern-2 IMP-sort-22-is-pattern string-literal-10-is-pattern kore-dv-is-pattern element-var-is-var substitution-disjoint ) ACDEFBGH $.
substitution-133 $p #Substitution kore-element-var-Val kore-element-var-Val ( \kore-dv \kore-sort-SortInt "10" ) kore-element-var-From $= ( typecode-cache-Pattern-3 IMP-sort-22-is-pattern string-literal-10-is-pattern kore-dv-is-pattern element-var-is-var substitution-disjoint ) ACDEFBGH $.
substitution-134 $p #Substitution ( \kore-equals \kore-sort-SortAExp kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ( \kore-equals \kore-sort-SortAExp kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp kore-element-var-From ) ) ( \kore-dv \kore-sort-SortInt "10" ) kore-element-var-From $= ( IMP-sort-22-is-pattern IMP-sort-13-is-pattern string-literal-10-is-pattern kore-dv-is-pattern element-var-is-var substitution-disjoint typecode-cache-Pattern-2 typecode-cache-Pattern-3 kore-inj-is-pattern typecode-cache-Pattern-21 substitution-132 substitution-133 substitution-var-same substitution-kore-inj substitution-kore-equals ) EAJBKDEDFGLEAJBKDECMLDFGCHEDFGCHIACNBCODEDFGDECMDFGCHDDFGCHIEDFGCHIDFGCHPQR $.
substitution-135 $p #Substitution \kore-sort-SortInt \kore-sort-SortInt kore-element-var-x0 kore-element-var-From $= ( IMP-sort-22-is-pattern typecode-cache-Pattern-16 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-136 $p #Substitution ( \in-sort kore-element-var-x0 \kore-sort-SortInt ) ( \in-sort kore-element-var-From \kore-sort-SortInt ) kore-element-var-x0 kore-element-var-From $= ( typecode-cache-Pattern-16 IMP-sort-22-is-pattern element-var-is-var typecode-cache-Pattern-21 substitution-var-same substitution-135 substitution-in-sort ) BCBCDAFDAEBCAEGABHI $.
substitution-137 $p #Substitution ( \and ( \in-sort kore-element-var-x0 \kore-sort-SortInt ) \top ) ( \and ( \in-sort kore-element-var-From \kore-sort-SortInt ) \top ) kore-element-var-x0 kore-element-var-From $= ( typecode-cache-Pattern-16 IMP-sort-22-is-pattern in-sort-is-pattern top-is-pattern typecode-cache-Pattern-21 element-var-is-var substitution-136 substitution-50 substitution-and ) BCBCDEFAGDEFAHABIABJK $.
substitution-138 $p #Substitution \kore-sort-SortAExp \kore-sort-SortAExp kore-element-var-x0 kore-element-var-From $= ( IMP-sort-13-is-pattern typecode-cache-Pattern-16 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-139 $p #Substitution ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp kore-element-var-x0 ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp kore-element-var-From ) kore-element-var-x0 kore-element-var-From $= ( typecode-cache-Pattern-16 IMP-sort-22-is-pattern IMP-sort-13-is-pattern element-var-is-var typecode-cache-Pattern-21 substitution-135 substitution-138 substitution-var-same substitution-kore-inj ) DEBCDEAGBCAFABHABIBCAFJK $.
substitution-140 $p #Substitution ( \kore-equals \kore-sort-SortAExp kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp kore-element-var-x0 ) ) ( \kore-equals \kore-sort-SortAExp kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp kore-element-var-From ) ) kore-element-var-x0 kore-element-var-From $= ( IMP-sort-13-is-pattern typecode-cache-Pattern-2 typecode-cache-Pattern-3 IMP-sort-22-is-pattern typecode-cache-Pattern-16 kore-inj-is-pattern typecode-cache-Pattern-21 element-var-is-var substitution-138 substitution-52 substitution-54 substitution-139 substitution-kore-equals ) EAFBGHEDIJEAFBGHECKJDICLCDMACDNBCDOCDPQ $.
substitution-141 $p #Substitution ( \kore-exists \kore-sort-SortAExp kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortAExp kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp kore-element-var-x0 ) ) ) ( \kore-exists \kore-sort-SortAExp kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortAExp kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp kore-element-var-From ) ) ) kore-element-var-x0 kore-element-var-From $= ( IMP-sort-13-is-pattern typecode-cache-Pattern-2 typecode-cache-Pattern-64 typecode-cache-Pattern-63 typecode-cache-Pattern-16 element-var-is-var substitution-138 substitution-52 substitution-140 substitution-kore-exists-alt ) EAFABDGEAFABCHDIBCJCDKACDLABCDMN $.
sorting-cache-91 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \in-sort ( \kore-dv \kore-sort-SortInt "10" ) \kore-sort-SortInt ) ) $= ( IMP-sort-22-is-pattern string-literal-10-is-pattern kore-dv-is-pattern in-sort-is-pattern typecode-cache-Pattern-2 kore-is-sort-is-pattern top-is-pattern and-is-pattern imp-is-pattern proof-rule-prop-1 kore-dv-sorting proof-rule-mp ) BCDBEAFGHIBCDBEJBCDBEAFGHIKBCLM $.
sorting-cache-92 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \in-sort ( \kore-dv \kore-sort-SortInt "10" ) \kore-sort-SortInt ) \top ) ) $= ( top-is-pattern typecode-cache-Pattern-2 kore-is-sort-is-pattern and-is-pattern IMP-sort-22-is-pattern string-literal-10-is-pattern kore-dv-is-pattern in-sort-is-pattern sorting-cache-91 top-intro rule-weakening rule-and-intro-alt2-sugar ) ACDBEFGHFIBAJACDBEBKLM $.
sorting-rearrange-36 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortAExp kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortAExp kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) ) $= ( IMP-sort-22-is-pattern typecode-cache-Pattern-2 kore-element-var-From-elementvariable IMP-sort-13-is-pattern string-literal-10-is-pattern kore-dv-is-pattern top-is-pattern and-is-pattern kore-exists-is-pattern in-sort-is-pattern kore-element-var-x0-elementvariable element-var-is-var kore-valid-is-pattern typecode-cache-Pattern-63 kore-is-sort-is-pattern typecode-cache-Pattern-3 kore-inj-is-pattern kore-equals-is-pattern typecode-cache-Pattern-21 typecode-cache-Pattern-16 typecode-cache-Pattern-64 substitution-disjoint kore-element-var-x1-elementvariable substitution-132 substitution-kore-valid substitution-imp sorting-cache-58 sorting-cache-92 rule-and-intro-alt2-sugar sorting-rearrange-34 sorting-rearrange-35 substitution-var-same substitution-in-sort substitution-and substitution-134 substitution-kore-exists-alt substitution-137 substitution-52 substitution-141 functional-substitution-alt rule-imp-transitivity ) ADQIJADQIJCGHCLIJJADFADFADBRCFCGHSTBKOADQIJADQIJCGHCLIJAUIAUJUKCGHADFADABEPBKOADFADFADBRCFCGHSTBKOADFADABMUCBKOADQIJEUACLIJCGHCLIJMUBCLIJUEEMAUEULABEUMCGHCGHCLIJADFADFADBRCFCGHSTBKOEUACLIJADFADABEPBKOENCGHCGHCLIEUACLIENCGHCGHCEUACENCGHENUNCCGHENUDUOICGHENUDUPADFADFADBRCFCGHSTBKADFADABEPBKCGHENAEUFFADFADBRCFCGHSTFADABEPCGHBENFCGHENUDAEUFABEUQURUGUHMUBMUBCLIJADFADABMUCBKOEUACLIJADFADABEPBKOENEMUSADFADABMUCBKADFADABEPBKMUBENAEMUTABEMVAUGUHVBVC $.
sorting-rearrange-37 $p |- ( \imp ( \and \top ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortAExp kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortAExp kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) ) $= ( top-is-pattern typecode-cache-Pattern-2 and-is-pattern kore-is-sort-is-pattern IMP-sort-13-is-pattern IMP-sort-22-is-pattern typecode-cache-Pattern-3 string-literal-10-is-pattern kore-dv-is-pattern kore-inj-is-pattern kore-equals-is-pattern kore-exists-is-pattern kore-valid-is-pattern sorting-cache-47 top-intro rule-weakening rule-and-intro-alt2-sugar sorting-rearrange-36 rule-imp-transitivity ) CADFCEEADFCEADGADGADBIHGHJKLMBNOCADFCEEADFCAPCADFCEECQRSABTUA $.
substitution-142 $p #Substitution \kore-sort-SortAExp \kore-sort-SortAExp \unit-sort kore-sort-var-R $= ( IMP-sort-13-is-pattern unit-sort-is-symbol symbol-is-pattern element-var-is-var substitution-disjoint ) BCDAEF $.
substitution-143 $p #Substitution \kore-sort-SortAExp \kore-sort-SortAExp kore-sort-var-x0 kore-sort-var-R $= ( IMP-sort-13-is-pattern typecode-cache-Pattern-6 element-var-is-var substitution-disjoint ) CBDAEF $.
sorting-rearrange-38 $p |- ( \imp \top ( \kore-valid \unit-sort ( \kore-exists \kore-sort-SortAExp \unit-sort kore-element-var-Val ( \kore-equals \kore-sort-SortAExp \unit-sort kore-element-var-Val ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) ) $= ( IMP-sort-13-is-pattern kore-sort-var-R-elementvariable IMP-sort-22-is-pattern unit-sort-is-symbol symbol-is-pattern kore-sort-var-x0-elementvariable typecode-cache-Pattern-2 string-literal-10-is-pattern kore-dv-is-pattern kore-inj-is-pattern typecode-cache-Pattern-6 typecode-cache-Pattern-3 top-is-pattern kore-equals-is-pattern element-var-is-var kore-exists-is-pattern and-is-pattern kore-is-sort-is-pattern kore-valid-is-pattern substitution-var-same x-is-element-var rule-weakening substitution-142 substitution-disjoint substitution-kore-equals substitution-kore-exists-alt substitution-kore-valid substitution-imp substitution-143 top-intro sorting-cache-49 rule-and-intro-alt2-sugar typecode-cache-Pattern-1 exists-is-pattern unit-sort-is-functional sorting-rearrange-37 substitution-2 substitution-4 substitution-9 substitution-11 functional-substitution-alt rule-imp-transitivity ) NNEFSNRREFBEFBEFAMDBDIJKOAQTNNEFSNRNNUKUCULUMEFCHBCHBCHAMDBDIJKOAQTEFBEFBEFAMDBDIJKOAQTGLBGLBGLAMDBDIJKOAQTNCHSNREFSNRGLSNRUBCGNUBUNUBUOUBUPUCCAUQEFEFSNREFBEFBEFAMDBDIJKOAQTCHSNRCHBCHBCHAMDBDIJKOAQTCPCUREFBEFBEFAMDBDIJKOAQCHBCHBCHAMDBDIJKOAQEFCPEFCPUABEFBEFAMDBDIJKOBCHBCHAMDBDIJKOEFACPCUDEFCPUABEFAMDBDIJKBCHAMDBDIJKEFCPCUDEFCPUACAUSDBDIJKEFCPUEUFUGUHUIGLGLSNRGLBGLBGLAMDBDIJKOAQTCHSNRCHBCHBCHAMDBDIJKOAQTCPCGUTGLBGLBGLAMDBDIJKOAQCHBCHBCHAMDBDIJKOAQGLCPGLCPUABGLBGLAMDBDIJKOBCHBCHAMDBDIJKOGLACPCGUJGLCPUABGLAMDBDIJKBCHAMDBDIJKGLCPCGUJGLCPUACAGVADBDIJKGLCPUEUFUGUHUIVBVC $.
sorting-rearrange-39 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \exists kore-element-var-Val ( \eq kore-element-var-Val ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) $= ( top-is-pattern IMP-sort-22-is-pattern IMP-sort-13-is-pattern typecode-cache-Pattern-2 kore-is-sort-is-pattern and-is-pattern string-literal-10-is-pattern kore-dv-is-pattern kore-inj-is-pattern typecode-cache-Pattern-3 eq-is-pattern exists-is-pattern top-intro rule-weakening sorting-cache-8 sorting-rearrange-38 kore-functional rule-imp-transitivity ) AFGCHCBLDEDIJKMBNAFGCHCOPEDEDIJKCBQBRST $.
sorting-cache-93 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortAExp ) \top ) ) ( \kore-is-sort kore-sort-var-R ) ) $= ( typecode-cache-Pattern-2 kore-is-sort-is-pattern top-is-pattern and-is-pattern typecode-cache-Pattern-25 IMP-sort-13-is-pattern in-sort-is-pattern and-elim-left-sugar rule-imp-transitivity imp-reflexivity ) ACDEFBGHIEFFACDEFACDACDEFBGHIEFJACDEFACDACDACDEJACDLKK $.
sorting-cache-94 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortAExp ) \top ) ) ( \in-sort kore-element-var-K1 \kore-sort-SortAExp ) ) $= ( typecode-cache-Pattern-25 IMP-sort-13-is-pattern in-sort-is-pattern top-is-pattern and-is-pattern typecode-cache-Pattern-2 kore-is-sort-is-pattern rule-imp-transitivity and-elim-right-sugar and-elim-left-sugar imp-reflexivity ) AHIFGBCDEFGGBCDEFGBCDEAHIFGBCDEFGKBCDEFGBCDEBCDEBCDEFLBCDEMJJ $.
sorting-cache-95 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortAExp ) \top ) ) ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortAExp ) \top ) ) ) $= ( and-is-pattern top-is-pattern typecode-cache-Pattern-25 IMP-sort-13-is-pattern in-sort-is-pattern typecode-cache-Pattern-2 kore-is-sort-is-pattern rule-and-intro-alt2-sugar sorting-cache-93 sorting-cache-94 top-intro rule-weakening ) AHIDCBEFGDCCAHIBEFGDCABKAHIDCBEFGDCCBEFGDABLAHIDCBEFGDCCDMNJJ $.
sorting-rearrange-40 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortAExp ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortStmt kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortStmt kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) kore-element-var-K1 ) ) ) ) ) $= ( typecode-cache-Pattern-2 and-is-pattern top-is-pattern kore-is-sort-is-pattern typecode-cache-Pattern-25 IMP-sort-13-is-pattern in-sort-is-pattern typecode-cache-Pattern-55 IMP-sort-30-is-pattern typecode-cache-Pattern-59 kore-exists-is-pattern kore-valid-is-pattern sorting-cache-95 sorting-rearrange-31 rule-imp-transitivity ) ADGFECHIJFEEACKADLADABCMBNOACPABCQR $.
typecode-cache-Pattern-65 $p #Pattern ( \kore-equals \kore-sort-SortStmt kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) kore-element-var-x0 ) ) $= ( IMP-sort-30-is-pattern typecode-cache-Pattern-2 typecode-cache-Pattern-3 IMP-sort-17-is-pattern string-literal-11-is-pattern kore-dv-is-pattern typecode-cache-Pattern-16 IMP-symbol-169-is-pattern kore-equals-is-pattern ) DAEBFGHICJKL $.
substitution-144 $p #Substitution \kore-sort-SortAExp \kore-sort-SortAExp kore-element-var-x0 kore-element-var-K1 $= ( IMP-sort-13-is-pattern typecode-cache-Pattern-16 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-145 $p #Substitution ( \in-sort kore-element-var-x0 \kore-sort-SortAExp ) ( \in-sort kore-element-var-K1 \kore-sort-SortAExp ) kore-element-var-x0 kore-element-var-K1 $= ( typecode-cache-Pattern-16 IMP-sort-13-is-pattern element-var-is-var typecode-cache-Pattern-25 substitution-var-same substitution-144 substitution-in-sort ) BCBCDAFDAEBCAEGABHI $.
substitution-146 $p #Substitution ( \and ( \in-sort kore-element-var-x0 \kore-sort-SortAExp ) \top ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortAExp ) \top ) kore-element-var-x0 kore-element-var-K1 $= ( typecode-cache-Pattern-16 IMP-sort-13-is-pattern in-sort-is-pattern top-is-pattern typecode-cache-Pattern-25 element-var-is-var substitution-145 substitution-103 substitution-and ) BCBCDEFAGDEFAHABIABJK $.
substitution-147 $p #Substitution \kore-sort-SortStmt \kore-sort-SortStmt kore-element-var-x0 kore-element-var-K1 $= ( IMP-sort-30-is-pattern typecode-cache-Pattern-16 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-148 $p #Substitution ( \kore-equals \kore-sort-SortStmt kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) kore-element-var-x0 ) ) ( \kore-equals \kore-sort-SortStmt kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) kore-element-var-K1 ) ) kore-element-var-x0 kore-element-var-K1 $= ( typecode-cache-Pattern-16 IMP-sort-17-is-pattern string-literal-11-is-pattern kore-dv-is-pattern element-var-is-var IMP-sort-30-is-pattern typecode-cache-Pattern-2 typecode-cache-Pattern-3 IMP-symbol-169-is-pattern typecode-cache-Pattern-25 substitution-147 substitution-105 substitution-106 substitution-disjoint substitution-var-same IMP-symbol-169-substitution substitution-kore-equals ) JAKBLFGHDEMJAKBLFGHCNMDECICDOACDPBCDQCIDEFGHDEFGHCNFGHDECIRDECISTUA $.
substitution-149 $p #Substitution ( \imp ( \and ( \in-sort kore-element-var-x0 \kore-sort-SortAExp ) \top ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortStmt kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortStmt kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) kore-element-var-x0 ) ) ) ) ) ( \imp ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortAExp ) \top ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortStmt kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortStmt kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) kore-element-var-K1 ) ) ) ) ) kore-element-var-x0 kore-element-var-K1 $= ( typecode-cache-Pattern-2 IMP-sort-30-is-pattern typecode-cache-Pattern-16 kore-exists-is-pattern typecode-cache-Pattern-65 typecode-cache-Pattern-59 element-var-is-var IMP-sort-13-is-pattern in-sort-is-pattern top-is-pattern and-is-pattern kore-valid-is-pattern substitution-105 typecode-cache-Pattern-25 substitution-146 substitution-147 substitution-148 substitution-kore-exists-alt substitution-kore-valid substitution-imp ) DGDGLMNOAEFAEABDIBHPCRLMNOAEFAEABCJBHPCKCDSAEFAEABDIBHAEFAEABCJBHDGCKACDQFAEABDIFAEABCJDGBCKCDTACDQABCDUAUBUCUD $.
sorting-cache-96 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-is-sort \kore-sort-SortInt ) ) $= ( kore-is-sort-is-pattern IMP-sort-22-is-pattern typecode-cache-Pattern-2 top-is-pattern and-is-pattern imp-is-pattern proof-rule-prop-1 IMP-sort-22-sort proof-rule-mp ) CBADBEFCBGCBADBEFHIJ $.
sorting-cache-97 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-is-sort \kore-sort-SortAExp ) ) $= ( kore-is-sort-is-pattern IMP-sort-13-is-pattern typecode-cache-Pattern-2 top-is-pattern and-is-pattern imp-is-pattern proof-rule-prop-1 IMP-sort-13-sort proof-rule-mp ) CBADBEFCBGCBADBEFHIJ $.
sorting-cache-98 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \kore-is-sort \kore-sort-SortInt ) ( \kore-is-sort \kore-sort-SortAExp ) ) ) $= ( kore-is-sort-is-pattern typecode-cache-Pattern-2 top-is-pattern and-is-pattern IMP-sort-22-is-pattern IMP-sort-13-is-pattern sorting-cache-96 sorting-cache-97 rule-and-intro-alt2-sugar ) ACBDEFBGBAHAIJ $.
sorting-cache-99 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \and ( \kore-is-sort \kore-sort-SortInt ) ( \kore-is-sort \kore-sort-SortAExp ) ) ( \in-sort ( \kore-dv \kore-sort-SortInt "10" ) \kore-sort-SortInt ) ) ) $= ( kore-is-sort-is-pattern IMP-sort-22-is-pattern and-is-pattern typecode-cache-Pattern-2 top-is-pattern IMP-sort-13-is-pattern string-literal-10-is-pattern kore-dv-is-pattern in-sort-is-pattern sorting-cache-98 sorting-cache-91 rule-and-intro-alt2-sugar ) AEBFDCBGBDCHICJAKALM $.
sorting-cache-100 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \in-sort ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) \kore-sort-SortAExp ) ) $= ( IMP-sort-22-is-pattern IMP-sort-13-is-pattern kore-is-sort-is-pattern and-is-pattern string-literal-10-is-pattern kore-dv-is-pattern in-sort-is-pattern typecode-cache-Pattern-2 top-is-pattern kore-inj-is-pattern sorting-cache-99 INJ-symbol-0-sorting rule-imp-transitivity ) AIDJEBDCDEBFGBHEBCBFGKCHALBCBFGMN $.
sorting-rearrange-41 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortStmt kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortStmt kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) ) ) $= ( IMP-sort-22-is-pattern IMP-sort-13-is-pattern kore-dv-is-pattern typecode-cache-Pattern-2 string-literal-10-is-pattern kore-inj-is-pattern kore-element-var-K1-elementvariable top-is-pattern IMP-sort-30-is-pattern element-var-is-var and-is-pattern in-sort-is-pattern IMP-sort-17-is-pattern string-literal-11-is-pattern substitution-disjoint typecode-cache-Pattern-3 kore-exists-is-pattern kore-is-sort-is-pattern IMP-symbol-169-is-pattern kore-valid-is-pattern typecode-cache-Pattern-25 kore-equals-is-pattern typecode-cache-Pattern-59 kore-element-var-x0-elementvariable rule-and-intro-alt2-sugar substitution-var-same sorting-cache-58 sorting-cache-100 top-intro rule-weakening typecode-cache-Pattern-65 typecode-cache-Pattern-16 sorting-rearrange-39 sorting-rearrange-40 substitution-in-sort substitution-and IMP-symbol-169-substitution substitution-kore-equals substitution-kore-exists-alt substitution-kore-valid substitution-imp substitution-149 functional-substitution-alt rule-imp-transitivity ) AFTJMAFTJMCDCGEHDNJMMAFKAFKAFBROPECDCGEHUAUDBSUBAFTJMAFTJMCDCGEHDNJMAUIAFTJMCDCGEHDNJAUJAFTJMJUKULUGUGCDCGEHAFKAFABIUEBSUBAFKAFKAFBROPECDCGEHUAUDBSUBAFKAFABUFUMBSUBAFTJMIUCDNJMCDCGEHDNJMUFUNDNJMBIUFABUOABIUPCDCGEHCDCGEHDNJMAFKAFKAFBROPECDCGEHUAUDBSUBIUCDNJMAFKAFABIUEBSUBILCDCGEHCDCGEHDNJIUCDNJILCDCGEHCDCGEHDIUCDILCDCGEHILUHDCDCGEHILQUQJCDCGEHILQURAFKAFKAFBROPECDCGEHUAUDBSAFKAFABIUEBSCDCGEHILAFCDCGEHILQKAFKAFBROPECDCGEHUAUDKAFABIUECDCGEHBILKCDCGEHILQAFCDCGEHILQKAFBROPECDCGEHUAKAFBROPEIUCUACDCGEHILKCDCGEHILQAFCDCGEHILQBRCDCGEHILQILCDCGEHOPECDCGEHOPEIUCOPECDCGEHILQCDCGEHILUHUSUTVAVBVCABIUFVDVEVF $.
sorting-rearrange-42 $p |- ( \imp ( \and \top ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortStmt kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortStmt kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) ) ) $= ( top-is-pattern typecode-cache-Pattern-2 and-is-pattern kore-is-sort-is-pattern IMP-sort-30-is-pattern kore-dv-is-pattern IMP-sort-22-is-pattern typecode-cache-Pattern-3 IMP-sort-17-is-pattern string-literal-11-is-pattern IMP-sort-13-is-pattern string-literal-10-is-pattern kore-inj-is-pattern IMP-symbol-169-is-pattern kore-equals-is-pattern kore-exists-is-pattern kore-valid-is-pattern sorting-cache-47 top-intro rule-weakening rule-and-intro-alt2-sugar sorting-rearrange-41 rule-imp-transitivity ) CADFCEEADFCEADGADGADBJKLHIMINHOPQBRSCADFCEEADFCATCADFCEECUAUBUCABUDUE $.
substitution-150 $p #Substitution \kore-sort-SortStmt \kore-sort-SortStmt \unit-sort kore-sort-var-R $= ( IMP-sort-30-is-pattern unit-sort-is-symbol symbol-is-pattern element-var-is-var substitution-disjoint ) BCDAEF $.
substitution-151 $p #Substitution \kore-sort-SortStmt \kore-sort-SortStmt kore-sort-var-x0 kore-sort-var-R $= ( IMP-sort-30-is-pattern typecode-cache-Pattern-6 element-var-is-var substitution-disjoint ) CBDAEF $.
sorting-rearrange-43 $p |- ( \imp \top ( \kore-valid \unit-sort ( \kore-exists \kore-sort-SortStmt \unit-sort kore-element-var-Val ( \kore-equals \kore-sort-SortStmt \unit-sort kore-element-var-Val ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) ) ) $= ( kore-sort-var-R-elementvariable kore-dv-is-pattern IMP-sort-22-is-pattern IMP-sort-30-is-pattern unit-sort-is-symbol symbol-is-pattern kore-sort-var-x0-elementvariable typecode-cache-Pattern-2 IMP-sort-17-is-pattern string-literal-11-is-pattern IMP-sort-13-is-pattern string-literal-10-is-pattern kore-inj-is-pattern IMP-symbol-169-is-pattern typecode-cache-Pattern-6 typecode-cache-Pattern-3 top-is-pattern kore-equals-is-pattern element-var-is-var kore-exists-is-pattern and-is-pattern kore-is-sort-is-pattern kore-valid-is-pattern substitution-var-same x-is-element-var rule-weakening substitution-150 substitution-disjoint substitution-kore-equals substitution-kore-exists-alt substitution-kore-valid substitution-imp substitution-151 top-intro sorting-cache-49 rule-and-intro-alt2-sugar typecode-cache-Pattern-1 exists-is-pattern unit-sort-is-functional sorting-rearrange-42 substitution-2 substitution-4 substitution-9 substitution-11 functional-substitution-alt rule-imp-transitivity ) RRFGUCRUBUBFGEFGEFGAQJKCDLDMCNOSAUAUDRRFGUCRUBRRUOUGUPUQFGBIEBIEBIAQJKCDLDMCNOSAUAUDFGEFGEFGAQJKCDLDMCNOSAUAUDHPEHPEHPAQJKCDLDMCNOSAUAUDRBIUCRUBFGUCRUBHPUCRUBUFBHRUFURUFUSUFUTUGBAVAFGFGUCRUBFGEFGEFGAQJKCDLDMCNOSAUAUDBIUCRUBBIEBIEBIAQJKCDLDMCNOSAUAUDBTBVBFGEFGEFGAQJKCDLDMCNOSAUABIEBIEBIAQJKCDLDMCNOSAUAFGBTFGBTUEEFGEFGAQJKCDLDMCNOSEBIEBIAQJKCDLDMCNOSFGABTBUHFGBTUEEFGAQJKCDLDMCNOEBIAQJKCDLDMCNOFGBTBUHFGBTUEBAVCJKCDLDMCNOFGBTUIUJUKULUMHPHPUCRUBHPEHPEHPAQJKCDLDMCNOSAUAUDBIUCRUBBIEBIEBIAQJKCDLDMCNOSAUAUDBTBHVDHPEHPEHPAQJKCDLDMCNOSAUABIEBIEBIAQJKCDLDMCNOSAUAHPBTHPBTUEEHPEHPAQJKCDLDMCNOSEBIEBIAQJKCDLDMCNOSHPABTBHUNHPBTUEEHPAQJKCDLDMCNOEBIAQJKCDLDMCNOHPBTBHUNHPBTUEBAHVEJKCDLDMCNOHPBTUIUJUKULUMVFVG $.
sorting-rearrange-44 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \exists kore-element-var-Val ( \eq kore-element-var-Val ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) ) $= ( top-is-pattern kore-dv-is-pattern IMP-sort-22-is-pattern typecode-cache-Pattern-2 kore-is-sort-is-pattern and-is-pattern IMP-sort-17-is-pattern string-literal-11-is-pattern IMP-sort-13-is-pattern string-literal-10-is-pattern kore-inj-is-pattern IMP-symbol-169-is-pattern typecode-cache-Pattern-3 eq-is-pattern exists-is-pattern top-intro rule-weakening IMP-sort-30-is-pattern sorting-cache-9 sorting-rearrange-43 kore-functional rule-imp-transitivity ) AFGCHCBOIJDEKELDMNPBQAFGCHCRSTIJDEKELDMNCBUABUBUCUD $.
sorting-cache-101 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortStmt ) \top ) ) ( \kore-is-sort kore-sort-var-R ) ) $= ( typecode-cache-Pattern-2 kore-is-sort-is-pattern top-is-pattern and-is-pattern typecode-cache-Pattern-25 IMP-sort-30-is-pattern in-sort-is-pattern and-elim-left-sugar rule-imp-transitivity imp-reflexivity ) ACDEFBGHIEFFACDEFACDACDEFBGHIEFJACDEFACDACDACDEJACDLKK $.
sorting-cache-102 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortStmt ) \top ) ) ( \in-sort kore-element-var-K1 \kore-sort-SortStmt ) ) $= ( typecode-cache-Pattern-25 IMP-sort-30-is-pattern in-sort-is-pattern top-is-pattern and-is-pattern typecode-cache-Pattern-2 kore-is-sort-is-pattern rule-imp-transitivity and-elim-right-sugar and-elim-left-sugar imp-reflexivity ) AHIFGBCDEFGGBCDEFGBCDEAHIFGBCDEFGKBCDEFGBCDEBCDEBCDEFLBCDEMJJ $.
sorting-cache-103 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortStmt ) \top ) ) ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortStmt ) \top ) ) ) $= ( and-is-pattern top-is-pattern typecode-cache-Pattern-25 IMP-sort-30-is-pattern in-sort-is-pattern typecode-cache-Pattern-2 kore-is-sort-is-pattern rule-and-intro-alt2-sugar sorting-cache-101 sorting-cache-102 top-intro rule-weakening ) AHIDCBEFGDCCAHIBEFGDCABKAHIDCBEFGDCCBEFGDABLAHIDCBEFGDCCDMNJJ $.
sorting-rearrange-45 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortStmt ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortPgm kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortPgm kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) kore-element-var-K1 ) ) ) ) ) $= ( typecode-cache-Pattern-2 and-is-pattern top-is-pattern kore-is-sort-is-pattern typecode-cache-Pattern-25 IMP-sort-30-is-pattern in-sort-is-pattern typecode-cache-Pattern-48 IMP-sort-26-is-pattern typecode-cache-Pattern-52 kore-exists-is-pattern kore-valid-is-pattern sorting-cache-103 sorting-rearrange-28 rule-imp-transitivity ) ADGFECHIJFEEACKADLADABCMBNOACPABCQR $.
typecode-cache-Pattern-66 $p #Pattern ( \kore-equals \kore-sort-SortPgm kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) kore-element-var-x0 ) ) $= ( IMP-sort-26-is-pattern typecode-cache-Pattern-2 typecode-cache-Pattern-3 IMP-sort-17-is-pattern string-literal-11-is-pattern kore-dv-is-pattern IMP-symbol-111-is-pattern IMP-symbol-148-is-pattern typecode-cache-Pattern-16 IMP-symbol-220-is-pattern kore-equals-is-pattern ) DAEBFGHIJKCLMN $.
substitution-152 $p #Substitution ( \in-sort kore-element-var-x0 \kore-sort-SortStmt ) ( \in-sort kore-element-var-K1 \kore-sort-SortStmt ) kore-element-var-x0 kore-element-var-K1 $= ( typecode-cache-Pattern-16 IMP-sort-30-is-pattern element-var-is-var typecode-cache-Pattern-25 substitution-var-same substitution-147 substitution-in-sort ) BCBCDAFDAEBCAEGABHI $.
substitution-153 $p #Substitution ( \and ( \in-sort kore-element-var-x0 \kore-sort-SortStmt ) \top ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortStmt ) \top ) kore-element-var-x0 kore-element-var-K1 $= ( typecode-cache-Pattern-16 IMP-sort-30-is-pattern in-sort-is-pattern top-is-pattern typecode-cache-Pattern-25 element-var-is-var substitution-152 substitution-103 substitution-and ) BCBCDEFAGDEFAHABIABJK $.
substitution-154 $p #Substitution \kore-sort-SortPgm \kore-sort-SortPgm kore-element-var-x0 kore-element-var-K1 $= ( IMP-sort-26-is-pattern typecode-cache-Pattern-16 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-155 $p #Substitution ( \kore-equals \kore-sort-SortPgm kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) kore-element-var-x0 ) ) ( \kore-equals \kore-sort-SortPgm kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) kore-element-var-K1 ) ) kore-element-var-x0 kore-element-var-K1 $= ( typecode-cache-Pattern-16 IMP-sort-17-is-pattern string-literal-11-is-pattern kore-dv-is-pattern IMP-symbol-111-is-pattern IMP-symbol-148-is-pattern element-var-is-var IMP-sort-26-is-pattern typecode-cache-Pattern-2 typecode-cache-Pattern-3 IMP-symbol-220-is-pattern typecode-cache-Pattern-25 substitution-154 substitution-105 substitution-106 substitution-disjoint substitution-var-same IMP-symbol-220-substitution substitution-kore-equals ) LAMBNFGHIJDEOLAMBNFGHIJCPODECKCDQACDRBCDSCKDEFGHIJDEFGHIJCPFGHIJDECKTDECKUAUBUC $.
sorting-cache-104 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \in-sort ( \kore-dv \kore-sort-SortId "a" ) \kore-sort-SortId ) ) $= ( IMP-sort-17-is-pattern string-literal-11-is-pattern kore-dv-is-pattern in-sort-is-pattern typecode-cache-Pattern-2 kore-is-sort-is-pattern top-is-pattern and-is-pattern imp-is-pattern proof-rule-prop-1 kore-dv-sorting proof-rule-mp ) BCDBEAFGHIBCDBEJBCDBEAFGHIKBCLM $.
sorting-cache-105 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \in-sort ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) \kore-sort-SortStmt ) ) $= ( kore-dv-is-pattern IMP-sort-22-is-pattern IMP-sort-17-is-pattern IMP-sort-13-is-pattern in-sort-is-pattern string-literal-11-is-pattern string-literal-10-is-pattern kore-inj-is-pattern and-is-pattern typecode-cache-Pattern-2 kore-is-sort-is-pattern top-is-pattern IMP-symbol-169-is-pattern IMP-sort-30-is-pattern sorting-cache-104 sorting-cache-100 rule-and-intro-alt2-sugar IMP-symbol-169-sorting rule-imp-transitivity ) AKLMJDGBDFCECHBIEFJDGBCECHBINOFAKLMJDGBDFCECHBIEFAPAQRDGBCECHBIST $.
sorting-cache-106 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \in-sort ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) \kore-sort-SortStmt ) \top ) ) $= ( top-is-pattern typecode-cache-Pattern-2 kore-is-sort-is-pattern and-is-pattern kore-dv-is-pattern IMP-sort-22-is-pattern IMP-sort-17-is-pattern string-literal-11-is-pattern IMP-sort-13-is-pattern string-literal-10-is-pattern kore-inj-is-pattern IMP-symbol-169-is-pattern IMP-sort-30-is-pattern in-sort-is-pattern sorting-cache-105 top-intro rule-weakening rule-and-intro-alt2-sugar ) ACDBEHIFGJGKFLMNOBAPACDBEBQRS $.
sorting-rearrange-46 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortPgm kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortPgm kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) ) ) ) $= ( kore-dv-is-pattern IMP-sort-22-is-pattern typecode-cache-Pattern-2 IMP-sort-17-is-pattern string-literal-11-is-pattern kore-element-var-K1-elementvariable IMP-sort-13-is-pattern string-literal-10-is-pattern kore-inj-is-pattern IMP-symbol-169-is-pattern IMP-sort-26-is-pattern element-var-is-var top-is-pattern and-is-pattern kore-element-var-x0-elementvariable IMP-sort-30-is-pattern kore-exists-is-pattern in-sort-is-pattern IMP-symbol-111-is-pattern IMP-symbol-148-is-pattern substitution-disjoint typecode-cache-Pattern-3 kore-valid-is-pattern IMP-symbol-220-is-pattern typecode-cache-Pattern-52 typecode-cache-Pattern-25 kore-is-sort-is-pattern kore-equals-is-pattern typecode-cache-Pattern-16 typecode-cache-Pattern-66 substitution-var-same substitution-kore-exists-alt substitution-kore-valid substitution-imp substitution-105 sorting-cache-58 sorting-cache-106 rule-and-intro-alt2-sugar sorting-rearrange-44 sorting-rearrange-45 substitution-in-sort substitution-and IMP-symbol-220-substitution substitution-kore-equals substitution-153 substitution-154 substitution-155 functional-substitution-alt rule-imp-transitivity ) AEUIOPAEUIOPFGCDIDJCKLRTOPPAEMAEMAEBUDFGCUAUBFGCDIDJCKLUFUJBSUEAEUIOPAEUIOPFGCDIDJCKLRTOPAURAUSUTFGCDIDJCKLAEMAEABHUGBSUEAEMAEMAEBUDFGCUAUBFGCDIDJCKLUFUJBSUEAEMAEABQULBSUEAEUIOPHUHRTOPFGCDIDJCKLRTOPQUKRTOPBHQABVAABHVBFGCDIDJCKLFGCDIDJCKLRTOPAEMAEMAEBUDFGCUAUBFGCDIDJCKLUFUJBSUEHUHRTOPAEMAEABHUGBSUEHNFGCDIDJCKLFGCDIDJCKLRTOHUHRTOHNFGCDIDJCKLFGCDIDJCKLRHUHRHNFGCDIDJCKLHNUMRFGCDIDJCKLHNUCVCOFGCDIDJCKLHNUCVDAEMAEMAEBUDFGCUAUBFGCDIDJCKLUFUJBSAEMAEABHUGBSFGCDIDJCKLHNAEFGCDIDJCKLHNUCMAEMAEBUDFGCUAUBFGCDIDJCKLUFUJMAEABHUGFGCDIDJCKLBHNMFGCDIDJCKLHNUCAEFGCDIDJCKLHNUCMAEBUDFGCUAUBFGCDIDJCKLUFMAEBUDFGCUAUBHUHUFFGCDIDJCKLHNMFGCDIDJCKLHNUCAEFGCDIDJCKLHNUCBUDFGCDIDJCKLHNUCHNFGCDIDJCKLFGCUAUBFGCDIDJCKLFGCUAUBHUHFGCUAUBFGCDIDJCKLHNUCFGCDIDJCKLHNUMVEVFUNUOUPQUKQUKRTOPAEMAEABQULBSUEHUHRTOPAEMAEABHUGBSUEHNHQVGAEMAEABQULBSAEMAEABHUGBSQUKHNAHQUQMAEABQULMAEABHUGQUKBHNHQVHAHQUQABHQVIUNUOUPVJVK $.
substitution-156 $p #Substitution \kore-sort-SortPgm \kore-sort-SortPgm \unit-sort kore-sort-var-R $= ( IMP-sort-26-is-pattern unit-sort-is-symbol symbol-is-pattern element-var-is-var substitution-disjoint ) BCDAEF $.
substitution-157 $p #Substitution \kore-sort-SortPgm \kore-sort-SortPgm kore-sort-var-x0 kore-sort-var-R $= ( IMP-sort-26-is-pattern typecode-cache-Pattern-6 element-var-is-var substitution-disjoint ) CBDAEF $.
sorting-rearrange-47 $p |- ( \imp \top ( \kore-valid \unit-sort ( \kore-exists \kore-sort-SortPgm \unit-sort kore-element-var-Val ( \kore-equals \kore-sort-SortPgm \unit-sort kore-element-var-Val ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) ) ) ) $= ( kore-dv-is-pattern kore-sort-var-R-elementvariable IMP-sort-17-is-pattern string-literal-11-is-pattern IMP-sort-22-is-pattern IMP-sort-26-is-pattern typecode-cache-Pattern-2 unit-sort-is-symbol symbol-is-pattern kore-sort-var-x0-elementvariable top-is-pattern IMP-symbol-111-is-pattern IMP-symbol-148-is-pattern IMP-sort-13-is-pattern string-literal-10-is-pattern kore-inj-is-pattern IMP-symbol-169-is-pattern IMP-symbol-220-is-pattern typecode-cache-Pattern-6 typecode-cache-Pattern-3 and-is-pattern kore-equals-is-pattern element-var-is-var kore-is-sort-is-pattern kore-exists-is-pattern kore-valid-is-pattern substitution-var-same x-is-element-var rule-weakening top-intro rule-and-intro-alt2-sugar rule-imp-transitivity substitution-156 substitution-disjoint substitution-kore-equals substitution-kore-exists-alt substitution-kore-valid substitution-imp substitution-157 sorting-cache-49 typecode-cache-Pattern-1 exists-is-pattern unit-sort-is-functional sorting-cache-47 sorting-rearrange-46 substitution-2 substitution-4 substitution-9 substitution-11 functional-substitution-alt ) LLIJUELUBUBIJGIJGIJAUADEBMNDEBFOFPBQRSUCAUFUGLLIJUELUBLLUKUJVAULIJCHGCHGCHAUADEBMNDEBFOFPBQRSUCAUFUGIJGIJGIJAUADEBMNDEBFOFPBQRSUCAUFUGKTGKTGKTAUADEBMNDEBFOFPBQRSUCAUFUGLCHUELUBIJUELUBKTUELUBUICKLUIVBUIVCUIVDUJLCHUELUBUBCHUELUBCHGCHGCHAUADEBMNDEBFOFPBQRSUCAUFUGLCHUELUBUBCHUELCVELCHUELUBUBLUKUJULCAVFUMIJIJUELUBIJGIJGIJAUADEBMNDEBFOFPBQRSUCAUFUGCHUELUBCHGCHGCHAUADEBMNDEBFOFPBQRSUCAUFUGCUDCVGIJGIJGIJAUADEBMNDEBFOFPBQRSUCAUFCHGCHGCHAUADEBMNDEBFOFPBQRSUCAUFIJCUDIJCUDUHGIJGIJAUADEBMNDEBFOFPBQRSUCGCHGCHAUADEBMNDEBFOFPBQRSUCIJACUDCUNIJCUDUHGIJAUADEBMNDEBFOFPBQRSGCHAUADEBMNDEBFOFPBQRSIJCUDCUNIJCUDUHCAVHDEBMNDEBFOFPBQRSIJCUDUOUPUQURUSKTKTUELUBKTGKTGKTAUADEBMNDEBFOFPBQRSUCAUFUGCHUELUBCHGCHGCHAUADEBMNDEBFOFPBQRSUCAUFUGCUDCKVIKTGKTGKTAUADEBMNDEBFOFPBQRSUCAUFCHGCHGCHAUADEBMNDEBFOFPBQRSUCAUFKTCUDKTCUDUHGKTGKTAUADEBMNDEBFOFPBQRSUCGCHGCHAUADEBMNDEBFOFPBQRSUCKTACUDCKUTKTCUDUHGKTAUADEBMNDEBFOFPBQRSGCHAUADEBMNDEBFOFPBQRSKTCUDCKUTKTCUDUHCAKVJDEBMNDEBFOFPBQRSKTCUDUOUPUQURUSVKUM $.
sorting-rearrange-48 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \exists kore-element-var-Val ( \eq kore-element-var-Val ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) ) ) $= ( kore-dv-is-pattern top-is-pattern IMP-sort-17-is-pattern string-literal-11-is-pattern IMP-sort-22-is-pattern typecode-cache-Pattern-2 kore-is-sort-is-pattern and-is-pattern IMP-symbol-111-is-pattern IMP-symbol-148-is-pattern IMP-sort-13-is-pattern string-literal-10-is-pattern kore-inj-is-pattern IMP-symbol-169-is-pattern IMP-symbol-220-is-pattern typecode-cache-Pattern-3 eq-is-pattern exists-is-pattern top-intro rule-weakening IMP-sort-26-is-pattern sorting-cache-43 sorting-rearrange-47 kore-functional rule-imp-transitivity ) AHIDJDBREFCKLEFCGMGNCOPQSBTAHIDJDUAUBUCEFCKLEFCGMGNCOPQDBUDBUEUFUG $.
sorting-cache-107 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \in-sort kore-element-var-From \kore-sort-SortPgm ) \top ) ) ( \kore-is-sort kore-sort-var-R ) ) $= ( typecode-cache-Pattern-2 kore-is-sort-is-pattern top-is-pattern and-is-pattern typecode-cache-Pattern-21 IMP-sort-26-is-pattern in-sort-is-pattern and-elim-left-sugar rule-imp-transitivity imp-reflexivity ) ACDEFBGHIEFFACDEFACDACDEFBGHIEFJACDEFACDACDACDEJACDLKK $.
sorting-cache-108 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \in-sort kore-element-var-From \kore-sort-SortPgm ) \top ) ) ( \in-sort kore-element-var-From \kore-sort-SortPgm ) ) $= ( typecode-cache-Pattern-21 IMP-sort-26-is-pattern in-sort-is-pattern top-is-pattern and-is-pattern typecode-cache-Pattern-2 kore-is-sort-is-pattern rule-imp-transitivity and-elim-right-sugar and-elim-left-sugar imp-reflexivity ) AHIFGBCDEFGGBCDEFGBCDEAHIFGBCDEFGKBCDEFGBCDEBCDEBCDEFLBCDEMJJ $.
sorting-cache-109 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \in-sort kore-element-var-From \kore-sort-SortPgm ) \top ) ) ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-From \kore-sort-SortPgm ) \top ) ) ) $= ( and-is-pattern top-is-pattern typecode-cache-Pattern-21 IMP-sort-26-is-pattern in-sort-is-pattern typecode-cache-Pattern-2 kore-is-sort-is-pattern rule-and-intro-alt2-sugar sorting-cache-107 sorting-cache-108 top-intro rule-weakening ) AHIDCBEFGDCCAHIBEFGDCABKAHIDCBEFGDCCBEFGDABLAHIDCBEFGDCCDMNJJ $.
typecode-cache-Pattern-67 $p #Pattern ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-From \kore-sort-SortPgm ) \top ) ) $= ( and-is-pattern typecode-cache-Pattern-2 kore-is-sort-is-pattern typecode-cache-Pattern-21 IMP-sort-26-is-pattern in-sort-is-pattern top-is-pattern ) ADEBFGHICC $.
typecode-cache-Pattern-68 $p #Pattern ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem kore-element-var-From ) ) $= ( BASIC-K-sort-1-is-pattern typecode-cache-Pattern-2 typecode-cache-Pattern-3 IMP-sort-26-is-pattern typecode-cache-Pattern-21 kore-inj-is-pattern kore-equals-is-pattern ) DAEBFGDCHIJ $.
sorting-rearrange-49 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \in-sort kore-element-var-From \kore-sort-SortPgm ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem kore-element-var-From ) ) ) ) ) $= ( typecode-cache-Pattern-2 and-is-pattern top-is-pattern kore-is-sort-is-pattern typecode-cache-Pattern-21 IMP-sort-26-is-pattern in-sort-is-pattern typecode-cache-Pattern-67 BASIC-K-sort-1-is-pattern typecode-cache-Pattern-68 kore-exists-is-pattern kore-valid-is-pattern sorting-cache-109 IMP-axiom-39 rule-imp-transitivity ) ADGFECHIJFEEACKADLADABCMBNOACPABCQR $.
typecode-cache-Pattern-69 $p #Pattern ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem kore-element-var-x0 ) ) $= ( BASIC-K-sort-1-is-pattern typecode-cache-Pattern-2 typecode-cache-Pattern-3 IMP-sort-26-is-pattern typecode-cache-Pattern-16 kore-inj-is-pattern kore-equals-is-pattern ) DAEBFGDCHIJ $.
substitution-158 $p #Substitution \kore-sort-SortPgm \kore-sort-SortPgm kore-element-var-x0 kore-element-var-From $= ( IMP-sort-26-is-pattern typecode-cache-Pattern-16 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-159 $p #Substitution ( \in-sort kore-element-var-x0 \kore-sort-SortPgm ) ( \in-sort kore-element-var-From \kore-sort-SortPgm ) kore-element-var-x0 kore-element-var-From $= ( typecode-cache-Pattern-16 IMP-sort-26-is-pattern element-var-is-var typecode-cache-Pattern-21 substitution-var-same substitution-158 substitution-in-sort ) BCBCDAFDAEBCAEGABHI $.
substitution-160 $p #Substitution ( \and ( \in-sort kore-element-var-x0 \kore-sort-SortPgm ) \top ) ( \and ( \in-sort kore-element-var-From \kore-sort-SortPgm ) \top ) kore-element-var-x0 kore-element-var-From $= ( typecode-cache-Pattern-16 IMP-sort-26-is-pattern in-sort-is-pattern top-is-pattern typecode-cache-Pattern-21 element-var-is-var substitution-159 substitution-50 substitution-and ) BCBCDEFAGDEFAHABIABJK $.
substitution-161 $p #Substitution ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem kore-element-var-x0 ) ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem kore-element-var-From ) kore-element-var-x0 kore-element-var-From $= ( typecode-cache-Pattern-16 IMP-sort-26-is-pattern BASIC-K-sort-1-is-pattern element-var-is-var typecode-cache-Pattern-21 substitution-158 substitution-53 substitution-var-same substitution-kore-inj ) DEBCDEAGBCAFABHABIBCAFJK $.
substitution-162 $p #Substitution ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem kore-element-var-x0 ) ) ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem kore-element-var-From ) ) kore-element-var-x0 kore-element-var-From $= ( BASIC-K-sort-1-is-pattern typecode-cache-Pattern-2 typecode-cache-Pattern-3 IMP-sort-26-is-pattern typecode-cache-Pattern-16 kore-inj-is-pattern typecode-cache-Pattern-21 element-var-is-var substitution-53 substitution-52 substitution-54 substitution-161 substitution-kore-equals ) EAFBGHEDIJEAFBGHECKJDICLCDMACDNBCDOCDPQ $.
substitution-163 $p #Substitution ( \kore-exists \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem kore-element-var-x0 ) ) ) ( \kore-exists \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem kore-element-var-From ) ) ) kore-element-var-x0 kore-element-var-From $= ( BASIC-K-sort-1-is-pattern typecode-cache-Pattern-2 typecode-cache-Pattern-69 typecode-cache-Pattern-68 typecode-cache-Pattern-16 element-var-is-var substitution-53 substitution-52 substitution-162 substitution-kore-exists-alt ) EAFABDGEAFABCHDIBCJCDKACDLABCDMN $.
sorting-cache-110 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \in-sort ( \kore-dv \kore-sort-SortId "a" ) \kore-sort-SortId ) ( \in-sort \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids \kore-sort-SortIds ) ) ) $= ( IMP-sort-17-is-pattern in-sort-is-pattern typecode-cache-Pattern-2 kore-is-sort-is-pattern top-is-pattern and-is-pattern string-literal-11-is-pattern kore-dv-is-pattern IMP-symbol-111-is-pattern IMP-sort-0-is-pattern sorting-cache-104 sorting-cache-75 rule-and-intro-alt2-sugar ) ADEFGBHIBCJKCALAMN $.
sorting-cache-111 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \in-sort ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) \kore-sort-SortIds ) ) $= ( IMP-sort-17-is-pattern string-literal-11-is-pattern kore-dv-is-pattern in-sort-is-pattern IMP-symbol-111-is-pattern and-is-pattern IMP-sort-0-is-pattern typecode-cache-Pattern-2 kore-is-sort-is-pattern top-is-pattern IMP-symbol-148-is-pattern sorting-cache-110 IMP-symbol-148-sorting rule-imp-transitivity ) AIJKGBCDBEFHEGBCDFLHEAMBCDFNO $.
sorting-cache-112 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \in-sort ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) \kore-sort-SortPgm ) ) $= ( kore-dv-is-pattern IMP-sort-17-is-pattern string-literal-11-is-pattern IMP-sort-22-is-pattern in-sort-is-pattern IMP-symbol-111-is-pattern IMP-symbol-148-is-pattern IMP-sort-13-is-pattern string-literal-10-is-pattern kore-inj-is-pattern IMP-symbol-169-is-pattern and-is-pattern typecode-cache-Pattern-2 kore-is-sort-is-pattern top-is-pattern IMP-sort-0-is-pattern IMP-sort-30-is-pattern IMP-symbol-220-is-pattern IMP-sort-26-is-pattern sorting-cache-111 sorting-cache-105 rule-and-intro-alt2-sugar IMP-symbol-220-sorting rule-imp-transitivity ) ANOPMCDBGHQFCDBEIEJBKLRFMCDBGHCDBEIEJBKLSTFANOPMCDBGHQFCDBEIEJBKLRFAUAAUBUCCDBGHCDBEIEJBKLUDUE $.
sorting-rearrange-50 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) ) ) ) ) $= ( kore-dv-is-pattern IMP-sort-17-is-pattern string-literal-11-is-pattern IMP-sort-22-is-pattern typecode-cache-Pattern-2 kore-inj-is-pattern kore-element-var-From-elementvariable IMP-symbol-111-is-pattern IMP-symbol-148-is-pattern IMP-sort-13-is-pattern string-literal-10-is-pattern IMP-symbol-169-is-pattern IMP-symbol-220-is-pattern BASIC-K-sort-1-is-pattern IMP-sort-26-is-pattern top-is-pattern element-var-is-var and-is-pattern in-sort-is-pattern kore-exists-is-pattern kore-element-var-x0-elementvariable substitution-disjoint typecode-cache-Pattern-3 kore-valid-is-pattern kore-is-sort-is-pattern typecode-cache-Pattern-21 typecode-cache-Pattern-68 kore-equals-is-pattern typecode-cache-Pattern-16 typecode-cache-Pattern-69 rule-and-intro-alt2-sugar substitution-var-same substitution-kore-valid substitution-imp sorting-cache-58 sorting-cache-112 top-intro rule-weakening sorting-rearrange-48 sorting-rearrange-49 substitution-in-sort substitution-and substitution-kore-inj substitution-kore-equals substitution-kore-exists-alt substitution-160 substitution-52 substitution-163 functional-substitution-alt rule-imp-transitivity ) AGUGRTAGUGRTDECJKDECFLFMCHNOQUARTTAGPAGPAGBUEQPDECJKDECFLFMCHNOHUJBUBUFAGUGRTAGUGRTDECJKDECFLFMCHNOQUARTAUQAGUGRTDECJKDECFLFMCHNOQUARAURAGUGRTRUSUTUMUMDECJKDECFLFMCHNOAGPAGABIUIBUBUFAGPAGPAGBUEQPDECJKDECFLFMCHNOHUJBUBUFAGPAGABUCULBUBUFAGUGRTIUHQUARTDECJKDECFLFMCHNOQUARTUCUKQUARTBIUCABVAABIVBDECJKDECFLFMCHNODECJKDECFLFMCHNOQUARTAGPAGPAGBUEQPDECJKDECFLFMCHNOHUJBUBUFIUHQUARTAGPAGABIUIBUBUFISDECJKDECFLFMCHNODECJKDECFLFMCHNOQUARIUHQUARISDECJKDECFLFMCHNODECJKDECFLFMCHNOQIUHQISDECJKDECFLFMCHNOISUNQDECJKDECFLFMCHNOISUDVCRDECJKDECFLFMCHNOISUDVDAGPAGPAGBUEQPDECJKDECFLFMCHNOHUJBUBAGPAGABIUIBUBDECJKDECFLFMCHNOISAGDECJKDECFLFMCHNOISUDPAGPAGBUEQPDECJKDECFLFMCHNOHUJPAGABIUIDECJKDECFLFMCHNOBISPDECJKDECFLFMCHNOISUDAGDECJKDECFLFMCHNOISUDPAGBUEQPDECJKDECFLFMCHNOHPAGBUEQPIUHHDECJKDECFLFMCHNOISPDECJKDECFLFMCHNOISUDAGDECJKDECFLFMCHNOISUDBUEDECJKDECFLFMCHNOISUDQPDECJKDECFLFMCHNOQPIUHDECJKDECFLFMCHNOISQDECJKDECFLFMCHNOISUDPDECJKDECFLFMCHNOISUDDECJKDECFLFMCHNOISUNVEVFVGUOUPUCUKUCUKQUARTAGPAGABUCULBUBUFIUHQUARTAGPAGABIUIBUBUFISIUCVHAGPAGABUCULBUBAGPAGABIUIBUBUCUKISAIUCVIABIUCVJUOUPVKVL $.
sorting-rearrange-51 $p |- ( \imp \top ( \kore-valid \unit-sort ( \kore-exists \kore-sort-SortKItem \unit-sort kore-element-var-Val ( \kore-equals \kore-sort-SortKItem \unit-sort kore-element-var-Val ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) ) ) ) ) $= ( kore-dv-is-pattern BASIC-K-sort-1-is-pattern kore-sort-var-R-elementvariable IMP-sort-17-is-pattern string-literal-11-is-pattern IMP-sort-22-is-pattern kore-inj-is-pattern typecode-cache-Pattern-2 unit-sort-is-symbol symbol-is-pattern kore-sort-var-x0-elementvariable top-is-pattern IMP-sort-26-is-pattern IMP-symbol-111-is-pattern IMP-symbol-148-is-pattern IMP-sort-13-is-pattern string-literal-10-is-pattern IMP-symbol-169-is-pattern IMP-symbol-220-is-pattern typecode-cache-Pattern-6 typecode-cache-Pattern-3 and-is-pattern kore-equals-is-pattern element-var-is-var kore-is-sort-is-pattern kore-exists-is-pattern kore-valid-is-pattern substitution-var-same x-is-element-var rule-weakening top-intro rule-and-intro-alt2-sugar rule-imp-transitivity substitution-58 substitution-disjoint substitution-kore-equals substitution-kore-exists-alt substitution-kore-valid substitution-imp substitution-59 sorting-cache-49 typecode-cache-Pattern-1 exists-is-pattern unit-sort-is-functional sorting-cache-47 sorting-rearrange-50 substitution-2 substitution-4 substitution-9 substitution-11 functional-substitution-alt ) MMJKUFMUCUCJKCJKCJKAUBNCEFBOPEFBGQGRBHSTHUDAUGUHMMJKUFMUCMMULUKVBUMJKDICDICDIAUBNCEFBOPEFBGQGRBHSTHUDAUGUHJKCJKCJKAUBNCEFBOPEFBGQGRBHSTHUDAUGUHLUACLUACLUAAUBNCEFBOPEFBGQGRBHSTHUDAUGUHMDIUFMUCJKUFMUCLUAUFMUCUJDLMUJVCUJVDUJVEUKMDIUFMUCUCDIUFMUCDICDICDIAUBNCEFBOPEFBGQGRBHSTHUDAUGUHMDIUFMUCUCDIUFMDVFMDIUFMUCUCMULUKUMDAVGUNJKJKUFMUCJKCJKCJKAUBNCEFBOPEFBGQGRBHSTHUDAUGUHDIUFMUCDICDICDIAUBNCEFBOPEFBGQGRBHSTHUDAUGUHDUEDVHJKCJKCJKAUBNCEFBOPEFBGQGRBHSTHUDAUGDICDICDIAUBNCEFBOPEFBGQGRBHSTHUDAUGJKDUEJKDUEUICJKCJKAUBNCEFBOPEFBGQGRBHSTHUDCDICDIAUBNCEFBOPEFBGQGRBHSTHUDJKADUEDUOJKDUEUICJKAUBNCEFBOPEFBGQGRBHSTHCDIAUBNCEFBOPEFBGQGRBHSTHJKDUEDUOJKDUEUIDAVINCEFBOPEFBGQGRBHSTHJKDUEUPUQURUSUTLUALUAUFMUCLUACLUACLUAAUBNCEFBOPEFBGQGRBHSTHUDAUGUHDIUFMUCDICDICDIAUBNCEFBOPEFBGQGRBHSTHUDAUGUHDUEDLVJLUACLUACLUAAUBNCEFBOPEFBGQGRBHSTHUDAUGDICDICDIAUBNCEFBOPEFBGQGRBHSTHUDAUGLUADUELUADUEUICLUACLUAAUBNCEFBOPEFBGQGRBHSTHUDCDICDIAUBNCEFBOPEFBGQGRBHSTHUDLUAADUEDLVALUADUEUICLUAAUBNCEFBOPEFBGQGRBHSTHCDIAUBNCEFBOPEFBGQGRBHSTHLUADUEDLVALUADUEUIDALVKNCEFBOPEFBGQGRBHSTHLUADUEUPUQURUSUTVLUN $.
sorting-rearrange-52 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \exists kore-element-var-Val ( \eq kore-element-var-Val ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) ) ) ) $= ( kore-dv-is-pattern top-is-pattern IMP-sort-17-is-pattern string-literal-11-is-pattern IMP-sort-22-is-pattern kore-inj-is-pattern BASIC-K-sort-1-is-pattern typecode-cache-Pattern-2 kore-is-sort-is-pattern and-is-pattern IMP-sort-26-is-pattern IMP-symbol-111-is-pattern IMP-symbol-148-is-pattern IMP-sort-13-is-pattern string-literal-10-is-pattern IMP-symbol-169-is-pattern IMP-symbol-220-is-pattern typecode-cache-Pattern-3 eq-is-pattern exists-is-pattern top-intro rule-weakening sorting-cache-44 sorting-rearrange-51 kore-functional rule-imp-transitivity ) AJKDLDBTMIEFCNOEFCGPGQCHRSHUABUBAJKDLDUCUDIMIEFCNOEFCGPGQCHRSHDBUEBUFUGUH $.
sorting-cache-113 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortKItem ) \top ) ) ( \kore-is-sort kore-sort-var-R ) ) $= ( typecode-cache-Pattern-2 kore-is-sort-is-pattern top-is-pattern and-is-pattern typecode-cache-Pattern-25 BASIC-K-sort-1-is-pattern in-sort-is-pattern and-elim-left-sugar rule-imp-transitivity imp-reflexivity ) ACDEFBGHIEFFACDEFACDACDEFBGHIEFJACDEFACDACDACDEJACDLKK $.
sorting-cache-114 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortKItem ) \top ) ) ( \in-sort kore-element-var-K1 \kore-sort-SortKItem ) ) $= ( typecode-cache-Pattern-25 BASIC-K-sort-1-is-pattern in-sort-is-pattern top-is-pattern and-is-pattern typecode-cache-Pattern-2 kore-is-sort-is-pattern rule-imp-transitivity and-elim-right-sugar and-elim-left-sugar imp-reflexivity ) AHIFGBCDEFGGBCDEFGBCDEAHIFGBCDEFGKBCDEFGBCDEBCDEBCDEFLBCDEMJJ $.
sorting-cache-115 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortKItem ) \top ) ) ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortKItem ) \top ) ) ) $= ( and-is-pattern top-is-pattern typecode-cache-Pattern-25 BASIC-K-sort-1-is-pattern in-sort-is-pattern typecode-cache-Pattern-2 kore-is-sort-is-pattern rule-and-intro-alt2-sugar sorting-cache-113 sorting-cache-114 top-intro rule-weakening ) AHIDCBEFGDCCAHIBEFGDCABKAHIDCBEFGDCCBEFGDABLAHIDCBEFGDCCDMNJJ $.
typecode-cache-Pattern-70 $p #Pattern ( \kore-equals \kore-sort-SortMap kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) kore-element-var-x0 ) ) $= ( IMP-sort-20-is-pattern IMP-sort-14-is-pattern typecode-cache-Pattern-2 typecode-cache-Pattern-3 BASIC-K-sort-1-is-pattern string-literal-9-is-pattern kore-dv-is-pattern kore-inj-is-pattern typecode-cache-Pattern-16 IMP-symbol-196-is-pattern kore-equals-is-pattern ) EAFBGDHDIJKCLMN $.
substitution-164 $p #Substitution \kore-sort-SortKItem \kore-sort-SortKItem kore-element-var-x0 kore-element-var-K1 $= ( BASIC-K-sort-1-is-pattern typecode-cache-Pattern-16 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-165 $p #Substitution ( \in-sort kore-element-var-x0 \kore-sort-SortKItem ) ( \in-sort kore-element-var-K1 \kore-sort-SortKItem ) kore-element-var-x0 kore-element-var-K1 $= ( typecode-cache-Pattern-16 BASIC-K-sort-1-is-pattern element-var-is-var typecode-cache-Pattern-25 substitution-var-same substitution-164 substitution-in-sort ) BCBCDAFDAEBCAEGABHI $.
substitution-166 $p #Substitution ( \and ( \in-sort kore-element-var-x0 \kore-sort-SortKItem ) \top ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortKItem ) \top ) kore-element-var-x0 kore-element-var-K1 $= ( typecode-cache-Pattern-16 BASIC-K-sort-1-is-pattern in-sort-is-pattern top-is-pattern typecode-cache-Pattern-25 element-var-is-var substitution-165 substitution-103 substitution-and ) BCBCDEFAGDEFAHABIABJK $.
substitution-167 $p #Substitution \kore-sort-SortMap \kore-sort-SortMap kore-element-var-x0 kore-element-var-K1 $= ( IMP-sort-14-is-pattern typecode-cache-Pattern-16 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-168 $p #Substitution ( \kore-equals \kore-sort-SortMap kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) kore-element-var-x0 ) ) ( \kore-equals \kore-sort-SortMap kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) kore-element-var-K1 ) ) kore-element-var-x0 kore-element-var-K1 $= ( IMP-sort-20-is-pattern typecode-cache-Pattern-16 BASIC-K-sort-1-is-pattern string-literal-9-is-pattern kore-dv-is-pattern kore-inj-is-pattern element-var-is-var IMP-sort-14-is-pattern typecode-cache-Pattern-2 typecode-cache-Pattern-3 IMP-symbol-196-is-pattern typecode-cache-Pattern-25 substitution-167 substitution-105 substitution-106 substitution-disjoint substitution-var-same IMP-symbol-196-substitution substitution-kore-equals ) LAMBNEGEHIJDFOLAMBNEGEHIJCPODFCKCDQACDRBCDSCKDFEGEHIJDFEGEHIJCPEGEHIJDFCKTDFCKUAUBUC $.
sorting-cache-116 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-is-sort \kore-sort-SortPgm ) ) $= ( kore-is-sort-is-pattern IMP-sort-26-is-pattern typecode-cache-Pattern-2 top-is-pattern and-is-pattern imp-is-pattern proof-rule-prop-1 IMP-sort-26-sort proof-rule-mp ) CBADBEFCBGCBADBEFHIJ $.
sorting-cache-117 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-is-sort \kore-sort-SortKItem ) ) $= ( kore-is-sort-is-pattern BASIC-K-sort-1-is-pattern typecode-cache-Pattern-2 top-is-pattern and-is-pattern imp-is-pattern proof-rule-prop-1 BASIC-K-sort-1-sort proof-rule-mp ) CBADBEFCBGCBADBEFHIJ $.
sorting-cache-118 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \kore-is-sort \kore-sort-SortPgm ) ( \kore-is-sort \kore-sort-SortKItem ) ) ) $= ( kore-is-sort-is-pattern typecode-cache-Pattern-2 top-is-pattern and-is-pattern IMP-sort-26-is-pattern BASIC-K-sort-1-is-pattern sorting-cache-116 sorting-cache-117 rule-and-intro-alt2-sugar ) ACBDEFBGBAHAIJ $.
sorting-cache-119 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \in-sort ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) \kore-sort-SortKItem ) ) $= ( kore-dv-is-pattern IMP-sort-17-is-pattern string-literal-11-is-pattern IMP-sort-22-is-pattern kore-is-sort-is-pattern IMP-sort-26-is-pattern and-is-pattern BASIC-K-sort-1-is-pattern kore-inj-is-pattern IMP-symbol-111-is-pattern IMP-symbol-148-is-pattern IMP-sort-13-is-pattern string-literal-10-is-pattern IMP-symbol-169-is-pattern IMP-symbol-220-is-pattern in-sort-is-pattern typecode-cache-Pattern-2 top-is-pattern sorting-cache-118 sorting-cache-112 rule-and-intro-alt2-sugar INJ-symbol-0-sorting rule-imp-transitivity ) ARFSHGFIFHCDBKLCDBEMENBJOPGQHGICDBKLCDBEMENBJOPJIQARFSHGFIFHCDBKLCDBEMENBJOPGQATAUAUBGICDBKLCDBEMENBJOPUCUD $.
sorting-rearrange-53 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortMap kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortMap kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) ) ) ) ) ) $= ( kore-dv-is-pattern kore-inj-is-pattern IMP-sort-17-is-pattern string-literal-11-is-pattern IMP-sort-22-is-pattern BASIC-K-sort-1-is-pattern typecode-cache-Pattern-2 kore-element-var-K1-elementvariable IMP-sort-26-is-pattern IMP-symbol-111-is-pattern IMP-symbol-148-is-pattern IMP-sort-13-is-pattern string-literal-10-is-pattern IMP-symbol-169-is-pattern IMP-symbol-220-is-pattern IMP-sort-14-is-pattern top-is-pattern element-var-is-var and-is-pattern IMP-sort-20-is-pattern kore-element-var-x0-elementvariable in-sort-is-pattern kore-exists-is-pattern string-literal-9-is-pattern kore-valid-is-pattern substitution-disjoint kore-is-sort-is-pattern typecode-cache-Pattern-3 typecode-cache-Pattern-31 typecode-cache-Pattern-25 IMP-symbol-196-is-pattern kore-equals-is-pattern typecode-cache-Pattern-16 typecode-cache-Pattern-70 rule-and-intro-alt2-sugar rule-imp-transitivity substitution-var-same substitution-kore-exists-alt substitution-kore-valid substitution-imp substitution-105 sorting-cache-58 sorting-cache-119 top-intro rule-weakening sorting-rearrange-52 typecode-cache-Pattern-26 sorting-cache-115 sorting-rearrange-14 substitution-in-sort substitution-and IMP-symbol-196-substitution substitution-kore-equals substitution-166 substitution-167 substitution-168 functional-substitution-alt ) AIUISUAAIUISUAKHEFCLMEFCGNGOCDPQDHUDSUAUAAIRAIRAIBUJUBHUBUFCDKHEFCLMEFCGNGOCDPQDUMUNBUEUGAIUISUAAIUISUAKHEFCLMEFCGNGOCDPQDHUDSUAAVDAIUISUAKHEFCLMEFCGNGOCDPQDHUDSAVEAIUISUASVFVGUQUQKHEFCLMEFCGNGOCDPQDAIRAIABJUKBUEUGAIRAIRAIBUJUBHUBUFCDKHEFCLMEFCGNGOCDPQDUMUNBUEUGAIRAIABUCUPBUEUGAIUISUAJULHUDSUAKHEFCLMEFCGNGOCDPQDHUDSUAUCUOHUDSUABJUCABVHAIUISUAJULHUDSUAUAAJVIAIRAIABJUKBUEUGAJVJABJVKURKHEFCLMEFCGNGOCDPQDKHEFCLMEFCGNGOCDPQDHUDSUAAIRAIRAIBUJUBHUBUFCDKHEFCLMEFCGNGOCDPQDUMUNBUEUGJULHUDSUAAIRAIABJUKBUEUGJTKHEFCLMEFCGNGOCDPQDKHEFCLMEFCGNGOCDPQDHUDSJULHUDSJTKHEFCLMEFCGNGOCDPQDKHEFCLMEFCGNGOCDPQDHJULHJTKHEFCLMEFCGNGOCDPQDJTUSHKHEFCLMEFCGNGOCDPQDJTUHVLSKHEFCLMEFCGNGOCDPQDJTUHVMAIRAIRAIBUJUBHUBUFCDKHEFCLMEFCGNGOCDPQDUMUNBUEAIRAIABJUKBUEKHEFCLMEFCGNGOCDPQDJTAIKHEFCLMEFCGNGOCDPQDJTUHRAIRAIBUJUBHUBUFCDKHEFCLMEFCGNGOCDPQDUMUNRAIABJUKKHEFCLMEFCGNGOCDPQDBJTRKHEFCLMEFCGNGOCDPQDJTUHAIKHEFCLMEFCGNGOCDPQDJTUHRAIBUJUBHUBUFCDKHEFCLMEFCGNGOCDPQDUMRAIBUJUBHUBUFCDJULUMKHEFCLMEFCGNGOCDPQDJTRKHEFCLMEFCGNGOCDPQDJTUHAIKHEFCLMEFCGNGOCDPQDJTUHBUJKHEFCLMEFCGNGOCDPQDJTUHJTKHEFCLMEFCGNGOCDPQDUBHUBUFCDKHEFCLMEFCGNGOCDPQDUBHUBUFCDJULUBHUBUFCDKHEFCLMEFCGNGOCDPQDJTUHKHEFCLMEFCGNGOCDPQDJTUSVNVOUTVAVBUCUOUCUOHUDSUAAIRAIABUCUPBUEUGJULHUDSUAAIRAIABJUKBUEUGJTJUCVPAIRAIABUCUPBUEAIRAIABJUKBUEUCUOJTAJUCVCRAIABUCUPRAIABJUKUCUOBJTJUCVQAJUCVCABJUCVRUTVAVBVSUR $.
sorting-rearrange-54 $p |- ( \imp \top ( \kore-valid \unit-sort ( \kore-exists \kore-sort-SortMap \unit-sort kore-element-var-Val ( \kore-equals \kore-sort-SortMap \unit-sort kore-element-var-Val ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) ) ) ) ) ) $= ( kore-dv-is-pattern kore-inj-is-pattern kore-sort-var-R-elementvariable IMP-sort-20-is-pattern BASIC-K-sort-1-is-pattern IMP-sort-17-is-pattern string-literal-11-is-pattern IMP-sort-22-is-pattern IMP-sort-14-is-pattern typecode-cache-Pattern-2 unit-sort-is-symbol symbol-is-pattern kore-sort-var-x0-elementvariable top-is-pattern string-literal-9-is-pattern IMP-sort-26-is-pattern IMP-symbol-111-is-pattern IMP-symbol-148-is-pattern IMP-sort-13-is-pattern string-literal-10-is-pattern IMP-symbol-169-is-pattern IMP-symbol-220-is-pattern IMP-symbol-196-is-pattern typecode-cache-Pattern-6 typecode-cache-Pattern-3 and-is-pattern kore-equals-is-pattern element-var-is-var kore-is-sort-is-pattern kore-exists-is-pattern kore-valid-is-pattern substitution-var-same x-is-element-var rule-weakening top-intro rule-and-intro-alt2-sugar rule-imp-transitivity substitution-3 substitution-disjoint substitution-kore-equals substitution-kore-exists-alt substitution-kore-valid substitution-imp substitution-10 sorting-cache-49 typecode-cache-Pattern-1 exists-is-pattern unit-sort-is-functional sorting-cache-47 sorting-rearrange-53 substitution-2 substitution-4 substitution-9 substitution-11 functional-substitution-alt ) OOLMUJOUGUGLMJLMJLMAUFEFEPBCQFGHBRSGHBITIUABCUBUCCUDUHAUKULOOLMUJOUGOOUPUOVFUQLMDKJDKJDKAUFEFEPBCQFGHBRSGHBITIUABCUBUCCUDUHAUKULLMJLMJLMAUFEFEPBCQFGHBRSGHBITIUABCUBUCCUDUHAUKULNUEJNUEJNUEAUFEFEPBCQFGHBRSGHBITIUABCUBUCCUDUHAUKULODKUJOUGLMUJOUGNUEUJOUGUNDNOUNVGUNVHUNVIUOODKUJOUGUGDKUJOUGDKJDKJDKAUFEFEPBCQFGHBRSGHBITIUABCUBUCCUDUHAUKULODKUJOUGUGDKUJODVJODKUJOUGUGOUPUOUQDAVKURLMLMUJOUGLMJLMJLMAUFEFEPBCQFGHBRSGHBITIUABCUBUCCUDUHAUKULDKUJOUGDKJDKJDKAUFEFEPBCQFGHBRSGHBITIUABCUBUCCUDUHAUKULDUIDVLLMJLMJLMAUFEFEPBCQFGHBRSGHBITIUABCUBUCCUDUHAUKDKJDKJDKAUFEFEPBCQFGHBRSGHBITIUABCUBUCCUDUHAUKLMDUILMDUIUMJLMJLMAUFEFEPBCQFGHBRSGHBITIUABCUBUCCUDUHJDKJDKAUFEFEPBCQFGHBRSGHBITIUABCUBUCCUDUHLMADUIDUSLMDUIUMJLMAUFEFEPBCQFGHBRSGHBITIUABCUBUCCUDJDKAUFEFEPBCQFGHBRSGHBITIUABCUBUCCUDLMDUIDUSLMDUIUMDAVMEFEPBCQFGHBRSGHBITIUABCUBUCCUDLMDUIUTVAVBVCVDNUENUEUJOUGNUEJNUEJNUEAUFEFEPBCQFGHBRSGHBITIUABCUBUCCUDUHAUKULDKUJOUGDKJDKJDKAUFEFEPBCQFGHBRSGHBITIUABCUBUCCUDUHAUKULDUIDNVNNUEJNUEJNUEAUFEFEPBCQFGHBRSGHBITIUABCUBUCCUDUHAUKDKJDKJDKAUFEFEPBCQFGHBRSGHBITIUABCUBUCCUDUHAUKNUEDUINUEDUIUMJNUEJNUEAUFEFEPBCQFGHBRSGHBITIUABCUBUCCUDUHJDKJDKAUFEFEPBCQFGHBRSGHBITIUABCUBUCCUDUHNUEADUIDNVENUEDUIUMJNUEAUFEFEPBCQFGHBRSGHBITIUABCUBUCCUDJDKAUFEFEPBCQFGHBRSGHBITIUABCUBUCCUDNUEDUIDNVENUEDUIUMDANVOEFEPBCQFGHBRSGHBITIUABCUBUCCUDNUEDUIUTVAVBVCVDVPUR $.
sorting-rearrange-55 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \exists kore-element-var-Val ( \eq kore-element-var-Val ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) ) ) ) ) $= ( kore-dv-is-pattern kore-inj-is-pattern BASIC-K-sort-1-is-pattern IMP-sort-20-is-pattern IMP-sort-17-is-pattern string-literal-11-is-pattern IMP-sort-22-is-pattern top-is-pattern string-literal-9-is-pattern IMP-sort-26-is-pattern IMP-symbol-111-is-pattern IMP-symbol-148-is-pattern IMP-sort-13-is-pattern string-literal-10-is-pattern IMP-symbol-169-is-pattern IMP-symbol-220-is-pattern in-sort-is-pattern and-is-pattern IMP-symbol-196-is-pattern typecode-cache-Pattern-2 kore-is-sort-is-pattern IMP-sort-14-is-pattern rule-imp-transitivity typecode-cache-Pattern-3 eq-is-pattern exists-is-pattern top-intro rule-weakening sorting-cache-41 sorting-cache-44 rule-and-intro-alt2-sugar IMP-symbol-196-sorting sorting-rearrange-54 kore-functional ) AUBUCJTJBUFFEFKCDLEGHCMNGHCIOIPCDQRDUAUGBUHAUBUCJTJUIUJUDFEFKCDLEGHCMNGHCIOIPCDQRDUAJBJFEFKCDESLEGHCMNGHCIOIPCDQRDESTFEFKCDLEGHCMNGHCIOIPCDQRDUAUDSJFEFKCDESLEGHCMNGHCIOIPCDQRDESUKULUMFEFKCDLEGHCMNGHCIOIPCDQRDUNUEBUOUPUE $.
sorting-cache-120 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \in-sort kore-element-var-V2 \kore-sort-SortMap ) \top ) ) ( \kore-is-sort kore-sort-var-R ) ) $= ( typecode-cache-Pattern-2 kore-is-sort-is-pattern top-is-pattern and-is-pattern typecode-cache-Pattern-8 IMP-sort-14-is-pattern in-sort-is-pattern and-elim-left-sugar rule-imp-transitivity imp-reflexivity ) ACDEFBGHIEFFACDEFACDACDEFBGHIEFJACDEFACDACDACDEJACDLKK $.
sorting-cache-121 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \in-sort kore-element-var-V2 \kore-sort-SortMap ) \top ) ) ( \in-sort kore-element-var-V2 \kore-sort-SortMap ) ) $= ( typecode-cache-Pattern-8 IMP-sort-14-is-pattern in-sort-is-pattern top-is-pattern and-is-pattern typecode-cache-Pattern-2 kore-is-sort-is-pattern rule-imp-transitivity and-elim-right-sugar and-elim-left-sugar imp-reflexivity ) AHIFGBCDEFGGBCDEFGBCDEAHIFGBCDEFGKBCDEFGBCDEBCDEBCDEFLBCDEMJJ $.
sorting-cache-122 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \in-sort kore-element-var-V2 \kore-sort-SortMap ) \top ) ) ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-V2 \kore-sort-SortMap ) \top ) ) ) $= ( and-is-pattern top-is-pattern typecode-cache-Pattern-8 IMP-sort-14-is-pattern in-sort-is-pattern typecode-cache-Pattern-2 kore-is-sort-is-pattern rule-and-intro-alt2-sugar sorting-cache-120 sorting-cache-121 top-intro rule-weakening ) AHIDCBEFGDCCAHIBEFGDCABKAHIDCBEFGDCCBEFGDABLAHIDCBEFGDCCDMNJJ $.
sorting-rearrange-56 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \in-sort kore-element-var-V2 \kore-sort-SortMap ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortMap kore-sort-var-R kore-element-var-V0 ( \kore-equals \kore-sort-SortMap kore-sort-var-R kore-element-var-V0 ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map kore-element-var-V2 ) ) ) ) ) $= ( typecode-cache-Pattern-2 and-is-pattern top-is-pattern IMP-sort-14-is-pattern kore-is-sort-is-pattern typecode-cache-Pattern-8 in-sort-is-pattern typecode-cache-Pattern-9 typecode-cache-Pattern-15 kore-exists-is-pattern kore-valid-is-pattern sorting-cache-122 sorting-rearrange-4 rule-imp-transitivity ) ADHFECIGJFEEACKADGADABCLBMNACOABCPQ $.
typecode-cache-Pattern-71 $p #Pattern ( \kore-equals \kore-sort-SortMap kore-sort-var-R kore-element-var-V0 ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map kore-element-var-x0 ) ) $= ( IMP-sort-14-is-pattern typecode-cache-Pattern-2 typecode-cache-Pattern-12 IMP-symbol-112-is-pattern typecode-cache-Pattern-16 IMP-symbol-176-is-pattern kore-equals-is-pattern ) DAEBFGCHIJ $.
substitution-169 $p #Substitution \kore-sort-SortMap \kore-sort-SortMap kore-element-var-x0 kore-element-var-V2 $= ( IMP-sort-14-is-pattern typecode-cache-Pattern-16 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-170 $p #Substitution ( \in-sort kore-element-var-x0 \kore-sort-SortMap ) ( \in-sort kore-element-var-V2 \kore-sort-SortMap ) kore-element-var-x0 kore-element-var-V2 $= ( typecode-cache-Pattern-16 IMP-sort-14-is-pattern element-var-is-var typecode-cache-Pattern-8 substitution-var-same substitution-169 substitution-in-sort ) BCBCDAFDAEBCAEGABHI $.
substitution-171 $p #Substitution \top \top kore-element-var-x0 kore-element-var-V2 $= ( top-is-pattern typecode-cache-Pattern-16 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-172 $p #Substitution ( \and ( \in-sort kore-element-var-x0 \kore-sort-SortMap ) \top ) ( \and ( \in-sort kore-element-var-V2 \kore-sort-SortMap ) \top ) kore-element-var-x0 kore-element-var-V2 $= ( typecode-cache-Pattern-16 IMP-sort-14-is-pattern in-sort-is-pattern top-is-pattern typecode-cache-Pattern-8 element-var-is-var substitution-170 substitution-171 substitution-and ) BCBCDEFAGDEFAHABIABJK $.
substitution-173 $p #Substitution kore-sort-var-R kore-sort-var-R kore-element-var-x0 kore-element-var-V2 $= ( typecode-cache-Pattern-2 typecode-cache-Pattern-16 element-var-is-var substitution-disjoint ) ADCEBFG $.
substitution-174 $p #Substitution kore-element-var-V0 kore-element-var-V0 kore-element-var-x0 kore-element-var-V2 $= ( typecode-cache-Pattern-12 typecode-cache-Pattern-16 element-var-is-var substitution-disjoint ) ADCEBFG $.
substitution-175 $p #Substitution \kore-symbol-Lbl'Stop'Map \kore-symbol-Lbl'Stop'Map kore-element-var-x0 kore-element-var-V2 $= ( IMP-symbol-112-is-pattern typecode-cache-Pattern-16 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-176 $p #Substitution ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map kore-element-var-x0 ) ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map kore-element-var-V2 ) kore-element-var-x0 kore-element-var-V2 $= ( typecode-cache-Pattern-16 element-var-is-var IMP-symbol-112-is-pattern typecode-cache-Pattern-8 substitution-175 substitution-var-same IMP-symbol-176-substitution ) ADBCEBCEAFABGBCADHI $.
substitution-177 $p #Substitution ( \kore-equals \kore-sort-SortMap kore-sort-var-R kore-element-var-V0 ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map kore-element-var-x0 ) ) ( \kore-equals \kore-sort-SortMap kore-sort-var-R kore-element-var-V0 ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map kore-element-var-V2 ) ) kore-element-var-x0 kore-element-var-V2 $= ( IMP-sort-14-is-pattern typecode-cache-Pattern-2 typecode-cache-Pattern-12 IMP-symbol-112-is-pattern typecode-cache-Pattern-16 IMP-symbol-176-is-pattern typecode-cache-Pattern-8 element-var-is-var substitution-169 substitution-173 substitution-174 substitution-176 substitution-kore-equals ) EAFBGHDIJEAFBGHCKJDICLCDMACDNBCDOCDPQ $.
substitution-178 $p #Substitution ( \kore-exists \kore-sort-SortMap kore-sort-var-R kore-element-var-V0 ( \kore-equals \kore-sort-SortMap kore-sort-var-R kore-element-var-V0 ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map kore-element-var-x0 ) ) ) ( \kore-exists \kore-sort-SortMap kore-sort-var-R kore-element-var-V0 ( \kore-equals \kore-sort-SortMap kore-sort-var-R kore-element-var-V0 ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map kore-element-var-V2 ) ) ) kore-element-var-x0 kore-element-var-V2 $= ( IMP-sort-14-is-pattern typecode-cache-Pattern-2 typecode-cache-Pattern-71 typecode-cache-Pattern-15 typecode-cache-Pattern-16 element-var-is-var substitution-169 substitution-173 substitution-177 substitution-kore-exists-alt ) EAFABDGEAFABCHDIBCJCDKACDLABCDMN $.
sorting-cache-123 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-is-sort \kore-sort-SortKConfigVar ) ) $= ( kore-is-sort-is-pattern IMP-sort-20-is-pattern typecode-cache-Pattern-2 top-is-pattern and-is-pattern imp-is-pattern proof-rule-prop-1 IMP-sort-20-sort proof-rule-mp ) CBADBEFCBGCBADBEFHIJ $.
sorting-cache-124 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \kore-is-sort \kore-sort-SortKConfigVar ) ( \kore-is-sort \kore-sort-SortKItem ) ) ) $= ( kore-is-sort-is-pattern typecode-cache-Pattern-2 top-is-pattern and-is-pattern IMP-sort-20-is-pattern BASIC-K-sort-1-is-pattern sorting-cache-123 sorting-cache-117 rule-and-intro-alt2-sugar ) ACBDEFBGBAHAIJ $.
sorting-cache-125 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \and ( \kore-is-sort \kore-sort-SortKConfigVar ) ( \kore-is-sort \kore-sort-SortKItem ) ) ( \in-sort ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) \kore-sort-SortKConfigVar ) ) ) $= ( kore-is-sort-is-pattern IMP-sort-20-is-pattern and-is-pattern typecode-cache-Pattern-2 top-is-pattern BASIC-K-sort-1-is-pattern string-literal-9-is-pattern kore-dv-is-pattern in-sort-is-pattern sorting-cache-124 sorting-cache-59 rule-and-intro-alt2-sugar ) AEBFDCBGBDCHICJAKALM $.
sorting-cache-126 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \in-sort ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) \kore-sort-SortKItem ) ) $= ( IMP-sort-20-is-pattern BASIC-K-sort-1-is-pattern kore-is-sort-is-pattern and-is-pattern string-literal-9-is-pattern kore-dv-is-pattern in-sort-is-pattern typecode-cache-Pattern-2 top-is-pattern kore-inj-is-pattern sorting-cache-125 INJ-symbol-0-sorting rule-imp-transitivity ) AIDJEBDCDEBFGBHEBCBFGKCHALBCBFGMN $.
sorting-cache-127 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \in-sort ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) ) \kore-sort-SortMap ) ) $= ( kore-dv-is-pattern BASIC-K-sort-1-is-pattern kore-inj-is-pattern IMP-sort-20-is-pattern IMP-sort-17-is-pattern string-literal-11-is-pattern IMP-sort-22-is-pattern in-sort-is-pattern string-literal-9-is-pattern IMP-sort-26-is-pattern IMP-symbol-111-is-pattern IMP-symbol-148-is-pattern IMP-sort-13-is-pattern string-literal-10-is-pattern IMP-symbol-169-is-pattern IMP-symbol-220-is-pattern and-is-pattern typecode-cache-Pattern-2 kore-is-sort-is-pattern top-is-pattern IMP-symbol-196-is-pattern IMP-sort-14-is-pattern sorting-cache-126 sorting-cache-119 rule-and-intro-alt2-sugar IMP-symbol-196-sorting rule-imp-transitivity ) ASTUARECEJBDCIKCFGBLMFGBHNHOBDPQDCIRECEJBDKCFGBLMFGBHNHOBDPQDUBUCIASTUARECEJBDCIKCFGBLMFGBHNHOBDPQDCIAUDAUEUFECEJBDKCFGBLMFGBHNHOBDPQDUGUH $.
sorting-rearrange-57 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortMap kore-sort-var-R kore-element-var-V0 ( \kore-equals \kore-sort-SortMap kore-sort-var-R kore-element-var-V0 ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) ) ) ) ) ) ) $= ( kore-dv-is-pattern kore-inj-is-pattern IMP-sort-20-is-pattern BASIC-K-sort-1-is-pattern IMP-sort-17-is-pattern string-literal-11-is-pattern IMP-sort-22-is-pattern typecode-cache-Pattern-2 IMP-sort-14-is-pattern kore-element-var-V2-elementvariable string-literal-9-is-pattern IMP-sort-26-is-pattern IMP-symbol-111-is-pattern IMP-symbol-148-is-pattern IMP-sort-13-is-pattern string-literal-10-is-pattern IMP-symbol-169-is-pattern IMP-symbol-220-is-pattern IMP-symbol-196-is-pattern top-is-pattern element-var-is-var and-is-pattern in-sort-is-pattern kore-exists-is-pattern kore-element-var-x0-elementvariable IMP-symbol-112-is-pattern substitution-disjoint typecode-cache-Pattern-12 kore-valid-is-pattern kore-is-sort-is-pattern IMP-symbol-176-is-pattern typecode-cache-Pattern-8 typecode-cache-Pattern-15 kore-equals-is-pattern typecode-cache-Pattern-16 typecode-cache-Pattern-71 rule-and-intro-alt2-sugar kore-element-var-Val-elementvariable substitution-var-same substitution-kore-valid substitution-imp sorting-cache-58 sorting-cache-127 top-intro rule-weakening sorting-rearrange-55 sorting-rearrange-56 substitution-in-sort substitution-and IMP-symbol-176-substitution substitution-kore-equals substitution-kore-exists-alt substitution-172 substitution-173 substitution-178 functional-substitution-alt rule-imp-transitivity ) AJULUBUDAJULUBUDEFEMCDNFGHCOPGHCIQIRCDSTDUAKUEUBUDUDAJKAJKAJBUJUHEFEMCDNFGHCOPGHCIQIRCDSTDUAUMUPBUFUKAJULUBUDAJULUBUDEFEMCDNFGHCOPGHCIQIRCDSTDUAKUEUBUDAVDAJULUBUDEFEMCDNFGHCOPGHCIQIRCDSTDUAKUEUBAVEAJULUBUDUBVFVGUSUSEFEMCDNFGHCOPGHCIQIRCDSTDUAAJKAJABLUOBUFUKAJKAJKAJBUJUHEFEMCDNFGHCOPGHCIQIRCDSTDUAUMUPBUFUKAJKAJABUGURBUFUKAJULUBUDLUNKUEUBUDEFEMCDNFGHCOPGHCIQIRCDSTDUAKUEUBUDUGUQKUEUBUDUTLUGAUTVHABLVIEFEMCDNFGHCOPGHCIQIRCDSTDUAEFEMCDNFGHCOPGHCIQIRCDSTDUAKUEUBUDAJKAJKAJBUJUHEFEMCDNFGHCOPGHCIQIRCDSTDUAUMUPBUFUKLUNKUEUBUDAJKAJABLUOBUFUKLUCEFEMCDNFGHCOPGHCIQIRCDSTDUAEFEMCDNFGHCOPGHCIQIRCDSTDUAKUEUBLUNKUEUBLUCEFEMCDNFGHCOPGHCIQIRCDSTDUAEFEMCDNFGHCOPGHCIQIRCDSTDUAKLUNKLUCEFEMCDNFGHCOPGHCIQIRCDSTDUALUCVAKEFEMCDNFGHCOPGHCIQIRCDSTDUALUCUIVJUBEFEMCDNFGHCOPGHCIQIRCDSTDUALUCUIVKAJKAJKAJBUJUHEFEMCDNFGHCOPGHCIQIRCDSTDUAUMUPBUFAJKAJABLUOBUFEFEMCDNFGHCOPGHCIQIRCDSTDUALUCAJEFEMCDNFGHCOPGHCIQIRCDSTDUALUCUIKAJKAJBUJUHEFEMCDNFGHCOPGHCIQIRCDSTDUAUMUPKAJABLUOEFEMCDNFGHCOPGHCIQIRCDSTDUABLUCKEFEMCDNFGHCOPGHCIQIRCDSTDUALUCUIAJEFEMCDNFGHCOPGHCIQIRCDSTDUALUCUIKAJBUJUHEFEMCDNFGHCOPGHCIQIRCDSTDUAUMKAJBUJUHLUNUMEFEMCDNFGHCOPGHCIQIRCDSTDUALUCKEFEMCDNFGHCOPGHCIQIRCDSTDUALUCUIAJEFEMCDNFGHCOPGHCIQIRCDSTDUALUCUIBUJEFEMCDNFGHCOPGHCIQIRCDSTDUALUCUILUCEFEMCDNFGHCOPGHCIQIRCDSTDUAUHEFEMCDNFGHCOPGHCIQIRCDSTDUAUHLUNUHEFEMCDNFGHCOPGHCIQIRCDSTDUALUCUIEFEMCDNFGHCOPGHCIQIRCDSTDUALUCVAVLVMVNVBVCUGUQUGUQKUEUBUDAJKAJABUGURBUFUKLUNKUEUBUDAJKAJABLUOBUFUKLUCLUGVOAJKAJABUGURBUFAJKAJABLUOBUFUGUQLUCALUGVPABLUGVQVBVCVRVS $.
substitution-179 $p #Substitution kore-element-var-V0 kore-element-var-V0 \unit-sort kore-sort-var-R $= ( typecode-cache-Pattern-12 unit-sort-is-symbol symbol-is-pattern element-var-is-var substitution-disjoint ) BCDEAFG $.
substitution-180 $p #Substitution kore-element-var-V0 kore-element-var-V0 kore-sort-var-x0 kore-sort-var-R $= ( typecode-cache-Pattern-12 typecode-cache-Pattern-6 element-var-is-var substitution-disjoint ) BDCEAFG $.
sorting-rearrange-58 $p |- ( \imp \top ( \kore-valid \unit-sort ( \kore-exists \kore-sort-SortMap \unit-sort kore-element-var-V0 ( \kore-equals \kore-sort-SortMap \unit-sort kore-element-var-V0 ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) ) ) ) ) ) ) $= ( kore-dv-is-pattern kore-inj-is-pattern kore-sort-var-R-elementvariable IMP-sort-20-is-pattern BASIC-K-sort-1-is-pattern IMP-sort-17-is-pattern string-literal-11-is-pattern IMP-sort-22-is-pattern IMP-sort-14-is-pattern typecode-cache-Pattern-2 unit-sort-is-symbol symbol-is-pattern kore-sort-var-x0-elementvariable top-is-pattern IMP-symbol-112-is-pattern string-literal-9-is-pattern IMP-sort-26-is-pattern IMP-symbol-111-is-pattern IMP-symbol-148-is-pattern IMP-sort-13-is-pattern string-literal-10-is-pattern IMP-symbol-169-is-pattern IMP-symbol-220-is-pattern IMP-symbol-196-is-pattern IMP-symbol-176-is-pattern typecode-cache-Pattern-6 typecode-cache-Pattern-12 and-is-pattern kore-equals-is-pattern element-var-is-var kore-is-sort-is-pattern kore-exists-is-pattern kore-valid-is-pattern substitution-var-same x-is-element-var rule-weakening top-intro rule-and-intro-alt2-sugar rule-imp-transitivity substitution-3 substitution-disjoint substitution-kore-equals substitution-kore-exists-alt substitution-kore-valid substitution-imp substitution-10 sorting-cache-49 typecode-cache-Pattern-1 exists-is-pattern unit-sort-is-functional sorting-cache-47 sorting-rearrange-57 substitution-2 substitution-179 substitution-9 substitution-180 functional-substitution-alt ) OOLMULOUIUILMJLMJLMAUHPEFEQBCRFGHBSTGHBIUAIUBBCUCUDCUEUFUJAUMUNOOLMULOUIOOURUQVHUSLMDKJDKJDKAUHPEFEQBCRFGHBSTGHBIUAIUBBCUCUDCUEUFUJAUMUNLMJLMJLMAUHPEFEQBCRFGHBSTGHBIUAIUBBCUCUDCUEUFUJAUMUNNUGJNUGJNUGAUHPEFEQBCRFGHBSTGHBIUAIUBBCUCUDCUEUFUJAUMUNODKULOUILMULOUINUGULOUIUPDNOUPVIUPVJUPVKUQODKULOUIUIDKULOUIDKJDKJDKAUHPEFEQBCRFGHBSTGHBIUAIUBBCUCUDCUEUFUJAUMUNODKULOUIUIDKULODVLODKULOUIUIOURUQUSDAVMUTLMLMULOUILMJLMJLMAUHPEFEQBCRFGHBSTGHBIUAIUBBCUCUDCUEUFUJAUMUNDKULOUIDKJDKJDKAUHPEFEQBCRFGHBSTGHBIUAIUBBCUCUDCUEUFUJAUMUNDUKDVNLMJLMJLMAUHPEFEQBCRFGHBSTGHBIUAIUBBCUCUDCUEUFUJAUMDKJDKJDKAUHPEFEQBCRFGHBSTGHBIUAIUBBCUCUDCUEUFUJAUMLMDUKLMDUKUOJLMJLMAUHPEFEQBCRFGHBSTGHBIUAIUBBCUCUDCUEUFUJJDKJDKAUHPEFEQBCRFGHBSTGHBIUAIUBBCUCUDCUEUFUJLMADUKDVALMDUKUOJLMAUHPEFEQBCRFGHBSTGHBIUAIUBBCUCUDCUEUFJDKAUHPEFEQBCRFGHBSTGHBIUAIUBBCUCUDCUEUFLMDUKDVALMDUKUODAVOPEFEQBCRFGHBSTGHBIUAIUBBCUCUDCUEUFLMDUKVBVCVDVEVFNUGNUGULOUINUGJNUGJNUGAUHPEFEQBCRFGHBSTGHBIUAIUBBCUCUDCUEUFUJAUMUNDKULOUIDKJDKJDKAUHPEFEQBCRFGHBSTGHBIUAIUBBCUCUDCUEUFUJAUMUNDUKDNVPNUGJNUGJNUGAUHPEFEQBCRFGHBSTGHBIUAIUBBCUCUDCUEUFUJAUMDKJDKJDKAUHPEFEQBCRFGHBSTGHBIUAIUBBCUCUDCUEUFUJAUMNUGDUKNUGDUKUOJNUGJNUGAUHPEFEQBCRFGHBSTGHBIUAIUBBCUCUDCUEUFUJJDKJDKAUHPEFEQBCRFGHBSTGHBIUAIUBBCUCUDCUEUFUJNUGADUKDNVGNUGDUKUOJNUGAUHPEFEQBCRFGHBSTGHBIUAIUBBCUCUDCUEUFJDKAUHPEFEQBCRFGHBSTGHBIUAIUBBCUCUDCUEUFNUGDUKDNVGNUGDUKUODANVQPEFEQBCRFGHBSTGHBIUAIUBBCUCUDCUEUFNUGDUKVBVCVDVEVFVRUT $.
typecode-cache-Pattern-72 $p #Pattern kore-element-var-VE1 $= ( element-var-is-var var-is-pattern ) ABC $.
typecode-cache-Pattern-73 $p #Pattern ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortMap ) \top ) ) $= ( and-is-pattern typecode-cache-Pattern-2 kore-is-sort-is-pattern typecode-cache-Pattern-72 IMP-sort-14-is-pattern in-sort-is-pattern top-is-pattern ) ADEBFGHICC $.
typecode-cache-Pattern-74 $p #Pattern kore-element-var-VE0 $= ( element-var-is-var var-is-pattern ) ABC $.
sorting-cache-128 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortMap ) \top ) ) ( \kore-is-sort kore-sort-var-R ) ) $= ( typecode-cache-Pattern-2 kore-is-sort-is-pattern typecode-cache-Pattern-73 typecode-cache-Pattern-72 IMP-sort-14-is-pattern in-sort-is-pattern top-is-pattern and-is-pattern and-elim-left-sugar imp-reflexivity rule-imp-transitivity ) ABEACDACDACDBFGHIJKACDLM $.
sorting-cache-129 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortMap ) \top ) ) ( \in-sort kore-element-var-VE1 \kore-sort-SortMap ) ) $= ( typecode-cache-Pattern-72 IMP-sort-14-is-pattern in-sort-is-pattern top-is-pattern and-is-pattern rule-imp-transitivity typecode-cache-Pattern-73 typecode-cache-Pattern-2 kore-is-sort-is-pattern and-elim-right-sugar and-elim-left-sugar imp-reflexivity ) ABIBCDEFGBCDEAJKBCDEFGLBCDEFGBCDEBCDEBCDEFMBCDENHH $.
sorting-cache-130 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortMap ) \top ) ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortMap ) \top ) ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortMap ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortMap ) \top ) ) ) $= ( IMP-sort-14-is-pattern in-sort-is-pattern typecode-cache-Pattern-74 and-is-pattern top-is-pattern typecode-cache-Pattern-73 typecode-cache-Pattern-72 rule-imp-transitivity and-elim-left-sugar rule-and-intro-alt2-sugar and-elim-right-sugar imp-reflexivity sorting-cache-129 top-intro rule-weakening ) ACIBFDEHGGBFDECJDEHGACIBFDEHGGBFDEHGBFDEACIBFDEHGNBFDEHGBFDEBFDEBFDEHLBFDEOKKACIBFDEHGGCJDEHACIBFDEHGGACICJDEACIBFDEHGLACPKACIBFDEHGGHQRMM $.
typecode-cache-Pattern-75 $p #Pattern ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortMap ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortMap ) \top ) ) ) $= ( and-is-pattern IMP-sort-14-is-pattern in-sort-is-pattern typecode-cache-Pattern-2 kore-is-sort-is-pattern typecode-cache-Pattern-74 typecode-cache-Pattern-72 top-is-pattern ) AGHBIEFCJEFKDDD $.
typecode-cache-Pattern-76 $p #Pattern ( \kore-in \kore-sort-SortMap kore-sort-var-R kore-element-var-VE0 kore-element-var-VE1 ) $= ( IMP-sort-14-is-pattern typecode-cache-Pattern-2 typecode-cache-Pattern-74 typecode-cache-Pattern-72 kore-in-is-pattern ) DAEBFCGH $.
typecode-cache-Pattern-77 $p #Pattern ( \kore-equals \kore-sort-SortGeneratedTopCell kore-sort-var-R ( \kore-symbol-LblinitGeneratedTopCell kore-element-var-VE0 ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-LblinitTCell kore-element-var-VE1 ) \kore-symbol-LblinitGeneratedCounterCell ) ) $= ( IMP-sort-8-is-pattern typecode-cache-Pattern-2 typecode-cache-Pattern-74 IMP-symbol-216-is-pattern typecode-cache-Pattern-72 IMP-symbol-219-is-pattern IMP-symbol-215-is-pattern IMP-symbol-117-is-pattern kore-equals-is-pattern ) DAEBFGCHIJKL $.
sorting-rearrange-59 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortMap ) \top ) ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortMap ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortMap kore-sort-var-R kore-element-var-VE0 kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortGeneratedTopCell kore-sort-var-R ( \kore-symbol-LblinitGeneratedTopCell kore-element-var-VE0 ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-LblinitTCell kore-element-var-VE1 ) \kore-symbol-LblinitGeneratedCounterCell ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $= ( typecode-cache-Pattern-2 and-is-pattern IMP-sort-14-is-pattern in-sort-is-pattern typecode-cache-Pattern-73 typecode-cache-Pattern-74 top-is-pattern kore-top-is-pattern kore-and-is-pattern kore-is-sort-is-pattern rule-imp-transitivity typecode-cache-Pattern-75 typecode-cache-Pattern-76 typecode-cache-Pattern-77 kore-implies-is-pattern kore-valid-is-pattern typecode-cache-Pattern-72 and-elim-left-sugar sorting-cache-128 sorting-cache-130 rule-and-intro-alt2-sugar IMP-axiom-2951 ) ACHBIFGJEEABCOADADADADKADABCPADKLLADABCQADKLRSACHBIFGJEEADMBIFGCTFGJEEACHBIFGJEEACHADMACHBIFGJEUAACUBNABCUCUDABCUEN $.
typecode-cache-Pattern-78 $p #Pattern ( \kore-in \kore-sort-SortMap kore-sort-var-R kore-element-var-x0 kore-element-var-VE1 ) $= ( IMP-sort-14-is-pattern typecode-cache-Pattern-2 typecode-cache-Pattern-16 typecode-cache-Pattern-72 kore-in-is-pattern ) DAECFBGH $.
typecode-cache-Pattern-79 $p #Pattern ( \kore-equals \kore-sort-SortGeneratedTopCell kore-sort-var-R ( \kore-symbol-LblinitGeneratedTopCell kore-element-var-x0 ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-LblinitTCell kore-element-var-VE1 ) \kore-symbol-LblinitGeneratedCounterCell ) ) $= ( IMP-sort-8-is-pattern typecode-cache-Pattern-2 typecode-cache-Pattern-16 IMP-symbol-216-is-pattern typecode-cache-Pattern-72 IMP-symbol-219-is-pattern IMP-symbol-215-is-pattern IMP-symbol-117-is-pattern kore-equals-is-pattern ) DAECFGBHIJKL $.
substitution-181 $p #Substitution \kore-sort-SortMap \kore-sort-SortMap kore-element-var-x0 kore-element-var-VE0 $= ( IMP-sort-14-is-pattern typecode-cache-Pattern-16 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-182 $p #Substitution ( \in-sort kore-element-var-x0 \kore-sort-SortMap ) ( \in-sort kore-element-var-VE0 \kore-sort-SortMap ) kore-element-var-x0 kore-element-var-VE0 $= ( typecode-cache-Pattern-16 IMP-sort-14-is-pattern element-var-is-var typecode-cache-Pattern-74 substitution-var-same substitution-181 substitution-in-sort ) BCBCDAFDAEBCAEGABHI $.
substitution-183 $p #Substitution \top \top kore-element-var-x0 kore-element-var-VE0 $= ( top-is-pattern typecode-cache-Pattern-16 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-184 $p #Substitution ( \and ( \in-sort kore-element-var-x0 \kore-sort-SortMap ) \top ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortMap ) \top ) kore-element-var-x0 kore-element-var-VE0 $= ( typecode-cache-Pattern-16 IMP-sort-14-is-pattern in-sort-is-pattern top-is-pattern typecode-cache-Pattern-74 element-var-is-var substitution-182 substitution-183 substitution-and ) BCBCDEFAGDEFAHABIABJK $.
substitution-185 $p #Substitution kore-sort-var-R kore-sort-var-R kore-element-var-x0 kore-element-var-VE0 $= ( typecode-cache-Pattern-2 typecode-cache-Pattern-16 element-var-is-var substitution-disjoint ) ADCEBFG $.
substitution-186 $p #Substitution ( \kore-top kore-sort-var-R ) ( \kore-top kore-sort-var-R ) kore-element-var-x0 kore-element-var-VE0 $= ( typecode-cache-Pattern-2 kore-top-is-pattern typecode-cache-Pattern-16 element-var-is-var substitution-disjoint ) ADECFBGH $.
substitution-187 $p #Substitution kore-element-var-VE1 kore-element-var-VE1 kore-element-var-x0 kore-element-var-VE0 $= ( typecode-cache-Pattern-72 typecode-cache-Pattern-16 element-var-is-var substitution-disjoint ) BDCEAFG $.
substitution-188 $p #Substitution ( \kore-in \kore-sort-SortMap kore-sort-var-R kore-element-var-x0 kore-element-var-VE1 ) ( \kore-in \kore-sort-SortMap kore-sort-var-R kore-element-var-VE0 kore-element-var-VE1 ) kore-element-var-x0 kore-element-var-VE0 $= ( typecode-cache-Pattern-16 IMP-sort-14-is-pattern typecode-cache-Pattern-2 typecode-cache-Pattern-72 element-var-is-var typecode-cache-Pattern-74 substitution-181 substitution-185 substitution-var-same substitution-187 substitution-kore-in ) FAGDECHFAGBJCHDEBIBDKABDLDEBIMBCDNO $.
substitution-189 $p #Substitution ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortMap kore-sort-var-R kore-element-var-x0 kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortMap kore-sort-var-R kore-element-var-VE0 kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) kore-element-var-x0 kore-element-var-VE0 $= ( typecode-cache-Pattern-2 kore-top-is-pattern typecode-cache-Pattern-78 typecode-cache-Pattern-76 typecode-cache-Pattern-16 element-var-is-var substitution-185 substitution-188 substitution-186 substitution-kore-and ) AEACDGAEFAEABCHAEFDIBJABDKABCDLABDMN $.
substitution-190 $p #Substitution ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortMap kore-sort-var-R kore-element-var-x0 kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortMap kore-sort-var-R kore-element-var-VE0 kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) kore-element-var-x0 kore-element-var-VE0 $= ( typecode-cache-Pattern-2 kore-top-is-pattern kore-and-is-pattern typecode-cache-Pattern-78 typecode-cache-Pattern-76 typecode-cache-Pattern-16 element-var-is-var substitution-185 substitution-186 substitution-189 substitution-kore-and ) AEAEFAEACDHAEFGAEAEFAEABCIAEFGDJBKABDLABDMABCDNO $.
substitution-191 $p #Substitution \kore-sort-SortGeneratedTopCell \kore-sort-SortGeneratedTopCell kore-element-var-x0 kore-element-var-VE0 $= ( IMP-sort-8-is-pattern typecode-cache-Pattern-16 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-192 $p #Substitution ( \kore-symbol-LblinitGeneratedTopCell kore-element-var-x0 ) ( \kore-symbol-LblinitGeneratedTopCell kore-element-var-VE0 ) kore-element-var-x0 kore-element-var-VE0 $= ( typecode-cache-Pattern-16 element-var-is-var typecode-cache-Pattern-74 substitution-var-same IMP-symbol-216-substitution ) ADBCBCAEBCADFG $.
substitution-193 $p #Substitution ( \kore-equals \kore-sort-SortGeneratedTopCell kore-sort-var-R ( \kore-symbol-LblinitGeneratedTopCell kore-element-var-x0 ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-LblinitTCell kore-element-var-VE1 ) \kore-symbol-LblinitGeneratedCounterCell ) ) ( \kore-equals \kore-sort-SortGeneratedTopCell kore-sort-var-R ( \kore-symbol-LblinitGeneratedTopCell kore-element-var-VE0 ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-LblinitTCell kore-element-var-VE1 ) \kore-symbol-LblinitGeneratedCounterCell ) ) kore-element-var-x0 kore-element-var-VE0 $= ( typecode-cache-Pattern-16 typecode-cache-Pattern-72 IMP-symbol-219-is-pattern IMP-symbol-215-is-pattern IMP-symbol-117-is-pattern IMP-sort-8-is-pattern typecode-cache-Pattern-2 IMP-symbol-216-is-pattern element-var-is-var typecode-cache-Pattern-74 substitution-191 substitution-185 substitution-192 substitution-disjoint substitution-kore-equals ) JAKDELCFGHIJAKBNLCFGHIDEBMBDOABDPBDQCFGHIDEBMRS $.
sorting-cache-131 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortMap ) \top ) ) ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortMap ) \top ) ) ) $= ( typecode-cache-Pattern-73 top-is-pattern typecode-cache-Pattern-72 IMP-sort-14-is-pattern in-sort-is-pattern rule-and-intro-alt2-sugar typecode-cache-Pattern-2 kore-is-sort-is-pattern and-is-pattern sorting-cache-128 sorting-cache-129 top-intro rule-weakening ) ABCAIJBEFGDKABLABCBEFGDABMABCDNOHH $.
sorting-cache-132 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortMap ) \top ) ) ( \and ( \kore-is-sort \kore-sort-SortKConfigVar ) ( \kore-is-sort \kore-sort-SortKItem ) ) ) $= ( kore-is-sort-is-pattern typecode-cache-Pattern-73 IMP-sort-20-is-pattern BASIC-K-sort-1-is-pattern imp-is-pattern proof-rule-prop-1 proof-rule-mp IMP-sort-20-sort BASIC-K-sort-1-sort rule-and-intro-alt2-sugar ) ABDECFCECABDECGECABDHJIFCABDFCGFCABDHKIL $.
sorting-cache-133 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortMap ) \top ) ) ( \in-sort ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) \kore-sort-SortKItem ) ) $= ( IMP-sort-20-is-pattern string-literal-9-is-pattern kore-dv-is-pattern in-sort-is-pattern BASIC-K-sort-1-is-pattern typecode-cache-Pattern-73 kore-is-sort-is-pattern and-is-pattern kore-inj-is-pattern sorting-cache-132 imp-is-pattern proof-rule-prop-1 kore-dv-sorting proof-rule-mp rule-and-intro-alt2-sugar INJ-symbol-0-sorting rule-imp-transitivity ) ABHCIGIJCDECFJCGCDEKGFABHCIGIJCDECFABLCDECFABHCDECFMCDECFABHNCDOPQCGCDERS $.
sorting-cache-134 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortMap ) \top ) ) ( \and ( \kore-is-sort \kore-sort-SortPgm ) ( \kore-is-sort \kore-sort-SortKItem ) ) ) $= ( kore-is-sort-is-pattern typecode-cache-Pattern-73 IMP-sort-26-is-pattern BASIC-K-sort-1-is-pattern imp-is-pattern proof-rule-prop-1 proof-rule-mp IMP-sort-26-sort BASIC-K-sort-1-sort rule-and-intro-alt2-sugar ) ABDECFCECABDECGECABDHJIFCABDFCGFCABDHKIL $.
sorting-cache-135 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortMap ) \top ) ) ( \in-sort ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) \kore-sort-SortIds ) ) $= ( IMP-sort-17-is-pattern in-sort-is-pattern string-literal-11-is-pattern kore-dv-is-pattern IMP-symbol-111-is-pattern typecode-cache-Pattern-73 IMP-sort-0-is-pattern imp-is-pattern proof-rule-prop-1 proof-rule-mp and-is-pattern IMP-symbol-148-is-pattern kore-dv-sorting IMP-symbol-111-sorting rule-and-intro-alt2-sugar IMP-symbol-148-sorting rule-imp-transitivity ) ABHCEFCDGIDMCEFGNIDABHCEFCDGIDCEFCDABHCEFCDJCEFCDABHKCEOLGIDABHGIDJGIDABHKPLQCEFGRS $.
sorting-cache-136 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortMap ) \top ) ) ( \and ( \kore-is-sort \kore-sort-SortInt ) ( \kore-is-sort \kore-sort-SortAExp ) ) ) $= ( kore-is-sort-is-pattern typecode-cache-Pattern-73 IMP-sort-22-is-pattern IMP-sort-13-is-pattern imp-is-pattern proof-rule-prop-1 proof-rule-mp IMP-sort-22-sort IMP-sort-13-sort rule-and-intro-alt2-sugar ) ABDECFCECABDECGECABDHJIFCABDFCGFCABDHKIL $.
sorting-cache-137 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortMap ) \top ) ) ( \in-sort ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) \kore-sort-SortAExp ) ) $= ( IMP-sort-22-is-pattern string-literal-10-is-pattern kore-dv-is-pattern in-sort-is-pattern IMP-sort-13-is-pattern typecode-cache-Pattern-73 kore-is-sort-is-pattern and-is-pattern kore-inj-is-pattern sorting-cache-136 imp-is-pattern proof-rule-prop-1 kore-dv-sorting proof-rule-mp rule-and-intro-alt2-sugar INJ-symbol-0-sorting rule-imp-transitivity ) ABHCIGIJCDECFJCGCDEKGFABHCIGIJCDECFABLCDECFABHCDECFMCDECFABHNCDOPQCGCDERS $.
sorting-cache-138 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortMap ) \top ) ) ( \in-sort ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) \kore-sort-SortStmt ) ) $= ( IMP-sort-17-is-pattern kore-dv-is-pattern string-literal-11-is-pattern in-sort-is-pattern IMP-sort-22-is-pattern IMP-sort-13-is-pattern typecode-cache-Pattern-73 string-literal-10-is-pattern kore-inj-is-pattern and-is-pattern IMP-symbol-169-is-pattern IMP-sort-30-is-pattern imp-is-pattern proof-rule-prop-1 kore-dv-sorting proof-rule-mp sorting-cache-137 rule-and-intro-alt2-sugar IMP-symbol-169-sorting rule-imp-transitivity ) ABICEDCFGHGJDKHFLCEDGHGJDKMNFABICEDCFGHGJDKHFCEDCFABICEDCFOCEDCFABIPCEQRABSTCEDGHGJDKUAUB $.
sorting-cache-139 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortMap ) \top ) ) ( \in-sort ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) \kore-sort-SortPgm ) ) $= ( kore-dv-is-pattern IMP-sort-17-is-pattern string-literal-11-is-pattern IMP-sort-22-is-pattern in-sort-is-pattern IMP-symbol-111-is-pattern IMP-symbol-148-is-pattern IMP-sort-13-is-pattern string-literal-10-is-pattern kore-inj-is-pattern IMP-symbol-169-is-pattern typecode-cache-Pattern-73 IMP-sort-0-is-pattern IMP-sort-30-is-pattern and-is-pattern IMP-symbol-220-is-pattern IMP-sort-26-is-pattern sorting-cache-135 sorting-cache-138 rule-and-intro-alt2-sugar IMP-symbol-220-sorting rule-imp-transitivity ) ABNDECHIOGDECFJFKCLMPGQDECHIDECFJFKCLMRSGABNDECHIOGDECFJFKCLMPGABTABUAUBDECHIDECFJFKCLMUCUD $.
sorting-cache-140 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortMap ) \top ) ) ( \in-sort ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) \kore-sort-SortKItem ) ) $= ( kore-dv-is-pattern IMP-sort-17-is-pattern string-literal-11-is-pattern IMP-sort-22-is-pattern IMP-sort-26-is-pattern BASIC-K-sort-1-is-pattern kore-inj-is-pattern kore-is-sort-is-pattern IMP-symbol-111-is-pattern IMP-symbol-148-is-pattern IMP-sort-13-is-pattern string-literal-10-is-pattern IMP-symbol-169-is-pattern IMP-symbol-220-is-pattern and-is-pattern in-sort-is-pattern typecode-cache-Pattern-73 sorting-cache-134 sorting-cache-139 rule-and-intro-alt2-sugar INJ-symbol-0-sorting rule-imp-transitivity ) ABSGJHJQDECKLDECFMFNCIOPGRQGHDECKLDECFMFNCIOPIHRABSGJHJQDECKLDECFMFNCIOPGRABTABUAUBGHDECKLDECFMFNCIOPUCUD $.
sorting-cache-141 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortMap ) \top ) ) ( \and ( \in-sort \kore-symbol-Lbl'Stop'Map \kore-sort-SortMap ) ( \in-sort ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) ) \kore-sort-SortMap ) ) ) $= ( kore-dv-is-pattern kore-inj-is-pattern BASIC-K-sort-1-is-pattern in-sort-is-pattern IMP-sort-20-is-pattern IMP-sort-17-is-pattern string-literal-11-is-pattern IMP-sort-22-is-pattern IMP-sort-14-is-pattern typecode-cache-Pattern-73 string-literal-9-is-pattern IMP-sort-26-is-pattern IMP-symbol-111-is-pattern IMP-symbol-148-is-pattern IMP-sort-13-is-pattern string-literal-10-is-pattern IMP-symbol-169-is-pattern IMP-symbol-220-is-pattern IMP-symbol-112-is-pattern IMP-symbol-196-is-pattern rule-and-intro-alt2-sugar imp-is-pattern proof-rule-prop-1 IMP-symbol-112-sorting proof-rule-mp and-is-pattern sorting-cache-133 sorting-cache-140 IMP-symbol-196-sorting rule-imp-transitivity ) ABLUAKFGEGMCDNEHICOPHICJQJRCDSTDUBKFUAKFABLUAKFUDUAKFABLUEUFUGABLGEGMCDEFNEHICOPHICJQJRCDSTDEFUHGEGMCDNEHICOPHICJQJRCDSTDUBKFABLGEGMCDEFNEHICOPHICJQJRCDSTDEFABUIABUJUCGEGMCDNEHICOPHICJQJRCDSTDUKULUC $.
sorting-rearrange-60 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortMap ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortMap kore-sort-var-R ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) ) ) kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortGeneratedTopCell kore-sort-var-R ( \kore-symbol-LblinitGeneratedTopCell ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) ) ) ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-LblinitTCell kore-element-var-VE1 ) \kore-symbol-LblinitGeneratedCounterCell ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $= ( kore-dv-is-pattern kore-inj-is-pattern typecode-cache-Pattern-2 IMP-sort-20-is-pattern BASIC-K-sort-1-is-pattern IMP-sort-17-is-pattern string-literal-11-is-pattern IMP-sort-22-is-pattern kore-element-var-VE0-elementvariable kore-top-is-pattern IMP-symbol-112-is-pattern string-literal-9-is-pattern IMP-sort-26-is-pattern IMP-symbol-111-is-pattern IMP-symbol-148-is-pattern IMP-sort-13-is-pattern string-literal-10-is-pattern IMP-symbol-169-is-pattern IMP-symbol-220-is-pattern IMP-symbol-196-is-pattern IMP-symbol-176-is-pattern kore-and-is-pattern element-var-is-var IMP-sort-14-is-pattern kore-element-var-x0-elementvariable typecode-cache-Pattern-72 top-is-pattern substitution-disjoint in-sort-is-pattern kore-implies-is-pattern and-is-pattern typecode-cache-Pattern-73 IMP-sort-8-is-pattern IMP-symbol-219-is-pattern IMP-symbol-215-is-pattern IMP-symbol-117-is-pattern typecode-cache-Pattern-76 typecode-cache-Pattern-77 IMP-symbol-216-is-pattern kore-valid-is-pattern typecode-cache-Pattern-74 kore-in-is-pattern kore-equals-is-pattern typecode-cache-Pattern-16 typecode-cache-Pattern-79 kore-element-var-V0-elementvariable typecode-cache-Pattern-78 substitution-kore-and rule-imp-transitivity substitution-var-same substitution-185 top-intro rule-weakening rule-and-intro-alt2-sugar substitution-kore-implies substitution-kore-valid substitution-imp sorting-cache-131 sorting-cache-141 IMP-symbol-176-sorting typecode-cache-Pattern-12 eq-is-pattern exists-is-pattern sorting-cache-45 sorting-rearrange-58 kore-functional sorting-rearrange-59 substitution-in-sort substitution-and substitution-kore-in IMP-symbol-216-substitution substitution-kore-equals substitution-184 substitution-190 substitution-193 substitution-186 functional-substitution-alt ) ABUNABUNMFGFNCDOGHICPQHICJRJSCDTUADUBUCUFUKUIUMUMAEAEAEAELAEUFAEMFGFNCDOGHICPQHICJRJSCDTUADUBUCBUHVDAELUDUDAEUOAEMFGFNCDOGHICPQHICJRJSCDTUADUBUCVABUHUPUQURVEAELUDULVBABUNABUNMFGFNCDOGHICPQHICJRJSCDTUADUBUCUFUKUIUMABVTABUNMFGFNCDOGHICPQHICJRJSCDTUADUBUCUFUKUIABUNMUFUKFGFNCDOGHICPQHICJRJSCDTUADUBUFUKUMMFGFNCDOGHICPQHICJRJSCDTUADUBUCUFUKABWAMFGFNCDOGHICPQHICJRJSCDTUADUBWBVKABUNUIVNVOVPVPMFGFNCDOGHICPQHICJRJSCDTUADUBUCAEAEAEAELAEAKBUSAELUDUDAEAKBUTAELUDULVBAEAEAEAELAEUFAEMFGFNCDOGHICPQHICJRJSCDTUADUBUCBUHVDAELUDUDAEUOAEMFGFNCDOGHICPQHICJRJSCDTUADUBUCVABUHUPUQURVEAELUDULVBAEAEAEAELAEABUGVIAELUDUDAEABUGVGAELUDULVBABUNKVCUFUKUIUMMFGFNCDOGHICPQHICJRJSCDTUADUBUCUFUKUIUMUGVFUFUKUIUMVHKUGABUNUIVHWCMFGFNCDOGHICPQHICJRJSCDTUADUBUCWDVHWEABUNUIVNVOUFMFGFNCDOGHICPQHICJRJSCDTUADUBUCUIVHWFVHWGWHVKAKBWIMFGFNCDOGHICPQHICJRJSCDTUADUBUCMFGFNCDOGHICPQHICJRJSCDTUADUBUCUFUKUIUMAEAEAEAELAEUFAEMFGFNCDOGHICPQHICJRJSCDTUADUBUCBUHVDAELUDUDAEUOAEMFGFNCDOGHICPQHICJRJSCDTUADUBUCVABUHUPUQURVEAELUDULVBKVCUFUKUIUMAEAEAEAELAEAKBUSAELUDUDAEAKBUTAELUDULVBKUEMFGFNCDOGHICPQHICJRJSCDTUADUBUCMFGFNCDOGHICPQHICJRJSCDTUADUBUCUFUKUIKVCUFUKUIKUEMFGFNCDOGHICPQHICJRJSCDTUADUBUCMFGFNCDOGHICPQHICJRJSCDTUADUBUCUFKVCUFKUEMFGFNCDOGHICPQHICJRJSCDTUADUBUCKUEVLUFMFGFNCDOGHICPQHICJRJSCDTUADUBUCKUEUJWJUIMFGFNCDOGHICPQHICJRJSCDTUADUBUCKUEUJWKAEAEAEAELAEUFAEMFGFNCDOGHICPQHICJRJSCDTUADUBUCBUHVDAELUDUDAEUOAEMFGFNCDOGHICPQHICJRJSCDTUADUBUCVABUHUPUQURVEAELUDULAEAEAEAELAEAKBUSAELUDUDAEAKBUTAELUDULMFGFNCDOGHICPQHICJRJSCDTUADUBUCKUEAEMFGFNCDOGHICPQHICJRJSCDTUADUBUCKUEUJAEAEAELAEUFAEMFGFNCDOGHICPQHICJRJSCDTUADUBUCBUHVDAELUDUDAEUOAEMFGFNCDOGHICPQHICJRJSCDTUADUBUCVABUHUPUQURVEAELUDAEAEAELAEAKBUSAELUDUDAEAKBUTAELUDMFGFNCDOGHICPQHICJRJSCDTUADUBUCKUEAEMFGFNCDOGHICPQHICJRJSCDTUADUBUCKUEUJAEAELAEUFAEMFGFNCDOGHICPQHICJRJSCDTUADUBUCBUHVDAELUDAEAELAEAKBUSAELUDMFGFNCDOGHICPQHICJRJSCDTUADUBUCKUEAEMFGFNCDOGHICPQHICJRJSCDTUADUBUCKUEUJAELMFGFNCDOGHICPQHICJRJSCDTUADUBUCKUEUJAEUFAEMFGFNCDOGHICPQHICJRJSCDTUADUBUCBUHVDAELAEAKBUSAELMFGFNCDOGHICPQHICJRJSCDTUADUBUCKUEAEMFGFNCDOGHICPQHICJRJSCDTUADUBUCKUEUJUFAEMFGFNCDOGHICPQHICJRJSCDTUADUBUCBUHUFAEKVCBUHMFGFNCDOGHICPQHICJRJSCDTUADUBUCKUEUFMFGFNCDOGHICPQHICJRJSCDTUADUBUCKUEUJAEMFGFNCDOGHICPQHICJRJSCDTUADUBUCKUEUJMFGFNCDOGHICPQHICJRJSCDTUADUBUCKUEVLBUHMFGFNCDOGHICPQHICJRJSCDTUADUBUCKUEUJWLAELMFGFNCDOGHICPQHICJRJSCDTUADUBUCKUEUJVJVJAEUOAEMFGFNCDOGHICPQHICJRJSCDTUADUBUCVABUHUPUQURVEAELAEAKBUTAELMFGFNCDOGHICPQHICJRJSCDTUADUBUCKUEAEMFGFNCDOGHICPQHICJRJSCDTUADUBUCKUEUJUOAEMFGFNCDOGHICPQHICJRJSCDTUADUBUCVABUHUPUQURUOAEKVCVABUHUPUQURMFGFNCDOGHICPQHICJRJSCDTUADUBUCKUEUOMFGFNCDOGHICPQHICJRJSCDTUADUBUCKUEUJAEMFGFNCDOGHICPQHICJRJSCDTUADUBUCKUEUJKUEMFGFNCDOGHICPQHICJRJSCDTUADUBUCMFGFNCDOGHICPQHICJRJSCDTUADUBUCKVCMFGFNCDOGHICPQHICJRJSCDTUADUBUCKUEVLWMBUHUPUQURMFGFNCDOGHICPQHICJRJSCDTUADUBUCKUEUJWNAELMFGFNCDOGHICPQHICJRJSCDTUADUBUCKUEUJVJVQVRVSUGVFUGVFUFUKUIUMAEAEAEAELAEABUGVIAELUDUDAEABUGVGAELUDULVBKVCUFUKUIUMAEAEAEAELAEAKBUSAELUDUDAEAKBUTAELUDULVBKUEKUGWOAEAEAEAELAEABUGVIAELUDUDAEABUGVGAELUDULAEAEAEAELAEAKBUSAELUDUDAEAKBUTAELUDULUGVFKUEAKUGVMAEAEAELAEABUGVIAELUDUDAEABUGVGAELUDAEAEAELAEAKBUSAELUDUDAEAKBUTAELUDUGVFKUEAKUGVMAKBUGWPAEABUGVGAELAEAKBUTAELUGVFKUEAKUGVMAKBUGWQAKUGWRVJVQVRVSWSVK $.
sorting-rearrange-61 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \exists kore-element-var-V0 ( \eq kore-element-var-V0 ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) ) ) ) ) ) $= ( kore-dv-is-pattern kore-inj-is-pattern top-is-pattern IMP-sort-20-is-pattern BASIC-K-sort-1-is-pattern IMP-sort-17-is-pattern string-literal-11-is-pattern IMP-sort-22-is-pattern typecode-cache-Pattern-2 kore-is-sort-is-pattern and-is-pattern IMP-symbol-112-is-pattern string-literal-9-is-pattern IMP-sort-26-is-pattern IMP-symbol-111-is-pattern IMP-symbol-148-is-pattern IMP-sort-13-is-pattern string-literal-10-is-pattern IMP-symbol-169-is-pattern IMP-symbol-220-is-pattern IMP-symbol-196-is-pattern IMP-symbol-176-is-pattern typecode-cache-Pattern-12 eq-is-pattern exists-is-pattern top-intro rule-weakening IMP-sort-14-is-pattern sorting-cache-45 sorting-rearrange-58 kore-functional rule-imp-transitivity ) AKLEMEBUENFGFOCDPGHICQRHICJSJTCDUAUBDUCUDUFBUGAKLEMEUHUIUJNFGFOCDPGHICQRHICJSJTCDUAUBDUCUDEBUKBULUMUN $.
sorting-cache-142 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortMap ) \top ) ) ( \kore-is-sort kore-sort-var-R ) ) $= ( typecode-cache-Pattern-2 kore-is-sort-is-pattern top-is-pattern and-is-pattern typecode-cache-Pattern-72 IMP-sort-14-is-pattern in-sort-is-pattern and-elim-left-sugar rule-imp-transitivity imp-reflexivity ) ACDEFBGHIEFFACDEFACDACDEFBGHIEFJACDEFACDACDACDEJACDLKK $.
sorting-cache-143 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortMap ) \top ) ) ( \in-sort kore-element-var-VE1 \kore-sort-SortMap ) ) $= ( typecode-cache-Pattern-72 IMP-sort-14-is-pattern in-sort-is-pattern top-is-pattern and-is-pattern typecode-cache-Pattern-2 kore-is-sort-is-pattern rule-imp-transitivity and-elim-right-sugar and-elim-left-sugar imp-reflexivity ) AHIFGBCDEFGGBCDEFGBCDEAHIFGBCDEFGKBCDEFGBCDEBCDEBCDEFLBCDEMJJ $.
sorting-cache-144 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortMap ) \top ) ) ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortMap ) \top ) ) ) $= ( and-is-pattern top-is-pattern typecode-cache-Pattern-72 IMP-sort-14-is-pattern in-sort-is-pattern typecode-cache-Pattern-2 kore-is-sort-is-pattern rule-and-intro-alt2-sugar sorting-cache-142 sorting-cache-143 top-intro rule-weakening ) AHIDCBEFGDCCAHIBEFGDCABKAHIDCBEFGDCCBEFGDABLAHIDCBEFGDCCDMNJJ $.
substitution-194 $p #Substitution \kore-sort-SortMap \kore-sort-SortMap kore-element-var-x0 kore-element-var-VE1 $= ( IMP-sort-14-is-pattern typecode-cache-Pattern-16 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-195 $p #Substitution ( \in-sort kore-element-var-x0 \kore-sort-SortMap ) ( \in-sort kore-element-var-VE1 \kore-sort-SortMap ) kore-element-var-x0 kore-element-var-VE1 $= ( typecode-cache-Pattern-16 IMP-sort-14-is-pattern element-var-is-var typecode-cache-Pattern-72 substitution-var-same substitution-194 substitution-in-sort ) BCBCDAFDAEBCAEGABHI $.
substitution-196 $p #Substitution \top \top kore-element-var-x0 kore-element-var-VE1 $= ( top-is-pattern typecode-cache-Pattern-16 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-197 $p #Substitution ( \and ( \in-sort kore-element-var-x0 \kore-sort-SortMap ) \top ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortMap ) \top ) kore-element-var-x0 kore-element-var-VE1 $= ( typecode-cache-Pattern-16 IMP-sort-14-is-pattern in-sort-is-pattern top-is-pattern typecode-cache-Pattern-72 element-var-is-var substitution-195 substitution-196 substitution-and ) BCBCDEFAGDEFAHABIABJK $.
substitution-198 $p #Substitution kore-sort-var-R kore-sort-var-R kore-element-var-x0 kore-element-var-VE1 $= ( typecode-cache-Pattern-2 typecode-cache-Pattern-16 element-var-is-var substitution-disjoint ) ADCEBFG $.
substitution-199 $p #Substitution ( \kore-top kore-sort-var-R ) ( \kore-top kore-sort-var-R ) kore-element-var-x0 kore-element-var-VE1 $= ( typecode-cache-Pattern-2 kore-top-is-pattern typecode-cache-Pattern-16 element-var-is-var substitution-disjoint ) ADECFBGH $.
substitution-200 $p #Substitution \kore-sort-SortGeneratedTopCell \kore-sort-SortGeneratedTopCell kore-element-var-x0 kore-element-var-VE1 $= ( IMP-sort-8-is-pattern typecode-cache-Pattern-16 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-201 $p #Substitution ( \kore-symbol-LblinitTCell kore-element-var-x0 ) ( \kore-symbol-LblinitTCell kore-element-var-VE1 ) kore-element-var-x0 kore-element-var-VE1 $= ( typecode-cache-Pattern-16 element-var-is-var typecode-cache-Pattern-72 substitution-var-same IMP-symbol-219-substitution ) ADBCBCAEBCADFG $.
substitution-202 $p #Substitution \kore-symbol-LblinitGeneratedCounterCell \kore-symbol-LblinitGeneratedCounterCell kore-element-var-x0 kore-element-var-VE1 $= ( IMP-symbol-215-is-pattern typecode-cache-Pattern-16 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-203 $p #Substitution ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-LblinitTCell kore-element-var-x0 ) \kore-symbol-LblinitGeneratedCounterCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-LblinitTCell kore-element-var-VE1 ) \kore-symbol-LblinitGeneratedCounterCell ) kore-element-var-x0 kore-element-var-VE1 $= ( typecode-cache-Pattern-16 IMP-symbol-219-is-pattern IMP-symbol-215-is-pattern element-var-is-var typecode-cache-Pattern-72 substitution-201 substitution-202 IMP-symbol-117-substitution ) AFBCBCDEAGDEABHABIJ $.
sorting-cache-145 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \in-sort \kore-symbol-Lbl'Stop'Map \kore-sort-SortMap ) ) $= ( IMP-symbol-112-is-pattern IMP-sort-14-is-pattern in-sort-is-pattern typecode-cache-Pattern-2 kore-is-sort-is-pattern top-is-pattern and-is-pattern imp-is-pattern proof-rule-prop-1 IMP-symbol-112-sorting proof-rule-mp ) BCDAEFGHBCDIBCDAEFGHJKL $.
sorting-cache-146 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \in-sort ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) ) ) \kore-sort-SortMap ) ) $= ( kore-dv-is-pattern kore-inj-is-pattern IMP-sort-20-is-pattern BASIC-K-sort-1-is-pattern IMP-sort-17-is-pattern string-literal-11-is-pattern IMP-sort-22-is-pattern IMP-sort-14-is-pattern in-sort-is-pattern IMP-symbol-112-is-pattern string-literal-9-is-pattern IMP-sort-26-is-pattern IMP-symbol-111-is-pattern IMP-symbol-148-is-pattern IMP-sort-13-is-pattern string-literal-10-is-pattern IMP-symbol-169-is-pattern IMP-symbol-220-is-pattern IMP-symbol-196-is-pattern and-is-pattern typecode-cache-Pattern-2 kore-is-sort-is-pattern top-is-pattern IMP-symbol-176-is-pattern sorting-cache-145 sorting-cache-127 rule-and-intro-alt2-sugar IMP-symbol-176-sorting rule-imp-transitivity ) AUBUCUDUAKIJDEDLBCMEFGBNOFGBHPHQBCRSCTIJUAKDEDLBCMEFGBNOFGBHPHQBCRSCTUEIJAUBUCUDUAKIJDEDLBCMEFGBNOFGBHPHQBCRSCTIJAUFAUGUHKDEDLBCMEFGBNOFGBHPHQBCRSCTUIUJ $.
sorting-rearrange-62 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortMap kore-sort-var-R ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) ) ) ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) ) ) ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortGeneratedTopCell kore-sort-var-R ( \kore-symbol-LblinitGeneratedTopCell ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) ) ) ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-LblinitTCell ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) ) ) ) \kore-symbol-LblinitGeneratedCounterCell ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $= ( kore-dv-is-pattern kore-inj-is-pattern typecode-cache-Pattern-2 IMP-sort-20-is-pattern BASIC-K-sort-1-is-pattern IMP-sort-17-is-pattern string-literal-11-is-pattern IMP-sort-22-is-pattern IMP-symbol-112-is-pattern string-literal-9-is-pattern IMP-sort-26-is-pattern IMP-symbol-111-is-pattern IMP-symbol-148-is-pattern IMP-sort-13-is-pattern string-literal-10-is-pattern IMP-symbol-169-is-pattern IMP-symbol-220-is-pattern IMP-symbol-196-is-pattern IMP-symbol-176-is-pattern kore-element-var-VE1-elementvariable kore-top-is-pattern kore-and-is-pattern IMP-sort-14-is-pattern element-var-is-var kore-element-var-x0-elementvariable typecode-cache-Pattern-72 IMP-symbol-215-is-pattern IMP-symbol-216-is-pattern IMP-symbol-219-is-pattern IMP-sort-8-is-pattern typecode-cache-Pattern-16 kore-in-is-pattern IMP-symbol-117-is-pattern top-is-pattern kore-equals-is-pattern and-is-pattern substitution-disjoint in-sort-is-pattern kore-implies-is-pattern kore-valid-is-pattern kore-is-sort-is-pattern substitution-198 substitution-kore-and substitution-var-same substitution-199 rule-and-intro-alt2-sugar kore-element-var-V0-elementvariable rule-imp-transitivity substitution-kore-in substitution-kore-equals substitution-kore-implies substitution-kore-valid substitution-imp sorting-cache-58 sorting-cache-146 top-intro rule-weakening sorting-rearrange-61 typecode-cache-Pattern-73 sorting-cache-144 sorting-rearrange-60 substitution-in-sort substitution-and IMP-symbol-219-substitution IMP-symbol-117-substitution substitution-197 substitution-194 substitution-200 substitution-203 functional-substitution-alt ) ADVBUOUQADVBUOUQJEFEKBCLFGHBMNGHBIOIPBCQRCSTUDUSUOUQUQADADADADUBADUDADJEFEKBCLFGHBMNGHBIOIPBCQRCSTJEFEKBCLFGHBMNGHBIOIPBCQRCSTUMADUBUCUCADUKADJEFEKBCLFGHBMNGHBIOIPBCQRCSTUIJEFEKBCLFGHBMNGHBIOIPBCQRCSTUJUHUNUPADUBUCUTVAADVBUOUQADVBUOUQJEFEKBCLFGHBMNGHBIOIPBCQRCSTUDUSUOUQAVOADVBUOUQJEFEKBCLFGHBMNGHBIOIPBCQRCSTUDUSUOAVPADVBUOUQUOVQVRVGVGJEFEKBCLFGHBMNGHBIOIPBCQRCSTADADADADUBADUDADJEFEKBCLFGHBMNGHBIOIPBCQRCSTUAUGUMADUBUCUCADUKADJEFEKBCLFGHBMNGHBIOIPBCQRCSTUIUAUGUJUHUNUPADUBUCUTVAADADADADUBADUDADJEFEKBCLFGHBMNGHBIOIPBCQRCSTJEFEKBCLFGHBMNGHBIOIPBCQRCSTUMADUBUCUCADUKADJEFEKBCLFGHBMNGHBIOIPBCQRCSTUIJEFEKBCLFGHBMNGHBIOIPBCQRCSTUJUHUNUPADUBUCUTVAADADADADUBADUDADJEFEKBCLFGHBMNGHBIOIPBCQRCSTUFULUMADUBUCUCADUKADJEFEKBCLFGHBMNGHBIOIPBCQRCSTUIUFULUJUHUNUPADUBUCUTVAADVBUOUQUAUGUDUSUOUQJEFEKBCLFGHBMNGHBIOIPBCQRCSTUDUSUOUQUFULUDUSUOUQVHUAUFAVHVSADVBUOUQUAUGUDUSUOUQUQAUAVTADADADADUBADUDADJEFEKBCLFGHBMNGHBIOIPBCQRCSTUAUGUMADUBUCUCADUKADJEFEKBCLFGHBMNGHBIOIPBCQRCSTUIUAUGUJUHUNUPADUBUCUTVAAUAWAAUAWBVIJEFEKBCLFGHBMNGHBIOIPBCQRCSTJEFEKBCLFGHBMNGHBIOIPBCQRCSTUDUSUOUQADADADADUBADUDADJEFEKBCLFGHBMNGHBIOIPBCQRCSTJEFEKBCLFGHBMNGHBIOIPBCQRCSTUMADUBUCUCADUKADJEFEKBCLFGHBMNGHBIOIPBCQRCSTUIJEFEKBCLFGHBMNGHBIOIPBCQRCSTUJUHUNUPADUBUCUTVAUAUGUDUSUOUQADADADADUBADUDADJEFEKBCLFGHBMNGHBIOIPBCQRCSTUAUGUMADUBUCUCADUKADJEFEKBCLFGHBMNGHBIOIPBCQRCSTUIUAUGUJUHUNUPADUBUCUTVAUAUEJEFEKBCLFGHBMNGHBIOIPBCQRCSTJEFEKBCLFGHBMNGHBIOIPBCQRCSTUDUSUOUAUGUDUSUOUAUEJEFEKBCLFGHBMNGHBIOIPBCQRCSTJEFEKBCLFGHBMNGHBIOIPBCQRCSTUDUAUGUDUAUEJEFEKBCLFGHBMNGHBIOIPBCQRCSTUAUEVEUDJEFEKBCLFGHBMNGHBIOIPBCQRCSTUAUEURWCUOJEFEKBCLFGHBMNGHBIOIPBCQRCSTUAUEURWDADADADADUBADUDADJEFEKBCLFGHBMNGHBIOIPBCQRCSTJEFEKBCLFGHBMNGHBIOIPBCQRCSTUMADUBUCUCADUKADJEFEKBCLFGHBMNGHBIOIPBCQRCSTUIJEFEKBCLFGHBMNGHBIOIPBCQRCSTUJUHUNUPADUBUCUTADADADADUBADUDADJEFEKBCLFGHBMNGHBIOIPBCQRCSTUAUGUMADUBUCUCADUKADJEFEKBCLFGHBMNGHBIOIPBCQRCSTUIUAUGUJUHUNUPADUBUCUTJEFEKBCLFGHBMNGHBIOIPBCQRCSTUAUEADJEFEKBCLFGHBMNGHBIOIPBCQRCSTUAUEURADADADUBADUDADJEFEKBCLFGHBMNGHBIOIPBCQRCSTJEFEKBCLFGHBMNGHBIOIPBCQRCSTUMADUBUCUCADUKADJEFEKBCLFGHBMNGHBIOIPBCQRCSTUIJEFEKBCLFGHBMNGHBIOIPBCQRCSTUJUHUNUPADUBUCADADADUBADUDADJEFEKBCLFGHBMNGHBIOIPBCQRCSTUAUGUMADUBUCUCADUKADJEFEKBCLFGHBMNGHBIOIPBCQRCSTUIUAUGUJUHUNUPADUBUCJEFEKBCLFGHBMNGHBIOIPBCQRCSTUAUEADJEFEKBCLFGHBMNGHBIOIPBCQRCSTUAUEURADADUBADUDADJEFEKBCLFGHBMNGHBIOIPBCQRCSTJEFEKBCLFGHBMNGHBIOIPBCQRCSTUMADUBUCADADUBADUDADJEFEKBCLFGHBMNGHBIOIPBCQRCSTUAUGUMADUBUCJEFEKBCLFGHBMNGHBIOIPBCQRCSTUAUEADJEFEKBCLFGHBMNGHBIOIPBCQRCSTUAUEURADUBJEFEKBCLFGHBMNGHBIOIPBCQRCSTUAUEURADUDADJEFEKBCLFGHBMNGHBIOIPBCQRCSTJEFEKBCLFGHBMNGHBIOIPBCQRCSTUMADUBADUDADJEFEKBCLFGHBMNGHBIOIPBCQRCSTUAUGUMADUBJEFEKBCLFGHBMNGHBIOIPBCQRCSTUAUEADJEFEKBCLFGHBMNGHBIOIPBCQRCSTUAUEURUDADJEFEKBCLFGHBMNGHBIOIPBCQRCSTJEFEKBCLFGHBMNGHBIOIPBCQRCSTUDADJEFEKBCLFGHBMNGHBIOIPBCQRCSTUAUGJEFEKBCLFGHBMNGHBIOIPBCQRCSTUAUEUDJEFEKBCLFGHBMNGHBIOIPBCQRCSTUAUEURADJEFEKBCLFGHBMNGHBIOIPBCQRCSTUAUEURJEFEKBCLFGHBMNGHBIOIPBCQRCSTJEFEKBCLFGHBMNGHBIOIPBCQRCSTUAUEURJEFEKBCLFGHBMNGHBIOIPBCQRCSTUAUEVEVJADUBJEFEKBCLFGHBMNGHBIOIPBCQRCSTUAUEURVDVDADUKADJEFEKBCLFGHBMNGHBIOIPBCQRCSTUIJEFEKBCLFGHBMNGHBIOIPBCQRCSTUJUHUNUPADUBADUKADJEFEKBCLFGHBMNGHBIOIPBCQRCSTUIUAUGUJUHUNUPADUBJEFEKBCLFGHBMNGHBIOIPBCQRCSTUAUEADJEFEKBCLFGHBMNGHBIOIPBCQRCSTUAUEURUKADJEFEKBCLFGHBMNGHBIOIPBCQRCSTUIJEFEKBCLFGHBMNGHBIOIPBCQRCSTUJUHUNUKADJEFEKBCLFGHBMNGHBIOIPBCQRCSTUIUAUGUJUHUNJEFEKBCLFGHBMNGHBIOIPBCQRCSTUAUEUKJEFEKBCLFGHBMNGHBIOIPBCQRCSTUAUEURADJEFEKBCLFGHBMNGHBIOIPBCQRCSTUAUEURJEFEKBCLFGHBMNGHBIOIPBCQRCSTUIJEFEKBCLFGHBMNGHBIOIPBCQRCSTUAUEURUAUEJEFEKBCLFGHBMNGHBIOIPBCQRCSTJEFEKBCLFGHBMNGHBIOIPBCQRCSTUJUHUAUGUJUHUAUEJEFEKBCLFGHBMNGHBIOIPBCQRCSTJEFEKBCLFGHBMNGHBIOIPBCQRCSTUAUGJEFEKBCLFGHBMNGHBIOIPBCQRCSTUAUEVEWEUHJEFEKBCLFGHBMNGHBIOIPBCQRCSTUAUEURWFVKADUBJEFEKBCLFGHBMNGHBIOIPBCQRCSTUAUEURVDVLVMVNUFULUFULUDUSUOUQADADADADUBADUDADJEFEKBCLFGHBMNGHBIOIPBCQRCSTUFULUMADUBUCUCADUKADJEFEKBCLFGHBMNGHBIOIPBCQRCSTUIUFULUJUHUNUPADUBUCUTVAUAUGUDUSUOUQADADADADUBADUDADJEFEKBCLFGHBMNGHBIOIPBCQRCSTUAUGUMADUBUCUCADUKADJEFEKBCLFGHBMNGHBIOIPBCQRCSTUIUAUGUJUHUNUPADUBUCUTVAUAUEUAUFWGADADADADUBADUDADJEFEKBCLFGHBMNGHBIOIPBCQRCSTUFULUMADUBUCUCADUKADJEFEKBCLFGHBMNGHBIOIPBCQRCSTUIUFULUJUHUNUPADUBUCUTADADADADUBADUDADJEFEKBCLFGHBMNGHBIOIPBCQRCSTUAUGUMADUBUCUCADUKADJEFEKBCLFGHBMNGHBIOIPBCQRCSTUIUAUGUJUHUNUPADUBUCUTUFULUAUEAUAUFVCADADADUBADUDADJEFEKBCLFGHBMNGHBIOIPBCQRCSTUFULUMADUBUCUCADUKADJEFEKBCLFGHBMNGHBIOIPBCQRCSTUIUFULUJUHUNUPADUBUCADADADUBADUDADJEFEKBCLFGHBMNGHBIOIPBCQRCSTUAUGUMADUBUCUCADUKADJEFEKBCLFGHBMNGHBIOIPBCQRCSTUIUAUGUJUHUNUPADUBUCUFULUAUEAUAUFVCADADUBADUDADJEFEKBCLFGHBMNGHBIOIPBCQRCSTUFULUMADUBUCADADUBADUDADJEFEKBCLFGHBMNGHBIOIPBCQRCSTUAUGUMADUBUCUFULUAUEAUAUFVCAUAUFVFADUDADJEFEKBCLFGHBMNGHBIOIPBCQRCSTUFULUMADUBADUDADJEFEKBCLFGHBMNGHBIOIPBCQRCSTUAUGUMADUBUFULUAUEAUAUFVCUDADJEFEKBCLFGHBMNGHBIOIPBCQRCSTUFULUDADJEFEKBCLFGHBMNGHBIOIPBCQRCSTUAUGUFULUAUEUAUFWHAUAUFVCJEFEKBCLFGHBMNGHBIOIPBCQRCSTUFULUAUEURUFULUAUEVEVJAUAUFVFVDVDADUKADJEFEKBCLFGHBMNGHBIOIPBCQRCSTUIUFULUJUHUNUPADUBADUKADJEFEKBCLFGHBMNGHBIOIPBCQRCSTUIUAUGUJUHUNUPADUBUFULUAUEAUAUFVCUKADJEFEKBCLFGHBMNGHBIOIPBCQRCSTUIUFULUJUHUNUKADJEFEKBCLFGHBMNGHBIOIPBCQRCSTUIUAUGUJUHUNUFULUAUEUAUFWIAUAUFVCJEFEKBCLFGHBMNGHBIOIPBCQRCSTUIUFULUAUEURUAUFWJVKAUAUFVFVDVLVMVNWKVI $.
sorting-cache-147 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) \top ) ( \in-sort \kore-symbol-Lbl'Stop'Map \kore-sort-SortMap ) ) $= ( top-is-pattern and-is-pattern IMP-symbol-112-is-pattern IMP-sort-14-is-pattern in-sort-is-pattern typecode-cache-Pattern-2 kore-is-sort-is-pattern imp-is-pattern proof-rule-prop-1 IMP-symbol-112-sorting proof-rule-mp ) DEFAGHBCBCDEFIDEFAGHBCBCJKL $.
sorting-cache-148 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) \top ) ( \kore-is-sort \kore-sort-SortKConfigVar ) ) $= ( kore-is-sort-is-pattern top-is-pattern and-is-pattern IMP-sort-20-is-pattern typecode-cache-Pattern-2 imp-is-pattern proof-rule-prop-1 IMP-sort-20-sort proof-rule-mp ) EBAFBCDCDEBGEBAFBCDCDHIJ $.
sorting-cache-149 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) \top ) ( \kore-is-sort \kore-sort-SortKItem ) ) $= ( kore-is-sort-is-pattern top-is-pattern and-is-pattern BASIC-K-sort-1-is-pattern typecode-cache-Pattern-2 imp-is-pattern proof-rule-prop-1 BASIC-K-sort-1-sort proof-rule-mp ) EBAFBCDCDEBGEBAFBCDCDHIJ $.
sorting-cache-150 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) \top ) ( \and ( \kore-is-sort \kore-sort-SortKConfigVar ) ( \kore-is-sort \kore-sort-SortKItem ) ) ) $= ( kore-is-sort-is-pattern top-is-pattern and-is-pattern typecode-cache-Pattern-2 IMP-sort-20-is-pattern BASIC-K-sort-1-is-pattern sorting-cache-148 sorting-cache-149 rule-and-intro-alt2-sugar ) AEBCDCDFBGBAHAIJ $.
sorting-cache-151 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) \top ) ( \in-sort ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) \kore-sort-SortKConfigVar ) ) $= ( IMP-sort-20-is-pattern string-literal-9-is-pattern top-is-pattern and-is-pattern kore-dv-is-pattern in-sort-is-pattern typecode-cache-Pattern-2 kore-is-sort-is-pattern imp-is-pattern proof-rule-prop-1 kore-dv-sorting proof-rule-mp ) BCFBGAHIDEDEBCFBGJBCFBGAHIDEDEKBCLM $.
sorting-cache-152 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) \top ) ( \in-sort ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) \kore-sort-SortKItem ) ) $= ( IMP-sort-20-is-pattern and-is-pattern kore-is-sort-is-pattern BASIC-K-sort-1-is-pattern top-is-pattern string-literal-9-is-pattern kore-dv-is-pattern in-sort-is-pattern typecode-cache-Pattern-2 kore-inj-is-pattern sorting-cache-150 sorting-cache-151 rule-and-intro-alt2-sugar INJ-symbol-0-sorting rule-imp-transitivity ) AJDFCFCBDEDCBGHBICBEBGHKEIAJDFCFCBDEDCBGHBIALAMNBEBGHOP $.
sorting-cache-153 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) \top ) ( \kore-is-sort \kore-sort-SortPgm ) ) $= ( kore-is-sort-is-pattern top-is-pattern and-is-pattern IMP-sort-26-is-pattern typecode-cache-Pattern-2 imp-is-pattern proof-rule-prop-1 IMP-sort-26-sort proof-rule-mp ) EBAFBCDCDEBGEBAFBCDCDHIJ $.
sorting-cache-154 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) \top ) ( \and ( \kore-is-sort \kore-sort-SortPgm ) ( \kore-is-sort \kore-sort-SortKItem ) ) ) $= ( kore-is-sort-is-pattern top-is-pattern and-is-pattern typecode-cache-Pattern-2 IMP-sort-26-is-pattern BASIC-K-sort-1-is-pattern sorting-cache-153 sorting-cache-149 rule-and-intro-alt2-sugar ) AEBCDCDFBGBAHAIJ $.
sorting-cache-155 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) \top ) ( \in-sort ( \kore-dv \kore-sort-SortId "a" ) \kore-sort-SortId ) ) $= ( IMP-sort-17-is-pattern string-literal-11-is-pattern top-is-pattern and-is-pattern kore-dv-is-pattern in-sort-is-pattern typecode-cache-Pattern-2 kore-is-sort-is-pattern imp-is-pattern proof-rule-prop-1 kore-dv-sorting proof-rule-mp ) BCFBGAHIDEDEBCFBGJBCFBGAHIDEDEKBCLM $.
sorting-cache-156 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) \top ) ( \in-sort \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids \kore-sort-SortIds ) ) $= ( top-is-pattern and-is-pattern IMP-symbol-111-is-pattern IMP-sort-0-is-pattern in-sort-is-pattern typecode-cache-Pattern-2 kore-is-sort-is-pattern imp-is-pattern proof-rule-prop-1 IMP-symbol-111-sorting proof-rule-mp ) DEFAGHBCBCDEFIDEFAGHBCBCJKL $.
sorting-cache-157 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) \top ) ( \and ( \in-sort ( \kore-dv \kore-sort-SortId "a" ) \kore-sort-SortId ) ( \in-sort \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids \kore-sort-SortIds ) ) ) $= ( top-is-pattern and-is-pattern IMP-sort-17-is-pattern in-sort-is-pattern typecode-cache-Pattern-2 kore-is-sort-is-pattern string-literal-11-is-pattern kore-dv-is-pattern IMP-symbol-111-is-pattern IMP-sort-0-is-pattern sorting-cache-155 sorting-cache-156 rule-and-intro-alt2-sugar ) AFGBCBCDHIDEJKEALAMN $.
sorting-cache-158 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) \top ) ( \in-sort ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) \kore-sort-SortIds ) ) $= ( IMP-sort-17-is-pattern and-is-pattern string-literal-11-is-pattern kore-dv-is-pattern in-sort-is-pattern IMP-symbol-111-is-pattern top-is-pattern IMP-sort-0-is-pattern typecode-cache-Pattern-2 kore-is-sort-is-pattern IMP-symbol-148-is-pattern sorting-cache-157 IMP-symbol-148-sorting rule-imp-transitivity ) AJKHCHCBDEBFGIFCBDEGLIFAMBDEGNO $.
sorting-cache-159 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) \top ) ( \kore-is-sort \kore-sort-SortInt ) ) $= ( kore-is-sort-is-pattern top-is-pattern and-is-pattern IMP-sort-22-is-pattern typecode-cache-Pattern-2 imp-is-pattern proof-rule-prop-1 IMP-sort-22-sort proof-rule-mp ) EBAFBCDCDEBGEBAFBCDCDHIJ $.
sorting-cache-160 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) \top ) ( \kore-is-sort \kore-sort-SortAExp ) ) $= ( kore-is-sort-is-pattern top-is-pattern and-is-pattern IMP-sort-13-is-pattern typecode-cache-Pattern-2 imp-is-pattern proof-rule-prop-1 IMP-sort-13-sort proof-rule-mp ) EBAFBCDCDEBGEBAFBCDCDHIJ $.
sorting-cache-161 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) \top ) ( \and ( \kore-is-sort \kore-sort-SortInt ) ( \kore-is-sort \kore-sort-SortAExp ) ) ) $= ( kore-is-sort-is-pattern top-is-pattern and-is-pattern typecode-cache-Pattern-2 IMP-sort-22-is-pattern IMP-sort-13-is-pattern sorting-cache-159 sorting-cache-160 rule-and-intro-alt2-sugar ) AEBCDCDFBGBAHAIJ $.
sorting-cache-162 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) \top ) ( \in-sort ( \kore-dv \kore-sort-SortInt "10" ) \kore-sort-SortInt ) ) $= ( IMP-sort-22-is-pattern string-literal-10-is-pattern top-is-pattern and-is-pattern kore-dv-is-pattern in-sort-is-pattern typecode-cache-Pattern-2 kore-is-sort-is-pattern imp-is-pattern proof-rule-prop-1 kore-dv-sorting proof-rule-mp ) BCFBGAHIDEDEBCFBGJBCFBGAHIDEDEKBCLM $.
sorting-cache-163 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) \top ) ( \in-sort ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) \kore-sort-SortAExp ) ) $= ( IMP-sort-22-is-pattern and-is-pattern kore-is-sort-is-pattern IMP-sort-13-is-pattern top-is-pattern string-literal-10-is-pattern kore-dv-is-pattern in-sort-is-pattern typecode-cache-Pattern-2 kore-inj-is-pattern sorting-cache-161 sorting-cache-162 rule-and-intro-alt2-sugar INJ-symbol-0-sorting rule-imp-transitivity ) AJDFCFCBDEDCBGHBICBEBGHKEIAJDFCFCBDEDCBGHBIALAMNBEBGHOP $.
sorting-cache-164 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) \top ) ( \in-sort ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) \kore-sort-SortStmt ) ) $= ( kore-dv-is-pattern IMP-sort-22-is-pattern IMP-sort-17-is-pattern IMP-sort-13-is-pattern and-is-pattern in-sort-is-pattern top-is-pattern string-literal-11-is-pattern string-literal-10-is-pattern kore-inj-is-pattern typecode-cache-Pattern-2 kore-is-sort-is-pattern IMP-symbol-169-is-pattern IMP-sort-30-is-pattern sorting-cache-155 sorting-cache-163 rule-and-intro-alt2-sugar IMP-symbol-169-sorting rule-imp-transitivity ) ALMHFHFDIBDGCECJBKEGFDIBCECJBKNOGALMHFHFDIBDGCECJBKEGAPAQRDIBCECJBKST $.
sorting-cache-165 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) \top ) ( \in-sort ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) \kore-sort-SortPgm ) ) $= ( kore-dv-is-pattern IMP-sort-17-is-pattern string-literal-11-is-pattern IMP-sort-22-is-pattern and-is-pattern in-sort-is-pattern top-is-pattern IMP-symbol-111-is-pattern IMP-symbol-148-is-pattern IMP-sort-13-is-pattern string-literal-10-is-pattern kore-inj-is-pattern IMP-symbol-169-is-pattern typecode-cache-Pattern-2 kore-is-sort-is-pattern IMP-sort-0-is-pattern IMP-sort-30-is-pattern IMP-symbol-220-is-pattern IMP-sort-26-is-pattern sorting-cache-158 sorting-cache-164 rule-and-intro-alt2-sugar IMP-symbol-220-sorting rule-imp-transitivity ) AOPHFHFCDBIJQGCDBEKELBMNRGFCDBIJCDBEKELBMNSTGAOPHFHFCDBIJQGCDBEKELBMNRGAUAAUBUCCDBIJCDBEKELBMNUDUE $.
sorting-cache-166 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) \top ) ( \in-sort ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) \kore-sort-SortKItem ) ) $= ( kore-dv-is-pattern IMP-sort-17-is-pattern string-literal-11-is-pattern IMP-sort-22-is-pattern and-is-pattern kore-is-sort-is-pattern IMP-sort-26-is-pattern BASIC-K-sort-1-is-pattern kore-inj-is-pattern top-is-pattern IMP-symbol-111-is-pattern IMP-symbol-148-is-pattern IMP-sort-13-is-pattern string-literal-10-is-pattern IMP-symbol-169-is-pattern IMP-symbol-220-is-pattern in-sort-is-pattern typecode-cache-Pattern-2 sorting-cache-154 sorting-cache-165 rule-and-intro-alt2-sugar INJ-symbol-0-sorting rule-imp-transitivity ) ASGKFKFHGIGFCDBLMCDBENEOBJPQHRFHICDBLMCDBENEOBJPQJIRASGKFKFHGIGFCDBLMCDBENEOBJPQHRATAUAUBHICDBLMCDBENEOBJPQUCUD $.
sorting-cache-167 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) \top ) ( \in-sort ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) ) \kore-sort-SortMap ) ) $= ( kore-dv-is-pattern BASIC-K-sort-1-is-pattern kore-inj-is-pattern IMP-sort-20-is-pattern IMP-sort-17-is-pattern string-literal-11-is-pattern IMP-sort-22-is-pattern and-is-pattern in-sort-is-pattern top-is-pattern string-literal-9-is-pattern IMP-sort-26-is-pattern IMP-symbol-111-is-pattern IMP-symbol-148-is-pattern IMP-sort-13-is-pattern string-literal-10-is-pattern IMP-symbol-169-is-pattern IMP-symbol-220-is-pattern typecode-cache-Pattern-2 kore-is-sort-is-pattern IMP-symbol-196-is-pattern IMP-sort-14-is-pattern sorting-cache-152 sorting-cache-166 rule-and-intro-alt2-sugar IMP-symbol-196-sorting rule-imp-transitivity ) ATUAKIKIECELBDCJMCFGBNOFGBHPHQBDRSDCJIECELBDMCFGBNOFGBHPHQBDRSDUBUCJATUAKIKIECELBDCJMCFGBNOFGBHPHQBDRSDCJAUDAUEUFECELBDMCFGBNOFGBHPHQBDRSDUGUH $.
sorting-cache-168 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) \top ) ( \in-sort ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) ) ) \kore-sort-SortMap ) ) $= ( kore-dv-is-pattern kore-inj-is-pattern IMP-sort-20-is-pattern BASIC-K-sort-1-is-pattern IMP-sort-17-is-pattern string-literal-11-is-pattern IMP-sort-22-is-pattern and-is-pattern IMP-sort-14-is-pattern in-sort-is-pattern top-is-pattern IMP-symbol-112-is-pattern string-literal-9-is-pattern IMP-sort-26-is-pattern IMP-symbol-111-is-pattern IMP-symbol-148-is-pattern IMP-sort-13-is-pattern string-literal-10-is-pattern IMP-symbol-169-is-pattern IMP-symbol-220-is-pattern IMP-symbol-196-is-pattern typecode-cache-Pattern-2 kore-is-sort-is-pattern IMP-symbol-176-is-pattern sorting-cache-147 sorting-cache-167 rule-and-intro-alt2-sugar IMP-symbol-176-sorting rule-imp-transitivity ) AUCUDLILIMJKDEDNBCOEFGBPQFGBHRHSBCTUACUBJKIMDEDNBCOEFGBPQFGBHRHSBCTUACUBUEJKAUCUDLILIMJKDEDNBCOEFGBPQFGBHRHSBCTUACUBJKAUFAUGUHMDEDNBCOEFGBPQFGBHRHSBCTUACUBUIUJ $.
sorting-rearrange-63 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-top kore-sort-var-R ) ) ) $= ( typecode-cache-Pattern-2 and-is-pattern top-is-pattern kore-is-sort-is-pattern rule-imp-transitivity kore-top-is-pattern kore-valid-is-pattern and-elim-left-sugar rule-weakening imp-reflexivity top-intro rule-and-intro-alt2-sugar kore-top-valid ) ABEDCABEDCDCCABEDCABABGHABEDCABEDCDCCABEDABEDCABEDCDCCABEDCABEABEDCABEDCDCIABEDCABEABEABEDIABEKFFABEDCABEDCDCCDLJMABEDCABABGHABNJF $.
sorting-rearrange-64 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortMap kore-sort-var-R ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) ) ) ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) ) ) ) ( \kore-top kore-sort-var-R ) ) ) ) $= ( and-is-pattern typecode-cache-Pattern-2 top-is-pattern kore-is-sort-is-pattern kore-dv-is-pattern kore-inj-is-pattern IMP-sort-20-is-pattern BASIC-K-sort-1-is-pattern IMP-sort-17-is-pattern string-literal-11-is-pattern IMP-sort-22-is-pattern IMP-symbol-112-is-pattern string-literal-9-is-pattern IMP-sort-26-is-pattern IMP-symbol-111-is-pattern IMP-symbol-148-is-pattern IMP-sort-13-is-pattern string-literal-10-is-pattern IMP-symbol-169-is-pattern IMP-symbol-220-is-pattern IMP-symbol-196-is-pattern IMP-symbol-176-is-pattern IMP-sort-14-is-pattern kore-in-is-pattern kore-top-is-pattern in-sort-is-pattern rule-imp-transitivity kore-valid-is-pattern rule-and-intro-alt2-sugar sorting-cache-58 rule-weakening top-intro and-elim-left-sugar imp-is-pattern proof-rule-prop-1 proof-rule-mp predicate-intro-top rule-predicate-intro-and kore-and-is-pattern kore-in-sorting kore-top-sorting imp-reflexivity kore-is-sort-is-predicate sorting-cache-168 kore-in-reflexivity kore-top-valid kore-and-intro-alt ) ACEDBACEDBACEDBACEDBDBBBACACUDACMHIHNFGOIJKFPQJKFLRLSFGTUAGUBUCMHIHNFGOIJKFPQJKFLRLSFGTUAGUBUCUEACUFUTUIACEDBACEDBACEDBACEDBDBBAUKACEDBACEDBACEDBDBAUKACEDBACEDBDAUKACEDBDUMULUJUJUJACUDACMHIHNFGOIJKFPQJKFLRLSFGTUAGUBUCMHIHNFGOIJKFPQJKFLRLSFGTUAGUBUCUEACUFACEDBACEDBACEDBDBBBUDACMHIHNFGOIJKFPQJKFLRLSFGTUAGUBUCMHIHNFGOIJKFPQJKFLRLSFGTUAGUBUCUEACUGACEDBACEDBACEDBDBBBUDACMHIHNFGOIJKFPQJKFLRLSFGTUAGUBUCMHIHNFGOIJKFPQJKFLRLSFGTUAGUBUCUEACUGUOUDACMHIHNFGOIJKFPQJKFLRLSFGTUAGUBUCMHIHNFGOIJKFPQJKFLRLSFGTUAGUBUCUEACUGACEDBACEDBACEDBDBBBUPUDACMHIHNFGOIJKFPQJKFLRLSFGTUAGUBUCMHIHNFGOIJKFPQJKFLRLSFGTUAGUBUCVAUQACUFACUGACEDBACEDBACEDBDBBBACUFACUGUOACUFACUGACEDBACEDBACEDBDBBBUPACVBUQACEDBACEDBACEDBDBBBACEDBACUDACMHIHNFGOIJKFPQJKFLRLSFGTUAGUBUCMHIHNFGOIJKFPQJKFLRLSFGTUAGUBUCUEUIACEDBACEDBACEDBDBBBACEDACEDBACEDBACEDBDBBBACEDBACEACEDBACEDBACEDBDBBUNACEDBACEACEACEDUNACEVCUHUHACEDBACEDBACEDBDBBBDUMULUJACEDBACEDBDBACUDACMHIHNFGOIJKFPQJKFLRLSFGTUAGUBUCMHIHNFGOIJKFPQJKFLRLSFGTUAGUBUCUEUIACEDBACEDBDAUKACEDBDUMULUJUDACMHIHNFGOIJKFPQJKFLRLSFGTUAGUBUCACEDBDBACEDBDACEDACVDURUSURUSAVEVFUHUHACEDBACEDBACEDBDBBBACEDBACACUFUIACEDBACEDBACEDBDBBUNACEDBACACUFUIACVGULUHVHUH $.
sorting-rearrange-65 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortGeneratedTopCell kore-sort-var-R ( \kore-symbol-LblinitGeneratedTopCell ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) ) ) ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-LblinitTCell ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) ) ) ) \kore-symbol-LblinitGeneratedCounterCell ) ) ( \kore-top kore-sort-var-R ) ) ) ) $= ( typecode-cache-Pattern-2 and-is-pattern kore-dv-is-pattern top-is-pattern kore-is-sort-is-pattern kore-inj-is-pattern IMP-sort-20-is-pattern BASIC-K-sort-1-is-pattern IMP-sort-17-is-pattern string-literal-11-is-pattern IMP-sort-22-is-pattern IMP-symbol-112-is-pattern string-literal-9-is-pattern IMP-sort-26-is-pattern IMP-symbol-111-is-pattern IMP-symbol-148-is-pattern IMP-sort-13-is-pattern string-literal-10-is-pattern IMP-symbol-169-is-pattern IMP-symbol-220-is-pattern IMP-symbol-196-is-pattern IMP-symbol-176-is-pattern kore-top-is-pattern kore-and-is-pattern IMP-sort-14-is-pattern in-sort-is-pattern kore-in-is-pattern rule-imp-transitivity rule-and-intro-alt2-sugar kore-valid-is-pattern sorting-cache-58 and-elim-left-sugar rule-weakening IMP-sort-8-is-pattern IMP-symbol-216-is-pattern IMP-symbol-219-is-pattern IMP-symbol-215-is-pattern IMP-symbol-117-is-pattern kore-equals-is-pattern top-intro imp-is-pattern proof-rule-prop-1 proof-rule-mp kore-top-sorting kore-implies-is-pattern imp-reflexivity sorting-rearrange-62 kore-in-sorting kore-and-sorting kore-top-valid sorting-rearrange-64 kore-and-intro-alt kore-mp-alt ) ABFECABFECABFECABFECECCCABABUOABMHIHNDGOIJKDPQJKDLRLSDGTUAGUBUCUPMHIHNDGOIJKDPQJKDLRLSDGTUAGUBUCUQURUSUTABUDUEUKABFECABFECABFECABFECECCAULABFECABFECABFECECAULABFECABFECEAULABFECEVAUNUJUJUJABABABUDABUFABMHIHNDGOIJKDPQJKDLRLSDGTUAGUBUCMHIHNDGOIJKDPQJKDLRLSDGTUAGUBUCUHABUDUEUEABUOABMHIHNDGOIJKDPQJKDLRLSDGTUAGUBUCUPMHIHNDGOIJKDPQJKDLRLSDGTUAGUBUCUQURUSUTABUDUEABFECABFECABFECECCCABFECABFECABFECECCCABFECABABABABUDABUFABMHIHNDGOIJKDPQJKDLRLSDGTUAGUBUCMHIHNDGOIJKDPQJKDLRLSDGTUAGUBUCUHABUDUEUEABUOABMHIHNDGOIJKDPQJKDLRLSDGTUAGUBUCUPMHIHNDGOIJKDPQJKDLRLSDGTUAGUBUCUQURUSUTABUDUEVFUKABFECABFECABFECECCCABFEABFECABFECABFECECCCABFECABFABFECABFECABFECECCUMABFECABFABFABFEUMABFVGUIUIABFECABFECABFECECCCEVAUNUJAVHUIABFECABFECABFECECCCABFECABABABUDABUFABMHIHNDGOIJKDPQJKDLRLSDGTUAGUBUCMHIHNDGOIJKDPQJKDLRLSDGTUAGUBUCUHABUDUEUEUKABFECABFECABFECECCUMABFECABFECABFECABFECECCCABABABUDABUFABMHIHNDGOIJKDPQJKDLRLSDGTUAGUBUCMHIHNDGOIJKDPQJKDLRLSDGTUAGUBUCUHABUDUEUEUKABFECABFECABFECABFECECCAULABFECABFECABFECECAULABFECABFECEAULABFECEVAUNUJUJUJABABUDABUFABMHIHNDGOIJKDPQJKDLRLSDGTUAGUBUCMHIHNDGOIJKDPQJKDLRLSDGTUAGUBUCUHABUDUEABFECABFECABFECECCCABUDABUGABFECABFECABFECECCCABUDABUGVBABUDABUGABFECABFECABFECECCCVCABVEVDABFECABFECABFECECCCUFABMHIHNDGOIJKDPQJKDLRLSDGTUAGUBUCMHIHNDGOIJKDPQJKDLRLSDGTUAGUBUCUHABUGABUDABUGCABUFABMHIHNDGOIJKDPQJKDLRLSDGTUAGUBUCMHIHNDGOIJKDPQJKDLRLSDGTUAGUBUCUHABUDUEABUGABFECABFECABFECECCCUFABMHIHNDGOIJKDPQJKDLRLSDGTUAGUBUCMHIHNDGOIJKDPQJKDLRLSDGTUAGUBUCUHABUGABUDABUGUFABMHIHNDGOIJKDPQJKDLRLSDGTUAGUBUCMHIHNDGOIJKDPQJKDLRLSDGTUAGUBUCUHABUGABFECABFECABFECECCCUFABMHIHNDGOIJKDPQJKDLRLSDGTUAGUBUCMHIHNDGOIJKDPQJKDLRLSDGTUAGUBUCUHABUGVBUFABMHIHNDGOIJKDPQJKDLRLSDGTUAGUBUCMHIHNDGOIJKDPQJKDLRLSDGTUAGUBUCUHABUGABFECABFECABFECECCCVCUFABMHIHNDGOIJKDPQJKDLRLSDGTUAGUBUCMHIHNDGOIJKDPQJKDLRLSDGTUAGUBUCVIVDABUDABUGABFECABFECABFECECCCABUDABUGVBABUDABUGABFECABFECABFECECCCVCABVEVDUJABUFABMHIHNDGOIJKDPQJKDLRLSDGTUAGUBUCMHIHNDGOIJKDPQJKDLRLSDGTUAGUBUCUHABUDVJUIABFECABFECABFECECCCABFECABABUDUKABFECABFECABFECECCUMABFECABABUDUKABVKUNUIABFECABFECABFECECCCABFECABABUFABMHIHNDGOIJKDPQJKDLRLSDGTUAGUBUCMHIHNDGOIJKDPQJKDLRLSDGTUAGUBUCUHABUDUEUKABFECABFECABFECECCUMAVLUIVMUIUIVNUI $.
sorting-cache-169 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) \top ) ( \kore-is-sort kore-sort-var-R ) ) $= ( typecode-cache-Pattern-2 kore-is-sort-is-pattern top-is-pattern and-is-pattern and-elim-left-sugar rule-imp-transitivity imp-reflexivity ) ABCDEDEABCDEABCABCDEDFABCDEABCABCABCDFABCHGG $.
substitution-204 $p #Substitution \kore-sort-SortGeneratedTopCell \kore-sort-SortGeneratedTopCell \unit-sort kore-sort-var-R $= ( IMP-sort-8-is-pattern unit-sort-is-symbol symbol-is-pattern element-var-is-var substitution-disjoint ) BCDAEF $.
substitution-205 $p #Substitution \kore-sort-SortGeneratedTopCell \kore-sort-SortGeneratedTopCell kore-sort-var-x0 kore-sort-var-R $= ( IMP-sort-8-is-pattern typecode-cache-Pattern-6 element-var-is-var substitution-disjoint ) CBDAEF $.
sorting-rearrange-66 $p |- ( \imp \top ( \kore-valid \unit-sort ( \kore-equals \kore-sort-SortGeneratedTopCell \unit-sort ( \kore-symbol-LblinitGeneratedTopCell ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) ) ) ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-LblinitTCell ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) ) ) ) \kore-symbol-LblinitGeneratedCounterCell ) ) ) ) $= ( kore-dv-is-pattern kore-inj-is-pattern IMP-sort-20-is-pattern BASIC-K-sort-1-is-pattern IMP-sort-17-is-pattern string-literal-11-is-pattern IMP-sort-22-is-pattern kore-sort-var-R-elementvariable typecode-cache-Pattern-2 top-is-pattern and-is-pattern IMP-symbol-112-is-pattern string-literal-9-is-pattern IMP-sort-26-is-pattern IMP-symbol-111-is-pattern IMP-symbol-148-is-pattern IMP-sort-13-is-pattern string-literal-10-is-pattern IMP-symbol-169-is-pattern IMP-symbol-220-is-pattern IMP-symbol-196-is-pattern IMP-symbol-176-is-pattern kore-is-sort-is-pattern IMP-symbol-216-is-pattern IMP-symbol-219-is-pattern IMP-symbol-215-is-pattern IMP-symbol-117-is-pattern IMP-sort-8-is-pattern unit-sort-is-symbol symbol-is-pattern kore-equals-is-pattern kore-sort-var-x0-elementvariable typecode-cache-Pattern-6 element-var-is-var kore-valid-is-pattern rule-imp-transitivity rule-weakening rule-and-intro-alt2-sugar top-intro x-is-element-var substitution-var-same substitution-disjoint in-sort-is-pattern sorting-cache-58 and-elim-left-sugar substitution-kore-equals substitution-kore-valid substitution-imp sorting-cache-49 typecode-cache-Pattern-1 exists-is-pattern unit-sort-is-functional sorting-cache-47 imp-is-pattern proof-rule-prop-1 kore-equals-sorting proof-rule-mp kore-top-is-pattern kore-and-is-pattern imp-reflexivity sorting-rearrange-65 kore-anp-top substitution-2 substitution-204 substitution-9 substitution-205 functional-substitution-alt ) JJUIUJUCJKKUIUJUHUIUJLCDCMABNDEFAOPEFAGQGRABSTBUAUBUDLCDCMABNDEFAOPEFAGQGRABSTBUAUBUEUFUGUKUOJJUIUJUCJKJJUSUQVIURUIUJHIUHHILCDCMABNDEFAOPEFAGQGRABSTBUAUBUDLCDCMABNDEFAOPEFAGQGRABSTBUAUBUEUFUGUKUOUIUJUHUIUJLCDCMABNDEFAOPEFAGQGRABSTBUAUBUDLCDCMABNDEFAOPEFAGQGRABSTBUAUBUEUFUGUKUOULUMUHULUMLCDCMABNDEFAOPEFAGQGRABSTBUAUBUDLCDCMABNDEFAOPEFAGQGRABSTBUAUBUEUFUGUKUOJHIUCJKUIUJUCJKULUMUCJKUTHULJUTVJUTVKUTVLUQJHIUCJKKHIUCJKHIUHHILCDCMABNDEFAOPEFAGQGRABSTBUAUBUDLCDCMABNDEFAOPEFAGQGRABSTBUAUBUEUFUGUKUOJHIUCJKKHIUCJHVMJHIUCJKKJUSUQURHIUCJKHIUCJKHIUCJKJKKHIUHHILCDCMABNDEFAOPEFAGQGRABSTBUAUBUDLCDCMABNDEFAOPEFAGQGRABSTBUAUBUEUFUGUKUOHIUCJKHIUCJKHIUCJKJKHVDHIUCJKHIUCJKJHVDHIUCJKJUSUQURURHIUHHILCDCMABNDEFAOPEFAGQGRABSTBUAUBUDLCDCMABNDEFAOPEFAGQGRABSTBUAUBUEUFUGUKHIUCJKHIUCJKJKKUHHILCDCMABNDEFAOPEFAGQGRABSTBUAUBUDLCDCMABNDEFAOPEFAGQGRABSTBUAUBUEUFUGUKHIVCHIUCJKHIUCJKJKKUHHILCDCMABNDEFAOPEFAGQGRABSTBUAUBUDLCDCMABNDEFAOPEFAGQGRABSTBUAUBUEUFUGUKHIVCVNUHHILCDCMABNDEFAOPEFAGQGRABSTBUAUBUDLCDCMABNDEFAOPEFAGQGRABSTBUAUBUEUFUGUKHIVCHIUCJKHIUCJKJKKVOUHHILCDCMABNDEFAOPEFAGQGRABSTBUAUBUDLCDCMABNDEFAOPEFAGQGRABSTBUAUBUEUFUGVPVQHIUCJKHIUCJKJKKHIUCJKHIHIUHHILCDCMABNDEFAOPEFAGQGRABSTBUAUBUDLCDCMABNDEFAOPEFAGQGRABSTBUAUBUEUFUGUKHIVRVSUOHIUCJKHIUCJKJKKHIUCJHIUCJKHIUCJKJKKHIUCJKHIUCHIUCJKHIUCJKJKVEHIUCJKHIUCHIUCHIUCJVEHIUCVTUPUPHIUCJKHIUCJKJKKJUSUQURHWAUPWBUPUPUIUJUIUJUCJKUIUJUHUIUJLCDCMABNDEFAOPEFAGQGRABSTBUAUBUDLCDCMABNDEFAOPEFAGQGRABSTBUAUBUEUFUGUKUOHIUCJKHIUHHILCDCMABNDEFAOPEFAGQGRABSTBUAUBUDLCDCMABNDEFAOPEFAGQGRABSTBUAUBUEUFUGUKUOHUNHWCUIUJUHUIUJLCDCMABNDEFAOPEFAGQGRABSTBUAUBUDLCDCMABNDEFAOPEFAGQGRABSTBUAUBUEUFUGUKHIUHHILCDCMABNDEFAOPEFAGQGRABSTBUAUBUDLCDCMABNDEFAOPEFAGQGRABSTBUAUBUEUFUGUKUIUJHUNUIUJHUNVAUHUIUJLCDCMABNDEFAOPEFAGQGRABSTBUAUBUDLCDCMABNDEFAOPEFAGQGRABSTBUAUBUEUFUGUHHILCDCMABNDEFAOPEFAGQGRABSTBUAUBUDLCDCMABNDEFAOPEFAGQGRABSTBUAUBUEUFUGUIUJHUNHWDUIUJHUNVALCDCMABNDEFAOPEFAGQGRABSTBUAUBUDUIUJHUNVBLCDCMABNDEFAOPEFAGQGRABSTBUAUBUEUFUGUIUJHUNVBVFVGVHULUMULUMUCJKULUMUHULUMLCDCMABNDEFAOPEFAGQGRABSTBUAUBUDLCDCMABNDEFAOPEFAGQGRABSTBUAUBUEUFUGUKUOHIUCJKHIUHHILCDCMABNDEFAOPEFAGQGRABSTBUAUBUDLCDCMABNDEFAOPEFAGQGRABSTBUAUBUEUFUGUKUOHUNHULWEULUMUHULUMLCDCMABNDEFAOPEFAGQGRABSTBUAUBUDLCDCMABNDEFAOPEFAGQGRABSTBUAUBUEUFUGUKHIUHHILCDCMABNDEFAOPEFAGQGRABSTBUAUBUDLCDCMABNDEFAOPEFAGQGRABSTBUAUBUEUFUGUKULUMHUNULUMHUNVAUHULUMLCDCMABNDEFAOPEFAGQGRABSTBUAUBUDLCDCMABNDEFAOPEFAGQGRABSTBUAUBUEUFUGUHHILCDCMABNDEFAOPEFAGQGRABSTBUAUBUDLCDCMABNDEFAOPEFAGQGRABSTBUAUBUEUFUGULUMHUNHULWFULUMHUNVALCDCMABNDEFAOPEFAGQGRABSTBUAUBUDULUMHUNVBLCDCMABNDEFAOPEFAGQGRABSTBUAUBUEUFUGULUMHUNVBVFVGVHWGUP $.
sorting-cache-170 $p |- ( \imp \top ( \in-sort \kore-symbol-LblinitGeneratedCounterCell \kore-sort-SortGeneratedCounterCell ) ) $= ( IMP-symbol-215-is-pattern IMP-sort-10-is-pattern in-sort-is-pattern top-is-pattern imp-is-pattern proof-rule-prop-1 IMP-symbol-215-sorting proof-rule-mp ) ABCDABCEABCDFGH $.
sorting-cache-171 $p |- ( \imp \top ( \in-sort ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-LblinitTCell ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) ) ) ) \kore-symbol-LblinitGeneratedCounterCell ) \kore-sort-SortGeneratedTopCell ) ) $= ( kore-dv-is-pattern kore-inj-is-pattern IMP-sort-20-is-pattern BASIC-K-sort-1-is-pattern IMP-sort-17-is-pattern string-literal-11-is-pattern IMP-sort-22-is-pattern IMP-symbol-112-is-pattern string-literal-9-is-pattern IMP-sort-26-is-pattern IMP-symbol-111-is-pattern IMP-symbol-148-is-pattern IMP-sort-13-is-pattern string-literal-10-is-pattern IMP-symbol-169-is-pattern IMP-symbol-220-is-pattern IMP-symbol-196-is-pattern IMP-symbol-176-is-pattern in-sort-is-pattern IMP-symbol-219-is-pattern IMP-symbol-215-is-pattern top-is-pattern IMP-sort-29-is-pattern IMP-sort-10-is-pattern rule-imp-transitivity and-is-pattern IMP-symbol-117-is-pattern IMP-sort-8-is-pattern IMP-sort-14-is-pattern sorting-cache-45 IMP-symbol-219-sorting sorting-cache-170 rule-and-intro-alt2-sugar IMP-symbol-117-sorting ) UBHCDCIABJDEFAKLEFAGMGNABOPBQRTUCSUAUDSUFHCDCIABJDEFAKLEFAGMGNABOPBQRTUAUGUHSUBHCDCIABJDEFAKLEFAGMGNABOPBQRTUCSUAUDSUBHCDCIABJDEFAKLEFAGMGNABOPBQRUISHCDCIABJDEFAKLEFAGMGNABOPBQRTUCSUJHCDCIABJDEFAKLEFAGMGNABOPBQRUKUEULUMHCDCIABJDEFAKLEFAGMGNABOPBQRTUAUNUE $.
typecode-cache-Pattern-80 $p #Pattern ( \kore-equals \kore-sort-SortTCell kore-sort-var-R ( \kore-symbol-LblinitTCell kore-element-var-VE0 ) ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-LblinitKCell kore-element-var-VE1 ) \kore-symbol-LblinitStateCell ) ) $= ( IMP-sort-29-is-pattern typecode-cache-Pattern-2 typecode-cache-Pattern-74 IMP-symbol-219-is-pattern typecode-cache-Pattern-72 IMP-symbol-217-is-pattern IMP-symbol-218-is-pattern IMP-symbol-114-is-pattern kore-equals-is-pattern ) DAEBFGCHIJKL $.
sorting-rearrange-67 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortMap ) \top ) ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortMap ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortMap kore-sort-var-R kore-element-var-VE0 kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortTCell kore-sort-var-R ( \kore-symbol-LblinitTCell kore-element-var-VE0 ) ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-LblinitKCell kore-element-var-VE1 ) \kore-symbol-LblinitStateCell ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $= ( typecode-cache-Pattern-2 and-is-pattern IMP-sort-14-is-pattern in-sort-is-pattern typecode-cache-Pattern-73 typecode-cache-Pattern-74 top-is-pattern kore-top-is-pattern kore-and-is-pattern kore-is-sort-is-pattern rule-imp-transitivity typecode-cache-Pattern-75 typecode-cache-Pattern-76 typecode-cache-Pattern-80 kore-implies-is-pattern kore-valid-is-pattern typecode-cache-Pattern-72 and-elim-left-sugar sorting-cache-128 sorting-cache-130 rule-and-intro-alt2-sugar IMP-axiom-2954 ) ACHBIFGJEEABCOADADADADKADABCPADKLLADABCQADKLRSACHBIFGJEEADMBIFGCTFGJEEACHBIFGJEEACHADMACHBIFGJEUAACUBNABCUCUDABCUEN $.
typecode-cache-Pattern-81 $p #Pattern ( \kore-equals \kore-sort-SortTCell kore-sort-var-R ( \kore-symbol-LblinitTCell kore-element-var-x0 ) ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-LblinitKCell kore-element-var-VE1 ) \kore-symbol-LblinitStateCell ) ) $= ( IMP-sort-29-is-pattern typecode-cache-Pattern-2 typecode-cache-Pattern-16 IMP-symbol-219-is-pattern typecode-cache-Pattern-72 IMP-symbol-217-is-pattern IMP-symbol-218-is-pattern IMP-symbol-114-is-pattern kore-equals-is-pattern ) DAECFGBHIJKL $.
substitution-206 $p #Substitution \kore-sort-SortTCell \kore-sort-SortTCell kore-element-var-x0 kore-element-var-VE0 $= ( IMP-sort-29-is-pattern typecode-cache-Pattern-16 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-207 $p #Substitution ( \kore-symbol-LblinitTCell kore-element-var-x0 ) ( \kore-symbol-LblinitTCell kore-element-var-VE0 ) kore-element-var-x0 kore-element-var-VE0 $= ( typecode-cache-Pattern-16 element-var-is-var typecode-cache-Pattern-74 substitution-var-same IMP-symbol-219-substitution ) ADBCBCAEBCADFG $.
substitution-208 $p #Substitution ( \kore-equals \kore-sort-SortTCell kore-sort-var-R ( \kore-symbol-LblinitTCell kore-element-var-x0 ) ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-LblinitKCell kore-element-var-VE1 ) \kore-symbol-LblinitStateCell ) ) ( \kore-equals \kore-sort-SortTCell kore-sort-var-R ( \kore-symbol-LblinitTCell kore-element-var-VE0 ) ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-LblinitKCell kore-element-var-VE1 ) \kore-symbol-LblinitStateCell ) ) kore-element-var-x0 kore-element-var-VE0 $= ( typecode-cache-Pattern-16 typecode-cache-Pattern-72 IMP-symbol-217-is-pattern IMP-symbol-218-is-pattern IMP-symbol-114-is-pattern IMP-sort-29-is-pattern typecode-cache-Pattern-2 IMP-symbol-219-is-pattern element-var-is-var typecode-cache-Pattern-74 substitution-206 substitution-185 substitution-207 substitution-disjoint substitution-kore-equals ) JAKDELCFGHIJAKBNLCFGHIDEBMBDOABDPBDQCFGHIDEBMRS $.
sorting-rearrange-68 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortMap ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortMap kore-sort-var-R ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) ) ) kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortTCell kore-sort-var-R ( \kore-symbol-LblinitTCell ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) ) ) ) ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-LblinitKCell kore-element-var-VE1 ) \kore-symbol-LblinitStateCell ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $= ( kore-dv-is-pattern kore-inj-is-pattern typecode-cache-Pattern-2 IMP-sort-20-is-pattern BASIC-K-sort-1-is-pattern IMP-sort-17-is-pattern string-literal-11-is-pattern IMP-sort-22-is-pattern kore-element-var-VE0-elementvariable kore-top-is-pattern IMP-symbol-112-is-pattern string-literal-9-is-pattern IMP-sort-26-is-pattern IMP-symbol-111-is-pattern IMP-symbol-148-is-pattern IMP-sort-13-is-pattern string-literal-10-is-pattern IMP-symbol-169-is-pattern IMP-symbol-220-is-pattern IMP-symbol-196-is-pattern IMP-symbol-176-is-pattern kore-and-is-pattern element-var-is-var IMP-sort-14-is-pattern kore-element-var-x0-elementvariable typecode-cache-Pattern-72 top-is-pattern substitution-disjoint in-sort-is-pattern kore-implies-is-pattern and-is-pattern typecode-cache-Pattern-73 IMP-sort-29-is-pattern IMP-symbol-217-is-pattern IMP-symbol-218-is-pattern IMP-symbol-114-is-pattern typecode-cache-Pattern-76 typecode-cache-Pattern-80 IMP-symbol-219-is-pattern kore-valid-is-pattern typecode-cache-Pattern-74 kore-in-is-pattern kore-equals-is-pattern typecode-cache-Pattern-16 typecode-cache-Pattern-81 kore-element-var-V0-elementvariable typecode-cache-Pattern-78 substitution-kore-and rule-imp-transitivity substitution-var-same substitution-185 top-intro rule-weakening rule-and-intro-alt2-sugar substitution-kore-implies substitution-kore-valid substitution-imp sorting-cache-131 sorting-cache-141 IMP-symbol-176-sorting typecode-cache-Pattern-12 eq-is-pattern exists-is-pattern sorting-cache-45 sorting-rearrange-58 kore-functional sorting-rearrange-67 substitution-in-sort substitution-and substitution-kore-in IMP-symbol-219-substitution substitution-kore-equals substitution-184 substitution-190 substitution-208 substitution-186 functional-substitution-alt ) ABUNABUNMFGFNCDOGHICPQHICJRJSCDTUADUBUCUFUKUIUMUMAEAEAEAELAEUFAEMFGFNCDOGHICPQHICJRJSCDTUADUBUCBUHVDAELUDUDAEUOAEMFGFNCDOGHICPQHICJRJSCDTUADUBUCVABUHUPUQURVEAELUDULVBABUNABUNMFGFNCDOGHICPQHICJRJSCDTUADUBUCUFUKUIUMABVTABUNMFGFNCDOGHICPQHICJRJSCDTUADUBUCUFUKUIABUNMUFUKFGFNCDOGHICPQHICJRJSCDTUADUBUFUKUMMFGFNCDOGHICPQHICJRJSCDTUADUBUCUFUKABWAMFGFNCDOGHICPQHICJRJSCDTUADUBWBVKABUNUIVNVOVPVPMFGFNCDOGHICPQHICJRJSCDTUADUBUCAEAEAEAELAEAKBUSAELUDUDAEAKBUTAELUDULVBAEAEAEAELAEUFAEMFGFNCDOGHICPQHICJRJSCDTUADUBUCBUHVDAELUDUDAEUOAEMFGFNCDOGHICPQHICJRJSCDTUADUBUCVABUHUPUQURVEAELUDULVBAEAEAEAELAEABUGVIAELUDUDAEABUGVGAELUDULVBABUNKVCUFUKUIUMMFGFNCDOGHICPQHICJRJSCDTUADUBUCUFUKUIUMUGVFUFUKUIUMVHKUGABUNUIVHWCMFGFNCDOGHICPQHICJRJSCDTUADUBUCWDVHWEABUNUIVNVOUFMFGFNCDOGHICPQHICJRJSCDTUADUBUCUIVHWFVHWGWHVKAKBWIMFGFNCDOGHICPQHICJRJSCDTUADUBUCMFGFNCDOGHICPQHICJRJSCDTUADUBUCUFUKUIUMAEAEAEAELAEUFAEMFGFNCDOGHICPQHICJRJSCDTUADUBUCBUHVDAELUDUDAEUOAEMFGFNCDOGHICPQHICJRJSCDTUADUBUCVABUHUPUQURVEAELUDULVBKVCUFUKUIUMAEAEAEAELAEAKBUSAELUDUDAEAKBUTAELUDULVBKUEMFGFNCDOGHICPQHICJRJSCDTUADUBUCMFGFNCDOGHICPQHICJRJSCDTUADUBUCUFUKUIKVCUFUKUIKUEMFGFNCDOGHICPQHICJRJSCDTUADUBUCMFGFNCDOGHICPQHICJRJSCDTUADUBUCUFKVCUFKUEMFGFNCDOGHICPQHICJRJSCDTUADUBUCKUEVLUFMFGFNCDOGHICPQHICJRJSCDTUADUBUCKUEUJWJUIMFGFNCDOGHICPQHICJRJSCDTUADUBUCKUEUJWKAEAEAEAELAEUFAEMFGFNCDOGHICPQHICJRJSCDTUADUBUCBUHVDAELUDUDAEUOAEMFGFNCDOGHICPQHICJRJSCDTUADUBUCVABUHUPUQURVEAELUDULAEAEAEAELAEAKBUSAELUDUDAEAKBUTAELUDULMFGFNCDOGHICPQHICJRJSCDTUADUBUCKUEAEMFGFNCDOGHICPQHICJRJSCDTUADUBUCKUEUJAEAEAELAEUFAEMFGFNCDOGHICPQHICJRJSCDTUADUBUCBUHVDAELUDUDAEUOAEMFGFNCDOGHICPQHICJRJSCDTUADUBUCVABUHUPUQURVEAELUDAEAEAELAEAKBUSAELUDUDAEAKBUTAELUDMFGFNCDOGHICPQHICJRJSCDTUADUBUCKUEAEMFGFNCDOGHICPQHICJRJSCDTUADUBUCKUEUJAEAELAEUFAEMFGFNCDOGHICPQHICJRJSCDTUADUBUCBUHVDAELUDAEAELAEAKBUSAELUDMFGFNCDOGHICPQHICJRJSCDTUADUBUCKUEAEMFGFNCDOGHICPQHICJRJSCDTUADUBUCKUEUJAELMFGFNCDOGHICPQHICJRJSCDTUADUBUCKUEUJAEUFAEMFGFNCDOGHICPQHICJRJSCDTUADUBUCBUHVDAELAEAKBUSAELMFGFNCDOGHICPQHICJRJSCDTUADUBUCKUEAEMFGFNCDOGHICPQHICJRJSCDTUADUBUCKUEUJUFAEMFGFNCDOGHICPQHICJRJSCDTUADUBUCBUHUFAEKVCBUHMFGFNCDOGHICPQHICJRJSCDTUADUBUCKUEUFMFGFNCDOGHICPQHICJRJSCDTUADUBUCKUEUJAEMFGFNCDOGHICPQHICJRJSCDTUADUBUCKUEUJMFGFNCDOGHICPQHICJRJSCDTUADUBUCKUEVLBUHMFGFNCDOGHICPQHICJRJSCDTUADUBUCKUEUJWLAELMFGFNCDOGHICPQHICJRJSCDTUADUBUCKUEUJVJVJAEUOAEMFGFNCDOGHICPQHICJRJSCDTUADUBUCVABUHUPUQURVEAELAEAKBUTAELMFGFNCDOGHICPQHICJRJSCDTUADUBUCKUEAEMFGFNCDOGHICPQHICJRJSCDTUADUBUCKUEUJUOAEMFGFNCDOGHICPQHICJRJSCDTUADUBUCVABUHUPUQURUOAEKVCVABUHUPUQURMFGFNCDOGHICPQHICJRJSCDTUADUBUCKUEUOMFGFNCDOGHICPQHICJRJSCDTUADUBUCKUEUJAEMFGFNCDOGHICPQHICJRJSCDTUADUBUCKUEUJKUEMFGFNCDOGHICPQHICJRJSCDTUADUBUCMFGFNCDOGHICPQHICJRJSCDTUADUBUCKVCMFGFNCDOGHICPQHICJRJSCDTUADUBUCKUEVLWMBUHUPUQURMFGFNCDOGHICPQHICJRJSCDTUADUBUCKUEUJWNAELMFGFNCDOGHICPQHICJRJSCDTUADUBUCKUEUJVJVQVRVSUGVFUGVFUFUKUIUMAEAEAEAELAEABUGVIAELUDUDAEABUGVGAELUDULVBKVCUFUKUIUMAEAEAEAELAEAKBUSAELUDUDAEAKBUTAELUDULVBKUEKUGWOAEAEAEAELAEABUGVIAELUDUDAEABUGVGAELUDULAEAEAEAELAEAKBUSAELUDUDAEAKBUTAELUDULUGVFKUEAKUGVMAEAEAELAEABUGVIAELUDUDAEABUGVGAELUDAEAEAELAEAKBUSAELUDUDAEAKBUTAELUDUGVFKUEAKUGVMAKBUGWPAEABUGVGAELAEAKBUTAELUGVFKUEAKUGVMAKBUGWQAKUGWRVJVQVRVSWSVK $.
substitution-209 $p #Substitution \kore-sort-SortTCell \kore-sort-SortTCell kore-element-var-x0 kore-element-var-VE1 $= ( IMP-sort-29-is-pattern typecode-cache-Pattern-16 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-210 $p #Substitution ( \kore-symbol-LblinitKCell kore-element-var-x0 ) ( \kore-symbol-LblinitKCell kore-element-var-VE1 ) kore-element-var-x0 kore-element-var-VE1 $= ( typecode-cache-Pattern-16 element-var-is-var typecode-cache-Pattern-72 substitution-var-same IMP-symbol-217-substitution ) ADBCBCAEBCADFG $.
substitution-211 $p #Substitution \kore-symbol-LblinitStateCell \kore-symbol-LblinitStateCell kore-element-var-x0 kore-element-var-VE1 $= ( IMP-symbol-218-is-pattern typecode-cache-Pattern-16 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-212 $p #Substitution ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-LblinitKCell kore-element-var-x0 ) \kore-symbol-LblinitStateCell ) ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-LblinitKCell kore-element-var-VE1 ) \kore-symbol-LblinitStateCell ) kore-element-var-x0 kore-element-var-VE1 $= ( typecode-cache-Pattern-16 IMP-symbol-217-is-pattern IMP-symbol-218-is-pattern element-var-is-var typecode-cache-Pattern-72 substitution-210 substitution-211 IMP-symbol-114-substitution ) AFBCBCDEAGDEABHABIJ $.
sorting-rearrange-69 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortMap kore-sort-var-R ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) ) ) ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) ) ) ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortTCell kore-sort-var-R ( \kore-symbol-LblinitTCell ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) ) ) ) ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-LblinitKCell ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) ) ) ) \kore-symbol-LblinitStateCell ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $= ( kore-dv-is-pattern kore-inj-is-pattern typecode-cache-Pattern-2 IMP-sort-20-is-pattern BASIC-K-sort-1-is-pattern IMP-sort-17-is-pattern string-literal-11-is-pattern IMP-sort-22-is-pattern IMP-symbol-112-is-pattern string-literal-9-is-pattern IMP-sort-26-is-pattern IMP-symbol-111-is-pattern IMP-symbol-148-is-pattern IMP-sort-13-is-pattern string-literal-10-is-pattern IMP-symbol-169-is-pattern IMP-symbol-220-is-pattern IMP-symbol-196-is-pattern IMP-symbol-176-is-pattern kore-element-var-VE1-elementvariable kore-top-is-pattern kore-and-is-pattern IMP-sort-14-is-pattern element-var-is-var kore-element-var-x0-elementvariable typecode-cache-Pattern-72 IMP-symbol-218-is-pattern IMP-symbol-219-is-pattern IMP-symbol-217-is-pattern IMP-sort-29-is-pattern typecode-cache-Pattern-16 kore-in-is-pattern IMP-symbol-114-is-pattern top-is-pattern kore-equals-is-pattern and-is-pattern substitution-disjoint in-sort-is-pattern kore-implies-is-pattern kore-valid-is-pattern kore-is-sort-is-pattern substitution-198 substitution-kore-and substitution-var-same substitution-199 rule-and-intro-alt2-sugar kore-element-var-V0-elementvariable rule-imp-transitivity substitution-kore-in substitution-kore-equals substitution-kore-implies substitution-kore-valid substitution-imp sorting-cache-58 sorting-cache-146 top-intro rule-weakening sorting-rearrange-61 typecode-cache-Pattern-73 sorting-cache-144 sorting-rearrange-68 substitution-in-sort substitution-and IMP-symbol-217-substitution IMP-symbol-114-substitution substitution-197 substitution-194 substitution-209 substitution-212 functional-substitution-alt ) ADVBUOUQADVBUOUQJEFEKBCLFGHBMNGHBIOIPBCQRCSTUDUSUOUQUQADADADADUBADUDADJEFEKBCLFGHBMNGHBIOIPBCQRCSTJEFEKBCLFGHBMNGHBIOIPBCQRCSTUMADUBUCUCADUKADJEFEKBCLFGHBMNGHBIOIPBCQRCSTUIJEFEKBCLFGHBMNGHBIOIPBCQRCSTUJUHUNUPADUBUCUTVAADVBUOUQADVBUOUQJEFEKBCLFGHBMNGHBIOIPBCQRCSTUDUSUOUQAVOADVBUOUQJEFEKBCLFGHBMNGHBIOIPBCQRCSTUDUSUOAVPADVBUOUQUOVQVRVGVGJEFEKBCLFGHBMNGHBIOIPBCQRCSTADADADADUBADUDADJEFEKBCLFGHBMNGHBIOIPBCQRCSTUAUGUMADUBUCUCADUKADJEFEKBCLFGHBMNGHBIOIPBCQRCSTUIUAUGUJUHUNUPADUBUCUTVAADADADADUBADUDADJEFEKBCLFGHBMNGHBIOIPBCQRCSTJEFEKBCLFGHBMNGHBIOIPBCQRCSTUMADUBUCUCADUKADJEFEKBCLFGHBMNGHBIOIPBCQRCSTUIJEFEKBCLFGHBMNGHBIOIPBCQRCSTUJUHUNUPADUBUCUTVAADADADADUBADUDADJEFEKBCLFGHBMNGHBIOIPBCQRCSTUFULUMADUBUCUCADUKADJEFEKBCLFGHBMNGHBIOIPBCQRCSTUIUFULUJUHUNUPADUBUCUTVAADVBUOUQUAUGUDUSUOUQJEFEKBCLFGHBMNGHBIOIPBCQRCSTUDUSUOUQUFULUDUSUOUQVHUAUFAVHVSADVBUOUQUAUGUDUSUOUQUQAUAVTADADADADUBADUDADJEFEKBCLFGHBMNGHBIOIPBCQRCSTUAUGUMADUBUCUCADUKADJEFEKBCLFGHBMNGHBIOIPBCQRCSTUIUAUGUJUHUNUPADUBUCUTVAAUAWAAUAWBVIJEFEKBCLFGHBMNGHBIOIPBCQRCSTJEFEKBCLFGHBMNGHBIOIPBCQRCSTUDUSUOUQADADADADUBADUDADJEFEKBCLFGHBMNGHBIOIPBCQRCSTJEFEKBCLFGHBMNGHBIOIPBCQRCSTUMADUBUCUCADUKADJEFEKBCLFGHBMNGHBIOIPBCQRCSTUIJEFEKBCLFGHBMNGHBIOIPBCQRCSTUJUHUNUPADUBUCUTVAUAUGUDUSUOUQADADADADUBADUDADJEFEKBCLFGHBMNGHBIOIPBCQRCSTUAUGUMADUBUCUCADUKADJEFEKBCLFGHBMNGHBIOIPBCQRCSTUIUAUGUJUHUNUPADUBUCUTVAUAUEJEFEKBCLFGHBMNGHBIOIPBCQRCSTJEFEKBCLFGHBMNGHBIOIPBCQRCSTUDUSUOUAUGUDUSUOUAUEJEFEKBCLFGHBMNGHBIOIPBCQRCSTJEFEKBCLFGHBMNGHBIOIPBCQRCSTUDUAUGUDUAUEJEFEKBCLFGHBMNGHBIOIPBCQRCSTUAUEVEUDJEFEKBCLFGHBMNGHBIOIPBCQRCSTUAUEURWCUOJEFEKBCLFGHBMNGHBIOIPBCQRCSTUAUEURWDADADADADUBADUDADJEFEKBCLFGHBMNGHBIOIPBCQRCSTJEFEKBCLFGHBMNGHBIOIPBCQRCSTUMADUBUCUCADUKADJEFEKBCLFGHBMNGHBIOIPBCQRCSTUIJEFEKBCLFGHBMNGHBIOIPBCQRCSTUJUHUNUPADUBUCUTADADADADUBADUDADJEFEKBCLFGHBMNGHBIOIPBCQRCSTUAUGUMADUBUCUCADUKADJEFEKBCLFGHBMNGHBIOIPBCQRCSTUIUAUGUJUHUNUPADUBUCUTJEFEKBCLFGHBMNGHBIOIPBCQRCSTUAUEADJEFEKBCLFGHBMNGHBIOIPBCQRCSTUAUEURADADADUBADUDADJEFEKBCLFGHBMNGHBIOIPBCQRCSTJEFEKBCLFGHBMNGHBIOIPBCQRCSTUMADUBUCUCADUKADJEFEKBCLFGHBMNGHBIOIPBCQRCSTUIJEFEKBCLFGHBMNGHBIOIPBCQRCSTUJUHUNUPADUBUCADADADUBADUDADJEFEKBCLFGHBMNGHBIOIPBCQRCSTUAUGUMADUBUCUCADUKADJEFEKBCLFGHBMNGHBIOIPBCQRCSTUIUAUGUJUHUNUPADUBUCJEFEKBCLFGHBMNGHBIOIPBCQRCSTUAUEADJEFEKBCLFGHBMNGHBIOIPBCQRCSTUAUEURADADUBADUDADJEFEKBCLFGHBMNGHBIOIPBCQRCSTJEFEKBCLFGHBMNGHBIOIPBCQRCSTUMADUBUCADADUBADUDADJEFEKBCLFGHBMNGHBIOIPBCQRCSTUAUGUMADUBUCJEFEKBCLFGHBMNGHBIOIPBCQRCSTUAUEADJEFEKBCLFGHBMNGHBIOIPBCQRCSTUAUEURADUBJEFEKBCLFGHBMNGHBIOIPBCQRCSTUAUEURADUDADJEFEKBCLFGHBMNGHBIOIPBCQRCSTJEFEKBCLFGHBMNGHBIOIPBCQRCSTUMADUBADUDADJEFEKBCLFGHBMNGHBIOIPBCQRCSTUAUGUMADUBJEFEKBCLFGHBMNGHBIOIPBCQRCSTUAUEADJEFEKBCLFGHBMNGHBIOIPBCQRCSTUAUEURUDADJEFEKBCLFGHBMNGHBIOIPBCQRCSTJEFEKBCLFGHBMNGHBIOIPBCQRCSTUDADJEFEKBCLFGHBMNGHBIOIPBCQRCSTUAUGJEFEKBCLFGHBMNGHBIOIPBCQRCSTUAUEUDJEFEKBCLFGHBMNGHBIOIPBCQRCSTUAUEURADJEFEKBCLFGHBMNGHBIOIPBCQRCSTUAUEURJEFEKBCLFGHBMNGHBIOIPBCQRCSTJEFEKBCLFGHBMNGHBIOIPBCQRCSTUAUEURJEFEKBCLFGHBMNGHBIOIPBCQRCSTUAUEVEVJADUBJEFEKBCLFGHBMNGHBIOIPBCQRCSTUAUEURVDVDADUKADJEFEKBCLFGHBMNGHBIOIPBCQRCSTUIJEFEKBCLFGHBMNGHBIOIPBCQRCSTUJUHUNUPADUBADUKADJEFEKBCLFGHBMNGHBIOIPBCQRCSTUIUAUGUJUHUNUPADUBJEFEKBCLFGHBMNGHBIOIPBCQRCSTUAUEADJEFEKBCLFGHBMNGHBIOIPBCQRCSTUAUEURUKADJEFEKBCLFGHBMNGHBIOIPBCQRCSTUIJEFEKBCLFGHBMNGHBIOIPBCQRCSTUJUHUNUKADJEFEKBCLFGHBMNGHBIOIPBCQRCSTUIUAUGUJUHUNJEFEKBCLFGHBMNGHBIOIPBCQRCSTUAUEUKJEFEKBCLFGHBMNGHBIOIPBCQRCSTUAUEURADJEFEKBCLFGHBMNGHBIOIPBCQRCSTUAUEURJEFEKBCLFGHBMNGHBIOIPBCQRCSTUIJEFEKBCLFGHBMNGHBIOIPBCQRCSTUAUEURUAUEJEFEKBCLFGHBMNGHBIOIPBCQRCSTJEFEKBCLFGHBMNGHBIOIPBCQRCSTUJUHUAUGUJUHUAUEJEFEKBCLFGHBMNGHBIOIPBCQRCSTJEFEKBCLFGHBMNGHBIOIPBCQRCSTUAUGJEFEKBCLFGHBMNGHBIOIPBCQRCSTUAUEVEWEUHJEFEKBCLFGHBMNGHBIOIPBCQRCSTUAUEURWFVKADUBJEFEKBCLFGHBMNGHBIOIPBCQRCSTUAUEURVDVLVMVNUFULUFULUDUSUOUQADADADADUBADUDADJEFEKBCLFGHBMNGHBIOIPBCQRCSTUFULUMADUBUCUCADUKADJEFEKBCLFGHBMNGHBIOIPBCQRCSTUIUFULUJUHUNUPADUBUCUTVAUAUGUDUSUOUQADADADADUBADUDADJEFEKBCLFGHBMNGHBIOIPBCQRCSTUAUGUMADUBUCUCADUKADJEFEKBCLFGHBMNGHBIOIPBCQRCSTUIUAUGUJUHUNUPADUBUCUTVAUAUEUAUFWGADADADADUBADUDADJEFEKBCLFGHBMNGHBIOIPBCQRCSTUFULUMADUBUCUCADUKADJEFEKBCLFGHBMNGHBIOIPBCQRCSTUIUFULUJUHUNUPADUBUCUTADADADADUBADUDADJEFEKBCLFGHBMNGHBIOIPBCQRCSTUAUGUMADUBUCUCADUKADJEFEKBCLFGHBMNGHBIOIPBCQRCSTUIUAUGUJUHUNUPADUBUCUTUFULUAUEAUAUFVCADADADUBADUDADJEFEKBCLFGHBMNGHBIOIPBCQRCSTUFULUMADUBUCUCADUKADJEFEKBCLFGHBMNGHBIOIPBCQRCSTUIUFULUJUHUNUPADUBUCADADADUBADUDADJEFEKBCLFGHBMNGHBIOIPBCQRCSTUAUGUMADUBUCUCADUKADJEFEKBCLFGHBMNGHBIOIPBCQRCSTUIUAUGUJUHUNUPADUBUCUFULUAUEAUAUFVCADADUBADUDADJEFEKBCLFGHBMNGHBIOIPBCQRCSTUFULUMADUBUCADADUBADUDADJEFEKBCLFGHBMNGHBIOIPBCQRCSTUAUGUMADUBUCUFULUAUEAUAUFVCAUAUFVFADUDADJEFEKBCLFGHBMNGHBIOIPBCQRCSTUFULUMADUBADUDADJEFEKBCLFGHBMNGHBIOIPBCQRCSTUAUGUMADUBUFULUAUEAUAUFVCUDADJEFEKBCLFGHBMNGHBIOIPBCQRCSTUFULUDADJEFEKBCLFGHBMNGHBIOIPBCQRCSTUAUGUFULUAUEUAUFWHAUAUFVCJEFEKBCLFGHBMNGHBIOIPBCQRCSTUFULUAUEURUFULUAUEVEVJAUAUFVFVDVDADUKADJEFEKBCLFGHBMNGHBIOIPBCQRCSTUIUFULUJUHUNUPADUBADUKADJEFEKBCLFGHBMNGHBIOIPBCQRCSTUIUAUGUJUHUNUPADUBUFULUAUEAUAUFVCUKADJEFEKBCLFGHBMNGHBIOIPBCQRCSTUIUFULUJUHUNUKADJEFEKBCLFGHBMNGHBIOIPBCQRCSTUIUAUGUJUHUNUFULUAUEUAUFWIAUAUFVCJEFEKBCLFGHBMNGHBIOIPBCQRCSTUIUFULUAUEURUAUFWJVKAUAUFVFVDVLVMVNWKVI $.
sorting-rearrange-70 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortTCell kore-sort-var-R ( \kore-symbol-LblinitTCell ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) ) ) ) ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-LblinitKCell ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) ) ) ) \kore-symbol-LblinitStateCell ) ) ( \kore-top kore-sort-var-R ) ) ) ) $= ( typecode-cache-Pattern-2 and-is-pattern kore-dv-is-pattern top-is-pattern kore-is-sort-is-pattern kore-inj-is-pattern IMP-sort-20-is-pattern BASIC-K-sort-1-is-pattern IMP-sort-17-is-pattern string-literal-11-is-pattern IMP-sort-22-is-pattern IMP-symbol-112-is-pattern string-literal-9-is-pattern IMP-sort-26-is-pattern IMP-symbol-111-is-pattern IMP-symbol-148-is-pattern IMP-sort-13-is-pattern string-literal-10-is-pattern IMP-symbol-169-is-pattern IMP-symbol-220-is-pattern IMP-symbol-196-is-pattern IMP-symbol-176-is-pattern kore-top-is-pattern kore-and-is-pattern IMP-sort-14-is-pattern in-sort-is-pattern kore-in-is-pattern rule-imp-transitivity rule-and-intro-alt2-sugar kore-valid-is-pattern sorting-cache-58 and-elim-left-sugar rule-weakening IMP-sort-29-is-pattern IMP-symbol-219-is-pattern IMP-symbol-217-is-pattern IMP-symbol-218-is-pattern IMP-symbol-114-is-pattern kore-equals-is-pattern top-intro imp-is-pattern proof-rule-prop-1 proof-rule-mp kore-top-sorting kore-implies-is-pattern imp-reflexivity sorting-rearrange-69 kore-in-sorting kore-and-sorting kore-top-valid sorting-rearrange-64 kore-and-intro-alt kore-mp-alt ) ABFECABFECABFECABFECECCCABABUOABMHIHNDGOIJKDPQJKDLRLSDGTUAGUBUCUPMHIHNDGOIJKDPQJKDLRLSDGTUAGUBUCUQURUSUTABUDUEUKABFECABFECABFECABFECECCAULABFECABFECABFECECAULABFECABFECEAULABFECEVAUNUJUJUJABABABUDABUFABMHIHNDGOIJKDPQJKDLRLSDGTUAGUBUCMHIHNDGOIJKDPQJKDLRLSDGTUAGUBUCUHABUDUEUEABUOABMHIHNDGOIJKDPQJKDLRLSDGTUAGUBUCUPMHIHNDGOIJKDPQJKDLRLSDGTUAGUBUCUQURUSUTABUDUEABFECABFECABFECECCCABFECABFECABFECECCCABFECABABABABUDABUFABMHIHNDGOIJKDPQJKDLRLSDGTUAGUBUCMHIHNDGOIJKDPQJKDLRLSDGTUAGUBUCUHABUDUEUEABUOABMHIHNDGOIJKDPQJKDLRLSDGTUAGUBUCUPMHIHNDGOIJKDPQJKDLRLSDGTUAGUBUCUQURUSUTABUDUEVFUKABFECABFECABFECECCCABFEABFECABFECABFECECCCABFECABFABFECABFECABFECECCUMABFECABFABFABFEUMABFVGUIUIABFECABFECABFECECCCEVAUNUJAVHUIABFECABFECABFECECCCABFECABABABUDABUFABMHIHNDGOIJKDPQJKDLRLSDGTUAGUBUCMHIHNDGOIJKDPQJKDLRLSDGTUAGUBUCUHABUDUEUEUKABFECABFECABFECECCUMABFECABFECABFECABFECECCCABABABUDABUFABMHIHNDGOIJKDPQJKDLRLSDGTUAGUBUCMHIHNDGOIJKDPQJKDLRLSDGTUAGUBUCUHABUDUEUEUKABFECABFECABFECABFECECCAULABFECABFECABFECECAULABFECABFECEAULABFECEVAUNUJUJUJABABUDABUFABMHIHNDGOIJKDPQJKDLRLSDGTUAGUBUCMHIHNDGOIJKDPQJKDLRLSDGTUAGUBUCUHABUDUEABFECABFECABFECECCCABUDABUGABFECABFECABFECECCCABUDABUGVBABUDABUGABFECABFECABFECECCCVCABVEVDABFECABFECABFECECCCUFABMHIHNDGOIJKDPQJKDLRLSDGTUAGUBUCMHIHNDGOIJKDPQJKDLRLSDGTUAGUBUCUHABUGABUDABUGCABUFABMHIHNDGOIJKDPQJKDLRLSDGTUAGUBUCMHIHNDGOIJKDPQJKDLRLSDGTUAGUBUCUHABUDUEABUGABFECABFECABFECECCCUFABMHIHNDGOIJKDPQJKDLRLSDGTUAGUBUCMHIHNDGOIJKDPQJKDLRLSDGTUAGUBUCUHABUGABUDABUGUFABMHIHNDGOIJKDPQJKDLRLSDGTUAGUBUCMHIHNDGOIJKDPQJKDLRLSDGTUAGUBUCUHABUGABFECABFECABFECECCCUFABMHIHNDGOIJKDPQJKDLRLSDGTUAGUBUCMHIHNDGOIJKDPQJKDLRLSDGTUAGUBUCUHABUGVBUFABMHIHNDGOIJKDPQJKDLRLSDGTUAGUBUCMHIHNDGOIJKDPQJKDLRLSDGTUAGUBUCUHABUGABFECABFECABFECECCCVCUFABMHIHNDGOIJKDPQJKDLRLSDGTUAGUBUCMHIHNDGOIJKDPQJKDLRLSDGTUAGUBUCVIVDABUDABUGABFECABFECABFECECCCABUDABUGVBABUDABUGABFECABFECABFECECCCVCABVEVDUJABUFABMHIHNDGOIJKDPQJKDLRLSDGTUAGUBUCMHIHNDGOIJKDPQJKDLRLSDGTUAGUBUCUHABUDVJUIABFECABFECABFECECCCABFECABABUDUKABFECABFECABFECECCUMABFECABABUDUKABVKUNUIABFECABFECABFECECCCABFECABABUFABMHIHNDGOIJKDPQJKDLRLSDGTUAGUBUCMHIHNDGOIJKDPQJKDLRLSDGTUAGUBUCUHABUDUEUKABFECABFECABFECECCUMAVLUIVMUIUIVNUI $.
substitution-213 $p #Substitution \kore-sort-SortTCell \kore-sort-SortTCell \unit-sort kore-sort-var-R $= ( IMP-sort-29-is-pattern unit-sort-is-symbol symbol-is-pattern element-var-is-var substitution-disjoint ) BCDAEF $.
substitution-214 $p #Substitution \kore-sort-SortTCell \kore-sort-SortTCell kore-sort-var-x0 kore-sort-var-R $= ( IMP-sort-29-is-pattern typecode-cache-Pattern-6 element-var-is-var substitution-disjoint ) CBDAEF $.
sorting-rearrange-71 $p |- ( \imp \top ( \kore-valid \unit-sort ( \kore-equals \kore-sort-SortTCell \unit-sort ( \kore-symbol-LblinitTCell ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) ) ) ) ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-LblinitKCell ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) ) ) ) \kore-symbol-LblinitStateCell ) ) ) ) $= ( kore-dv-is-pattern kore-inj-is-pattern IMP-sort-20-is-pattern BASIC-K-sort-1-is-pattern IMP-sort-17-is-pattern string-literal-11-is-pattern IMP-sort-22-is-pattern kore-sort-var-R-elementvariable typecode-cache-Pattern-2 top-is-pattern and-is-pattern IMP-symbol-112-is-pattern string-literal-9-is-pattern IMP-sort-26-is-pattern IMP-symbol-111-is-pattern IMP-symbol-148-is-pattern IMP-sort-13-is-pattern string-literal-10-is-pattern IMP-symbol-169-is-pattern IMP-symbol-220-is-pattern IMP-symbol-196-is-pattern IMP-symbol-176-is-pattern kore-is-sort-is-pattern IMP-symbol-219-is-pattern IMP-symbol-217-is-pattern IMP-symbol-218-is-pattern IMP-symbol-114-is-pattern IMP-sort-29-is-pattern unit-sort-is-symbol symbol-is-pattern kore-equals-is-pattern kore-sort-var-x0-elementvariable typecode-cache-Pattern-6 element-var-is-var kore-valid-is-pattern rule-imp-transitivity rule-weakening rule-and-intro-alt2-sugar top-intro x-is-element-var substitution-var-same substitution-disjoint in-sort-is-pattern sorting-cache-58 and-elim-left-sugar substitution-kore-equals substitution-kore-valid substitution-imp sorting-cache-49 typecode-cache-Pattern-1 exists-is-pattern unit-sort-is-functional sorting-cache-47 imp-is-pattern proof-rule-prop-1 kore-equals-sorting proof-rule-mp kore-top-is-pattern kore-and-is-pattern imp-reflexivity sorting-rearrange-70 kore-anp-top substitution-2 substitution-213 substitution-9 substitution-214 functional-substitution-alt ) JJUIUJUCJKKUIUJUHUIUJLCDCMABNDEFAOPEFAGQGRABSTBUAUBUDLCDCMABNDEFAOPEFAGQGRABSTBUAUBUEUFUGUKUOJJUIUJUCJKJJUSUQVIURUIUJHIUHHILCDCMABNDEFAOPEFAGQGRABSTBUAUBUDLCDCMABNDEFAOPEFAGQGRABSTBUAUBUEUFUGUKUOUIUJUHUIUJLCDCMABNDEFAOPEFAGQGRABSTBUAUBUDLCDCMABNDEFAOPEFAGQGRABSTBUAUBUEUFUGUKUOULUMUHULUMLCDCMABNDEFAOPEFAGQGRABSTBUAUBUDLCDCMABNDEFAOPEFAGQGRABSTBUAUBUEUFUGUKUOJHIUCJKUIUJUCJKULUMUCJKUTHULJUTVJUTVKUTVLUQJHIUCJKKHIUCJKHIUHHILCDCMABNDEFAOPEFAGQGRABSTBUAUBUDLCDCMABNDEFAOPEFAGQGRABSTBUAUBUEUFUGUKUOJHIUCJKKHIUCJHVMJHIUCJKKJUSUQURHIUCJKHIUCJKHIUCJKJKKHIUHHILCDCMABNDEFAOPEFAGQGRABSTBUAUBUDLCDCMABNDEFAOPEFAGQGRABSTBUAUBUEUFUGUKUOHIUCJKHIUCJKHIUCJKJKHVDHIUCJKHIUCJKJHVDHIUCJKJUSUQURURHIUHHILCDCMABNDEFAOPEFAGQGRABSTBUAUBUDLCDCMABNDEFAOPEFAGQGRABSTBUAUBUEUFUGUKHIUCJKHIUCJKJKKUHHILCDCMABNDEFAOPEFAGQGRABSTBUAUBUDLCDCMABNDEFAOPEFAGQGRABSTBUAUBUEUFUGUKHIVCHIUCJKHIUCJKJKKUHHILCDCMABNDEFAOPEFAGQGRABSTBUAUBUDLCDCMABNDEFAOPEFAGQGRABSTBUAUBUEUFUGUKHIVCVNUHHILCDCMABNDEFAOPEFAGQGRABSTBUAUBUDLCDCMABNDEFAOPEFAGQGRABSTBUAUBUEUFUGUKHIVCHIUCJKHIUCJKJKKVOUHHILCDCMABNDEFAOPEFAGQGRABSTBUAUBUDLCDCMABNDEFAOPEFAGQGRABSTBUAUBUEUFUGVPVQHIUCJKHIUCJKJKKHIUCJKHIHIUHHILCDCMABNDEFAOPEFAGQGRABSTBUAUBUDLCDCMABNDEFAOPEFAGQGRABSTBUAUBUEUFUGUKHIVRVSUOHIUCJKHIUCJKJKKHIUCJHIUCJKHIUCJKJKKHIUCJKHIUCHIUCJKHIUCJKJKVEHIUCJKHIUCHIUCHIUCJVEHIUCVTUPUPHIUCJKHIUCJKJKKJUSUQURHWAUPWBUPUPUIUJUIUJUCJKUIUJUHUIUJLCDCMABNDEFAOPEFAGQGRABSTBUAUBUDLCDCMABNDEFAOPEFAGQGRABSTBUAUBUEUFUGUKUOHIUCJKHIUHHILCDCMABNDEFAOPEFAGQGRABSTBUAUBUDLCDCMABNDEFAOPEFAGQGRABSTBUAUBUEUFUGUKUOHUNHWCUIUJUHUIUJLCDCMABNDEFAOPEFAGQGRABSTBUAUBUDLCDCMABNDEFAOPEFAGQGRABSTBUAUBUEUFUGUKHIUHHILCDCMABNDEFAOPEFAGQGRABSTBUAUBUDLCDCMABNDEFAOPEFAGQGRABSTBUAUBUEUFUGUKUIUJHUNUIUJHUNVAUHUIUJLCDCMABNDEFAOPEFAGQGRABSTBUAUBUDLCDCMABNDEFAOPEFAGQGRABSTBUAUBUEUFUGUHHILCDCMABNDEFAOPEFAGQGRABSTBUAUBUDLCDCMABNDEFAOPEFAGQGRABSTBUAUBUEUFUGUIUJHUNHWDUIUJHUNVALCDCMABNDEFAOPEFAGQGRABSTBUAUBUDUIUJHUNVBLCDCMABNDEFAOPEFAGQGRABSTBUAUBUEUFUGUIUJHUNVBVFVGVHULUMULUMUCJKULUMUHULUMLCDCMABNDEFAOPEFAGQGRABSTBUAUBUDLCDCMABNDEFAOPEFAGQGRABSTBUAUBUEUFUGUKUOHIUCJKHIUHHILCDCMABNDEFAOPEFAGQGRABSTBUAUBUDLCDCMABNDEFAOPEFAGQGRABSTBUAUBUEUFUGUKUOHUNHULWEULUMUHULUMLCDCMABNDEFAOPEFAGQGRABSTBUAUBUDLCDCMABNDEFAOPEFAGQGRABSTBUAUBUEUFUGUKHIUHHILCDCMABNDEFAOPEFAGQGRABSTBUAUBUDLCDCMABNDEFAOPEFAGQGRABSTBUAUBUEUFUGUKULUMHUNULUMHUNVAUHULUMLCDCMABNDEFAOPEFAGQGRABSTBUAUBUDLCDCMABNDEFAOPEFAGQGRABSTBUAUBUEUFUGUHHILCDCMABNDEFAOPEFAGQGRABSTBUAUBUDLCDCMABNDEFAOPEFAGQGRABSTBUAUBUEUFUGULUMHUNHULWFULUMHUNVALCDCMABNDEFAOPEFAGQGRABSTBUAUBUDULUMHUNVBLCDCMABNDEFAOPEFAGQGRABSTBUAUBUEUFUGULUMHUNVBVFVGVHWGUP $.
sorting-cache-172 $p |- ( \imp \top ( \in-sort \kore-symbol-LblinitStateCell \kore-sort-SortStateCell ) ) $= ( IMP-symbol-218-is-pattern IMP-sort-9-is-pattern in-sort-is-pattern top-is-pattern imp-is-pattern proof-rule-prop-1 IMP-symbol-218-sorting proof-rule-mp ) ABCDABCEABCDFGH $.
sorting-cache-173 $p |- ( \imp \top ( \in-sort ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-LblinitKCell ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) ) ) ) \kore-symbol-LblinitStateCell ) \kore-sort-SortTCell ) ) $= ( kore-dv-is-pattern kore-inj-is-pattern IMP-sort-20-is-pattern BASIC-K-sort-1-is-pattern IMP-sort-17-is-pattern string-literal-11-is-pattern IMP-sort-22-is-pattern IMP-symbol-112-is-pattern string-literal-9-is-pattern IMP-sort-26-is-pattern IMP-symbol-111-is-pattern IMP-symbol-148-is-pattern IMP-sort-13-is-pattern string-literal-10-is-pattern IMP-symbol-169-is-pattern IMP-symbol-220-is-pattern IMP-symbol-196-is-pattern IMP-symbol-176-is-pattern in-sort-is-pattern IMP-symbol-217-is-pattern IMP-symbol-218-is-pattern top-is-pattern IMP-sort-7-is-pattern IMP-sort-9-is-pattern rule-imp-transitivity and-is-pattern IMP-symbol-114-is-pattern IMP-sort-29-is-pattern IMP-sort-14-is-pattern sorting-cache-45 IMP-symbol-217-sorting sorting-cache-172 rule-and-intro-alt2-sugar IMP-symbol-114-sorting ) UBHCDCIABJDEFAKLEFAGMGNABOPBQRTUCSUAUDSUFHCDCIABJDEFAKLEFAGMGNABOPBQRTUAUGUHSUBHCDCIABJDEFAKLEFAGMGNABOPBQRTUCSUAUDSUBHCDCIABJDEFAKLEFAGMGNABOPBQRUISHCDCIABJDEFAKLEFAGMGNABOPBQRTUCSUJHCDCIABJDEFAKLEFAGMGNABOPBQRUKUEULUMHCDCIABJDEFAKLEFAGMGNABOPBQRTUAUNUE $.
equality-elim-0 $p |- ( \imp \top ( \kore-valid \kore-sort-SortGeneratedTopCell ( \kore-rewrites-star \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-top \kore-sort-SortGeneratedTopCell ) ) ( \kore-symbol-LblinitGeneratedTopCell ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) ) ) ) ) ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-top \kore-sort-SortGeneratedTopCell ) ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-LblinitKCell ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) ) ) ) \kore-symbol-LblinitStateCell ) \kore-symbol-LblinitGeneratedCounterCell ) ) ) ) ) $= ( kore-dv-is-pattern IMP-sort-8-is-pattern kore-inj-is-pattern IMP-sort-20-is-pattern BASIC-K-sort-1-is-pattern IMP-sort-17-is-pattern string-literal-11-is-pattern IMP-sort-22-is-pattern kore-top-is-pattern kore-and-is-pattern IMP-symbol-112-is-pattern string-literal-9-is-pattern IMP-sort-26-is-pattern IMP-symbol-111-is-pattern IMP-symbol-148-is-pattern IMP-sort-13-is-pattern string-literal-10-is-pattern IMP-symbol-169-is-pattern IMP-symbol-220-is-pattern IMP-symbol-196-is-pattern IMP-symbol-176-is-pattern kore-element-var-x0-elementvariable IMP-symbol-216-is-pattern element-var-is-var IMP-symbol-215-is-pattern IMP-symbol-219-is-pattern IMP-symbol-117-is-pattern substitution-disjoint IMP-symbol-217-is-pattern IMP-symbol-218-is-pattern IMP-symbol-114-is-pattern typecode-cache-Pattern-16 kore-rewrites-star-is-pattern top-is-pattern in-sort-is-pattern substitution-var-same substitution-kore-and substitution-kore-rewrites-star substitution-kore-valid IMP-sort-29-is-pattern kore-valid-is-pattern IMP-sort-14-is-pattern sorting-cache-45 rule-imp-transitivity kore-equals-elim-alt IMP-symbol-117-substitution IMP-symbol-219-sorting sorting-cache-173 sorting-rearrange-71 IMP-symbol-216-sorting sorting-cache-171 sorting-rearrange-66 sorting-cache-46 kore-rewrites-star-reflexivity ) UTKDEDLACMEFGANOFGAHPHQACRSCTUAUFKDEDLACMEFGANOFGAHPHQACRSCTUAUIUJUKBBBBIBIJKDEDLACMEFGANOFGAHPHQACRSCTUAUCJBBBIBIJKDEDLACMEFGANOFGAHPHQACRSCTUAUFUEUGJUMBBBBBIBIJKDEDLACMEFGANOFGAHPHQACRSCTUAUCJBBBIBIJUBULUEUGJUMVABBBBIBIJKDEDLACMEFGANOFGAHPHQACRSCTUAUCJBBBIBIJKDEDLACMEFGANOFGAHPHQACRSCTUAUIUJUKUEUGJUMBBUNUBUNKDEDLACMEFGANOFGAHPHQACRSCTUAVBUOKDEDLACMEFGANOFGAHPHQACRSCTUAUFUTUOVCKDEDLACMEFGANOFGAHPHQACRSCTUAVGVDVHVIBKDEDLACMEFGANOFGAHPHQACRSCTUAUCKDEDLACMEFGANOFGAHPHQACRSCTUAUFUEUGBBBBIBIJKDEDLACMEFGANOFGAHPHQACRSCTUAUCJBBBIBIJKDEDLACMEFGANOFGAHPHQACRSCTUAUCJUMBBBBBIBIJKDEDLACMEFGANOFGAHPHQACRSCTUAUCJBBBIBIJUBULJUMVABBBBIBIJKDEDLACMEFGANOFGAHPHQACRSCTUAUCJBBBIBIJKDEDLACMEFGANOFGAHPHQACRSCTUAUFUEUGJUMBBUNUBUNKDEDLACMEFGANOFGAHPHQACRSCTUAVBUOKDEDLACMEFGANOFGAHPHQACRSCTUAUCBUOVCKDEDLACMEFGANOFGAHPHQACRSCTUAVJVDVKVLBBBBIBIJKDEDLACMEFGANOFGAHPHQACRSCTUAUCJUNVMVNBBBBBIBIJKDEDLACMEFGANOFGAHPHQACRSCTUAUCJBBBIBIJKDEDLACMEFGANOFGAHPHQACRSCTUAUCJUMBBBBBIBIJKDEDLACMEFGANOFGAHPHQACRSCTUAUCJBBBIBIJUBULJUMKDEDLACMEFGANOFGAHPHQACRSCTUAUCUBUDBKDEDLACMEFGANOFGAHPHQACRSCTUAUCUBUDUHBBBBIBIJKDEDLACMEFGANOFGAHPHQACRSCTUAUCJBBBIBIJKDEDLACMEFGANOFGAHPHQACRSCTUAUCJBBBBIBIJKDEDLACMEFGANOFGAHPHQACRSCTUAUCJBBBIBIJUBULJKDEDLACMEFGANOFGAHPHQACRSCTUAUCUBUDBKDEDLACMEFGANOFGAHPHQACRSCTUAUCUBUDUHBBBIBIJKDEDLACMEFGANOFGAHPHQACRSCTUAUCJKDEDLACMEFGANOFGAHPHQACRSCTUAUCUBUDUHBBBIBIJKDEDLACMEFGANOFGAHPHQACRSCTUAUCBBBIBIJUBULKDEDLACMEFGANOFGAHPHQACRSCTUAUCUBUDBKDEDLACMEFGANOFGAHPHQACRSCTUAUCUBUDUHBBIBIJKDEDLACMEFGANOFGAHPHQACRSCTUAUCUBUDUHKDEDLACMEFGANOFGAHPHQACRSCTUAUCUBUDUPUQURUSBBBBBIBIJKDEDLACMEFGANOFGAHPHQACRSCTUAUCJBBBIBIJKDEDLACMEFGANOFGAHPHQACRSCTUAUFUEUGJUMBBBBBIBIJKDEDLACMEFGANOFGAHPHQACRSCTUAUCJBBBIBIJUBULJUMKDEDLACMEFGANOFGAHPHQACRSCTUAUFUEUGUBUDBKDEDLACMEFGANOFGAHPHQACRSCTUAUFUEUGUBUDUHBBBBIBIJKDEDLACMEFGANOFGAHPHQACRSCTUAUCJBBBIBIJKDEDLACMEFGANOFGAHPHQACRSCTUAUFUEUGJBBBBIBIJKDEDLACMEFGANOFGAHPHQACRSCTUAUCJBBBIBIJUBULJKDEDLACMEFGANOFGAHPHQACRSCTUAUFUEUGUBUDBKDEDLACMEFGANOFGAHPHQACRSCTUAUFUEUGUBUDUHBBBIBIJKDEDLACMEFGANOFGAHPHQACRSCTUAUCJKDEDLACMEFGANOFGAHPHQACRSCTUAUFUEUGUBUDUHBBBIBIJKDEDLACMEFGANOFGAHPHQACRSCTUAUFUEUGBBBIBIJUBULKDEDLACMEFGANOFGAHPHQACRSCTUAUFUEUGUBUDBKDEDLACMEFGANOFGAHPHQACRSCTUAUFUEUGUBUDUHBBIBIJKDEDLACMEFGANOFGAHPHQACRSCTUAUFUEUGUBUDUHKDEDLACMEFGANOFGAHPHQACRSCTUAUFUEUGUBUDUPUQURUSVEBBBBBIBIJKDEDLACMEFGANOFGAHPHQACRSCTUAUCJBBBIBIJKDEDLACMEFGANOFGAHPHQACRSCTUAUFUEUGJUMBBBBBIBIJKDEDLACMEFGANOFGAHPHQACRSCTUAUCJBBBIBIJUBULUEUGJUMKDEDLACMEFGANOFGAHPHQACRSCTUAUFUBUDBKDEDLACMEFGANOFGAHPHQACRSCTUAUFUBUDUHBBBBIBIJKDEDLACMEFGANOFGAHPHQACRSCTUAUCJBBBIBIJKDEDLACMEFGANOFGAHPHQACRSCTUAUFUEUGJBBBBIBIJKDEDLACMEFGANOFGAHPHQACRSCTUAUCJBBBIBIJUBULUEUGJKDEDLACMEFGANOFGAHPHQACRSCTUAUFUBUDBKDEDLACMEFGANOFGAHPHQACRSCTUAUFUBUDUHBBBIBIJKDEDLACMEFGANOFGAHPHQACRSCTUAUCJKDEDLACMEFGANOFGAHPHQACRSCTUAUFUBUDUHBBBIBIJKDEDLACMEFGANOFGAHPHQACRSCTUAUFUEUGBBBIBIJUBULUEUGKDEDLACMEFGANOFGAHPHQACRSCTUAUFUBUDBKDEDLACMEFGANOFGAHPHQACRSCTUAUFUBUDUHBBIBIJKDEDLACMEFGANOFGAHPHQACRSCTUAUFUBUDUHUBUDKDEDLACMEFGANOFGAHPHQACRSCTUAUFKDEDLACMEFGANOFGAHPHQACRSCTUAUFUEUBULUEKDEDLACMEFGANOFGAHPHQACRSCTUAUFUBUDUPUEKDEDLACMEFGANOFGAHPHQACRSCTUAUFUBUDUHVFUQURUSBBBBBIBIJKDEDLACMEFGANOFGAHPHQACRSCTUAUCJBBBIBIJKDEDLACMEFGANOFGAHPHQACRSCTUAUIUJUKUEUGJUMBBBBBIBIJKDEDLACMEFGANOFGAHPHQACRSCTUAUCJBBBIBIJUBULUEUGJUMKDEDLACMEFGANOFGAHPHQACRSCTUAUIUJUKUBUDBKDEDLACMEFGANOFGAHPHQACRSCTUAUIUJUKUBUDUHBBBBIBIJKDEDLACMEFGANOFGAHPHQACRSCTUAUCJBBBIBIJKDEDLACMEFGANOFGAHPHQACRSCTUAUIUJUKUEUGJBBBBIBIJKDEDLACMEFGANOFGAHPHQACRSCTUAUCJBBBIBIJUBULUEUGJKDEDLACMEFGANOFGAHPHQACRSCTUAUIUJUKUBUDBKDEDLACMEFGANOFGAHPHQACRSCTUAUIUJUKUBUDUHBBBIBIJKDEDLACMEFGANOFGAHPHQACRSCTUAUCJKDEDLACMEFGANOFGAHPHQACRSCTUAUIUJUKUBUDUHBBBIBIJKDEDLACMEFGANOFGAHPHQACRSCTUAUIUJUKUEUGBBBIBIJUBULUEUGKDEDLACMEFGANOFGAHPHQACRSCTUAUIUJUKUBUDBKDEDLACMEFGANOFGAHPHQACRSCTUAUIUJUKUBUDUHBBIBIJKDEDLACMEFGANOFGAHPHQACRSCTUAUIUJUKUBUDUHUBUDKDEDLACMEFGANOFGAHPHQACRSCTUAUIUJUKKDEDLACMEFGANOFGAHPHQACRSCTUAUIUJUKUEUBULUEKDEDLACMEFGANOFGAHPHQACRSCTUAUIUJUKUBUDUPUEKDEDLACMEFGANOFGAHPHQACRSCTUAUIUJUKUBUDUHVFUQURUSVE $.
sorting-rearrange-72 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortMap ) \top ) ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortMap ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortMap kore-sort-var-R kore-element-var-VE0 kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortKCell kore-sort-var-R ( \kore-symbol-LblinitKCell kore-element-var-VE0 ) ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblproject'Coln'Pgm ( \kore-symbol-kseq ( \kore-symbol-LblMap'Coln'lookup kore-element-var-VE1 ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ) \kore-symbol-dotk ) ) ) \kore-symbol-dotk ) ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $= ( typecode-cache-Pattern-2 and-is-pattern typecode-cache-Pattern-74 IMP-sort-14-is-pattern in-sort-is-pattern typecode-cache-Pattern-73 top-is-pattern kore-top-is-pattern kore-and-is-pattern BASIC-K-sort-1-is-pattern typecode-cache-Pattern-72 IMP-sort-20-is-pattern kore-inj-is-pattern KSEQ-symbol-1-is-pattern KSEQ-symbol-0-is-pattern kore-is-sort-is-pattern rule-imp-transitivity typecode-cache-Pattern-75 typecode-cache-Pattern-76 IMP-sort-7-is-pattern IMP-symbol-217-is-pattern IMP-sort-26-is-pattern string-literal-9-is-pattern kore-dv-is-pattern IMP-symbol-130-is-pattern IMP-symbol-296-is-pattern IMP-symbol-119-is-pattern kore-equals-is-pattern kore-implies-is-pattern kore-valid-is-pattern and-elim-left-sugar sorting-cache-128 sorting-cache-130 rule-and-intro-alt2-sugar IMP-axiom-2952 ) ACIBFGHJEEABCUAADADADADKADABCUBADKLLADUCADBFUDUEMCNOMOUFUGPUHQRUIPQRUJUKADKLULUMACIBFGHJEEADSBFGHCNGHJEEACIBFGHJEEACIADSACIBFGHJEUNACUOTABCUPUQABCURT $.
substitution-215 $p #Substitution \kore-sort-SortKCell \kore-sort-SortKCell kore-element-var-x0 kore-element-var-VE0 $= ( IMP-sort-7-is-pattern typecode-cache-Pattern-16 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-216 $p #Substitution ( \kore-symbol-LblinitKCell kore-element-var-x0 ) ( \kore-symbol-LblinitKCell kore-element-var-VE0 ) kore-element-var-x0 kore-element-var-VE0 $= ( typecode-cache-Pattern-16 element-var-is-var typecode-cache-Pattern-74 substitution-var-same IMP-symbol-217-substitution ) ADBCBCAEBCADFG $.
sorting-rearrange-73 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortMap ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortMap kore-sort-var-R ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) ) ) kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortKCell kore-sort-var-R ( \kore-symbol-LblinitKCell ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) ) ) ) ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblproject'Coln'Pgm ( \kore-symbol-kseq ( \kore-symbol-LblMap'Coln'lookup kore-element-var-VE1 ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ) \kore-symbol-dotk ) ) ) \kore-symbol-dotk ) ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $= ( kore-dv-is-pattern kore-inj-is-pattern typecode-cache-Pattern-2 IMP-sort-20-is-pattern BASIC-K-sort-1-is-pattern IMP-sort-17-is-pattern string-literal-11-is-pattern IMP-sort-22-is-pattern string-literal-9-is-pattern IMP-sort-26-is-pattern kore-element-var-VE0-elementvariable kore-top-is-pattern IMP-symbol-112-is-pattern IMP-symbol-111-is-pattern IMP-symbol-148-is-pattern IMP-sort-13-is-pattern string-literal-10-is-pattern IMP-symbol-169-is-pattern IMP-symbol-220-is-pattern IMP-symbol-196-is-pattern IMP-symbol-176-is-pattern KSEQ-symbol-1-is-pattern KSEQ-symbol-0-is-pattern kore-and-is-pattern typecode-cache-Pattern-72 element-var-is-var IMP-sort-14-is-pattern kore-element-var-x0-elementvariable IMP-symbol-130-is-pattern IMP-symbol-296-is-pattern IMP-symbol-119-is-pattern IMP-sort-7-is-pattern IMP-symbol-217-is-pattern kore-equals-is-pattern typecode-cache-Pattern-74 top-is-pattern substitution-disjoint in-sort-is-pattern typecode-cache-Pattern-16 kore-implies-is-pattern and-is-pattern typecode-cache-Pattern-73 typecode-cache-Pattern-76 kore-valid-is-pattern kore-in-is-pattern kore-element-var-V0-elementvariable typecode-cache-Pattern-78 substitution-kore-and substitution-185 rule-imp-transitivity substitution-var-same top-intro rule-weakening rule-and-intro-alt2-sugar substitution-kore-equals substitution-kore-implies substitution-kore-valid substitution-imp sorting-cache-131 sorting-cache-141 IMP-symbol-176-sorting typecode-cache-Pattern-12 eq-is-pattern exists-is-pattern sorting-cache-45 sorting-rearrange-58 kore-functional sorting-rearrange-72 substitution-in-sort substitution-and substitution-kore-in IMP-symbol-217-substitution substitution-184 substitution-190 substitution-215 substitution-216 substitution-186 functional-substitution-alt ) ABVDABVDOFGFKCDLGHICPQHICJRJSCDTUADUBUCUIUTURVCVCAEAEAEAENAEUIAEOFGFKCDLGHICPQHICJRJSCDTUADUBUCBUGVGAENUFUFAEUNAEOFGFKCDLGHICPQHICJRJSCDTUADUBUCUOLGBUGFGFKCDUKUDUEULDUDUEUMUPAENUFVBVFABVDABVDOFGFKCDLGHICPQHICJRJSCDTUADUBUCUIUTURVCABWAABVDOFGFKCDLGHICPQHICJRJSCDTUADUBUCUIUTURABVDOUIUTFGFKCDLGHICPQHICJRJSCDTUADUBUIUTVCOFGFKCDLGHICPQHICJRJSCDTUADUBUCUIUTABWBOFGFKCDLGHICPQHICJRJSCDTUADUBWCVLABVDURVNVOVPVPOFGFKCDLGHICPQHICJRJSCDTUADUBUCAEAEAEAENAEAMBVEAENUFUFAEUNAEMUQUOLGBUGFGFKCDUKUDUEULDUDUEUMUPAENUFVBVFAEAEAEAENAEUIAEOFGFKCDLGHICPQHICJRJSCDTUADUBUCBUGVGAENUFUFAEUNAEOFGFKCDLGHICPQHICJRJSCDTUADUBUCUOLGBUGFGFKCDUKUDUEULDUDUEUMUPAENUFVBVFAEAEAEAENAEABUJVIAENUFUFAEUNAEUJVAUOLGBUGFGFKCDUKUDUEULDUDUEUMUPAENUFVBVFABVDMUQUIUTURVCOFGFKCDLGHICPQHICJRJSCDTUADUBUCUIUTURVCUJVAUIUTURVCVHMUJABVDURVHWDOFGFKCDLGHICPQHICJRJSCDTUADUBUCWEVHWFABVDURVNVOUIOFGFKCDLGHICPQHICJRJSCDTUADUBUCURVHWGVHWHWIVLAMBWJOFGFKCDLGHICPQHICJRJSCDTUADUBUCOFGFKCDLGHICPQHICJRJSCDTUADUBUCUIUTURVCAEAEAEAENAEUIAEOFGFKCDLGHICPQHICJRJSCDTUADUBUCBUGVGAENUFUFAEUNAEOFGFKCDLGHICPQHICJRJSCDTUADUBUCUOLGBUGFGFKCDUKUDUEULDUDUEUMUPAENUFVBVFMUQUIUTURVCAEAEAEAENAEAMBVEAENUFUFAEUNAEMUQUOLGBUGFGFKCDUKUDUEULDUDUEUMUPAENUFVBVFMUHOFGFKCDLGHICPQHICJRJSCDTUADUBUCOFGFKCDLGHICPQHICJRJSCDTUADUBUCUIUTURMUQUIUTURMUHOFGFKCDLGHICPQHICJRJSCDTUADUBUCOFGFKCDLGHICPQHICJRJSCDTUADUBUCUIMUQUIMUHOFGFKCDLGHICPQHICJRJSCDTUADUBUCMUHVMUIOFGFKCDLGHICPQHICJRJSCDTUADUBUCMUHUSWKUROFGFKCDLGHICPQHICJRJSCDTUADUBUCMUHUSWLAEAEAEAENAEUIAEOFGFKCDLGHICPQHICJRJSCDTUADUBUCBUGVGAENUFUFAEUNAEOFGFKCDLGHICPQHICJRJSCDTUADUBUCUOLGBUGFGFKCDUKUDUEULDUDUEUMUPAENUFVBAEAEAEAENAEAMBVEAENUFUFAEUNAEMUQUOLGBUGFGFKCDUKUDUEULDUDUEUMUPAENUFVBOFGFKCDLGHICPQHICJRJSCDTUADUBUCMUHAEOFGFKCDLGHICPQHICJRJSCDTUADUBUCMUHUSAEAEAENAEUIAEOFGFKCDLGHICPQHICJRJSCDTUADUBUCBUGVGAENUFUFAEUNAEOFGFKCDLGHICPQHICJRJSCDTUADUBUCUOLGBUGFGFKCDUKUDUEULDUDUEUMUPAENUFAEAEAENAEAMBVEAENUFUFAEUNAEMUQUOLGBUGFGFKCDUKUDUEULDUDUEUMUPAENUFOFGFKCDLGHICPQHICJRJSCDTUADUBUCMUHAEOFGFKCDLGHICPQHICJRJSCDTUADUBUCMUHUSAEAENAEUIAEOFGFKCDLGHICPQHICJRJSCDTUADUBUCBUGVGAENUFAEAENAEAMBVEAENUFOFGFKCDLGHICPQHICJRJSCDTUADUBUCMUHAEOFGFKCDLGHICPQHICJRJSCDTUADUBUCMUHUSAENOFGFKCDLGHICPQHICJRJSCDTUADUBUCMUHUSAEUIAEOFGFKCDLGHICPQHICJRJSCDTUADUBUCBUGVGAENAEAMBVEAENOFGFKCDLGHICPQHICJRJSCDTUADUBUCMUHAEOFGFKCDLGHICPQHICJRJSCDTUADUBUCMUHUSUIAEOFGFKCDLGHICPQHICJRJSCDTUADUBUCBUGUIAEMUQBUGOFGFKCDLGHICPQHICJRJSCDTUADUBUCMUHUIOFGFKCDLGHICPQHICJRJSCDTUADUBUCMUHUSAEOFGFKCDLGHICPQHICJRJSCDTUADUBUCMUHUSOFGFKCDLGHICPQHICJRJSCDTUADUBUCMUHVMBUGOFGFKCDLGHICPQHICJRJSCDTUADUBUCMUHUSWMAENOFGFKCDLGHICPQHICJRJSCDTUADUBUCMUHUSVJVJAEUNAEOFGFKCDLGHICPQHICJRJSCDTUADUBUCUOLGBUGFGFKCDUKUDUEULDUDUEUMUPAENAEUNAEMUQUOLGBUGFGFKCDUKUDUEULDUDUEUMUPAENOFGFKCDLGHICPQHICJRJSCDTUADUBUCMUHAEOFGFKCDLGHICPQHICJRJSCDTUADUBUCMUHUSUNAEOFGFKCDLGHICPQHICJRJSCDTUADUBUCUOLGBUGFGFKCDUKUDUEULDUDUEUMUNAEMUQUOLGBUGFGFKCDUKUDUEULDUDUEUMOFGFKCDLGHICPQHICJRJSCDTUADUBUCMUHUNOFGFKCDLGHICPQHICJRJSCDTUADUBUCMUHUSAEOFGFKCDLGHICPQHICJRJSCDTUADUBUCMUHUSMUHOFGFKCDLGHICPQHICJRJSCDTUADUBUCOFGFKCDLGHICPQHICJRJSCDTUADUBUCMUQOFGFKCDLGHICPQHICJRJSCDTUADUBUCMUHVMWNLGBUGFGFKCDUKUDUEULDUDUEUMOFGFKCDLGHICPQHICJRJSCDTUADUBUCMUHUSVQAENOFGFKCDLGHICPQHICJRJSCDTUADUBUCMUHUSVJVRVSVTUJVAUJVAUIUTURVCAEAEAEAENAEABUJVIAENUFUFAEUNAEUJVAUOLGBUGFGFKCDUKUDUEULDUDUEUMUPAENUFVBVFMUQUIUTURVCAEAEAEAENAEAMBVEAENUFUFAEUNAEMUQUOLGBUGFGFKCDUKUDUEULDUDUEUMUPAENUFVBVFMUHMUJWOAEAEAEAENAEABUJVIAENUFUFAEUNAEUJVAUOLGBUGFGFKCDUKUDUEULDUDUEUMUPAENUFVBAEAEAEAENAEAMBVEAENUFUFAEUNAEMUQUOLGBUGFGFKCDUKUDUEULDUDUEUMUPAENUFVBUJVAMUHAMUJVKAEAEAENAEABUJVIAENUFUFAEUNAEUJVAUOLGBUGFGFKCDUKUDUEULDUDUEUMUPAENUFAEAEAENAEAMBVEAENUFUFAEUNAEMUQUOLGBUGFGFKCDUKUDUEULDUDUEUMUPAENUFUJVAMUHAMUJVKAMBUJWPAEUNAEUJVAUOLGBUGFGFKCDUKUDUEULDUDUEUMUPAENAEUNAEMUQUOLGBUGFGFKCDUKUDUEULDUDUEUMUPAENUJVAMUHAMUJVKUNAEUJVAUOLGBUGFGFKCDUKUDUEULDUDUEUMUNAEMUQUOLGBUGFGFKCDUKUDUEULDUDUEUMUJVAMUHMUJWQAMUJVKMUJWRLGBUGFGFKCDUKUDUEULDUDUEUMUJVAMUHUSVQAMUJWSVJVRVSVTWTVL $.
substitution-217 $p #Substitution \kore-sort-SortKCell \kore-sort-SortKCell kore-element-var-x0 kore-element-var-VE1 $= ( IMP-sort-7-is-pattern typecode-cache-Pattern-16 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-218 $p #Substitution \kore-sort-SortPgm \kore-sort-SortPgm kore-element-var-x0 kore-element-var-VE1 $= ( IMP-sort-26-is-pattern typecode-cache-Pattern-16 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-219 $p #Substitution \kore-sort-SortKItem \kore-sort-SortKItem kore-element-var-x0 kore-element-var-VE1 $= ( BASIC-K-sort-1-is-pattern typecode-cache-Pattern-16 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-220 $p #Substitution \kore-symbol-dotk \kore-symbol-dotk kore-element-var-x0 kore-element-var-VE1 $= ( KSEQ-symbol-1-is-pattern typecode-cache-Pattern-16 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-221 $p #Substitution ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblproject'Coln'Pgm ( \kore-symbol-kseq ( \kore-symbol-LblMap'Coln'lookup kore-element-var-x0 ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ) \kore-symbol-dotk ) ) ) ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblproject'Coln'Pgm ( \kore-symbol-kseq ( \kore-symbol-LblMap'Coln'lookup kore-element-var-VE1 ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ) \kore-symbol-dotk ) ) ) kore-element-var-x0 kore-element-var-VE1 $= ( IMP-sort-20-is-pattern BASIC-K-sort-1-is-pattern typecode-cache-Pattern-16 string-literal-9-is-pattern kore-dv-is-pattern kore-inj-is-pattern IMP-symbol-130-is-pattern KSEQ-symbol-1-is-pattern element-var-is-var KSEQ-symbol-0-is-pattern typecode-cache-Pattern-72 IMP-sort-26-is-pattern IMP-symbol-296-is-pattern substitution-218 substitution-219 substitution-var-same substitution-disjoint IMP-symbol-130-substitution substitution-220 KSEQ-symbol-0-substitution IMP-symbol-296-substitution substitution-kore-inj ) NDBECDCFGHIJLONDAMCDCFGHIJLOBEAKABPABQAKBEBECDCFGHIJLAMCDCFGHIJLAKBEBECDCFGHIJAMCDCFGHIJAKBEBECDCFGHAMCDCFGHBEAKRCDCFGHBEAKSTABUAUBUCUD $.
sorting-rearrange-74 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortMap kore-sort-var-R ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) ) ) ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) ) ) ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortKCell kore-sort-var-R ( \kore-symbol-LblinitKCell ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) ) ) ) ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblproject'Coln'Pgm ( \kore-symbol-kseq ( \kore-symbol-LblMap'Coln'lookup ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) ) ) ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ) \kore-symbol-dotk ) ) ) \kore-symbol-dotk ) ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $= ( kore-dv-is-pattern kore-inj-is-pattern IMP-sort-20-is-pattern BASIC-K-sort-1-is-pattern IMP-sort-17-is-pattern string-literal-11-is-pattern IMP-sort-22-is-pattern typecode-cache-Pattern-2 string-literal-9-is-pattern IMP-sort-26-is-pattern IMP-symbol-112-is-pattern IMP-symbol-111-is-pattern IMP-symbol-148-is-pattern IMP-sort-13-is-pattern string-literal-10-is-pattern IMP-symbol-169-is-pattern IMP-symbol-220-is-pattern IMP-symbol-196-is-pattern IMP-symbol-176-is-pattern kore-element-var-VE1-elementvariable KSEQ-symbol-1-is-pattern kore-top-is-pattern KSEQ-symbol-0-is-pattern kore-and-is-pattern element-var-is-var IMP-sort-14-is-pattern kore-element-var-x0-elementvariable typecode-cache-Pattern-72 IMP-symbol-130-is-pattern IMP-symbol-296-is-pattern typecode-cache-Pattern-16 IMP-symbol-217-is-pattern IMP-sort-7-is-pattern kore-in-is-pattern IMP-symbol-119-is-pattern top-is-pattern substitution-disjoint kore-equals-is-pattern and-is-pattern in-sort-is-pattern kore-implies-is-pattern kore-valid-is-pattern kore-is-sort-is-pattern substitution-198 substitution-kore-and substitution-var-same KSEQ-symbol-0-substitution substitution-199 rule-and-intro-alt2-sugar kore-element-var-V0-elementvariable rule-imp-transitivity substitution-kore-in IMP-symbol-119-substitution substitution-kore-equals substitution-kore-implies substitution-kore-valid substitution-imp sorting-cache-58 sorting-cache-146 top-intro rule-weakening sorting-rearrange-61 typecode-cache-Pattern-73 sorting-cache-144 sorting-rearrange-73 substitution-in-sort substitution-and IMP-symbol-130-substitution IMP-symbol-296-substitution substitution-kore-inj substitution-197 substitution-194 substitution-217 substitution-221 substitution-220 functional-substitution-alt ) AIVDUQUTAIVDUQUTLDEDJBCKEFGBMNFGBHOHPBCQRCSTUGVAUQUTUTAIAIAIAIUCAIUGAILDEDJBCKEFGBMNFGBHOHPBCQRCSTLDEDJBCKEFGBMNFGBHOHPBCQRCSTUOAIUCUEUEAIUNAILDEDJBCKEFGBMNFGBHOHPBCQRCSTUMKELDEDJBCKEFGBMNFGBHOHPBCQRCSTDEDJBCUJUBUDUKCUBUDUPUSAIUCUEVBVCAIVDUQUTAIVDUQUTLDEDJBCKEFGBMNFGBHOHPBCQRCSTUGVAUQUTAVSAIVDUQUTLDEDJBCKEFGBMNFGBHOHPBCQRCSTUGVAUQAVTAIVDUQUTUQWAWBVJVJLDEDJBCKEFGBMNFGBHOHPBCQRCSTAIAIAIAIUCAIUGAILDEDJBCKEFGBMNFGBHOHPBCQRCSTUAUIUOAIUCUEUEAIUNAILDEDJBCKEFGBMNFGBHOHPBCQRCSTUMKEUAUIDEDJBCUJUBUDUKCUBUDUPUSAIUCUEVBVCAIAIAIAIUCAIUGAILDEDJBCKEFGBMNFGBHOHPBCQRCSTLDEDJBCKEFGBMNFGBHOHPBCQRCSTUOAIUCUEUEAIUNAILDEDJBCKEFGBMNFGBHOHPBCQRCSTUMKELDEDJBCKEFGBMNFGBHOHPBCQRCSTDEDJBCUJUBUDUKCUBUDUPUSAIUCUEVBVCAIAIAIAIUCAIUGAILDEDJBCKEFGBMNFGBHOHPBCQRCSTUHULUOAIUCUEUEAIUNAILDEDJBCKEFGBMNFGBHOHPBCQRCSTUMKEUHULDEDJBCUJUBUDUKCUBUDUPUSAIUCUEVBVCAIVDUQUTUAUIUGVAUQUTLDEDJBCKEFGBMNFGBHOHPBCQRCSTUGVAUQUTUHULUGVAUQUTVKUAUHAVKWCAIVDUQUTUAUIUGVAUQUTUTAUAWDAIAIAIAIUCAIUGAILDEDJBCKEFGBMNFGBHOHPBCQRCSTUAUIUOAIUCUEUEAIUNAILDEDJBCKEFGBMNFGBHOHPBCQRCSTUMKEUAUIDEDJBCUJUBUDUKCUBUDUPUSAIUCUEVBVCAUAWEAUAWFVLLDEDJBCKEFGBMNFGBHOHPBCQRCSTLDEDJBCKEFGBMNFGBHOHPBCQRCSTUGVAUQUTAIAIAIAIUCAIUGAILDEDJBCKEFGBMNFGBHOHPBCQRCSTLDEDJBCKEFGBMNFGBHOHPBCQRCSTUOAIUCUEUEAIUNAILDEDJBCKEFGBMNFGBHOHPBCQRCSTUMKELDEDJBCKEFGBMNFGBHOHPBCQRCSTDEDJBCUJUBUDUKCUBUDUPUSAIUCUEVBVCUAUIUGVAUQUTAIAIAIAIUCAIUGAILDEDJBCKEFGBMNFGBHOHPBCQRCSTUAUIUOAIUCUEUEAIUNAILDEDJBCKEFGBMNFGBHOHPBCQRCSTUMKEUAUIDEDJBCUJUBUDUKCUBUDUPUSAIUCUEVBVCUAUFLDEDJBCKEFGBMNFGBHOHPBCQRCSTLDEDJBCKEFGBMNFGBHOHPBCQRCSTUGVAUQUAUIUGVAUQUAUFLDEDJBCKEFGBMNFGBHOHPBCQRCSTLDEDJBCKEFGBMNFGBHOHPBCQRCSTUGUAUIUGUAUFLDEDJBCKEFGBMNFGBHOHPBCQRCSTUAUFVGUGLDEDJBCKEFGBMNFGBHOHPBCQRCSTUAUFURWGUQLDEDJBCKEFGBMNFGBHOHPBCQRCSTUAUFURWHAIAIAIAIUCAIUGAILDEDJBCKEFGBMNFGBHOHPBCQRCSTLDEDJBCKEFGBMNFGBHOHPBCQRCSTUOAIUCUEUEAIUNAILDEDJBCKEFGBMNFGBHOHPBCQRCSTUMKELDEDJBCKEFGBMNFGBHOHPBCQRCSTDEDJBCUJUBUDUKCUBUDUPUSAIUCUEVBAIAIAIAIUCAIUGAILDEDJBCKEFGBMNFGBHOHPBCQRCSTUAUIUOAIUCUEUEAIUNAILDEDJBCKEFGBMNFGBHOHPBCQRCSTUMKEUAUIDEDJBCUJUBUDUKCUBUDUPUSAIUCUEVBLDEDJBCKEFGBMNFGBHOHPBCQRCSTUAUFAILDEDJBCKEFGBMNFGBHOHPBCQRCSTUAUFURAIAIAIUCAIUGAILDEDJBCKEFGBMNFGBHOHPBCQRCSTLDEDJBCKEFGBMNFGBHOHPBCQRCSTUOAIUCUEUEAIUNAILDEDJBCKEFGBMNFGBHOHPBCQRCSTUMKELDEDJBCKEFGBMNFGBHOHPBCQRCSTDEDJBCUJUBUDUKCUBUDUPUSAIUCUEAIAIAIUCAIUGAILDEDJBCKEFGBMNFGBHOHPBCQRCSTUAUIUOAIUCUEUEAIUNAILDEDJBCKEFGBMNFGBHOHPBCQRCSTUMKEUAUIDEDJBCUJUBUDUKCUBUDUPUSAIUCUELDEDJBCKEFGBMNFGBHOHPBCQRCSTUAUFAILDEDJBCKEFGBMNFGBHOHPBCQRCSTUAUFURAIAIUCAIUGAILDEDJBCKEFGBMNFGBHOHPBCQRCSTLDEDJBCKEFGBMNFGBHOHPBCQRCSTUOAIUCUEAIAIUCAIUGAILDEDJBCKEFGBMNFGBHOHPBCQRCSTUAUIUOAIUCUELDEDJBCKEFGBMNFGBHOHPBCQRCSTUAUFAILDEDJBCKEFGBMNFGBHOHPBCQRCSTUAUFURAIUCLDEDJBCKEFGBMNFGBHOHPBCQRCSTUAUFURAIUGAILDEDJBCKEFGBMNFGBHOHPBCQRCSTLDEDJBCKEFGBMNFGBHOHPBCQRCSTUOAIUCAIUGAILDEDJBCKEFGBMNFGBHOHPBCQRCSTUAUIUOAIUCLDEDJBCKEFGBMNFGBHOHPBCQRCSTUAUFAILDEDJBCKEFGBMNFGBHOHPBCQRCSTUAUFURUGAILDEDJBCKEFGBMNFGBHOHPBCQRCSTLDEDJBCKEFGBMNFGBHOHPBCQRCSTUGAILDEDJBCKEFGBMNFGBHOHPBCQRCSTUAUILDEDJBCKEFGBMNFGBHOHPBCQRCSTUAUFUGLDEDJBCKEFGBMNFGBHOHPBCQRCSTUAUFURAILDEDJBCKEFGBMNFGBHOHPBCQRCSTUAUFURLDEDJBCKEFGBMNFGBHOHPBCQRCSTLDEDJBCKEFGBMNFGBHOHPBCQRCSTUAUFURLDEDJBCKEFGBMNFGBHOHPBCQRCSTUAUFVGVMAIUCLDEDJBCKEFGBMNFGBHOHPBCQRCSTUAUFURVFVFAIUNAILDEDJBCKEFGBMNFGBHOHPBCQRCSTUMKELDEDJBCKEFGBMNFGBHOHPBCQRCSTDEDJBCUJUBUDUKCUBUDUPUSAIUCAIUNAILDEDJBCKEFGBMNFGBHOHPBCQRCSTUMKEUAUIDEDJBCUJUBUDUKCUBUDUPUSAIUCLDEDJBCKEFGBMNFGBHOHPBCQRCSTUAUFAILDEDJBCKEFGBMNFGBHOHPBCQRCSTUAUFURUNAILDEDJBCKEFGBMNFGBHOHPBCQRCSTUMKELDEDJBCKEFGBMNFGBHOHPBCQRCSTDEDJBCUJUBUDUKCUBUDUPUNAILDEDJBCKEFGBMNFGBHOHPBCQRCSTUMKEUAUIDEDJBCUJUBUDUKCUBUDUPLDEDJBCKEFGBMNFGBHOHPBCQRCSTUAUFUNLDEDJBCKEFGBMNFGBHOHPBCQRCSTUAUFURAILDEDJBCKEFGBMNFGBHOHPBCQRCSTUAUFURLDEDJBCKEFGBMNFGBHOHPBCQRCSTUMLDEDJBCKEFGBMNFGBHOHPBCQRCSTUAUFURUAUFLDEDJBCKEFGBMNFGBHOHPBCQRCSTKELDEDJBCKEFGBMNFGBHOHPBCQRCSTDEDJBCUJUBUDUKCUBUDKEUAUIDEDJBCUJUBUDUKCUBUDUAUFLDEDJBCKEFGBMNFGBHOHPBCQRCSTKELDEDJBCKEFGBMNFGBHOHPBCQRCSTDEDJBCUJUBUDUKCUBKEUAUIDEDJBCUJUBUDUKCUBKELDEDJBCKEFGBMNFGBHOHPBCQRCSTDEDJBCUJUBUDUKKEUAUIDEDJBCUJUBUDUKLDEDJBCKEFGBMNFGBHOHPBCQRCSTUAUFKLDEDJBCKEFGBMNFGBHOHPBCQRCSTUAUFURELDEDJBCKEFGBMNFGBHOHPBCQRCSTUAUFURUAUFLDEDJBCKEFGBMNFGBHOHPBCQRCSTLDEDJBCKEFGBMNFGBHOHPBCQRCSTDEDJBCUJUBUDUAUIDEDJBCUJUBUDUAUFLDEDJBCKEFGBMNFGBHOHPBCQRCSTLDEDJBCKEFGBMNFGBHOHPBCQRCSTDEDJBCUJUBUAUIDEDJBCUJUBUAUFLDEDJBCKEFGBMNFGBHOHPBCQRCSTLDEDJBCKEFGBMNFGBHOHPBCQRCSTDEDJBCUAUIDEDJBCLDEDJBCKEFGBMNFGBHOHPBCQRCSTUAUFVGDEDJBCLDEDJBCKEFGBMNFGBHOHPBCQRCSTUAUFURWIUBLDEDJBCKEFGBMNFGBHOHPBCQRCSTUAUFURVHWJWKUBLDEDJBCKEFGBMNFGBHOHPBCQRCSTUAUFURVHVNVOAIUCLDEDJBCKEFGBMNFGBHOHPBCQRCSTUAUFURVFVPVQVRUHULUHULUGVAUQUTAIAIAIAIUCAIUGAILDEDJBCKEFGBMNFGBHOHPBCQRCSTUHULUOAIUCUEUEAIUNAILDEDJBCKEFGBMNFGBHOHPBCQRCSTUMKEUHULDEDJBCUJUBUDUKCUBUDUPUSAIUCUEVBVCUAUIUGVAUQUTAIAIAIAIUCAIUGAILDEDJBCKEFGBMNFGBHOHPBCQRCSTUAUIUOAIUCUEUEAIUNAILDEDJBCKEFGBMNFGBHOHPBCQRCSTUMKEUAUIDEDJBCUJUBUDUKCUBUDUPUSAIUCUEVBVCUAUFUAUHWLAIAIAIAIUCAIUGAILDEDJBCKEFGBMNFGBHOHPBCQRCSTUHULUOAIUCUEUEAIUNAILDEDJBCKEFGBMNFGBHOHPBCQRCSTUMKEUHULDEDJBCUJUBUDUKCUBUDUPUSAIUCUEVBAIAIAIAIUCAIUGAILDEDJBCKEFGBMNFGBHOHPBCQRCSTUAUIUOAIUCUEUEAIUNAILDEDJBCKEFGBMNFGBHOHPBCQRCSTUMKEUAUIDEDJBCUJUBUDUKCUBUDUPUSAIUCUEVBUHULUAUFAUAUHVEAIAIAIUCAIUGAILDEDJBCKEFGBMNFGBHOHPBCQRCSTUHULUOAIUCUEUEAIUNAILDEDJBCKEFGBMNFGBHOHPBCQRCSTUMKEUHULDEDJBCUJUBUDUKCUBUDUPUSAIUCUEAIAIAIUCAIUGAILDEDJBCKEFGBMNFGBHOHPBCQRCSTUAUIUOAIUCUEUEAIUNAILDEDJBCKEFGBMNFGBHOHPBCQRCSTUMKEUAUIDEDJBCUJUBUDUKCUBUDUPUSAIUCUEUHULUAUFAUAUHVEAIAIUCAIUGAILDEDJBCKEFGBMNFGBHOHPBCQRCSTUHULUOAIUCUEAIAIUCAIUGAILDEDJBCKEFGBMNFGBHOHPBCQRCSTUAUIUOAIUCUEUHULUAUFAUAUHVEAUAUHVIAIUGAILDEDJBCKEFGBMNFGBHOHPBCQRCSTUHULUOAIUCAIUGAILDEDJBCKEFGBMNFGBHOHPBCQRCSTUAUIUOAIUCUHULUAUFAUAUHVEUGAILDEDJBCKEFGBMNFGBHOHPBCQRCSTUHULUGAILDEDJBCKEFGBMNFGBHOHPBCQRCSTUAUIUHULUAUFUAUHWMAUAUHVELDEDJBCKEFGBMNFGBHOHPBCQRCSTUHULUAUFURUHULUAUFVGVMAUAUHVIVFVFAIUNAILDEDJBCKEFGBMNFGBHOHPBCQRCSTUMKEUHULDEDJBCUJUBUDUKCUBUDUPUSAIUCAIUNAILDEDJBCKEFGBMNFGBHOHPBCQRCSTUMKEUAUIDEDJBCUJUBUDUKCUBUDUPUSAIUCUHULUAUFAUAUHVEUNAILDEDJBCKEFGBMNFGBHOHPBCQRCSTUMKEUHULDEDJBCUJUBUDUKCUBUDUPUNAILDEDJBCKEFGBMNFGBHOHPBCQRCSTUMKEUAUIDEDJBCUJUBUDUKCUBUDUPUHULUAUFUAUHWNAUAUHVELDEDJBCKEFGBMNFGBHOHPBCQRCSTUMUHULUAUFURUAUFUHULKEUHULDEDJBCUJUBUDUKCUBUDKEUAUIDEDJBCUJUBUDUKCUBUDUAUFUHULKEUHULDEDJBCUJUBUDUKCUBKEUAUIDEDJBCUJUBUDUKCUBUAUHWOUAUHWPVHVNVOAUAUHVIVFVPVQVRWQVL $.
sorting-rearrange-75 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortKCell kore-sort-var-R ( \kore-symbol-LblinitKCell ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) ) ) ) ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblproject'Coln'Pgm ( \kore-symbol-kseq ( \kore-symbol-LblMap'Coln'lookup ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) ) ) ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ) \kore-symbol-dotk ) ) ) \kore-symbol-dotk ) ) ) ( \kore-top kore-sort-var-R ) ) ) ) $= ( typecode-cache-Pattern-2 and-is-pattern kore-dv-is-pattern top-is-pattern kore-inj-is-pattern kore-is-sort-is-pattern IMP-sort-20-is-pattern BASIC-K-sort-1-is-pattern IMP-sort-17-is-pattern string-literal-11-is-pattern IMP-sort-22-is-pattern string-literal-9-is-pattern IMP-sort-26-is-pattern IMP-symbol-112-is-pattern IMP-symbol-111-is-pattern IMP-symbol-148-is-pattern IMP-sort-13-is-pattern string-literal-10-is-pattern IMP-symbol-169-is-pattern IMP-symbol-220-is-pattern IMP-symbol-196-is-pattern IMP-symbol-176-is-pattern kore-top-is-pattern kore-and-is-pattern IMP-sort-14-is-pattern in-sort-is-pattern kore-in-is-pattern rule-imp-transitivity rule-and-intro-alt2-sugar kore-valid-is-pattern KSEQ-symbol-1-is-pattern KSEQ-symbol-0-is-pattern sorting-cache-58 and-elim-left-sugar rule-weakening IMP-sort-7-is-pattern IMP-symbol-217-is-pattern IMP-symbol-130-is-pattern IMP-symbol-296-is-pattern IMP-symbol-119-is-pattern kore-equals-is-pattern top-intro imp-is-pattern proof-rule-prop-1 proof-rule-mp kore-top-sorting kore-implies-is-pattern imp-reflexivity sorting-rearrange-74 kore-in-sorting kore-and-sorting kore-top-valid sorting-rearrange-64 kore-and-intro-alt kore-mp-alt ) ABGECABGECABGECABGECECCCABABUQABOHIHMDFNIJKDPQJKDLRLSDFTUAFUBUCURNIOHIHMDFNIJKDPQJKDLRLSDFTUAFUBUCHIHMDFUSULUMUTFULUMVAVBABUDUEUKABGECABGECABGECABGECECCAUNABGECABGECABGECECAUNABGECABGECEAUNABGECEVCUPUJUJUJABABABUDABUFABOHIHMDFNIJKDPQJKDLRLSDFTUAFUBUCOHIHMDFNIJKDPQJKDLRLSDFTUAFUBUCUHABUDUEUEABUQABOHIHMDFNIJKDPQJKDLRLSDFTUAFUBUCURNIOHIHMDFNIJKDPQJKDLRLSDFTUAFUBUCHIHMDFUSULUMUTFULUMVAVBABUDUEABGECABGECABGECECCCABGECABGECABGECECCCABGECABABABABUDABUFABOHIHMDFNIJKDPQJKDLRLSDFTUAFUBUCOHIHMDFNIJKDPQJKDLRLSDFTUAFUBUCUHABUDUEUEABUQABOHIHMDFNIJKDPQJKDLRLSDFTUAFUBUCURNIOHIHMDFNIJKDPQJKDLRLSDFTUAFUBUCHIHMDFUSULUMUTFULUMVAVBABUDUEVHUKABGECABGECABGECECCCABGEABGECABGECABGECECCCABGECABGABGECABGECABGECECCUOABGECABGABGABGEUOABGVIUIUIABGECABGECABGECECCCEVCUPUJAVJUIABGECABGECABGECECCCABGECABABABUDABUFABOHIHMDFNIJKDPQJKDLRLSDFTUAFUBUCOHIHMDFNIJKDPQJKDLRLSDFTUAFUBUCUHABUDUEUEUKABGECABGECABGECECCUOABGECABGECABGECABGECECCCABABABUDABUFABOHIHMDFNIJKDPQJKDLRLSDFTUAFUBUCOHIHMDFNIJKDPQJKDLRLSDFTUAFUBUCUHABUDUEUEUKABGECABGECABGECABGECECCAUNABGECABGECABGECECAUNABGECABGECEAUNABGECEVCUPUJUJUJABABUDABUFABOHIHMDFNIJKDPQJKDLRLSDFTUAFUBUCOHIHMDFNIJKDPQJKDLRLSDFTUAFUBUCUHABUDUEABGECABGECABGECECCCABUDABUGABGECABGECABGECECCCABUDABUGVDABUDABUGABGECABGECABGECECCCVEABVGVFABGECABGECABGECECCCUFABOHIHMDFNIJKDPQJKDLRLSDFTUAFUBUCOHIHMDFNIJKDPQJKDLRLSDFTUAFUBUCUHABUGABUDABUGCABUFABOHIHMDFNIJKDPQJKDLRLSDFTUAFUBUCOHIHMDFNIJKDPQJKDLRLSDFTUAFUBUCUHABUDUEABUGABGECABGECABGECECCCUFABOHIHMDFNIJKDPQJKDLRLSDFTUAFUBUCOHIHMDFNIJKDPQJKDLRLSDFTUAFUBUCUHABUGABUDABUGUFABOHIHMDFNIJKDPQJKDLRLSDFTUAFUBUCOHIHMDFNIJKDPQJKDLRLSDFTUAFUBUCUHABUGABGECABGECABGECECCCUFABOHIHMDFNIJKDPQJKDLRLSDFTUAFUBUCOHIHMDFNIJKDPQJKDLRLSDFTUAFUBUCUHABUGVDUFABOHIHMDFNIJKDPQJKDLRLSDFTUAFUBUCOHIHMDFNIJKDPQJKDLRLSDFTUAFUBUCUHABUGABGECABGECABGECECCCVEUFABOHIHMDFNIJKDPQJKDLRLSDFTUAFUBUCOHIHMDFNIJKDPQJKDLRLSDFTUAFUBUCVKVFABUDABUGABGECABGECABGECECCCABUDABUGVDABUDABUGABGECABGECABGECECCCVEABVGVFUJABUFABOHIHMDFNIJKDPQJKDLRLSDFTUAFUBUCOHIHMDFNIJKDPQJKDLRLSDFTUAFUBUCUHABUDVLUIABGECABGECABGECECCCABGECABABUDUKABGECABGECABGECECCUOABGECABABUDUKABVMUPUIABGECABGECABGECECCCABGECABABUFABOHIHMDFNIJKDPQJKDLRLSDFTUAFUBUCOHIHMDFNIJKDPQJKDLRLSDFTUAFUBUCUHABUDUEUKABGECABGECABGECECCUOAVNUIVOUIUIVPUI $.
substitution-222 $p #Substitution \kore-sort-SortKCell \kore-sort-SortKCell \unit-sort kore-sort-var-R $= ( IMP-sort-7-is-pattern unit-sort-is-symbol symbol-is-pattern element-var-is-var substitution-disjoint ) BCDAEF $.
substitution-223 $p #Substitution \kore-sort-SortKCell \kore-sort-SortKCell kore-sort-var-x0 kore-sort-var-R $= ( IMP-sort-7-is-pattern typecode-cache-Pattern-6 element-var-is-var substitution-disjoint ) CBDAEF $.
sorting-rearrange-76 $p |- ( \imp \top ( \kore-valid \unit-sort ( \kore-equals \kore-sort-SortKCell \unit-sort ( \kore-symbol-LblinitKCell ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) ) ) ) ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblproject'Coln'Pgm ( \kore-symbol-kseq ( \kore-symbol-LblMap'Coln'lookup ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) ) ) ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ) \kore-symbol-dotk ) ) ) \kore-symbol-dotk ) ) ) ) ) $= ( kore-dv-is-pattern kore-inj-is-pattern IMP-sort-20-is-pattern BASIC-K-sort-1-is-pattern IMP-sort-17-is-pattern string-literal-11-is-pattern IMP-sort-22-is-pattern kore-sort-var-R-elementvariable string-literal-9-is-pattern IMP-sort-26-is-pattern typecode-cache-Pattern-2 top-is-pattern and-is-pattern IMP-symbol-112-is-pattern IMP-symbol-111-is-pattern IMP-symbol-148-is-pattern IMP-sort-13-is-pattern string-literal-10-is-pattern IMP-symbol-169-is-pattern IMP-symbol-220-is-pattern IMP-symbol-196-is-pattern IMP-symbol-176-is-pattern KSEQ-symbol-1-is-pattern KSEQ-symbol-0-is-pattern kore-is-sort-is-pattern IMP-symbol-217-is-pattern IMP-symbol-130-is-pattern IMP-symbol-296-is-pattern IMP-symbol-119-is-pattern IMP-sort-7-is-pattern unit-sort-is-symbol symbol-is-pattern kore-equals-is-pattern kore-sort-var-x0-elementvariable typecode-cache-Pattern-6 element-var-is-var kore-valid-is-pattern rule-imp-transitivity rule-weakening rule-and-intro-alt2-sugar top-intro x-is-element-var substitution-var-same substitution-disjoint in-sort-is-pattern sorting-cache-58 and-elim-left-sugar substitution-kore-equals substitution-kore-valid substitution-imp sorting-cache-49 typecode-cache-Pattern-1 exists-is-pattern unit-sort-is-functional sorting-cache-47 imp-is-pattern proof-rule-prop-1 kore-equals-sorting proof-rule-mp kore-top-is-pattern kore-and-is-pattern imp-reflexivity sorting-rearrange-75 kore-anp-top substitution-2 substitution-222 substitution-9 substitution-223 functional-substitution-alt ) LLUKULUELMMUKULUJUKULNCDCIABJDEFAOPEFAGQGRABSTBUAUBUFJDNCDCIABJDEFAOPEFAGQGRABSTBUAUBCDCIABUGUCUDUHBUCUDUIUMUQLLUKULUELMLLVAUSVKUTUKULHKUJHKNCDCIABJDEFAOPEFAGQGRABSTBUAUBUFJDNCDCIABJDEFAOPEFAGQGRABSTBUAUBCDCIABUGUCUDUHBUCUDUIUMUQUKULUJUKULNCDCIABJDEFAOPEFAGQGRABSTBUAUBUFJDNCDCIABJDEFAOPEFAGQGRABSTBUAUBCDCIABUGUCUDUHBUCUDUIUMUQUNUOUJUNUONCDCIABJDEFAOPEFAGQGRABSTBUAUBUFJDNCDCIABJDEFAOPEFAGQGRABSTBUAUBCDCIABUGUCUDUHBUCUDUIUMUQLHKUELMUKULUELMUNUOUELMVBHUNLVBVLVBVMVBVNUSLHKUELMMHKUELMHKUJHKNCDCIABJDEFAOPEFAGQGRABSTBUAUBUFJDNCDCIABJDEFAOPEFAGQGRABSTBUAUBCDCIABUGUCUDUHBUCUDUIUMUQLHKUELMMHKUELHVOLHKUELMMLVAUSUTHKUELMHKUELMHKUELMLMMHKUJHKNCDCIABJDEFAOPEFAGQGRABSTBUAUBUFJDNCDCIABJDEFAOPEFAGQGRABSTBUAUBCDCIABUGUCUDUHBUCUDUIUMUQHKUELMHKUELMHKUELMLMHVFHKUELMHKUELMLHVFHKUELMLVAUSUTUTHKUJHKNCDCIABJDEFAOPEFAGQGRABSTBUAUBUFJDNCDCIABJDEFAOPEFAGQGRABSTBUAUBCDCIABUGUCUDUHBUCUDUIUMHKUELMHKUELMLMMUJHKNCDCIABJDEFAOPEFAGQGRABSTBUAUBUFJDNCDCIABJDEFAOPEFAGQGRABSTBUAUBCDCIABUGUCUDUHBUCUDUIUMHKVEHKUELMHKUELMLMMUJHKNCDCIABJDEFAOPEFAGQGRABSTBUAUBUFJDNCDCIABJDEFAOPEFAGQGRABSTBUAUBCDCIABUGUCUDUHBUCUDUIUMHKVEVPUJHKNCDCIABJDEFAOPEFAGQGRABSTBUAUBUFJDNCDCIABJDEFAOPEFAGQGRABSTBUAUBCDCIABUGUCUDUHBUCUDUIUMHKVEHKUELMHKUELMLMMVQUJHKNCDCIABJDEFAOPEFAGQGRABSTBUAUBUFJDNCDCIABJDEFAOPEFAGQGRABSTBUAUBCDCIABUGUCUDUHBUCUDUIVRVSHKUELMHKUELMLMMHKUELMHKHKUJHKNCDCIABJDEFAOPEFAGQGRABSTBUAUBUFJDNCDCIABJDEFAOPEFAGQGRABSTBUAUBCDCIABUGUCUDUHBUCUDUIUMHKVTWAUQHKUELMHKUELMLMMHKUELHKUELMHKUELMLMMHKUELMHKUEHKUELMHKUELMLMVGHKUELMHKUEHKUEHKUELVGHKUEWBURURHKUELMHKUELMLMMLVAUSUTHWCURWDURURUKULUKULUELMUKULUJUKULNCDCIABJDEFAOPEFAGQGRABSTBUAUBUFJDNCDCIABJDEFAOPEFAGQGRABSTBUAUBCDCIABUGUCUDUHBUCUDUIUMUQHKUELMHKUJHKNCDCIABJDEFAOPEFAGQGRABSTBUAUBUFJDNCDCIABJDEFAOPEFAGQGRABSTBUAUBCDCIABUGUCUDUHBUCUDUIUMUQHUPHWEUKULUJUKULNCDCIABJDEFAOPEFAGQGRABSTBUAUBUFJDNCDCIABJDEFAOPEFAGQGRABSTBUAUBCDCIABUGUCUDUHBUCUDUIUMHKUJHKNCDCIABJDEFAOPEFAGQGRABSTBUAUBUFJDNCDCIABJDEFAOPEFAGQGRABSTBUAUBCDCIABUGUCUDUHBUCUDUIUMUKULHUPUKULHUPVCUJUKULNCDCIABJDEFAOPEFAGQGRABSTBUAUBUFJDNCDCIABJDEFAOPEFAGQGRABSTBUAUBCDCIABUGUCUDUHBUCUDUIUJHKNCDCIABJDEFAOPEFAGQGRABSTBUAUBUFJDNCDCIABJDEFAOPEFAGQGRABSTBUAUBCDCIABUGUCUDUHBUCUDUIUKULHUPHWFUKULHUPVCNCDCIABJDEFAOPEFAGQGRABSTBUAUBUFUKULHUPVDJDNCDCIABJDEFAOPEFAGQGRABSTBUAUBCDCIABUGUCUDUHBUCUDUIUKULHUPVDVHVIVJUNUOUNUOUELMUNUOUJUNUONCDCIABJDEFAOPEFAGQGRABSTBUAUBUFJDNCDCIABJDEFAOPEFAGQGRABSTBUAUBCDCIABUGUCUDUHBUCUDUIUMUQHKUELMHKUJHKNCDCIABJDEFAOPEFAGQGRABSTBUAUBUFJDNCDCIABJDEFAOPEFAGQGRABSTBUAUBCDCIABUGUCUDUHBUCUDUIUMUQHUPHUNWGUNUOUJUNUONCDCIABJDEFAOPEFAGQGRABSTBUAUBUFJDNCDCIABJDEFAOPEFAGQGRABSTBUAUBCDCIABUGUCUDUHBUCUDUIUMHKUJHKNCDCIABJDEFAOPEFAGQGRABSTBUAUBUFJDNCDCIABJDEFAOPEFAGQGRABSTBUAUBCDCIABUGUCUDUHBUCUDUIUMUNUOHUPUNUOHUPVCUJUNUONCDCIABJDEFAOPEFAGQGRABSTBUAUBUFJDNCDCIABJDEFAOPEFAGQGRABSTBUAUBCDCIABUGUCUDUHBUCUDUIUJHKNCDCIABJDEFAOPEFAGQGRABSTBUAUBUFJDNCDCIABJDEFAOPEFAGQGRABSTBUAUBCDCIABUGUCUDUHBUCUDUIUNUOHUPHUNWHUNUOHUPVCNCDCIABJDEFAOPEFAGQGRABSTBUAUBUFUNUOHUPVDJDNCDCIABJDEFAOPEFAGQGRABSTBUAUBCDCIABUGUCUDUHBUCUDUIUNUOHUPVDVHVIVJWIUR $.
sorting-cache-174 $p |- ( \imp \top ( \in-sort ( \kore-symbol-kseq ( \kore-symbol-LblMap'Coln'lookup ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) ) ) ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ) \kore-symbol-dotk ) \kore-sort-SortK ) ) $= ( kore-dv-is-pattern IMP-sort-20-is-pattern kore-inj-is-pattern BASIC-K-sort-1-is-pattern string-literal-9-is-pattern IMP-sort-17-is-pattern string-literal-11-is-pattern IMP-sort-22-is-pattern in-sort-is-pattern IMP-symbol-112-is-pattern IMP-sort-26-is-pattern IMP-symbol-111-is-pattern IMP-symbol-148-is-pattern IMP-sort-13-is-pattern string-literal-10-is-pattern IMP-symbol-169-is-pattern IMP-symbol-220-is-pattern IMP-symbol-196-is-pattern IMP-symbol-176-is-pattern IMP-symbol-130-is-pattern top-is-pattern KSEQ-symbol-1-is-pattern BASIC-K-sort-0-is-pattern and-is-pattern IMP-sort-14-is-pattern rule-and-intro-alt2-sugar rule-imp-transitivity KSEQ-symbol-0-is-pattern sorting-cache-45 sorting-cache-41 IMP-symbol-130-sorting sorting-cache-12 KSEQ-symbol-0-sorting ) UAJBDBEACKDFGALMFGAHNHOACPQCRSBDBEACTDIUBUCIUDJBDBEACKDFGALMFGAHNHOACPQCRSBDBEACTUBUHUCIUAJBDBEACKDFGALMFGAHNHOACPQCRSBDBEACTDIUBUCIUAJBDBEACKDFGALMFGAHNHOACPQCRSUEIBDBEACDIUDJBDBEACKDFGALMFGAHNHOACPQCRSBDBEACTDIUAJBDBEACKDFGALMFGAHNHOACPQCRSUEIBDBEACDIUIUJUFJBDBEACKDFGALMFGAHNHOACPQCRSBDBEACUKUGULUFJBDBEACKDFGALMFGAHNHOACPQCRSBDBEACTUBUMUG $.
sorting-cache-175 $p |- ( \imp \top ( \in-sort ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblproject'Coln'Pgm ( \kore-symbol-kseq ( \kore-symbol-LblMap'Coln'lookup ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) ) ) ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ) \kore-symbol-dotk ) ) ) \kore-symbol-dotk ) \kore-sort-SortK ) ) $= ( kore-dv-is-pattern kore-inj-is-pattern BASIC-K-sort-1-is-pattern IMP-sort-20-is-pattern IMP-sort-26-is-pattern string-literal-9-is-pattern IMP-sort-17-is-pattern string-literal-11-is-pattern IMP-sort-22-is-pattern KSEQ-symbol-1-is-pattern KSEQ-symbol-0-is-pattern IMP-symbol-112-is-pattern IMP-symbol-111-is-pattern IMP-symbol-148-is-pattern IMP-sort-13-is-pattern string-literal-10-is-pattern IMP-symbol-169-is-pattern IMP-symbol-220-is-pattern IMP-symbol-196-is-pattern IMP-symbol-176-is-pattern IMP-symbol-130-is-pattern in-sort-is-pattern IMP-symbol-296-is-pattern top-is-pattern kore-is-sort-is-pattern BASIC-K-sort-0-is-pattern and-is-pattern rule-and-intro-alt2-sugar rule-imp-transitivity sorting-cache-1 sorting-cache-2 sorting-cache-174 IMP-symbol-296-sorting INJ-symbol-0-sorting sorting-cache-12 KSEQ-symbol-0-sorting ) UDECLDCDFABECGHAMNGHAIOIPABQRBSTDCDFABUAJKUCBCUBJUFUBUGECLDCDFABECGHAMNGHAIOIPABQRBSTDCDFABUAJKUCBJKUFUBUDECLDCDFABECGHAMNGHAIOIPABQRBSTDCDFABUAJKUCBCUBJUFUBUDEUECUEUGLDCDFABECGHAMNGHAIOIPABQRBSTDCDFABUAJKUCEUBUGECLDCDFABECGHAMNGHAIOIPABQRBSTDCDFABUAJKUCBCUBUDEUECUEUGLDCDFABECGHAMNGHAIOIPABQRBSTDCDFABUAJKUCEUBUDEUECUEUJUKUHUDLDCDFABECGHAMNGHAIOIPABQRBSTDCDFABUAJKUFUBLDCDFABECGHAMNGHAIOIPABQRBSTDCDFABUAJKUCEUBULLDCDFABECGHAMNGHAIOIPABQRBSTDCDFABUAJKUMUIUHECLDCDFABECGHAMNGHAIOIPABQRBSTDCDFABUAJKUCUNUIUOUHECLDCDFABECGHAMNGHAIOIPABQRBSTDCDFABUAJKUCBJUPUI $.
sorting-rearrange-77 $p |- ( \imp \top ( \kore-valid \unit-sort ( \kore-equals \kore-sort-SortKItem \unit-sort ( \kore-symbol-LblMap'Coln'lookup ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) ) ) ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ) ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) ) ) ) $= ( kore-dv-is-pattern kore-inj-is-pattern BASIC-K-sort-1-is-pattern IMP-sort-20-is-pattern IMP-sort-17-is-pattern string-literal-11-is-pattern IMP-sort-22-is-pattern kore-sort-var-R-elementvariable string-literal-9-is-pattern IMP-sort-26-is-pattern IMP-symbol-111-is-pattern IMP-symbol-148-is-pattern IMP-sort-13-is-pattern string-literal-10-is-pattern IMP-symbol-169-is-pattern IMP-symbol-220-is-pattern top-is-pattern typecode-cache-Pattern-2 unit-sort-is-symbol symbol-is-pattern IMP-symbol-112-is-pattern IMP-symbol-196-is-pattern IMP-symbol-176-is-pattern IMP-symbol-130-is-pattern kore-sort-var-x0-elementvariable and-is-pattern typecode-cache-Pattern-6 kore-is-sort-is-pattern element-var-is-var kore-equals-is-pattern kore-valid-is-pattern x-is-element-var substitution-var-same substitution-disjoint rule-weakening top-intro rule-and-intro-alt2-sugar rule-imp-transitivity substitution-kore-equals substitution-kore-valid substitution-imp sorting-cache-49 typecode-cache-Pattern-1 exists-is-pattern unit-sort-is-functional sorting-cache-47 LblMapColnlookup-domain-fact-0 substitution-2 substitution-58 substitution-9 substitution-59 functional-substitution-alt ) QQSTUHQUFUFSTCSTUADCDIABJCEFAKLEFAGMGNABOPBUBUCDCDIABUDJCEFAKLEFAGMGNABOPBUJUKQQSTUHQUFQQUPUOVBUQSTHRCHRUADCDIABJCEFAKLEFAGMGNABOPBUBUCDCDIABUDJCEFAKLEFAGMGNABOPBUJUKSTCSTUADCDIABJCEFAKLEFAGMGNABOPBUBUCDCDIABUDJCEFAKLEFAGMGNABOPBUJUKUEUGCUEUGUADCDIABJCEFAKLEFAGMGNABOPBUBUCDCDIABUDJCEFAKLEFAGMGNABOPBUJUKQHRUHQUFSTUHQUFUEUGUHQUFULHUEQULVCULVDULVEUOQHRUHQUFUFHRUHQUFHRCHRUADCDIABJCEFAKLEFAGMGNABOPBUBUCDCDIABUDJCEFAKLEFAGMGNABOPBUJUKQHRUHQUFUFHRUHQHVFQHRUHQUFUFQUPUOUQHVGURSTSTUHQUFSTCSTUADCDIABJCEFAKLEFAGMGNABOPBUBUCDCDIABUDJCEFAKLEFAGMGNABOPBUJUKHRUHQUFHRCHRUADCDIABJCEFAKLEFAGMGNABOPBUBUCDCDIABUDJCEFAKLEFAGMGNABOPBUJUKHUIHVHSTCSTUADCDIABJCEFAKLEFAGMGNABOPBUBUCDCDIABUDJCEFAKLEFAGMGNABOPBUJHRCHRUADCDIABJCEFAKLEFAGMGNABOPBUBUCDCDIABUDJCEFAKLEFAGMGNABOPBUJSTHUISTHUIUMCSTUADCDIABJCEFAKLEFAGMGNABOPBUBUCDCDIABUDJCEFAKLEFAGMGNABOPBCHRUADCDIABJCEFAKLEFAGMGNABOPBUBUCDCDIABUDJCEFAKLEFAGMGNABOPBSTHUIHVISTHUIUMUADCDIABJCEFAKLEFAGMGNABOPBUBUCDCDIABUDSTHUIUNJCEFAKLEFAGMGNABOPBSTHUIUNUSUTVAUEUGUEUGUHQUFUEUGCUEUGUADCDIABJCEFAKLEFAGMGNABOPBUBUCDCDIABUDJCEFAKLEFAGMGNABOPBUJUKHRUHQUFHRCHRUADCDIABJCEFAKLEFAGMGNABOPBUBUCDCDIABUDJCEFAKLEFAGMGNABOPBUJUKHUIHUEVJUEUGCUEUGUADCDIABJCEFAKLEFAGMGNABOPBUBUCDCDIABUDJCEFAKLEFAGMGNABOPBUJHRCHRUADCDIABJCEFAKLEFAGMGNABOPBUBUCDCDIABUDJCEFAKLEFAGMGNABOPBUJUEUGHUIUEUGHUIUMCUEUGUADCDIABJCEFAKLEFAGMGNABOPBUBUCDCDIABUDJCEFAKLEFAGMGNABOPBCHRUADCDIABJCEFAKLEFAGMGNABOPBUBUCDCDIABUDJCEFAKLEFAGMGNABOPBUEUGHUIHUEVKUEUGHUIUMUADCDIABJCEFAKLEFAGMGNABOPBUBUCDCDIABUDUEUGHUIUNJCEFAKLEFAGMGNABOPBUEUGHUIUNUSUTVAVLUR $.
equality-elim-1 $p |- ( \imp \top ( \kore-valid \kore-sort-SortGeneratedTopCell ( \kore-rewrites-star \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-top \kore-sort-SortGeneratedTopCell ) ) ( \kore-symbol-LblinitGeneratedTopCell ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) ) ) ) ) ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-top \kore-sort-SortGeneratedTopCell ) ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblproject'Coln'Pgm ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) \kore-symbol-dotk ) ) ) \kore-symbol-dotk ) ) \kore-symbol-LblinitStateCell ) \kore-symbol-LblinitGeneratedCounterCell ) ) ) ) ) $= ( kore-dv-is-pattern kore-inj-is-pattern BASIC-K-sort-1-is-pattern IMP-sort-20-is-pattern IMP-sort-17-is-pattern string-literal-11-is-pattern IMP-sort-22-is-pattern IMP-sort-8-is-pattern IMP-sort-26-is-pattern string-literal-9-is-pattern IMP-symbol-111-is-pattern IMP-symbol-148-is-pattern IMP-sort-13-is-pattern string-literal-10-is-pattern IMP-symbol-169-is-pattern IMP-symbol-220-is-pattern KSEQ-symbol-1-is-pattern kore-top-is-pattern KSEQ-symbol-0-is-pattern IMP-symbol-112-is-pattern IMP-symbol-196-is-pattern IMP-symbol-176-is-pattern kore-and-is-pattern kore-element-var-x0-elementvariable element-var-is-var IMP-symbol-130-is-pattern IMP-symbol-296-is-pattern IMP-symbol-218-is-pattern IMP-symbol-119-is-pattern IMP-symbol-215-is-pattern IMP-symbol-114-is-pattern substitution-disjoint typecode-cache-Pattern-16 IMP-symbol-117-is-pattern IMP-symbol-216-is-pattern IMP-symbol-217-is-pattern kore-rewrites-star-is-pattern in-sort-is-pattern top-is-pattern substitution-var-same IMP-symbol-114-substitution IMP-symbol-117-substitution substitution-kore-and substitution-kore-rewrites-star substitution-kore-valid KSEQ-symbol-0-substitution IMP-sort-14-is-pattern rule-imp-transitivity IMP-sort-7-is-pattern kore-valid-is-pattern sorting-cache-45 kore-equals-elim-alt IMP-symbol-296-substitution substitution-kore-inj IMP-symbol-119-substitution and-is-pattern sorting-cache-41 rule-and-intro-alt2-sugar IMP-symbol-130-sorting sorting-cache-44 sorting-rearrange-77 IMP-symbol-217-sorting BASIC-K-sort-0-is-pattern sorting-cache-175 IMP-symbol-119-sorting sorting-rearrange-76 equality-elim-0 ) CTDCDJABICEFAKLEFAGMGNABOPBUAUBDCDJABUFICEFAKLEFAGMGNABOPBHHHHRHRUCTDCDJABICEFAKLEFAGMGNABOPBUAUBUOUCHHHRHRUCICTDCDJABICEFAKLEFAGMGNABOPBUAUBDCDJABUFQSUGBQSUIUHUKUJUNUCUQHHHHHRHRUCTDCDJABICEFAKLEFAGMGNABOPBUAUBUOUCHHHRHRUCICUDUMQSUGBQSUIUHUKUJUNUCUQVJHHHHRHRUCTDCDJABICEFAKLEFAGMGNABOPBUAUBUOUCHHHRHRUCICICEFAKLEFAGMGNABOPBQSUGBQSUIUHUKUJUNUCUQHHUSUDUSTDCDJABICEFAKLEFAGMGNABOPBUAUBVGURDCDJABCURVPTDCDJABICEFAKLEFAGMGNABOPBUAUBDCDJABUFCURUSTDCDJABICEFAKLEFAGMGNABOPBUAUBVGURDCDJABCURVKVQVRTDCDJABICEFAKLEFAGMGNABOPBUAUBDCDJABVSVHVTWAVITDCDJABICEFAKLEFAGMGNABOPBUAUBUPICTDCDJABICEFAKLEFAGMGNABOPBUAUBDCDJABUFQSUGBQSUIHHHHRHRUCTDCDJABICEFAKLEFAGMGNABOPBUAUBUOUCHHHRHRUCTDCDJABICEFAKLEFAGMGNABOPBUAUBUPUHUKUJUNUCUQHHHHHRHRUCTDCDJABICEFAKLEFAGMGNABOPBUAUBUOUCHHHRHRUCUDUMUHUKUJUNUCUQVJHHHHRHRUCTDCDJABICEFAKLEFAGMGNABOPBUAUBUOUCHHHRHRUCICTDCDJABICEFAKLEFAGMGNABOPBUAUBDCDJABUFQSUGBQSUIUHUKUJUNUCUQHHUSUDUSTDCDJABICEFAKLEFAGMGNABOPBUAUBVGURTDCDJABICEFAKLEFAGMGNABOPBUAUBUPVIURVKTDCDJABICEFAKLEFAGMGNABOPBUAUBWBVHUSICTDCDJABICEFAKLEFAGMGNABOPBUAUBDCDJABUFQSUGBQSWCURICTDCDJABICEFAKLEFAGMGNABOPBUAUBDCDJABUFQSUGBQSUIVIURWDICTDCDJABICEFAKLEFAGMGNABOPBUAUBDCDJABUFQSUGBQSWEVHWFWGHHHHHRHRUCTDCDJABICEFAKLEFAGMGNABOPBUAUBUOUCHHHRHRUCTDCDJABICEFAKLEFAGMGNABOPBUAUBUPUHUKUJUNUCUQHHHHHRHRUCTDCDJABICEFAKLEFAGMGNABOPBUAUBUOUCHHHRHRUCUDUMUHUKUJUNUCUQTDCDJABICEFAKLEFAGMGNABOPBUAUBUPUDUEHTDCDJABICEFAKLEFAGMGNABOPBUAUBUPUDUEULHHHHRHRUCTDCDJABICEFAKLEFAGMGNABOPBUAUBUOUCHHHRHRUCTDCDJABICEFAKLEFAGMGNABOPBUAUBUPUHUKUJUNUCHHHHRHRUCTDCDJABICEFAKLEFAGMGNABOPBUAUBUOUCHHHRHRUCUDUMUHUKUJUNUCTDCDJABICEFAKLEFAGMGNABOPBUAUBUPUDUEHTDCDJABICEFAKLEFAGMGNABOPBUAUBUPUDUEULHHHRHRUCTDCDJABICEFAKLEFAGMGNABOPBUAUBUOUCTDCDJABICEFAKLEFAGMGNABOPBUAUBUPUDUEULHHHRHRUCTDCDJABICEFAKLEFAGMGNABOPBUAUBUPUHUKUJUNHHHRHRUCUDUMUHUKUJUNTDCDJABICEFAKLEFAGMGNABOPBUAUBUPUDUEHTDCDJABICEFAKLEFAGMGNABOPBUAUBUPUDUEULHHRHRUCTDCDJABICEFAKLEFAGMGNABOPBUAUBUPUDUEULUDUETDCDJABICEFAKLEFAGMGNABOPBUAUBUPTDCDJABICEFAKLEFAGMGNABOPBUAUBUPUHUKUJUDUMUHUKUJUDUETDCDJABICEFAKLEFAGMGNABOPBUAUBUPTDCDJABICEFAKLEFAGMGNABOPBUAUBUPUHUDUMUHTDCDJABICEFAKLEFAGMGNABOPBUAUBUPUDUEUTUHTDCDJABICEFAKLEFAGMGNABOPBUAUBUPUDUEULVAUJTDCDJABICEFAKLEFAGMGNABOPBUAUBUPUDUEULVBVCVDVEHHHHHRHRUCTDCDJABICEFAKLEFAGMGNABOPBUAUBUOUCHHHRHRUCICTDCDJABICEFAKLEFAGMGNABOPBUAUBDCDJABUFQSUGBQSUIUHUKUJUNUCUQHHHHHRHRUCTDCDJABICEFAKLEFAGMGNABOPBUAUBUOUCHHHRHRUCUDUMUHUKUJUNUCUQICTDCDJABICEFAKLEFAGMGNABOPBUAUBDCDJABUFQSUGBQSUIUDUEHICTDCDJABICEFAKLEFAGMGNABOPBUAUBDCDJABUFQSUGBQSUIUDUEULHHHHRHRUCTDCDJABICEFAKLEFAGMGNABOPBUAUBUOUCHHHRHRUCICTDCDJABICEFAKLEFAGMGNABOPBUAUBDCDJABUFQSUGBQSUIUHUKUJUNUCHHHHRHRUCTDCDJABICEFAKLEFAGMGNABOPBUAUBUOUCHHHRHRUCUDUMUHUKUJUNUCICTDCDJABICEFAKLEFAGMGNABOPBUAUBDCDJABUFQSUGBQSUIUDUEHICTDCDJABICEFAKLEFAGMGNABOPBUAUBDCDJABUFQSUGBQSUIUDUEULHHHRHRUCTDCDJABICEFAKLEFAGMGNABOPBUAUBUOUCICTDCDJABICEFAKLEFAGMGNABOPBUAUBDCDJABUFQSUGBQSUIUDUEULHHHRHRUCICTDCDJABICEFAKLEFAGMGNABOPBUAUBDCDJABUFQSUGBQSUIUHUKUJUNHHHRHRUCUDUMUHUKUJUNICTDCDJABICEFAKLEFAGMGNABOPBUAUBDCDJABUFQSUGBQSUIUDUEHICTDCDJABICEFAKLEFAGMGNABOPBUAUBDCDJABUFQSUGBQSUIUDUEULHHRHRUCICTDCDJABICEFAKLEFAGMGNABOPBUAUBDCDJABUFQSUGBQSUIUDUEULUDUEICTDCDJABICEFAKLEFAGMGNABOPBUAUBDCDJABUFQSUGBQSUIICTDCDJABICEFAKLEFAGMGNABOPBUAUBDCDJABUFQSUGBQSUIUHUKUJUDUMUHUKUJUDUEICTDCDJABICEFAKLEFAGMGNABOPBUAUBDCDJABUFQSUGBQSUIICTDCDJABICEFAKLEFAGMGNABOPBUAUBDCDJABUFQSUGBQSUIUHUDUMUHICTDCDJABICEFAKLEFAGMGNABOPBUAUBDCDJABUFQSUGBQSUIUDUEUTUHICTDCDJABICEFAKLEFAGMGNABOPBUAUBDCDJABUFQSUGBQSUIUDUEULVAUJICTDCDJABICEFAKLEFAGMGNABOPBUAUBDCDJABUFQSUGBQSUIUDUEULVBVCVDVEVLHHHHHRHRUCTDCDJABICEFAKLEFAGMGNABOPBUAUBUOUCHHHRHRUCICTDCDJABICEFAKLEFAGMGNABOPBUAUBDCDJABUFQSUGBQSUIUHUKUJUNUCUQHHHHHRHRUCTDCDJABICEFAKLEFAGMGNABOPBUAUBUOUCHHHRHRUCICUDUMQSUGBQSUIUHUKUJUNUCUQTDCDJABICEFAKLEFAGMGNABOPBUAUBDCDJABUFUDUEHTDCDJABICEFAKLEFAGMGNABOPBUAUBDCDJABUFUDUEULHHHHRHRUCTDCDJABICEFAKLEFAGMGNABOPBUAUBUOUCHHHRHRUCICTDCDJABICEFAKLEFAGMGNABOPBUAUBDCDJABUFQSUGBQSUIUHUKUJUNUCHHHHRHRUCTDCDJABICEFAKLEFAGMGNABOPBUAUBUOUCHHHRHRUCICUDUMQSUGBQSUIUHUKUJUNUCTDCDJABICEFAKLEFAGMGNABOPBUAUBDCDJABUFUDUEHTDCDJABICEFAKLEFAGMGNABOPBUAUBDCDJABUFUDUEULHHHRHRUCTDCDJABICEFAKLEFAGMGNABOPBUAUBUOUCTDCDJABICEFAKLEFAGMGNABOPBUAUBDCDJABUFUDUEULHHHRHRUCICTDCDJABICEFAKLEFAGMGNABOPBUAUBDCDJABUFQSUGBQSUIUHUKUJUNHHHRHRUCICUDUMQSUGBQSUIUHUKUJUNTDCDJABICEFAKLEFAGMGNABOPBUAUBDCDJABUFUDUEHTDCDJABICEFAKLEFAGMGNABOPBUAUBDCDJABUFUDUEULHHRHRUCTDCDJABICEFAKLEFAGMGNABOPBUAUBDCDJABUFUDUEULUDUETDCDJABICEFAKLEFAGMGNABOPBUAUBDCDJABUFICTDCDJABICEFAKLEFAGMGNABOPBUAUBDCDJABUFQSUGBQSUIUHUKUJICUDUMQSUGBQSUIUHUKUJUDUETDCDJABICEFAKLEFAGMGNABOPBUAUBDCDJABUFICTDCDJABICEFAKLEFAGMGNABOPBUAUBDCDJABUFQSUGBQSUIUHICUDUMQSUGBQSUIUHUDUETDCDJABICEFAKLEFAGMGNABOPBUAUBDCDJABUFICTDCDJABICEFAKLEFAGMGNABOPBUAUBDCDJABUFQSUGBQSICUDUMQSUGBQSUDUETDCDJABICEFAKLEFAGMGNABOPBUAUBDCDJABUFICTDCDJABICEFAKLEFAGMGNABOPBUAUBDCDJABUFQSUGBQICUDUMQSUGBQICTDCDJABICEFAKLEFAGMGNABOPBUAUBDCDJABUFQSUGICUDUMQSUGTDCDJABICEFAKLEFAGMGNABOPBUAUBDCDJABUFUDUEITDCDJABICEFAKLEFAGMGNABOPBUAUBDCDJABUFUDUEULCTDCDJABICEFAKLEFAGMGNABOPBUAUBDCDJABUFUDUEULUDUETDCDJABICEFAKLEFAGMGNABOPBUAUBDCDJABUFTDCDJABICEFAKLEFAGMGNABOPBUAUBDCDJABUFQSUDUMQSUDUETDCDJABICEFAKLEFAGMGNABOPBUAUBDCDJABUFTDCDJABICEFAKLEFAGMGNABOPBUAUBDCDJABUFQUDUMQTDCDJABICEFAKLEFAGMGNABOPBUAUBDCDJABUFUDUEUTQTDCDJABICEFAKLEFAGMGNABOPBUAUBDCDJABUFUDUEULVFVMVNQTDCDJABICEFAKLEFAGMGNABOPBUAUBDCDJABUFUDUEULVFVOUHTDCDJABICEFAKLEFAGMGNABOPBUAUBDCDJABUFUDUEULVAUJTDCDJABICEFAKLEFAGMGNABOPBUAUBDCDJABUFUDUEULVBVCVDVEHHHHHRHRUCTDCDJABICEFAKLEFAGMGNABOPBUAUBUOUCHHHRHRUCICICEFAKLEFAGMGNABOPBQSUGBQSUIUHUKUJUNUCUQHHHHHRHRUCTDCDJABICEFAKLEFAGMGNABOPBUAUBUOUCHHHRHRUCICUDUMQSUGBQSUIUHUKUJUNUCUQICEFAKLEFAGMGNABOPBUDUEHICEFAKLEFAGMGNABOPBUDUEULHHHHRHRUCTDCDJABICEFAKLEFAGMGNABOPBUAUBUOUCHHHRHRUCICICEFAKLEFAGMGNABOPBQSUGBQSUIUHUKUJUNUCHHHHRHRUCTDCDJABICEFAKLEFAGMGNABOPBUAUBUOUCHHHRHRUCICUDUMQSUGBQSUIUHUKUJUNUCICEFAKLEFAGMGNABOPBUDUEHICEFAKLEFAGMGNABOPBUDUEULHHHRHRUCTDCDJABICEFAKLEFAGMGNABOPBUAUBUOUCICEFAKLEFAGMGNABOPBUDUEULHHHRHRUCICICEFAKLEFAGMGNABOPBQSUGBQSUIUHUKUJUNHHHRHRUCICUDUMQSUGBQSUIUHUKUJUNICEFAKLEFAGMGNABOPBUDUEHICEFAKLEFAGMGNABOPBUDUEULHHRHRUCICEFAKLEFAGMGNABOPBUDUEULUDUEICEFAKLEFAGMGNABOPBICICEFAKLEFAGMGNABOPBQSUGBQSUIUHUKUJICUDUMQSUGBQSUIUHUKUJUDUEICEFAKLEFAGMGNABOPBICICEFAKLEFAGMGNABOPBQSUGBQSUIUHICUDUMQSUGBQSUIUHUDUEICEFAKLEFAGMGNABOPBICICEFAKLEFAGMGNABOPBQSUGBQSICUDUMQSUGBQSUDUEICEFAKLEFAGMGNABOPBICICEFAKLEFAGMGNABOPBQSUGBQICUDUMQSUGBQICICEFAKLEFAGMGNABOPBQSUGICUDUMQSUGICEFAKLEFAGMGNABOPBUDUEIICEFAKLEFAGMGNABOPBUDUEULCICEFAKLEFAGMGNABOPBUDUEULUDUEICEFAKLEFAGMGNABOPBICEFAKLEFAGMGNABOPBQSUDUMQSUDUEICEFAKLEFAGMGNABOPBICEFAKLEFAGMGNABOPBQUDUMQICEFAKLEFAGMGNABOPBUDUEUTQICEFAKLEFAGMGNABOPBUDUEULVFVMVNQICEFAKLEFAGMGNABOPBUDUEULVFVOUHICEFAKLEFAGMGNABOPBUDUEULVAUJICEFAKLEFAGMGNABOPBUDUEULVBVCVDVEVL $.
typecode-cache-Pattern-82 $p #Pattern ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-V2 \kore-sort-SortK ) \top ) ) $= ( and-is-pattern typecode-cache-Pattern-2 kore-is-sort-is-pattern typecode-cache-Pattern-8 BASIC-K-sort-0-is-pattern in-sort-is-pattern top-is-pattern ) ADEBFGHICC $.
sorting-cache-176 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-V2 \kore-sort-SortK ) \top ) ) ( \kore-is-sort kore-sort-var-R ) ) $= ( typecode-cache-Pattern-2 kore-is-sort-is-pattern typecode-cache-Pattern-82 typecode-cache-Pattern-8 BASIC-K-sort-0-is-pattern in-sort-is-pattern top-is-pattern and-is-pattern and-elim-left-sugar imp-reflexivity rule-imp-transitivity ) ABEACDACDACDBFGHIJKACDLM $.
sorting-cache-177 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-V2 \kore-sort-SortK ) \top ) ) ( \in-sort kore-element-var-V2 \kore-sort-SortK ) ) $= ( typecode-cache-Pattern-8 BASIC-K-sort-0-is-pattern in-sort-is-pattern top-is-pattern and-is-pattern rule-imp-transitivity typecode-cache-Pattern-82 typecode-cache-Pattern-2 kore-is-sort-is-pattern and-elim-right-sugar and-elim-left-sugar imp-reflexivity ) ABIBCDEFGBCDEAJKBCDEFGLBCDEFGBCDEBCDEBCDEFMBCDENHH $.
sorting-cache-178 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-V2 \kore-sort-SortK ) \top ) ) ( \and ( \in-sort kore-element-var-V1 \kore-sort-SortKItem ) \top ) ) ( \and ( \in-sort kore-element-var-V2 \kore-sort-SortK ) \top ) ) $= ( and-is-pattern in-sort-is-pattern top-is-pattern typecode-cache-Pattern-82 typecode-cache-Pattern-10 BASIC-K-sort-1-is-pattern typecode-cache-Pattern-8 BASIC-K-sort-0-is-pattern and-elim-left-sugar sorting-cache-177 rule-imp-transitivity top-intro rule-weakening rule-and-intro-alt2-sugar ) ACGBHIEFDDCJKEFACGBHIEFDDACGCJKEACGBHIEFDLACMNACGBHIEFDDFOPQ $.
typecode-cache-Pattern-83 $p #Pattern ( \and ( \in-sort kore-element-var-V1 \kore-sort-SortKItem ) ( \and ( \in-sort kore-element-var-V2 \kore-sort-SortK ) \top ) ) $= ( in-sort-is-pattern and-is-pattern typecode-cache-Pattern-10 BASIC-K-sort-1-is-pattern typecode-cache-Pattern-8 BASIC-K-sort-0-is-pattern top-is-pattern ) AEFCBGHCIDD $.
sorting-cache-179 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-V2 \kore-sort-SortK ) \top ) ) ( \and ( \in-sort kore-element-var-V1 \kore-sort-SortKItem ) \top ) ) ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-V1 \kore-sort-SortKItem ) ( \and ( \in-sort kore-element-var-V2 \kore-sort-SortK ) \top ) ) ) ) $= ( in-sort-is-pattern typecode-cache-Pattern-10 BASIC-K-sort-1-is-pattern and-is-pattern top-is-pattern typecode-cache-Pattern-82 rule-imp-transitivity typecode-cache-Pattern-2 kore-is-sort-is-pattern and-elim-left-sugar rule-and-intro-alt2-sugar typecode-cache-Pattern-83 sorting-cache-176 typecode-cache-Pattern-8 BASIC-K-sort-0-is-pattern and-elim-right-sugar imp-reflexivity sorting-cache-178 ) ACIBEFDHGGAKLBCOACIBEFDHGGACIAKLACIBEFDHGMACPJACIBEFDHGGBEFDCQRDHGACIBEFDHGGBEFDHGBEFDACIBEFDHGSBEFDHGBEFDBEFDBEFDHMBEFDTJJABCUANN $.
typecode-cache-Pattern-84 $p #Pattern ( \kore-symbol-kseq kore-element-var-V1 kore-element-var-V2 ) $= ( typecode-cache-Pattern-10 typecode-cache-Pattern-8 KSEQ-symbol-0-is-pattern ) ACBDE $.
typecode-cache-Pattern-85 $p #Pattern ( \kore-equals \kore-sort-SortK kore-sort-var-R kore-element-var-V0 ( \kore-symbol-kseq kore-element-var-V1 kore-element-var-V2 ) ) $= ( BASIC-K-sort-0-is-pattern typecode-cache-Pattern-2 typecode-cache-Pattern-12 typecode-cache-Pattern-84 kore-equals-is-pattern ) EAFBGCDHI $.
sorting-rearrange-78 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-V2 \kore-sort-SortK ) \top ) ) ( \and ( \in-sort kore-element-var-V1 \kore-sort-SortKItem ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortK kore-sort-var-R kore-element-var-V0 ( \kore-equals \kore-sort-SortK kore-sort-var-R kore-element-var-V0 ( \kore-symbol-kseq kore-element-var-V1 kore-element-var-V2 ) ) ) ) ) $= ( and-is-pattern typecode-cache-Pattern-2 typecode-cache-Pattern-82 typecode-cache-Pattern-10 BASIC-K-sort-1-is-pattern in-sort-is-pattern top-is-pattern kore-is-sort-is-pattern typecode-cache-Pattern-83 BASIC-K-sort-0-is-pattern typecode-cache-Pattern-85 kore-exists-is-pattern kore-valid-is-pattern sorting-cache-179 KSEQ-axiom-2 rule-imp-transitivity ) ADGCHIJKEEAFLCDMEAFNAFABCDOBPQACDRABCDST $.
typecode-cache-Pattern-86 $p #Pattern ( \kore-symbol-kseq kore-element-var-x0 kore-element-var-V2 ) $= ( typecode-cache-Pattern-16 typecode-cache-Pattern-8 KSEQ-symbol-0-is-pattern ) BCADE $.
typecode-cache-Pattern-87 $p #Pattern ( \kore-equals \kore-sort-SortK kore-sort-var-R kore-element-var-V0 ( \kore-symbol-kseq kore-element-var-x0 kore-element-var-V2 ) ) $= ( BASIC-K-sort-0-is-pattern typecode-cache-Pattern-2 typecode-cache-Pattern-12 typecode-cache-Pattern-86 kore-equals-is-pattern ) EAFBGCDHI $.
substitution-224 $p #Substitution \kore-sort-SortKItem \kore-sort-SortKItem kore-element-var-x0 kore-element-var-V1 $= ( BASIC-K-sort-1-is-pattern typecode-cache-Pattern-16 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-225 $p #Substitution ( \in-sort kore-element-var-x0 \kore-sort-SortKItem ) ( \in-sort kore-element-var-V1 \kore-sort-SortKItem ) kore-element-var-x0 kore-element-var-V1 $= ( typecode-cache-Pattern-16 BASIC-K-sort-1-is-pattern element-var-is-var typecode-cache-Pattern-10 substitution-var-same substitution-224 substitution-in-sort ) BCBCDAFDAEBCAEGABHI $.
substitution-226 $p #Substitution ( \and ( \in-sort kore-element-var-x0 \kore-sort-SortKItem ) \top ) ( \and ( \in-sort kore-element-var-V1 \kore-sort-SortKItem ) \top ) kore-element-var-x0 kore-element-var-V1 $= ( typecode-cache-Pattern-16 BASIC-K-sort-1-is-pattern in-sort-is-pattern top-is-pattern typecode-cache-Pattern-10 element-var-is-var substitution-225 substitution-24 substitution-and ) BCBCDEFAGDEFAHABIABJK $.
substitution-227 $p #Substitution \kore-sort-SortK \kore-sort-SortK kore-element-var-x0 kore-element-var-V1 $= ( BASIC-K-sort-0-is-pattern typecode-cache-Pattern-16 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-228 $p #Substitution ( \kore-symbol-kseq kore-element-var-x0 kore-element-var-V2 ) ( \kore-symbol-kseq kore-element-var-V1 kore-element-var-V2 ) kore-element-var-x0 kore-element-var-V1 $= ( typecode-cache-Pattern-16 element-var-is-var typecode-cache-Pattern-8 typecode-cache-Pattern-10 substitution-var-same substitution-28 KSEQ-symbol-0-substitution ) AECDCDBFAGBFCDAEHABCIJ $.
substitution-229 $p #Substitution ( \kore-equals \kore-sort-SortK kore-sort-var-R kore-element-var-V0 ( \kore-symbol-kseq kore-element-var-x0 kore-element-var-V2 ) ) ( \kore-equals \kore-sort-SortK kore-sort-var-R kore-element-var-V0 ( \kore-symbol-kseq kore-element-var-V1 kore-element-var-V2 ) ) kore-element-var-x0 kore-element-var-V1 $= ( BASIC-K-sort-0-is-pattern typecode-cache-Pattern-2 typecode-cache-Pattern-12 typecode-cache-Pattern-86 typecode-cache-Pattern-84 typecode-cache-Pattern-16 element-var-is-var substitution-227 substitution-26 substitution-27 substitution-228 substitution-kore-equals ) FAGBHDEIFAGBHCDJEKCLCEMACENBCEOCDEPQ $.
substitution-230 $p #Substitution ( \kore-exists \kore-sort-SortK kore-sort-var-R kore-element-var-V0 ( \kore-equals \kore-sort-SortK kore-sort-var-R kore-element-var-V0 ( \kore-symbol-kseq kore-element-var-x0 kore-element-var-V2 ) ) ) ( \kore-exists \kore-sort-SortK kore-sort-var-R kore-element-var-V0 ( \kore-equals \kore-sort-SortK kore-sort-var-R kore-element-var-V0 ( \kore-symbol-kseq kore-element-var-V1 kore-element-var-V2 ) ) ) kore-element-var-x0 kore-element-var-V1 $= ( BASIC-K-sort-0-is-pattern typecode-cache-Pattern-2 typecode-cache-Pattern-87 typecode-cache-Pattern-85 typecode-cache-Pattern-16 element-var-is-var substitution-227 substitution-26 substitution-229 substitution-kore-exists-alt ) FAGABDEHFAGABCDIEJBCKCELACEMABCDENO $.
substitution-231 $p #Substitution ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortK kore-sort-var-R kore-element-var-V0 ( \kore-equals \kore-sort-SortK kore-sort-var-R kore-element-var-V0 ( \kore-symbol-kseq kore-element-var-x0 kore-element-var-V2 ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortK kore-sort-var-R kore-element-var-V0 ( \kore-equals \kore-sort-SortK kore-sort-var-R kore-element-var-V0 ( \kore-symbol-kseq kore-element-var-V1 kore-element-var-V2 ) ) ) ) kore-element-var-x0 kore-element-var-V1 $= ( typecode-cache-Pattern-2 BASIC-K-sort-0-is-pattern kore-exists-is-pattern typecode-cache-Pattern-87 typecode-cache-Pattern-85 typecode-cache-Pattern-16 element-var-is-var substitution-26 substitution-230 substitution-kore-valid ) AFGAFABDEIBHAFGAFABCDJBHEKCLACEMABCDENO $.
sorting-cache-180 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-V2 \kore-sort-SortK ) \top ) ) ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-V2 \kore-sort-SortK ) \top ) ) ) $= ( typecode-cache-Pattern-82 top-is-pattern typecode-cache-Pattern-8 BASIC-K-sort-0-is-pattern in-sort-is-pattern rule-and-intro-alt2-sugar typecode-cache-Pattern-2 kore-is-sort-is-pattern and-is-pattern sorting-cache-176 sorting-cache-177 top-intro rule-weakening ) ABCAIJBEFGDKABLABCBEFGDABMABCDNOHH $.
sorting-cache-181 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-V2 \kore-sort-SortK ) \top ) ) ( \and ( \kore-is-sort \kore-sort-SortPgm ) ( \kore-is-sort \kore-sort-SortKItem ) ) ) $= ( kore-is-sort-is-pattern typecode-cache-Pattern-82 IMP-sort-26-is-pattern BASIC-K-sort-1-is-pattern imp-is-pattern proof-rule-prop-1 proof-rule-mp IMP-sort-26-sort BASIC-K-sort-1-sort rule-and-intro-alt2-sugar ) ABDECFCECABDECGECABDHJIFCABDFCGFCABDHKIL $.
sorting-cache-182 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-V2 \kore-sort-SortK ) \top ) ) ( \in-sort ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) \kore-sort-SortIds ) ) $= ( IMP-sort-17-is-pattern in-sort-is-pattern string-literal-11-is-pattern kore-dv-is-pattern IMP-symbol-111-is-pattern typecode-cache-Pattern-82 IMP-sort-0-is-pattern imp-is-pattern proof-rule-prop-1 proof-rule-mp and-is-pattern IMP-symbol-148-is-pattern kore-dv-sorting IMP-symbol-111-sorting rule-and-intro-alt2-sugar IMP-symbol-148-sorting rule-imp-transitivity ) ABHCEFCDGIDMCEFGNIDABHCEFCDGIDCEFCDABHCEFCDJCEFCDABHKCEOLGIDABHGIDJGIDABHKPLQCEFGRS $.
sorting-cache-183 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-V2 \kore-sort-SortK ) \top ) ) ( \and ( \kore-is-sort \kore-sort-SortInt ) ( \kore-is-sort \kore-sort-SortAExp ) ) ) $= ( kore-is-sort-is-pattern typecode-cache-Pattern-82 IMP-sort-22-is-pattern IMP-sort-13-is-pattern imp-is-pattern proof-rule-prop-1 proof-rule-mp IMP-sort-22-sort IMP-sort-13-sort rule-and-intro-alt2-sugar ) ABDECFCECABDECGECABDHJIFCABDFCGFCABDHKIL $.
sorting-cache-184 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-V2 \kore-sort-SortK ) \top ) ) ( \in-sort ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) \kore-sort-SortAExp ) ) $= ( IMP-sort-22-is-pattern string-literal-10-is-pattern kore-dv-is-pattern in-sort-is-pattern IMP-sort-13-is-pattern typecode-cache-Pattern-82 kore-is-sort-is-pattern and-is-pattern kore-inj-is-pattern sorting-cache-183 imp-is-pattern proof-rule-prop-1 kore-dv-sorting proof-rule-mp rule-and-intro-alt2-sugar INJ-symbol-0-sorting rule-imp-transitivity ) ABHCIGIJCDECFJCGCDEKGFABHCIGIJCDECFABLCDECFABHCDECFMCDECFABHNCDOPQCGCDERS $.
sorting-cache-185 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-V2 \kore-sort-SortK ) \top ) ) ( \in-sort ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) \kore-sort-SortStmt ) ) $= ( IMP-sort-17-is-pattern kore-dv-is-pattern string-literal-11-is-pattern in-sort-is-pattern IMP-sort-22-is-pattern IMP-sort-13-is-pattern typecode-cache-Pattern-82 string-literal-10-is-pattern kore-inj-is-pattern and-is-pattern IMP-symbol-169-is-pattern IMP-sort-30-is-pattern imp-is-pattern proof-rule-prop-1 kore-dv-sorting proof-rule-mp sorting-cache-184 rule-and-intro-alt2-sugar IMP-symbol-169-sorting rule-imp-transitivity ) ABICEDCFGHGJDKHFLCEDGHGJDKMNFABICEDCFGHGJDKHFCEDCFABICEDCFOCEDCFABIPCEQRABSTCEDGHGJDKUAUB $.
sorting-cache-186 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-V2 \kore-sort-SortK ) \top ) ) ( \in-sort ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) \kore-sort-SortPgm ) ) $= ( kore-dv-is-pattern IMP-sort-17-is-pattern string-literal-11-is-pattern IMP-sort-22-is-pattern in-sort-is-pattern IMP-symbol-111-is-pattern IMP-symbol-148-is-pattern IMP-sort-13-is-pattern string-literal-10-is-pattern kore-inj-is-pattern IMP-symbol-169-is-pattern typecode-cache-Pattern-82 IMP-sort-0-is-pattern IMP-sort-30-is-pattern and-is-pattern IMP-symbol-220-is-pattern IMP-sort-26-is-pattern sorting-cache-182 sorting-cache-185 rule-and-intro-alt2-sugar IMP-symbol-220-sorting rule-imp-transitivity ) ABNDECHIOGDECFJFKCLMPGQDECHIDECFJFKCLMRSGABNDECHIOGDECFJFKCLMPGABTABUAUBDECHIDECFJFKCLMUCUD $.
sorting-cache-187 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-V2 \kore-sort-SortK ) \top ) ) ( \in-sort ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) \kore-sort-SortKItem ) ) $= ( kore-dv-is-pattern IMP-sort-17-is-pattern string-literal-11-is-pattern IMP-sort-22-is-pattern IMP-sort-26-is-pattern BASIC-K-sort-1-is-pattern kore-inj-is-pattern kore-is-sort-is-pattern IMP-symbol-111-is-pattern IMP-symbol-148-is-pattern IMP-sort-13-is-pattern string-literal-10-is-pattern IMP-symbol-169-is-pattern IMP-symbol-220-is-pattern and-is-pattern in-sort-is-pattern typecode-cache-Pattern-82 sorting-cache-181 sorting-cache-186 rule-and-intro-alt2-sugar INJ-symbol-0-sorting rule-imp-transitivity ) ABSGJHJQDECKLDECFMFNCIOPGRQGHDECKLDECFMFNCIOPIHRABSGJHJQDECKLDECFMFNCIOPGRABTABUAUBGHDECKLDECFMFNCIOPUCUD $.
sorting-rearrange-79 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-V2 \kore-sort-SortK ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortK kore-sort-var-R kore-element-var-V0 ( \kore-equals \kore-sort-SortK kore-sort-var-R kore-element-var-V0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) kore-element-var-V2 ) ) ) ) ) $= ( kore-dv-is-pattern IMP-sort-17-is-pattern string-literal-11-is-pattern IMP-sort-22-is-pattern kore-inj-is-pattern BASIC-K-sort-1-is-pattern IMP-sort-26-is-pattern IMP-symbol-111-is-pattern IMP-symbol-148-is-pattern IMP-sort-13-is-pattern string-literal-10-is-pattern IMP-symbol-169-is-pattern IMP-symbol-220-is-pattern kore-element-var-V1-elementvariable typecode-cache-Pattern-2 BASIC-K-sort-0-is-pattern element-var-is-var top-is-pattern in-sort-is-pattern and-is-pattern kore-exists-is-pattern typecode-cache-Pattern-82 typecode-cache-Pattern-8 substitution-disjoint typecode-cache-Pattern-12 kore-valid-is-pattern kore-element-var-x0-elementvariable KSEQ-symbol-0-is-pattern typecode-cache-Pattern-10 kore-equals-is-pattern typecode-cache-Pattern-85 kore-element-var-Val-elementvariable typecode-cache-Pattern-16 top-intro rule-weakening rule-and-intro-alt2-sugar typecode-cache-Pattern-87 rule-imp-transitivity substitution-var-same substitution-imp sorting-cache-180 sorting-cache-187 typecode-cache-Pattern-3 eq-is-pattern exists-is-pattern sorting-cache-44 sorting-rearrange-51 kore-functional sorting-rearrange-78 substitution-in-sort substitution-and typecode-cache-Pattern-84 KSEQ-symbol-0-substitution substitution-kore-equals substitution-kore-exists-alt substitution-kore-valid substitution-226 substitution-231 functional-substitution-alt ) ACUEACUEJIEFDKLEFDGMGNDHOPHIUBUAUCUCARSARSARBUHJIEFDKLEFDGMGNDHOPHCUFUKUMBUDUIACUEACUEJIEFDKLEFDGMGNDHOPHIUBUAUCACVDACUEJIEFDKLEFDGMGNDHOPHIUBUAACVEACUEUAUQURUSUSJIEFDKLEFDGMGNDHOPHARSARABQCUNBUDUIARSARSARBUHJIEFDKLEFDGMGNDHOPHCUFUKUMBUDUIARSARABCUJUTBUDUIACUEQULIUBUAUCJIEFDKLEFDGMGNDHOPHIUBUAUCUJUPIUBUAUCUOQUJACUEUAUOVFJIEFDKLEFDGMGNDHOPHVGUOVHACUEUAUQURIJIEFDKLEFDGMGNDHOPHUAUOVIUOVJVKVAABQCVLJIEFDKLEFDGMGNDHOPHJIEFDKLEFDGMGNDHOPHIUBUAUCARSARSARBUHJIEFDKLEFDGMGNDHOPHCUFUKUMBUDUIQULIUBUAUCARSARABQCUNBUDUIQTJIEFDKLEFDGMGNDHOPHJIEFDKLEFDGMGNDHOPHIUBUAQULIUBUAQTJIEFDKLEFDGMGNDHOPHJIEFDKLEFDGMGNDHOPHIQULIQTJIEFDKLEFDGMGNDHOPHQTVBIJIEFDKLEFDGMGNDHOPHQTUGVMUAJIEFDKLEFDGMGNDHOPHQTUGVNARSARSARBUHJIEFDKLEFDGMGNDHOPHCUFUKUMBUDARSARABQCUNBUDJIEFDKLEFDGMGNDHOPHQTARJIEFDKLEFDGMGNDHOPHQTUGSARSARBUHJIEFDKLEFDGMGNDHOPHCUFUKUMSARABQCUNJIEFDKLEFDGMGNDHOPHBQTSJIEFDKLEFDGMGNDHOPHQTUGARJIEFDKLEFDGMGNDHOPHQTUGSARBUHJIEFDKLEFDGMGNDHOPHCUFUKSARBUHQCVOJIEFDKLEFDGMGNDHOPHQTSJIEFDKLEFDGMGNDHOPHQTUGARJIEFDKLEFDGMGNDHOPHQTUGBUHJIEFDKLEFDGMGNDHOPHQTUGQTJIEFDKLEFDGMGNDHOPHJIEFDKLEFDGMGNDHOPHCUFQULCUFJIEFDKLEFDGMGNDHOPHQTVBCUFJIEFDKLEFDGMGNDHOPHQTUGVPVQVRVSVCUJUPUJUPIUBUAUCARSARABCUJUTBUDUIQULIUBUAUCARSARABQCUNBUDUIQTQUJVTABQCUJWAVCWBVA $.
typecode-cache-Pattern-88 $p #Pattern ( \kore-equals \kore-sort-SortK kore-sort-var-R kore-element-var-V0 \kore-symbol-dotk ) $= ( BASIC-K-sort-0-is-pattern typecode-cache-Pattern-2 typecode-cache-Pattern-12 KSEQ-symbol-1-is-pattern kore-equals-is-pattern ) CADBEFG $.
sorting-rearrange-80 $p |- ( \imp ( \and \top ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortK kore-sort-var-R kore-element-var-V0 ( \kore-equals \kore-sort-SortK kore-sort-var-R kore-element-var-V0 \kore-symbol-dotk ) ) ) ) $= ( top-is-pattern typecode-cache-Pattern-2 and-is-pattern kore-is-sort-is-pattern BASIC-K-sort-0-is-pattern typecode-cache-Pattern-88 kore-exists-is-pattern kore-valid-is-pattern sorting-cache-47 top-intro rule-weakening rule-and-intro-alt2-sugar KSEQ-axiom-3 rule-imp-transitivity ) CADFCEEADFCEADGADABHBIJCADFCEEADFCAKCADFCEECLMNABOP $.
typecode-cache-Pattern-89 $p #Pattern ( \kore-equals \kore-sort-SortK \unit-sort kore-element-var-V0 \kore-symbol-dotk ) $= ( BASIC-K-sort-0-is-pattern unit-sort-is-symbol symbol-is-pattern typecode-cache-Pattern-12 KSEQ-symbol-1-is-pattern kore-equals-is-pattern ) BCDAEFG $.
typecode-cache-Pattern-90 $p #Pattern ( \kore-equals \kore-sort-SortK kore-sort-var-x0 kore-element-var-V0 \kore-symbol-dotk ) $= ( BASIC-K-sort-0-is-pattern typecode-cache-Pattern-6 typecode-cache-Pattern-12 KSEQ-symbol-1-is-pattern kore-equals-is-pattern ) CBDAEFG $.
substitution-232 $p #Substitution \kore-sort-SortK \kore-sort-SortK \unit-sort kore-sort-var-R $= ( BASIC-K-sort-0-is-pattern unit-sort-is-symbol symbol-is-pattern element-var-is-var substitution-disjoint ) BCDAEF $.
substitution-233 $p #Substitution \kore-symbol-dotk \kore-symbol-dotk \unit-sort kore-sort-var-R $= ( KSEQ-symbol-1-is-pattern unit-sort-is-symbol symbol-is-pattern element-var-is-var substitution-disjoint ) BCDAEF $.
substitution-234 $p #Substitution ( \kore-equals \kore-sort-SortK \unit-sort kore-element-var-V0 \kore-symbol-dotk ) ( \kore-equals \kore-sort-SortK kore-sort-var-R kore-element-var-V0 \kore-symbol-dotk ) \unit-sort kore-sort-var-R $= ( unit-sort-is-symbol symbol-is-pattern BASIC-K-sort-0-is-pattern typecode-cache-Pattern-12 KSEQ-symbol-1-is-pattern element-var-is-var typecode-cache-Pattern-2 substitution-232 substitution-var-same substitution-179 substitution-233 substitution-kore-equals ) ECDBFGEAIBFGCDAHAJCDAHKABLAMN $.
substitution-235 $p #Substitution \kore-sort-SortK \kore-sort-SortK kore-sort-var-x0 kore-sort-var-R $= ( BASIC-K-sort-0-is-pattern typecode-cache-Pattern-6 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-236 $p #Substitution \kore-symbol-dotk \kore-symbol-dotk kore-sort-var-x0 kore-sort-var-R $= ( KSEQ-symbol-1-is-pattern typecode-cache-Pattern-6 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-237 $p #Substitution ( \kore-equals \kore-sort-SortK kore-sort-var-x0 kore-element-var-V0 \kore-symbol-dotk ) ( \kore-equals \kore-sort-SortK kore-sort-var-R kore-element-var-V0 \kore-symbol-dotk ) kore-sort-var-x0 kore-sort-var-R $= ( typecode-cache-Pattern-6 BASIC-K-sort-0-is-pattern typecode-cache-Pattern-12 KSEQ-symbol-1-is-pattern element-var-is-var typecode-cache-Pattern-2 substitution-235 substitution-var-same substitution-180 substitution-236 substitution-kore-equals ) ECDBFGEAIBFGCDAHACJCDAHKABCLACMN $.
substitution-238 $p #Substitution ( \kore-exists \kore-sort-SortK kore-sort-var-x0 kore-element-var-V0 ( \kore-equals \kore-sort-SortK kore-sort-var-x0 kore-element-var-V0 \kore-symbol-dotk ) ) ( \kore-exists \kore-sort-SortK kore-sort-var-R kore-element-var-V0 ( \kore-equals \kore-sort-SortK kore-sort-var-R kore-element-var-V0 \kore-symbol-dotk ) ) kore-sort-var-x0 kore-sort-var-R $= ( typecode-cache-Pattern-6 BASIC-K-sort-0-is-pattern element-var-is-var typecode-cache-Pattern-90 typecode-cache-Pattern-2 typecode-cache-Pattern-88 substitution-235 substitution-var-same substitution-237 substitution-kore-exists-alt ) ECDBCGEAHABICDBAFACJCDAFKABCLM $.
sorting-rearrange-81 $p |- ( \imp \top ( \kore-valid \unit-sort ( \kore-exists \kore-sort-SortK \unit-sort kore-element-var-V0 ( \kore-equals \kore-sort-SortK \unit-sort kore-element-var-V0 \kore-symbol-dotk ) ) ) ) $= ( kore-sort-var-R-elementvariable unit-sort-is-symbol symbol-is-pattern top-is-pattern kore-sort-var-x0-elementvariable BASIC-K-sort-0-is-pattern typecode-cache-Pattern-2 kore-exists-is-pattern typecode-cache-Pattern-6 and-is-pattern kore-is-sort-is-pattern kore-valid-is-pattern element-var-is-var typecode-cache-Pattern-88 typecode-cache-Pattern-89 x-is-element-var typecode-cache-Pattern-90 substitution-var-same rule-weakening substitution-kore-valid substitution-imp top-intro sorting-cache-49 rule-and-intro-alt2-sugar typecode-cache-Pattern-1 exists-is-pattern unit-sort-is-functional sorting-rearrange-80 substitution-2 substitution-232 substitution-234 substitution-kore-exists-alt substitution-9 substitution-238 functional-substitution-alt rule-imp-transitivity ) EECDLEKKCDGCDAPAIMEECDLEKEEUCTUDUECDBHGBHBAOAIMCDGCDAPAIMFJGFJAFRAIMEBHLEKCDLEKFJLEKQBFEQUFQUGQUHTBAUICDCDLEKCDGCDAPAIMBHLEKBHGBHBAOAIMBNBUJCDGCDAPAIBHGBHBAOAICDBNCDBNSGCDAPGBHBAOCDABNBUKCDBNSBAULUMUAUBFJFJLEKFJGFJAFRAIMBHLEKBHGBHBAOAIMBNBFUNFJGFJAFRAIBHGBHBAOAIFJBNFJBNSBAFUOUAUBUPUQ $.
sorting-rearrange-82 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \exists kore-element-var-V0 ( \eq kore-element-var-V0 \kore-symbol-dotk ) ) ) $= ( top-is-pattern typecode-cache-Pattern-2 kore-is-sort-is-pattern and-is-pattern KSEQ-symbol-1-is-pattern typecode-cache-Pattern-12 eq-is-pattern exists-is-pattern top-intro rule-weakening BASIC-K-sort-0-is-pattern sorting-cache-12 sorting-rearrange-81 kore-functional rule-imp-transitivity ) ADECFCBHGIBJADECFCKLMGCBNBOPQ $.
sorting-cache-188 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \in-sort kore-element-var-V2 \kore-sort-SortK ) \top ) ) ( \kore-is-sort kore-sort-var-R ) ) $= ( typecode-cache-Pattern-2 kore-is-sort-is-pattern top-is-pattern and-is-pattern typecode-cache-Pattern-8 BASIC-K-sort-0-is-pattern in-sort-is-pattern and-elim-left-sugar rule-imp-transitivity imp-reflexivity ) ACDEFBGHIEFFACDEFACDACDEFBGHIEFJACDEFACDACDACDEJACDLKK $.
sorting-cache-189 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \in-sort kore-element-var-V2 \kore-sort-SortK ) \top ) ) ( \in-sort kore-element-var-V2 \kore-sort-SortK ) ) $= ( typecode-cache-Pattern-8 BASIC-K-sort-0-is-pattern in-sort-is-pattern top-is-pattern and-is-pattern typecode-cache-Pattern-2 kore-is-sort-is-pattern rule-imp-transitivity and-elim-right-sugar and-elim-left-sugar imp-reflexivity ) AHIFGBCDEFGGBCDEFGBCDEAHIFGBCDEFGKBCDEFGBCDEBCDEBCDEFLBCDEMJJ $.
sorting-cache-190 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \in-sort kore-element-var-V2 \kore-sort-SortK ) \top ) ) ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-V2 \kore-sort-SortK ) \top ) ) ) $= ( and-is-pattern top-is-pattern typecode-cache-Pattern-8 BASIC-K-sort-0-is-pattern in-sort-is-pattern typecode-cache-Pattern-2 kore-is-sort-is-pattern rule-and-intro-alt2-sugar sorting-cache-188 sorting-cache-189 top-intro rule-weakening ) AHIDCBEFGDCCAHIBEFGDCABKAHIDCBEFGDCCBEFGDABLAHIDCBEFGDCCDMNJJ $.
sorting-rearrange-83 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \in-sort kore-element-var-V2 \kore-sort-SortK ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortK kore-sort-var-R kore-element-var-V0 ( \kore-equals \kore-sort-SortK kore-sort-var-R kore-element-var-V0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) kore-element-var-V2 ) ) ) ) ) $= ( typecode-cache-Pattern-2 and-is-pattern BASIC-K-sort-0-is-pattern kore-dv-is-pattern top-is-pattern typecode-cache-Pattern-8 IMP-sort-17-is-pattern string-literal-11-is-pattern IMP-sort-22-is-pattern kore-inj-is-pattern kore-is-sort-is-pattern in-sort-is-pattern typecode-cache-Pattern-82 typecode-cache-Pattern-12 IMP-sort-26-is-pattern BASIC-K-sort-1-is-pattern IMP-symbol-111-is-pattern IMP-symbol-148-is-pattern IMP-sort-13-is-pattern string-literal-10-is-pattern IMP-symbol-169-is-pattern IMP-symbol-220-is-pattern KSEQ-symbol-0-is-pattern kore-equals-is-pattern kore-exists-is-pattern kore-valid-is-pattern sorting-cache-190 sorting-rearrange-79 rule-imp-transitivity ) ADNHECIFOHEEACPADFADFADBQRSJKGTUAJKGLUBLUCGMUDUEMCIUFUGBUHUIACUJABCUKUL $.
substitution-239 $p #Substitution ( \and ( \in-sort \kore-symbol-dotk \kore-sort-SortK ) \top ) ( \and ( \in-sort kore-element-var-V2 \kore-sort-SortK ) \top ) \kore-symbol-dotk kore-element-var-V2 $= ( KSEQ-symbol-1-is-pattern BASIC-K-sort-0-is-pattern element-var-is-var top-is-pattern in-sort-is-pattern typecode-cache-Pattern-8 substitution-disjoint substitution-var-same substitution-in-sort substitution-and ) BBCFEAGCFEADBBCAGCADBADICBADHJEBADHK $.
substitution-240 $p #Substitution kore-sort-var-R kore-sort-var-R \kore-symbol-dotk kore-element-var-V2 $= ( typecode-cache-Pattern-2 KSEQ-symbol-1-is-pattern element-var-is-var substitution-disjoint ) ACDBEF $.
substitution-241 $p #Substitution kore-element-var-V0 kore-element-var-V0 \kore-symbol-dotk kore-element-var-V2 $= ( typecode-cache-Pattern-12 KSEQ-symbol-1-is-pattern element-var-is-var substitution-disjoint ) ACDBEF $.
substitution-242 $p #Substitution \kore-sort-SortK \kore-sort-SortK kore-element-var-x0 kore-element-var-V2 $= ( BASIC-K-sort-0-is-pattern typecode-cache-Pattern-16 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-243 $p #Substitution ( \in-sort kore-element-var-x0 \kore-sort-SortK ) ( \in-sort kore-element-var-V2 \kore-sort-SortK ) kore-element-var-x0 kore-element-var-V2 $= ( typecode-cache-Pattern-16 BASIC-K-sort-0-is-pattern element-var-is-var typecode-cache-Pattern-8 substitution-var-same substitution-242 substitution-in-sort ) BCBCDAFDAEBCAEGABHI $.
substitution-244 $p #Substitution ( \and ( \in-sort kore-element-var-x0 \kore-sort-SortK ) \top ) ( \and ( \in-sort kore-element-var-V2 \kore-sort-SortK ) \top ) kore-element-var-x0 kore-element-var-V2 $= ( typecode-cache-Pattern-16 BASIC-K-sort-0-is-pattern in-sort-is-pattern top-is-pattern typecode-cache-Pattern-8 element-var-is-var substitution-243 substitution-171 substitution-and ) BCBCDEFAGDEFAHABIABJK $.
sorting-cache-191 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \in-sort \kore-symbol-dotk \kore-sort-SortK ) ) $= ( KSEQ-symbol-1-is-pattern BASIC-K-sort-0-is-pattern in-sort-is-pattern typecode-cache-Pattern-2 kore-is-sort-is-pattern top-is-pattern and-is-pattern imp-is-pattern proof-rule-prop-1 KSEQ-symbol-1-sorting proof-rule-mp ) BCDAEFGHBCDIBCDAEFGHJKL $.
sorting-cache-192 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \in-sort \kore-symbol-dotk \kore-sort-SortK ) \top ) ) $= ( top-is-pattern typecode-cache-Pattern-2 kore-is-sort-is-pattern and-is-pattern KSEQ-symbol-1-is-pattern BASIC-K-sort-0-is-pattern in-sort-is-pattern sorting-cache-191 top-intro rule-weakening rule-and-intro-alt2-sugar ) ACDBEFGHBAIACDBEBJKL $.
sorting-rearrange-84 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortK kore-sort-var-R kore-element-var-V0 ( \kore-equals \kore-sort-SortK kore-sort-var-R kore-element-var-V0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) \kore-symbol-dotk ) ) ) ) ) $= ( kore-dv-is-pattern typecode-cache-Pattern-2 IMP-sort-17-is-pattern string-literal-11-is-pattern IMP-sort-22-is-pattern kore-inj-is-pattern BASIC-K-sort-0-is-pattern kore-element-var-V2-elementvariable IMP-sort-26-is-pattern BASIC-K-sort-1-is-pattern IMP-symbol-111-is-pattern IMP-symbol-148-is-pattern IMP-sort-13-is-pattern string-literal-10-is-pattern IMP-symbol-169-is-pattern IMP-symbol-220-is-pattern kore-element-var-x0-elementvariable KSEQ-symbol-1-is-pattern typecode-cache-Pattern-12 KSEQ-symbol-0-is-pattern kore-equals-is-pattern element-var-is-var and-is-pattern typecode-cache-Pattern-16 top-is-pattern typecode-cache-Pattern-8 kore-exists-is-pattern in-sort-is-pattern kore-valid-is-pattern kore-is-sort-is-pattern substitution-disjoint substitution-240 substitution-173 substitution-var-same KSEQ-symbol-0-substitution substitution-kore-equals substitution-kore-exists-alt substitution-kore-valid substitution-imp substitution-242 sorting-cache-58 sorting-cache-192 rule-and-intro-alt2-sugar sorting-rearrange-82 sorting-rearrange-83 substitution-239 substitution-241 substitution-244 substitution-174 functional-substitution-alt rule-imp-transitivity ) ADULUGUEADULUGUETIUJUGUEUEADIADIADBUAKLEFCMNEFCGOGPCHQRHTUBUCBUIUKADULUGUEADULUGUETIUJUGUEAVCAVDVETADIADIADBUAKLEFCMNEFCGOGPCHQRHJUHUBUCBUIUKADIADIADBUAKLEFCMNEFCGOGPCHQRHTUBUCBUIUKADIADIADBUAKLEFCMNEFCGOGPCHQRHSUFUBUCBUIUKADULUGUEJUHIUJUGUETIUJUGUESUFIUJUGUEBJSABVFABJVGTTIUJUGUEADIADIADBUAKLEFCMNEFCGOGPCHQRHTUBUCBUIUKJUHIUJUGUEADIADIADBUAKLEFCMNEFCGOGPCHQRHJUHUBUCBUIUKJUDJVHADIADIADBUAKLEFCMNEFCGOGPCHQRHTUBUCBUIADIADIADBUAKLEFCMNEFCGOGPCHQRHJUHUBUCBUITJUDAJUNIADIADBUAKLEFCMNEFCGOGPCHQRHTUBUCIADIADBUAKLEFCMNEFCGOGPCHQRHJUHUBUCTBJUDITJUDUMAJUNIADBUAKLEFCMNEFCGOGPCHQRHTUBIADBUAKLEFCMNEFCGOGPCHQRHJUHUBTJUDITJUDUMAJUNBJVIJUDTKLEFCMNEFCGOGPCHQRHTKLEFCMNEFCGOGPCHQRHJUHKLEFCMNEFCGOGPCHQRHTJUDUMTJUDUPUQURUSUTVASUFSUFIUJUGUEADIADIADBUAKLEFCMNEFCGOGPCHQRHSUFUBUCBUIUKJUHIUJUGUEADIADIADBUAKLEFCMNEFCGOGPCHQRHJUHUBUCBUIUKJUDJSVJADIADIADBUAKLEFCMNEFCGOGPCHQRHSUFUBUCBUIADIADIADBUAKLEFCMNEFCGOGPCHQRHJUHUBUCBUISUFJUDAJSUOIADIADBUAKLEFCMNEFCGOGPCHQRHSUFUBUCIADIADBUAKLEFCMNEFCGOGPCHQRHJUHUBUCSUFBJUDJSVBAJSUOIADBUAKLEFCMNEFCGOGPCHQRHSUFUBIADBUAKLEFCMNEFCGOGPCHQRHJUHUBSUFJUDJSVBAJSUOBJSVKJUDSUFKLEFCMNEFCGOGPCHQRHSUFKLEFCMNEFCGOGPCHQRHJUHKLEFCMNEFCGOGPCHQRHSUFJUDUMSUFJUDUPUQURUSUTVAVLVM $.
sorting-rearrange-85 $p |- ( \imp \top ( \kore-valid \unit-sort ( \kore-exists \kore-sort-SortK \unit-sort kore-element-var-V0 ( \kore-equals \kore-sort-SortK \unit-sort kore-element-var-V0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) \kore-symbol-dotk ) ) ) ) ) $= ( kore-dv-is-pattern kore-sort-var-R-elementvariable IMP-sort-17-is-pattern string-literal-11-is-pattern IMP-sort-22-is-pattern kore-inj-is-pattern BASIC-K-sort-0-is-pattern typecode-cache-Pattern-2 unit-sort-is-symbol symbol-is-pattern kore-sort-var-x0-elementvariable top-is-pattern IMP-sort-26-is-pattern BASIC-K-sort-1-is-pattern IMP-symbol-111-is-pattern IMP-symbol-148-is-pattern IMP-sort-13-is-pattern string-literal-10-is-pattern IMP-symbol-169-is-pattern IMP-symbol-220-is-pattern KSEQ-symbol-1-is-pattern KSEQ-symbol-0-is-pattern typecode-cache-Pattern-6 typecode-cache-Pattern-12 and-is-pattern kore-equals-is-pattern element-var-is-var kore-is-sort-is-pattern kore-exists-is-pattern kore-valid-is-pattern substitution-var-same x-is-element-var rule-weakening top-intro rule-and-intro-alt2-sugar rule-imp-transitivity substitution-232 substitution-disjoint substitution-kore-equals substitution-kore-exists-alt substitution-kore-valid substitution-imp substitution-235 sorting-cache-49 typecode-cache-Pattern-1 exists-is-pattern unit-sort-is-functional sorting-cache-47 sorting-rearrange-84 substitution-2 substitution-179 substitution-9 substitution-180 functional-substitution-alt ) MMJKUIMUFUFJKHJKHJKAUENODEBPQDEBFRFSBGTUAGUBUCUGAUJUKMMJKUIMUFMMUOUNVEUPJKCIHCIHCIAUENODEBPQDEBFRFSBGTUAGUBUCUGAUJUKJKHJKHJKAUENODEBPQDEBFRFSBGTUAGUBUCUGAUJUKLUDHLUDHLUDAUENODEBPQDEBFRFSBGTUAGUBUCUGAUJUKMCIUIMUFJKUIMUFLUDUIMUFUMCLMUMVFUMVGUMVHUNMCIUIMUFUFCIUIMUFCIHCIHCIAUENODEBPQDEBFRFSBGTUAGUBUCUGAUJUKMCIUIMUFUFCIUIMCVIMCIUIMUFUFMUOUNUPCAVJUQJKJKUIMUFJKHJKHJKAUENODEBPQDEBFRFSBGTUAGUBUCUGAUJUKCIUIMUFCIHCIHCIAUENODEBPQDEBFRFSBGTUAGUBUCUGAUJUKCUHCVKJKHJKHJKAUENODEBPQDEBFRFSBGTUAGUBUCUGAUJCIHCIHCIAUENODEBPQDEBFRFSBGTUAGUBUCUGAUJJKCUHJKCUHULHJKHJKAUENODEBPQDEBFRFSBGTUAGUBUCUGHCIHCIAUENODEBPQDEBFRFSBGTUAGUBUCUGJKACUHCURJKCUHULHJKAUENODEBPQDEBFRFSBGTUAGUBUCHCIAUENODEBPQDEBFRFSBGTUAGUBUCJKCUHCURJKCUHULCAVLNODEBPQDEBFRFSBGTUAGUBUCJKCUHUSUTVAVBVCLUDLUDUIMUFLUDHLUDHLUDAUENODEBPQDEBFRFSBGTUAGUBUCUGAUJUKCIUIMUFCIHCIHCIAUENODEBPQDEBFRFSBGTUAGUBUCUGAUJUKCUHCLVMLUDHLUDHLUDAUENODEBPQDEBFRFSBGTUAGUBUCUGAUJCIHCIHCIAUENODEBPQDEBFRFSBGTUAGUBUCUGAUJLUDCUHLUDCUHULHLUDHLUDAUENODEBPQDEBFRFSBGTUAGUBUCUGHCIHCIAUENODEBPQDEBFRFSBGTUAGUBUCUGLUDACUHCLVDLUDCUHULHLUDAUENODEBPQDEBFRFSBGTUAGUBUCHCIAUENODEBPQDEBFRFSBGTUAGUBUCLUDCUHCLVDLUDCUHULCALVNNODEBPQDEBFRFSBGTUAGUBUCLUDCUHUSUTVAVBVCVOUQ $.
sorting-cache-193 $p |- ( \imp \top ( \in-sort ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) \kore-symbol-dotk ) \kore-sort-SortK ) ) $= ( kore-dv-is-pattern IMP-sort-17-is-pattern string-literal-11-is-pattern IMP-sort-22-is-pattern kore-inj-is-pattern BASIC-K-sort-1-is-pattern in-sort-is-pattern IMP-sort-26-is-pattern IMP-symbol-111-is-pattern IMP-symbol-148-is-pattern IMP-sort-13-is-pattern string-literal-10-is-pattern IMP-symbol-169-is-pattern IMP-symbol-220-is-pattern KSEQ-symbol-1-is-pattern BASIC-K-sort-0-is-pattern top-is-pattern and-is-pattern KSEQ-symbol-0-is-pattern sorting-cache-44 sorting-cache-12 rule-and-intro-alt2-sugar KSEQ-symbol-0-sorting rule-imp-transitivity ) QHFBCAIJBCADKDLAEMNEFGOPGRHFBCAIJBCADKDLAEMNEOSPGQHFBCAIJBCADKDLAEMNEFGOPGTUAUBHFBCAIJBCADKDLAEMNEOUCUD $.
typecode-cache-Pattern-91 $p #Pattern ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortPgm ) \top ) ) $= ( and-is-pattern typecode-cache-Pattern-2 kore-is-sort-is-pattern typecode-cache-Pattern-72 IMP-sort-26-is-pattern in-sort-is-pattern top-is-pattern ) ADEBFGHICC $.
sorting-cache-194 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortPgm ) \top ) ) ( \kore-is-sort kore-sort-var-R ) ) $= ( typecode-cache-Pattern-2 kore-is-sort-is-pattern typecode-cache-Pattern-91 typecode-cache-Pattern-72 IMP-sort-26-is-pattern in-sort-is-pattern top-is-pattern and-is-pattern and-elim-left-sugar imp-reflexivity rule-imp-transitivity ) ABEACDACDACDBFGHIJKACDLM $.
sorting-cache-195 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortPgm ) \top ) ) ( \in-sort kore-element-var-VE1 \kore-sort-SortPgm ) ) $= ( typecode-cache-Pattern-72 IMP-sort-26-is-pattern in-sort-is-pattern top-is-pattern and-is-pattern rule-imp-transitivity typecode-cache-Pattern-91 typecode-cache-Pattern-2 kore-is-sort-is-pattern and-elim-right-sugar and-elim-left-sugar imp-reflexivity ) ABIBCDEFGBCDEAJKBCDEFGLBCDEFGBCDEBCDEBCDEFMBCDENHH $.
sorting-cache-196 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortPgm ) \top ) ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) \top ) ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortPgm ) \top ) ) $= ( and-is-pattern in-sort-is-pattern top-is-pattern typecode-cache-Pattern-91 typecode-cache-Pattern-74 BASIC-K-sort-0-is-pattern typecode-cache-Pattern-72 IMP-sort-26-is-pattern and-elim-left-sugar sorting-cache-195 rule-imp-transitivity top-intro rule-weakening rule-and-intro-alt2-sugar ) ACGBHIEFDDCJKEFACGBHIEFDDACGCJKEACGBHIEFDLACMNACGBHIEFDDFOPQ $.
typecode-cache-Pattern-92 $p #Pattern ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortPgm ) \top ) ) $= ( in-sort-is-pattern and-is-pattern typecode-cache-Pattern-74 BASIC-K-sort-0-is-pattern typecode-cache-Pattern-72 IMP-sort-26-is-pattern top-is-pattern ) AEFCBGHCIDD $.
sorting-cache-197 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortPgm ) \top ) ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) \top ) ) ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortPgm ) \top ) ) ) ) $= ( in-sort-is-pattern typecode-cache-Pattern-74 BASIC-K-sort-0-is-pattern and-is-pattern top-is-pattern typecode-cache-Pattern-91 rule-imp-transitivity typecode-cache-Pattern-2 kore-is-sort-is-pattern and-elim-left-sugar rule-and-intro-alt2-sugar typecode-cache-Pattern-92 sorting-cache-194 typecode-cache-Pattern-72 IMP-sort-26-is-pattern and-elim-right-sugar imp-reflexivity sorting-cache-196 ) ACIBEFDHGGAKLBCOACIBEFDHGGACIAKLACIBEFDHGMACPJACIBEFDHGGBEFDCQRDHGACIBEFDHGGBEFDHGBEFDACIBEFDHGSBEFDHGBEFDBEFDBEFDHMBEFDTJJABCUANN $.
typecode-cache-Pattern-93 $p #Pattern ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem kore-element-var-VE1 ) \kore-symbol-dotk ) ) $= ( BASIC-K-sort-0-is-pattern typecode-cache-Pattern-2 typecode-cache-Pattern-74 IMP-sort-26-is-pattern BASIC-K-sort-1-is-pattern typecode-cache-Pattern-72 kore-inj-is-pattern KSEQ-symbol-1-is-pattern KSEQ-symbol-0-is-pattern kore-in-is-pattern ) DAEBFGHCIJKLM $.
typecode-cache-Pattern-94 $p #Pattern ( \kore-equals \kore-sort-SortPgm kore-sort-var-R ( \kore-symbol-Lblproject'Coln'Pgm kore-element-var-VE0 ) kore-element-var-VE1 ) $= ( IMP-sort-26-is-pattern typecode-cache-Pattern-2 typecode-cache-Pattern-74 IMP-symbol-296-is-pattern typecode-cache-Pattern-72 kore-equals-is-pattern ) DAEBFGCHI $.
typecode-cache-Pattern-95 $p #Pattern ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-x0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem kore-element-var-VE1 ) \kore-symbol-dotk ) ) $= ( BASIC-K-sort-0-is-pattern typecode-cache-Pattern-2 typecode-cache-Pattern-16 IMP-sort-26-is-pattern BASIC-K-sort-1-is-pattern typecode-cache-Pattern-72 kore-inj-is-pattern KSEQ-symbol-1-is-pattern KSEQ-symbol-0-is-pattern kore-in-is-pattern ) DAECFGHBIJKLM $.
typecode-cache-Pattern-96 $p #Pattern ( \kore-equals \kore-sort-SortPgm kore-sort-var-R ( \kore-symbol-Lblproject'Coln'Pgm kore-element-var-x0 ) kore-element-var-VE1 ) $= ( IMP-sort-26-is-pattern typecode-cache-Pattern-2 typecode-cache-Pattern-16 IMP-symbol-296-is-pattern typecode-cache-Pattern-72 kore-equals-is-pattern ) DAECFGBHI $.
substitution-245 $p #Substitution \kore-sort-SortK \kore-sort-SortK kore-element-var-x0 kore-element-var-VE0 $= ( BASIC-K-sort-0-is-pattern typecode-cache-Pattern-16 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-246 $p #Substitution ( \in-sort kore-element-var-x0 \kore-sort-SortK ) ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) kore-element-var-x0 kore-element-var-VE0 $= ( typecode-cache-Pattern-16 BASIC-K-sort-0-is-pattern element-var-is-var typecode-cache-Pattern-74 substitution-var-same substitution-245 substitution-in-sort ) BCBCDAFDAEBCAEGABHI $.
substitution-247 $p #Substitution ( \and ( \in-sort kore-element-var-x0 \kore-sort-SortK ) \top ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) \top ) kore-element-var-x0 kore-element-var-VE0 $= ( typecode-cache-Pattern-16 BASIC-K-sort-0-is-pattern in-sort-is-pattern top-is-pattern typecode-cache-Pattern-74 element-var-is-var substitution-246 substitution-183 substitution-and ) BCBCDEFAGDEFAHABIABJK $.
substitution-248 $p #Substitution ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-x0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem kore-element-var-VE1 ) \kore-symbol-dotk ) ) ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem kore-element-var-VE1 ) \kore-symbol-dotk ) ) kore-element-var-x0 kore-element-var-VE0 $= ( typecode-cache-Pattern-16 IMP-sort-26-is-pattern BASIC-K-sort-1-is-pattern typecode-cache-Pattern-72 kore-inj-is-pattern KSEQ-symbol-1-is-pattern KSEQ-symbol-0-is-pattern element-var-is-var BASIC-K-sort-0-is-pattern typecode-cache-Pattern-2 typecode-cache-Pattern-74 substitution-245 substitution-185 substitution-var-same substitution-disjoint substitution-kore-in ) MANDEFGCHIJKMANBOFGCHIJKDEBLBDPABDQDEBLRFGCHIJKDEBLST $.
substitution-249 $p #Substitution \kore-sort-SortPgm \kore-sort-SortPgm kore-element-var-x0 kore-element-var-VE0 $= ( IMP-sort-26-is-pattern typecode-cache-Pattern-16 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-250 $p #Substitution ( \kore-symbol-Lblproject'Coln'Pgm kore-element-var-x0 ) ( \kore-symbol-Lblproject'Coln'Pgm kore-element-var-VE0 ) kore-element-var-x0 kore-element-var-VE0 $= ( typecode-cache-Pattern-16 element-var-is-var typecode-cache-Pattern-74 substitution-var-same IMP-symbol-296-substitution ) ADBCBCAEBCADFG $.
substitution-251 $p #Substitution ( \kore-equals \kore-sort-SortPgm kore-sort-var-R ( \kore-symbol-Lblproject'Coln'Pgm kore-element-var-x0 ) kore-element-var-VE1 ) ( \kore-equals \kore-sort-SortPgm kore-sort-var-R ( \kore-symbol-Lblproject'Coln'Pgm kore-element-var-VE0 ) kore-element-var-VE1 ) kore-element-var-x0 kore-element-var-VE0 $= ( IMP-sort-26-is-pattern typecode-cache-Pattern-2 typecode-cache-Pattern-16 IMP-symbol-296-is-pattern typecode-cache-Pattern-72 typecode-cache-Pattern-74 element-var-is-var substitution-249 substitution-185 substitution-250 substitution-187 substitution-kore-equals ) EAFDGHCIEAFBJHCIDGBKBDLABDMBDNBCDOP $.
substitution-252 $p #Substitution ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortPgm kore-sort-var-R ( \kore-symbol-Lblproject'Coln'Pgm kore-element-var-x0 ) kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortPgm kore-sort-var-R ( \kore-symbol-Lblproject'Coln'Pgm kore-element-var-VE0 ) kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) kore-element-var-x0 kore-element-var-VE0 $= ( typecode-cache-Pattern-2 kore-top-is-pattern typecode-cache-Pattern-96 typecode-cache-Pattern-94 typecode-cache-Pattern-16 element-var-is-var substitution-185 substitution-251 substitution-186 substitution-kore-and ) AEACDGAEFAEABCHAEFDIBJABDKABCDLABDMN $.
sorting-cache-198 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortPgm ) \top ) ) ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortPgm ) \top ) ) ) $= ( typecode-cache-Pattern-91 top-is-pattern typecode-cache-Pattern-72 IMP-sort-26-is-pattern in-sort-is-pattern rule-and-intro-alt2-sugar typecode-cache-Pattern-2 kore-is-sort-is-pattern and-is-pattern sorting-cache-194 sorting-cache-195 top-intro rule-weakening ) ABCAIJBEFGDKABLABCBEFGDABMABCDNOHH $.
sorting-cache-199 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortPgm ) \top ) ) ( \and ( \kore-is-sort \kore-sort-SortPgm ) ( \kore-is-sort \kore-sort-SortKItem ) ) ) $= ( kore-is-sort-is-pattern typecode-cache-Pattern-91 IMP-sort-26-is-pattern BASIC-K-sort-1-is-pattern imp-is-pattern proof-rule-prop-1 proof-rule-mp IMP-sort-26-sort BASIC-K-sort-1-sort rule-and-intro-alt2-sugar ) ABDECFCECABDECGECABDHJIFCABDFCGFCABDHKIL $.
sorting-cache-200 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortPgm ) \top ) ) ( \in-sort ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) \kore-sort-SortIds ) ) $= ( IMP-sort-17-is-pattern in-sort-is-pattern string-literal-11-is-pattern kore-dv-is-pattern IMP-symbol-111-is-pattern typecode-cache-Pattern-91 IMP-sort-0-is-pattern imp-is-pattern proof-rule-prop-1 proof-rule-mp and-is-pattern IMP-symbol-148-is-pattern kore-dv-sorting IMP-symbol-111-sorting rule-and-intro-alt2-sugar IMP-symbol-148-sorting rule-imp-transitivity ) ABHCEFCDGIDMCEFGNIDABHCEFCDGIDCEFCDABHCEFCDJCEFCDABHKCEOLGIDABHGIDJGIDABHKPLQCEFGRS $.
sorting-cache-201 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortPgm ) \top ) ) ( \and ( \kore-is-sort \kore-sort-SortInt ) ( \kore-is-sort \kore-sort-SortAExp ) ) ) $= ( kore-is-sort-is-pattern typecode-cache-Pattern-91 IMP-sort-22-is-pattern IMP-sort-13-is-pattern imp-is-pattern proof-rule-prop-1 proof-rule-mp IMP-sort-22-sort IMP-sort-13-sort rule-and-intro-alt2-sugar ) ABDECFCECABDECGECABDHJIFCABDFCGFCABDHKIL $.
sorting-cache-202 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortPgm ) \top ) ) ( \in-sort ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) \kore-sort-SortAExp ) ) $= ( IMP-sort-22-is-pattern string-literal-10-is-pattern kore-dv-is-pattern in-sort-is-pattern IMP-sort-13-is-pattern typecode-cache-Pattern-91 kore-is-sort-is-pattern and-is-pattern kore-inj-is-pattern sorting-cache-201 imp-is-pattern proof-rule-prop-1 kore-dv-sorting proof-rule-mp rule-and-intro-alt2-sugar INJ-symbol-0-sorting rule-imp-transitivity ) ABHCIGIJCDECFJCGCDEKGFABHCIGIJCDECFABLCDECFABHCDECFMCDECFABHNCDOPQCGCDERS $.
sorting-cache-203 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortPgm ) \top ) ) ( \in-sort ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) \kore-sort-SortStmt ) ) $= ( IMP-sort-17-is-pattern kore-dv-is-pattern string-literal-11-is-pattern in-sort-is-pattern IMP-sort-22-is-pattern IMP-sort-13-is-pattern typecode-cache-Pattern-91 string-literal-10-is-pattern kore-inj-is-pattern and-is-pattern IMP-symbol-169-is-pattern IMP-sort-30-is-pattern imp-is-pattern proof-rule-prop-1 kore-dv-sorting proof-rule-mp sorting-cache-202 rule-and-intro-alt2-sugar IMP-symbol-169-sorting rule-imp-transitivity ) ABICEDCFGHGJDKHFLCEDGHGJDKMNFABICEDCFGHGJDKHFCEDCFABICEDCFOCEDCFABIPCEQRABSTCEDGHGJDKUAUB $.
sorting-cache-204 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortPgm ) \top ) ) ( \in-sort ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) \kore-sort-SortPgm ) ) $= ( kore-dv-is-pattern IMP-sort-17-is-pattern string-literal-11-is-pattern IMP-sort-22-is-pattern in-sort-is-pattern IMP-symbol-111-is-pattern IMP-symbol-148-is-pattern IMP-sort-13-is-pattern string-literal-10-is-pattern kore-inj-is-pattern IMP-symbol-169-is-pattern typecode-cache-Pattern-91 IMP-sort-0-is-pattern IMP-sort-30-is-pattern and-is-pattern IMP-symbol-220-is-pattern IMP-sort-26-is-pattern sorting-cache-200 sorting-cache-203 rule-and-intro-alt2-sugar IMP-symbol-220-sorting rule-imp-transitivity ) ABNDECHIOGDECFJFKCLMPGQDECHIDECFJFKCLMRSGABNDECHIOGDECFJFKCLMPGABTABUAUBDECHIDECFJFKCLMUCUD $.
sorting-cache-205 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortPgm ) \top ) ) ( \in-sort ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) \kore-sort-SortKItem ) ) $= ( kore-dv-is-pattern IMP-sort-17-is-pattern string-literal-11-is-pattern IMP-sort-22-is-pattern IMP-sort-26-is-pattern BASIC-K-sort-1-is-pattern kore-inj-is-pattern kore-is-sort-is-pattern IMP-symbol-111-is-pattern IMP-symbol-148-is-pattern IMP-sort-13-is-pattern string-literal-10-is-pattern IMP-symbol-169-is-pattern IMP-symbol-220-is-pattern and-is-pattern in-sort-is-pattern typecode-cache-Pattern-91 sorting-cache-199 sorting-cache-204 rule-and-intro-alt2-sugar INJ-symbol-0-sorting rule-imp-transitivity ) ABSGJHJQDECKLDECFMFNCIOPGRQGHDECKLDECFMFNCIOPIHRABSGJHJQDECKLDECFMFNCIOPGRABTABUAUBGHDECKLDECFMFNCIOPUCUD $.
sorting-cache-206 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortPgm ) \top ) ) ( \in-sort ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) \kore-symbol-dotk ) \kore-sort-SortK ) ) $= ( kore-dv-is-pattern IMP-sort-17-is-pattern string-literal-11-is-pattern IMP-sort-22-is-pattern kore-inj-is-pattern in-sort-is-pattern KSEQ-symbol-1-is-pattern BASIC-K-sort-1-is-pattern BASIC-K-sort-0-is-pattern typecode-cache-Pattern-91 IMP-sort-26-is-pattern IMP-symbol-111-is-pattern IMP-symbol-148-is-pattern IMP-sort-13-is-pattern string-literal-10-is-pattern IMP-symbol-169-is-pattern IMP-symbol-220-is-pattern and-is-pattern KSEQ-symbol-0-is-pattern sorting-cache-205 imp-is-pattern proof-rule-prop-1 KSEQ-symbol-1-sorting proof-rule-mp rule-and-intro-alt2-sugar KSEQ-symbol-0-sorting rule-imp-transitivity ) ABLMJDECNODECFPFQCGRSGJHIKHTMJDECNODECFPFQCGRSGIUAKHABLMJDECNODECFPFQCGRSGJHIKHABUBIKHABLIKHUCIKHABLUDUEUFUGMJDECNODECFPFQCGRSGIUHUI $.
sorting-rearrange-86 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortPgm ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) \kore-symbol-dotk ) ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem kore-element-var-VE1 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortPgm kore-sort-var-R ( \kore-symbol-Lblproject'Coln'Pgm ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) \kore-symbol-dotk ) ) kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ) ) $= ( typecode-cache-Pattern-2 kore-dv-is-pattern kore-inj-is-pattern IMP-sort-17-is-pattern string-literal-11-is-pattern IMP-sort-22-is-pattern kore-element-var-VE0-elementvariable IMP-sort-26-is-pattern kore-top-is-pattern BASIC-K-sort-1-is-pattern KSEQ-symbol-1-is-pattern KSEQ-symbol-0-is-pattern IMP-symbol-111-is-pattern IMP-symbol-148-is-pattern IMP-sort-13-is-pattern string-literal-10-is-pattern IMP-symbol-169-is-pattern IMP-symbol-220-is-pattern kore-and-is-pattern element-var-is-var BASIC-K-sort-0-is-pattern kore-element-var-x0-elementvariable typecode-cache-Pattern-72 top-is-pattern substitution-disjoint in-sort-is-pattern and-is-pattern kore-implies-is-pattern typecode-cache-Pattern-93 typecode-cache-Pattern-91 kore-valid-is-pattern typecode-cache-Pattern-94 typecode-cache-Pattern-74 IMP-symbol-296-is-pattern kore-in-is-pattern typecode-cache-Pattern-16 kore-equals-is-pattern typecode-cache-Pattern-95 kore-element-var-V0-elementvariable substitution-kore-and typecode-cache-Pattern-96 substitution-185 rule-imp-transitivity substitution-var-same top-intro rule-weakening rule-and-intro-alt2-sugar substitution-kore-implies substitution-kore-valid substitution-imp substitution-186 sorting-cache-198 sorting-cache-206 typecode-cache-Pattern-12 eq-is-pattern exists-is-pattern sorting-cache-193 sorting-rearrange-85 kore-functional kore-is-sort-is-pattern typecode-cache-Pattern-92 sorting-cache-197 IMP-axiom-3052 substitution-in-sort substitution-and substitution-kore-in IMP-symbol-296-substitution substitution-kore-equals substitution-247 substitution-248 substitution-252 functional-substitution-alt ) ABULABULJLFGDOPFGDHQHRDESTEMNUCUHUFUIUIACACACACKACUCACJLFGDOPFGDHQHRDESTEMNJLBUEEMNUQACKUAUAACJACJLFGDOPFGDHQHRDESTEMNUPBUEUSACKUAUJUMABULABULJLFGDOPFGDHQHRDESTEMNUCUHUFUIABVNABULJLFGDOPFGDHQHRDESTEMNUCUHUFABVOABULUFVGVHVIVIJLFGDOPFGDHQHRDESTEMNACACACACKACAIBUKACKUAUAACAIBUNACKUAUJUMACACACACKACUCACJLFGDOPFGDHQHRDESTEMNJLBUEEMNUQACKUAUAACJACJLFGDOPFGDHQHRDESTEMNUPBUEUSACKUAUJUMACACACACKACABUDUTACKUAUAACABUDVCACKUAUJUMABULIUOUCUHUFUIJLFGDOPFGDHQHRDESTEMNUCUHUFUIUDURUCUHUFUIVAIUDABULUFVAVPJLFGDOPFGDHQHRDESTEMNVQVAVRABULUFVGVHUCJLFGDOPFGDHQHRDESTEMNUFVAVSVAVTWAVEABULIUOUCUHUFUIUIACWBIBWCUIACACACACKACAIBUKACKUAUAACAIBUNACKUAUJUMAIBWDAIBWEVEJLFGDOPFGDHQHRDESTEMNJLFGDOPFGDHQHRDESTEMNUCUHUFUIACACACACKACUCACJLFGDOPFGDHQHRDESTEMNJLBUEEMNUQACKUAUAACJACJLFGDOPFGDHQHRDESTEMNUPBUEUSACKUAUJUMIUOUCUHUFUIACACACACKACAIBUKACKUAUAACAIBUNACKUAUJUMIUBJLFGDOPFGDHQHRDESTEMNJLFGDOPFGDHQHRDESTEMNUCUHUFIUOUCUHUFIUBJLFGDOPFGDHQHRDESTEMNJLFGDOPFGDHQHRDESTEMNUCIUOUCIUBJLFGDOPFGDHQHRDESTEMNIUBVFUCJLFGDOPFGDHQHRDESTEMNIUBUGWFUFJLFGDOPFGDHQHRDESTEMNIUBUGWGACACACACKACUCACJLFGDOPFGDHQHRDESTEMNJLBUEEMNUQACKUAUAACJACJLFGDOPFGDHQHRDESTEMNUPBUEUSACKUAUJACACACACKACAIBUKACKUAUAACAIBUNACKUAUJJLFGDOPFGDHQHRDESTEMNIUBACJLFGDOPFGDHQHRDESTEMNIUBUGACACACKACUCACJLFGDOPFGDHQHRDESTEMNJLBUEEMNUQACKUAUAACJACJLFGDOPFGDHQHRDESTEMNUPBUEUSACKUAACACACKACAIBUKACKUAUAACAIBUNACKUAJLFGDOPFGDHQHRDESTEMNIUBACJLFGDOPFGDHQHRDESTEMNIUBUGACACKACUCACJLFGDOPFGDHQHRDESTEMNJLBUEEMNUQACKUAACACKACAIBUKACKUAJLFGDOPFGDHQHRDESTEMNIUBACJLFGDOPFGDHQHRDESTEMNIUBUGACKJLFGDOPFGDHQHRDESTEMNIUBUGACUCACJLFGDOPFGDHQHRDESTEMNJLBUEEMNUQACKACAIBUKACKJLFGDOPFGDHQHRDESTEMNIUBACJLFGDOPFGDHQHRDESTEMNIUBUGUCACJLFGDOPFGDHQHRDESTEMNJLBUEEMNUCACIUOJLBUEEMNJLFGDOPFGDHQHRDESTEMNIUBUCJLFGDOPFGDHQHRDESTEMNIUBUGACJLFGDOPFGDHQHRDESTEMNIUBUGJLFGDOPFGDHQHRDESTEMNIUBVFJLBUEEMNJLFGDOPFGDHQHRDESTEMNIUBUGWHACKJLFGDOPFGDHQHRDESTEMNIUBUGVBVBACJACJLFGDOPFGDHQHRDESTEMNUPBUEUSACKACAIBUNACKJLFGDOPFGDHQHRDESTEMNIUBACJLFGDOPFGDHQHRDESTEMNIUBUGJACJLFGDOPFGDHQHRDESTEMNUPBUEJACIUOUPBUEJLFGDOPFGDHQHRDESTEMNIUBJJLFGDOPFGDHQHRDESTEMNIUBUGACJLFGDOPFGDHQHRDESTEMNIUBUGIUBJLFGDOPFGDHQHRDESTEMNJLFGDOPFGDHQHRDESTEMNIUOJLFGDOPFGDHQHRDESTEMNIUBVFWIBUEJLFGDOPFGDHQHRDESTEMNIUBUGWJACKJLFGDOPFGDHQHRDESTEMNIUBUGVBVJVKVLUDURUDURUCUHUFUIACACACACKACABUDUTACKUAUAACABUDVCACKUAUJUMIUOUCUHUFUIACACACACKACAIBUKACKUAUAACAIBUNACKUAUJUMIUBIUDWKACACACACKACABUDUTACKUAUAACABUDVCACKUAUJACACACACKACAIBUKACKUAUAACAIBUNACKUAUJUDURIUBAIUDVDACACACKACABUDUTACKUAUAACABUDVCACKUAACACACKACAIBUKACKUAUAACAIBUNACKUAUDURIUBAIUDVDACACKACABUDUTACKUAACACKACAIBUKACKUAUDURIUBAIUDVDAIUDVMACABUDUTACKACAIBUKACKUDURIUBAIUDVDAIBUDWLAIUDVMVBVBAIBUDWMVJVKVLWNVE $.
sorting-cache-207 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortPgm ) \top ) ) ( \kore-is-sort kore-sort-var-R ) ) $= ( typecode-cache-Pattern-2 kore-is-sort-is-pattern top-is-pattern and-is-pattern typecode-cache-Pattern-72 IMP-sort-26-is-pattern in-sort-is-pattern and-elim-left-sugar rule-imp-transitivity imp-reflexivity ) ACDEFBGHIEFFACDEFACDACDEFBGHIEFJACDEFACDACDACDEJACDLKK $.
sorting-cache-208 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortPgm ) \top ) ) ( \in-sort kore-element-var-VE1 \kore-sort-SortPgm ) ) $= ( typecode-cache-Pattern-72 IMP-sort-26-is-pattern in-sort-is-pattern top-is-pattern and-is-pattern typecode-cache-Pattern-2 kore-is-sort-is-pattern rule-imp-transitivity and-elim-right-sugar and-elim-left-sugar imp-reflexivity ) AHIFGBCDEFGGBCDEFGBCDEAHIFGBCDEFGKBCDEFGBCDEBCDEBCDEFLBCDEMJJ $.
sorting-cache-209 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortPgm ) \top ) ) ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortPgm ) \top ) ) ) $= ( and-is-pattern top-is-pattern typecode-cache-Pattern-72 IMP-sort-26-is-pattern in-sort-is-pattern typecode-cache-Pattern-2 kore-is-sort-is-pattern rule-and-intro-alt2-sugar sorting-cache-207 sorting-cache-208 top-intro rule-weakening ) AHIDCBEFGDCCAHIBEFGDCABKAHIDCBEFGDCCBEFGDABLAHIDCBEFGDCCDMNJJ $.
substitution-253 $p #Substitution ( \in-sort kore-element-var-x0 \kore-sort-SortPgm ) ( \in-sort kore-element-var-VE1 \kore-sort-SortPgm ) kore-element-var-x0 kore-element-var-VE1 $= ( typecode-cache-Pattern-16 IMP-sort-26-is-pattern element-var-is-var typecode-cache-Pattern-72 substitution-var-same substitution-218 substitution-in-sort ) BCBCDAFDAEBCAEGABHI $.
substitution-254 $p #Substitution ( \and ( \in-sort kore-element-var-x0 \kore-sort-SortPgm ) \top ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortPgm ) \top ) kore-element-var-x0 kore-element-var-VE1 $= ( typecode-cache-Pattern-16 IMP-sort-26-is-pattern in-sort-is-pattern top-is-pattern typecode-cache-Pattern-72 element-var-is-var substitution-253 substitution-196 substitution-and ) BCBCDEFAGDEFAHABIABJK $.
substitution-255 $p #Substitution \kore-sort-SortK \kore-sort-SortK kore-element-var-x0 kore-element-var-VE1 $= ( BASIC-K-sort-0-is-pattern typecode-cache-Pattern-16 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-256 $p #Substitution ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem kore-element-var-x0 ) ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem kore-element-var-VE1 ) kore-element-var-x0 kore-element-var-VE1 $= ( typecode-cache-Pattern-16 IMP-sort-26-is-pattern BASIC-K-sort-1-is-pattern element-var-is-var typecode-cache-Pattern-72 substitution-218 substitution-219 substitution-var-same substitution-kore-inj ) DEBCDEAGBCAFABHABIBCAFJK $.
substitution-257 $p #Substitution ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem kore-element-var-x0 ) \kore-symbol-dotk ) ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem kore-element-var-VE1 ) \kore-symbol-dotk ) kore-element-var-x0 kore-element-var-VE1 $= ( typecode-cache-Pattern-16 IMP-sort-26-is-pattern BASIC-K-sort-1-is-pattern kore-inj-is-pattern KSEQ-symbol-1-is-pattern element-var-is-var typecode-cache-Pattern-72 substitution-256 substitution-220 KSEQ-symbol-0-substitution ) AHBCDEBCFGDEAIFGABJABKL $.
sorting-rearrange-87 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) \kore-symbol-dotk ) ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortPgm kore-sort-var-R ( \kore-symbol-Lblproject'Coln'Pgm ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) \kore-symbol-dotk ) ) ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $= ( kore-dv-is-pattern typecode-cache-Pattern-2 IMP-sort-17-is-pattern string-literal-11-is-pattern IMP-sort-22-is-pattern kore-inj-is-pattern IMP-sort-26-is-pattern IMP-symbol-111-is-pattern IMP-symbol-148-is-pattern IMP-sort-13-is-pattern string-literal-10-is-pattern IMP-symbol-169-is-pattern IMP-symbol-220-is-pattern kore-element-var-VE1-elementvariable BASIC-K-sort-1-is-pattern KSEQ-symbol-1-is-pattern KSEQ-symbol-0-is-pattern kore-top-is-pattern kore-and-is-pattern element-var-is-var kore-element-var-x0-elementvariable typecode-cache-Pattern-72 BASIC-K-sort-0-is-pattern IMP-symbol-296-is-pattern typecode-cache-Pattern-16 kore-in-is-pattern top-is-pattern kore-equals-is-pattern substitution-disjoint and-is-pattern in-sort-is-pattern kore-implies-is-pattern kore-valid-is-pattern kore-is-sort-is-pattern substitution-198 substitution-kore-and substitution-var-same substitution-199 rule-and-intro-alt2-sugar kore-element-var-Val-elementvariable rule-imp-transitivity substitution-kore-in substitution-kore-equals substitution-kore-implies substitution-kore-valid substitution-imp sorting-cache-58 sorting-cache-112 top-intro rule-weakening sorting-rearrange-48 typecode-cache-Pattern-91 sorting-cache-209 sorting-rearrange-86 substitution-in-sort substitution-and substitution-kore-inj KSEQ-symbol-0-substitution substitution-254 substitution-255 substitution-257 substitution-218 functional-substitution-alt ) ACUOUHUKACUOUHUKDEBIJDEBFKFLBGMNHULUHUKUKACACACACSACUDACHPDEBIJDEBFKFLBGMNGQRHPDEBIJDEBFKFLBGMNGQRUGACSTTACHACHPDEBIJDEBFKFLBGMNGQRUEDEBIJDEBFKFLBGMNUIACSTUMUNACUOUHUKACUOUHUKDEBIJDEBFKFLBGMNHULUHUKAVHACUOUHUKDEBIJDEBFKFLBGMNHULUHAVIACUOUHUKUHVJVKUTUTDEBIJDEBFKFLBGMNACACACACSACUDACHPDEBIJDEBFKFLBGMNGQRHPOUCGQRUGACSTTACHACHPDEBIJDEBFKFLBGMNGQRUEOUCUIACSTUMUNACACACACSACUDACHPDEBIJDEBFKFLBGMNGQRHPDEBIJDEBFKFLBGMNGQRUGACSTTACHACHPDEBIJDEBFKFLBGMNGQRUEDEBIJDEBFKFLBGMNUIACSTUMUNACACACACSACUDACHPDEBIJDEBFKFLBGMNGQRHPUBUFGQRUGACSTTACHACHPDEBIJDEBFKFLBGMNGQRUEUBUFUIACSTUMUNACUOUHUKOUCHULUHUKDEBIJDEBFKFLBGMNHULUHUKUBUFHULUHUKVAOUBAVAVLACUOUHUKOUCHULUHUKUKAOVMACACACACSACUDACHPDEBIJDEBFKFLBGMNGQRHPOUCGQRUGACSTTACHACHPDEBIJDEBFKFLBGMNGQRUEOUCUIACSTUMUNAOVNAOVOVBDEBIJDEBFKFLBGMNDEBIJDEBFKFLBGMNHULUHUKACACACACSACUDACHPDEBIJDEBFKFLBGMNGQRHPDEBIJDEBFKFLBGMNGQRUGACSTTACHACHPDEBIJDEBFKFLBGMNGQRUEDEBIJDEBFKFLBGMNUIACSTUMUNOUCHULUHUKACACACACSACUDACHPDEBIJDEBFKFLBGMNGQRHPOUCGQRUGACSTTACHACHPDEBIJDEBFKFLBGMNGQRUEOUCUIACSTUMUNOUADEBIJDEBFKFLBGMNDEBIJDEBFKFLBGMNHULUHOUCHULUHOUADEBIJDEBFKFLBGMNDEBIJDEBFKFLBGMNHOUCHOUADEBIJDEBFKFLBGMNOUAURHDEBIJDEBFKFLBGMNOUAUJVPUHDEBIJDEBFKFLBGMNOUAUJVQACACACACSACUDACHPDEBIJDEBFKFLBGMNGQRHPDEBIJDEBFKFLBGMNGQRUGACSTTACHACHPDEBIJDEBFKFLBGMNGQRUEDEBIJDEBFKFLBGMNUIACSTUMACACACACSACUDACHPDEBIJDEBFKFLBGMNGQRHPOUCGQRUGACSTTACHACHPDEBIJDEBFKFLBGMNGQRUEOUCUIACSTUMDEBIJDEBFKFLBGMNOUAACDEBIJDEBFKFLBGMNOUAUJACACACSACUDACHPDEBIJDEBFKFLBGMNGQRHPDEBIJDEBFKFLBGMNGQRUGACSTTACHACHPDEBIJDEBFKFLBGMNGQRUEDEBIJDEBFKFLBGMNUIACSTACACACSACUDACHPDEBIJDEBFKFLBGMNGQRHPOUCGQRUGACSTTACHACHPDEBIJDEBFKFLBGMNGQRUEOUCUIACSTDEBIJDEBFKFLBGMNOUAACDEBIJDEBFKFLBGMNOUAUJACACSACUDACHPDEBIJDEBFKFLBGMNGQRHPDEBIJDEBFKFLBGMNGQRUGACSTACACSACUDACHPDEBIJDEBFKFLBGMNGQRHPOUCGQRUGACSTDEBIJDEBFKFLBGMNOUAACDEBIJDEBFKFLBGMNOUAUJACSDEBIJDEBFKFLBGMNOUAUJACUDACHPDEBIJDEBFKFLBGMNGQRHPDEBIJDEBFKFLBGMNGQRUGACSACUDACHPDEBIJDEBFKFLBGMNGQRHPOUCGQRUGACSDEBIJDEBFKFLBGMNOUAACDEBIJDEBFKFLBGMNOUAUJUDACHPDEBIJDEBFKFLBGMNGQRHPDEBIJDEBFKFLBGMNGQRUDACHPDEBIJDEBFKFLBGMNGQRHPOUCGQRDEBIJDEBFKFLBGMNOUAUDDEBIJDEBFKFLBGMNOUAUJACDEBIJDEBFKFLBGMNOUAUJHPDEBIJDEBFKFLBGMNGQRDEBIJDEBFKFLBGMNOUAUJOUADEBIJDEBFKFLBGMNHPDEBIJDEBFKFLBGMNGQHPOUCGQHPDEBIJDEBFKFLBGMNHPOUCDEBIJDEBFKFLBGMNOUAHDEBIJDEBFKFLBGMNOUAUJPDEBIJDEBFKFLBGMNOUAUJDEBIJDEBFKFLBGMNOUAURVRQDEBIJDEBFKFLBGMNOUAUJVSVCACSDEBIJDEBFKFLBGMNOUAUJUQUQACHACHPDEBIJDEBFKFLBGMNGQRUEDEBIJDEBFKFLBGMNUIACSACHACHPDEBIJDEBFKFLBGMNGQRUEOUCUIACSDEBIJDEBFKFLBGMNOUAACDEBIJDEBFKFLBGMNOUAUJHACHPDEBIJDEBFKFLBGMNGQRUEDEBIJDEBFKFLBGMNHACHPDEBIJDEBFKFLBGMNGQRUEOUCDEBIJDEBFKFLBGMNOUAHDEBIJDEBFKFLBGMNOUAUJACDEBIJDEBFKFLBGMNOUAUJHPDEBIJDEBFKFLBGMNGQRUEDEBIJDEBFKFLBGMNOUAUJDEBIJDEBFKFLBGMNOUAURVDACSDEBIJDEBFKFLBGMNOUAUJUQVEVFVGUBUFUBUFHULUHUKACACACACSACUDACHPDEBIJDEBFKFLBGMNGQRHPUBUFGQRUGACSTTACHACHPDEBIJDEBFKFLBGMNGQRUEUBUFUIACSTUMUNOUCHULUHUKACACACACSACUDACHPDEBIJDEBFKFLBGMNGQRHPOUCGQRUGACSTTACHACHPDEBIJDEBFKFLBGMNGQRUEOUCUIACSTUMUNOUAOUBVTACACACACSACUDACHPDEBIJDEBFKFLBGMNGQRHPUBUFGQRUGACSTTACHACHPDEBIJDEBFKFLBGMNGQRUEUBUFUIACSTUMACACACACSACUDACHPDEBIJDEBFKFLBGMNGQRHPOUCGQRUGACSTTACHACHPDEBIJDEBFKFLBGMNGQRUEOUCUIACSTUMUBUFOUAAOUBUPACACACSACUDACHPDEBIJDEBFKFLBGMNGQRHPUBUFGQRUGACSTTACHACHPDEBIJDEBFKFLBGMNGQRUEUBUFUIACSTACACACSACUDACHPDEBIJDEBFKFLBGMNGQRHPOUCGQRUGACSTTACHACHPDEBIJDEBFKFLBGMNGQRUEOUCUIACSTUBUFOUAAOUBUPACACSACUDACHPDEBIJDEBFKFLBGMNGQRHPUBUFGQRUGACSTACACSACUDACHPDEBIJDEBFKFLBGMNGQRHPOUCGQRUGACSTUBUFOUAAOUBUPAOUBUSACUDACHPDEBIJDEBFKFLBGMNGQRHPUBUFGQRUGACSACUDACHPDEBIJDEBFKFLBGMNGQRHPOUCGQRUGACSUBUFOUAAOUBUPUDACHPDEBIJDEBFKFLBGMNGQRHPUBUFGQRUDACHPDEBIJDEBFKFLBGMNGQRHPOUCGQRUBUFOUAOUBWAAOUBUPHPDEBIJDEBFKFLBGMNGQRUBUFOUAUJOUBWBVCAOUBUSUQUQACHACHPDEBIJDEBFKFLBGMNGQRUEUBUFUIACSACHACHPDEBIJDEBFKFLBGMNGQRUEOUCUIACSUBUFOUAAOUBUPHACHPDEBIJDEBFKFLBGMNGQRUEUBUFHACHPDEBIJDEBFKFLBGMNGQRUEOUCUBUFOUAOUBWCAOUBUPHPDEBIJDEBFKFLBGMNGQRUEUBUFOUAUJUBUFOUAURVDAOUBUSUQVEVFVGWDVB $.
sorting-cache-210 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) \top ) ( \in-sort \kore-symbol-dotk \kore-sort-SortK ) ) $= ( top-is-pattern and-is-pattern KSEQ-symbol-1-is-pattern BASIC-K-sort-0-is-pattern in-sort-is-pattern typecode-cache-Pattern-2 kore-is-sort-is-pattern imp-is-pattern proof-rule-prop-1 KSEQ-symbol-1-sorting proof-rule-mp ) DEFAGHBCBCDEFIDEFAGHBCBCJKL $.
sorting-cache-211 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) \top ) ( \in-sort ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) \kore-symbol-dotk ) \kore-sort-SortK ) ) $= ( kore-dv-is-pattern IMP-sort-17-is-pattern string-literal-11-is-pattern IMP-sort-22-is-pattern kore-inj-is-pattern BASIC-K-sort-1-is-pattern and-is-pattern in-sort-is-pattern top-is-pattern IMP-sort-26-is-pattern IMP-symbol-111-is-pattern IMP-symbol-148-is-pattern IMP-sort-13-is-pattern string-literal-10-is-pattern IMP-symbol-169-is-pattern IMP-symbol-220-is-pattern KSEQ-symbol-1-is-pattern BASIC-K-sort-0-is-pattern typecode-cache-Pattern-2 kore-is-sort-is-pattern KSEQ-symbol-0-is-pattern sorting-cache-166 sorting-cache-210 rule-and-intro-alt2-sugar KSEQ-symbol-0-sorting rule-imp-transitivity ) ATUAJHJHKGCDBLMCDBENEOBFPQFGIRSIHKGCDBLMCDBENEOBFPQFRUBSIATUAJHJHKGCDBLMCDBENEOBFPQFGIRSIAUCAUDUEKGCDBLMCDBENEOBFPQFRUFUG $.
sorting-rearrange-88 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) \kore-symbol-dotk ) ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ) $= ( and-is-pattern typecode-cache-Pattern-2 top-is-pattern kore-is-sort-is-pattern kore-dv-is-pattern IMP-sort-17-is-pattern string-literal-11-is-pattern IMP-sort-22-is-pattern kore-inj-is-pattern IMP-sort-26-is-pattern BASIC-K-sort-1-is-pattern IMP-symbol-111-is-pattern IMP-symbol-148-is-pattern IMP-sort-13-is-pattern string-literal-10-is-pattern IMP-symbol-169-is-pattern IMP-symbol-220-is-pattern KSEQ-symbol-1-is-pattern KSEQ-symbol-0-is-pattern BASIC-K-sort-0-is-pattern kore-in-is-pattern kore-top-is-pattern in-sort-is-pattern rule-imp-transitivity kore-valid-is-pattern rule-and-intro-alt2-sugar sorting-cache-58 rule-weakening top-intro and-elim-left-sugar imp-is-pattern proof-rule-prop-1 proof-rule-mp predicate-intro-top rule-predicate-intro-and kore-and-is-pattern kore-in-sorting kore-top-sorting imp-reflexivity kore-is-sort-is-predicate sorting-cache-211 kore-in-reflexivity kore-top-valid kore-and-intro-alt ) ACEDBACEDBACEDBACEDBDBBBACACUAACKLGHFMNGHFIOIPFJQRJSTKLGHFMNGHFIOIPFJQRJSTUBACUCUQUFACEDBACEDBACEDBACEDBDBBAUHACEDBACEDBACEDBDBAUHACEDBACEDBDAUHACEDBDUJUIUGUGUGACUAACKLGHFMNGHFIOIPFJQRJSTKLGHFMNGHFIOIPFJQRJSTUBACUCACEDBACEDBACEDBDBBBUAACKLGHFMNGHFIOIPFJQRJSTKLGHFMNGHFIOIPFJQRJSTUBACUDACEDBACEDBACEDBDBBBUAACKLGHFMNGHFIOIPFJQRJSTKLGHFMNGHFIOIPFJQRJSTUBACUDULUAACKLGHFMNGHFIOIPFJQRJSTKLGHFMNGHFIOIPFJQRJSTUBACUDACEDBACEDBACEDBDBBBUMUAACKLGHFMNGHFIOIPFJQRJSTKLGHFMNGHFIOIPFJQRJSTURUNACUCACUDACEDBACEDBACEDBDBBBACUCACUDULACUCACUDACEDBACEDBACEDBDBBBUMACUSUNACEDBACEDBACEDBDBBBACEDBACUAACKLGHFMNGHFIOIPFJQRJSTKLGHFMNGHFIOIPFJQRJSTUBUFACEDBACEDBACEDBDBBBACEDACEDBACEDBACEDBDBBBACEDBACEACEDBACEDBACEDBDBBUKACEDBACEACEACEDUKACEUTUEUEACEDBACEDBACEDBDBBBDUJUIUGACEDBACEDBDBACUAACKLGHFMNGHFIOIPFJQRJSTKLGHFMNGHFIOIPFJQRJSTUBUFACEDBACEDBDAUHACEDBDUJUIUGUAACKLGHFMNGHFIOIPFJQRJSTACEDBDBACEDBDACEDACVAUOUPUOUPAVBVCUEUEACEDBACEDBACEDBDBBBACEDBACACUCUFACEDBACEDBACEDBDBBUKACEDBACACUCUFACVDUIUEVEUE $.
sorting-rearrange-89 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) \kore-symbol-dotk ) ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $= ( typecode-cache-Pattern-2 and-is-pattern top-is-pattern kore-is-sort-is-pattern kore-dv-is-pattern IMP-sort-17-is-pattern string-literal-11-is-pattern IMP-sort-22-is-pattern kore-inj-is-pattern IMP-sort-26-is-pattern BASIC-K-sort-1-is-pattern IMP-symbol-111-is-pattern IMP-symbol-148-is-pattern IMP-sort-13-is-pattern string-literal-10-is-pattern IMP-symbol-169-is-pattern IMP-symbol-220-is-pattern KSEQ-symbol-1-is-pattern KSEQ-symbol-0-is-pattern kore-top-is-pattern in-sort-is-pattern BASIC-K-sort-0-is-pattern kore-in-is-pattern rule-imp-transitivity kore-and-is-pattern rule-and-intro-alt2-sugar kore-valid-is-pattern sorting-cache-58 rule-weakening imp-is-pattern proof-rule-prop-1 proof-rule-mp and-elim-left-sugar top-intro kore-top-sorting kore-in-sorting kore-and-sorting imp-reflexivity kore-top-valid sorting-rearrange-88 kore-and-intro-alt ) ABEDCABEDCABEDCABEDCDCCCABABABUAABUCABKLGHFMNGHFIOIPFJQRJSTKLGHFMNGHFIOIPFJQRJSTUDABUAUFUFUHABEDCABEDCABEDCABEDCDCCAUIABEDCABEDCABEDCDCAUIABEDCABEDCDAUIABEDCDUOUJUGUGUGABABUAABUCABKLGHFMNGHFIOIPFJQRJSTKLGHFMNGHFIOIPFJQRJSTUDABUAUFABEDCABEDCABEDCDCCCABUAABUBABEDCABEDCABEDCDCCCABUAABUBUKABUAABUBABEDCABEDCABEDCDCCCULABUPUMABEDCABEDCABEDCDCCCUCABKLGHFMNGHFIOIPFJQRJSTKLGHFMNGHFIOIPFJQRJSTUDABUBABUAABUBCABUCABKLGHFMNGHFIOIPFJQRJSTKLGHFMNGHFIOIPFJQRJSTUDABUAUFABUBABEDCABEDCABEDCDCCCUCABKLGHFMNGHFIOIPFJQRJSTKLGHFMNGHFIOIPFJQRJSTUDABUBABUAABUBUCABKLGHFMNGHFIOIPFJQRJSTKLGHFMNGHFIOIPFJQRJSTUDABUBABEDCABEDCABEDCDCCCUCABKLGHFMNGHFIOIPFJQRJSTKLGHFMNGHFIOIPFJQRJSTUDABUBUKUCABKLGHFMNGHFIOIPFJQRJSTKLGHFMNGHFIOIPFJQRJSTUDABUBABEDCABEDCABEDCDCCCULUCABKLGHFMNGHFIOIPFJQRJSTKLGHFMNGHFIOIPFJQRJSTUQUMABUAABUBABEDCABEDCABEDCDCCCABUAABUBUKABUAABUBABEDCABEDCABEDCDCCCULABUPUMUGABUCABKLGHFMNGHFIOIPFJQRJSTKLGHFMNGHFIOIPFJQRJSTUDABUAURUEABEDCABEDCABEDCDCCCABEDCABABUAUHABEDCABEDCABEDCDCCCABEDABEDCABEDCABEDCDCCCABEDCABEABEDCABEDCABEDCDCCUNABEDCABEABEABEDUNABEUSUEUEABEDCABEDCABEDCDCCCDUOUJUGABEDCABABUAUHABUTUJUEABEDCABEDCABEDCDCCCABEDCABABUCABKLGHFMNGHFIOIPFJQRJSTKLGHFMNGHFIOIPFJQRJSTUDABUAUFUHABEDCABEDCABEDCDCCUNAVAUEVBUE $.
sorting-rearrange-90 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortPgm kore-sort-var-R ( \kore-symbol-Lblproject'Coln'Pgm ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) \kore-symbol-dotk ) ) ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) ( \kore-top kore-sort-var-R ) ) ) ) $= ( typecode-cache-Pattern-2 and-is-pattern top-is-pattern kore-is-sort-is-pattern kore-dv-is-pattern IMP-sort-17-is-pattern string-literal-11-is-pattern IMP-sort-22-is-pattern kore-inj-is-pattern IMP-sort-26-is-pattern IMP-symbol-111-is-pattern IMP-symbol-148-is-pattern IMP-sort-13-is-pattern string-literal-10-is-pattern IMP-symbol-169-is-pattern IMP-symbol-220-is-pattern BASIC-K-sort-1-is-pattern KSEQ-symbol-1-is-pattern KSEQ-symbol-0-is-pattern kore-top-is-pattern kore-and-is-pattern rule-imp-transitivity rule-and-intro-alt2-sugar IMP-symbol-296-is-pattern kore-equals-is-pattern kore-valid-is-pattern sorting-cache-58 BASIC-K-sort-0-is-pattern kore-in-is-pattern and-elim-left-sugar top-intro rule-weakening kore-implies-is-pattern imp-reflexivity sorting-rearrange-87 sorting-rearrange-89 kore-mp-alt ) ABEDCABEDCABEDCABEDCDCCCABABKABKRGHFLMGHFINIOFJPQJSTUEGHFLMGHFINIOFJPQUFABUAUBUGABEDCABEDCABEDCABEDCDCCAUHABEDCABEDCABEDCDCAUHABEDCABEDCDAUHABEDCDULUMUDUDUDABABABUAABUIABKRGHFLMGHFINIOFJPQJSTKRGHFLMGHFINIOFJPQJSTUJABUAUBUBABKABKRGHFLMGHFINIOFJPQJSTUEGHFLMGHFINIOFJPQUFABUAUBABEDCABEDCABEDCDCCCABEDCABEDCABEDCDCCCABEDCABABABABUAABUIABKRGHFLMGHFINIOFJPQJSTKRGHFLMGHFINIOFJPQJSTUJABUAUBUBABKABKRGHFLMGHFINIOFJPQJSTUEGHFLMGHFINIOFJPQUFABUAUBUNUGABEDCABEDCABEDCDCCCABEDABEDCABEDCABEDCDCCCABEDCABEABEDCABEDCABEDCDCCUKABEDCABEABEABEDUKABEUOUCUCABEDCABEDCABEDCDCCCDULUMUDAUPUCABEDCABEDCABEDCDCCCABEDCABABABUAABUIABKRGHFLMGHFINIOFJPQJSTKRGHFLMGHFINIOFJPQJSTUJABUAUBUBUGABEDCABEDCABEDCDCCUKAUQUCURUC $.
sorting-rearrange-91 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-equals \kore-sort-SortPgm kore-sort-var-R ( \kore-symbol-Lblproject'Coln'Pgm ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) \kore-symbol-dotk ) ) ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) ) ) $= ( typecode-cache-Pattern-2 and-is-pattern top-is-pattern kore-dv-is-pattern kore-is-sort-is-pattern IMP-sort-17-is-pattern string-literal-11-is-pattern IMP-sort-22-is-pattern kore-inj-is-pattern IMP-sort-26-is-pattern IMP-symbol-111-is-pattern IMP-symbol-148-is-pattern IMP-sort-13-is-pattern string-literal-10-is-pattern IMP-symbol-169-is-pattern IMP-symbol-220-is-pattern BASIC-K-sort-1-is-pattern KSEQ-symbol-1-is-pattern KSEQ-symbol-0-is-pattern IMP-symbol-296-is-pattern kore-equals-is-pattern rule-imp-transitivity rule-and-intro-alt2-sugar in-sort-is-pattern kore-valid-is-pattern sorting-cache-58 top-intro rule-weakening and-elim-left-sugar imp-is-pattern proof-rule-prop-1 kore-equals-sorting proof-rule-mp kore-top-is-pattern kore-and-is-pattern imp-reflexivity sorting-rearrange-90 kore-anp-top ) ABFDCABFDCABFDCDCCABKABKRGHELMGHEINIOEJPQJSTUAGHELMGHEINIOEJPQUBUFABFDCABFDCABFDCDCAUGABFDCABFDCDAUGABFDCDUHUIUDUDABKABKRGHELMGHEINIOEJPQJSTUAGHELMGHEINIOEJPQUBABFDCABFDCDCCKABKRGHELMGHEINIOEJPQJSTUAGHELMGHEINIOEJPQUBABUEABFDCABFDCDCCKABKRGHELMGHEINIOEJPQJSTUAGHELMGHEINIOEJPQUBABUEUKKABKRGHELMGHEINIOEJPQJSTUAGHELMGHEINIOEJPQUBABUEABFDCABFDCDCCULKABKRGHELMGHEINIOEJPQJSTUAGHELMGHEINIOEJPQUMUNABFDCABFDCDCCABFDCABABKABKRGHELMGHEINIOEJPQJSTUAGHELMGHEINIOEJPQUBABUOUPUFABFDCABFDCDCCABFDABFDCABFDCDCCABFDCABFABFDCABFDCDCUJABFDCABFABFABFDUJABFUQUCUCABFDCABFDCDCCDUHUIUDAURUCUSUC $.
sorting-rearrange-92 $p |- ( \imp \top ( \kore-valid \unit-sort ( \kore-equals \kore-sort-SortPgm \unit-sort ( \kore-symbol-Lblproject'Coln'Pgm ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) \kore-symbol-dotk ) ) ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) ) ) $= ( kore-dv-is-pattern IMP-sort-17-is-pattern string-literal-11-is-pattern IMP-sort-22-is-pattern kore-inj-is-pattern kore-sort-var-R-elementvariable IMP-symbol-111-is-pattern IMP-symbol-148-is-pattern IMP-sort-13-is-pattern string-literal-10-is-pattern IMP-symbol-169-is-pattern IMP-symbol-220-is-pattern IMP-sort-26-is-pattern top-is-pattern typecode-cache-Pattern-2 unit-sort-is-symbol symbol-is-pattern BASIC-K-sort-1-is-pattern KSEQ-symbol-1-is-pattern KSEQ-symbol-0-is-pattern IMP-symbol-296-is-pattern kore-sort-var-x0-elementvariable and-is-pattern typecode-cache-Pattern-6 kore-is-sort-is-pattern element-var-is-var kore-equals-is-pattern kore-valid-is-pattern x-is-element-var substitution-var-same substitution-disjoint rule-weakening top-intro rule-and-intro-alt2-sugar rule-imp-transitivity substitution-kore-equals substitution-kore-valid substitution-imp sorting-cache-49 typecode-cache-Pattern-1 exists-is-pattern unit-sort-is-functional sorting-cache-47 sorting-rearrange-91 substitution-2 substitution-156 substitution-9 substitution-157 functional-substitution-alt ) NNPQUENUCUCPQMPQMRBCAGHBCADIDJAEKLESTUABCAGHBCADIDJAEKLUGUHNNPQUENUCNNUMULUSUNPQFOMFOMRBCAGHBCADIDJAEKLESTUABCAGHBCADIDJAEKLUGUHPQMPQMRBCAGHBCADIDJAEKLESTUABCAGHBCADIDJAEKLUGUHUBUDMUBUDMRBCAGHBCADIDJAEKLESTUABCAGHBCADIDJAEKLUGUHNFOUENUCPQUENUCUBUDUENUCUIFUBNUIUTUIVAUIVBULNFOUENUCUCFOUENUCFOMFOMRBCAGHBCADIDJAEKLESTUABCAGHBCADIDJAEKLUGUHNFOUENUCUCFOUENFVCNFOUENUCUCNUMULUNFVDUOPQPQUENUCPQMPQMRBCAGHBCADIDJAEKLESTUABCAGHBCADIDJAEKLUGUHFOUENUCFOMFOMRBCAGHBCADIDJAEKLESTUABCAGHBCADIDJAEKLUGUHFUFFVEPQMPQMRBCAGHBCADIDJAEKLESTUABCAGHBCADIDJAEKLUGFOMFOMRBCAGHBCADIDJAEKLESTUABCAGHBCADIDJAEKLUGPQFUFPQFUFUJMPQMRBCAGHBCADIDJAEKLESTUABCAGHBCADIDJAEKLMFOMRBCAGHBCADIDJAEKLESTUABCAGHBCADIDJAEKLPQFUFFVFPQFUFUJMRBCAGHBCADIDJAEKLESTUAPQFUFUKBCAGHBCADIDJAEKLPQFUFUKUPUQURUBUDUBUDUENUCUBUDMUBUDMRBCAGHBCADIDJAEKLESTUABCAGHBCADIDJAEKLUGUHFOUENUCFOMFOMRBCAGHBCADIDJAEKLESTUABCAGHBCADIDJAEKLUGUHFUFFUBVGUBUDMUBUDMRBCAGHBCADIDJAEKLESTUABCAGHBCADIDJAEKLUGFOMFOMRBCAGHBCADIDJAEKLESTUABCAGHBCADIDJAEKLUGUBUDFUFUBUDFUFUJMUBUDMRBCAGHBCADIDJAEKLESTUABCAGHBCADIDJAEKLMFOMRBCAGHBCADIDJAEKLESTUABCAGHBCADIDJAEKLUBUDFUFFUBVHUBUDFUFUJMRBCAGHBCADIDJAEKLESTUAUBUDFUFUKBCAGHBCADIDJAEKLUBUDFUFUKUPUQURVIUO $.
equality-elim-2 $p |- ( \imp \top ( \kore-valid \kore-sort-SortGeneratedTopCell ( \kore-rewrites-star \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-top \kore-sort-SortGeneratedTopCell ) ) ( \kore-symbol-LblinitGeneratedTopCell ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) ) ) ) ) ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-top \kore-sort-SortGeneratedTopCell ) ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) \kore-symbol-dotk ) ) \kore-symbol-LblinitStateCell ) \kore-symbol-LblinitGeneratedCounterCell ) ) ) ) ) $= ( kore-dv-is-pattern kore-inj-is-pattern IMP-sort-17-is-pattern string-literal-11-is-pattern IMP-sort-22-is-pattern IMP-sort-8-is-pattern BASIC-K-sort-1-is-pattern IMP-sort-26-is-pattern IMP-symbol-111-is-pattern IMP-symbol-148-is-pattern IMP-sort-13-is-pattern string-literal-10-is-pattern IMP-symbol-169-is-pattern IMP-symbol-220-is-pattern KSEQ-symbol-1-is-pattern kore-top-is-pattern KSEQ-symbol-0-is-pattern kore-element-var-x0-elementvariable kore-and-is-pattern element-var-is-var IMP-symbol-296-is-pattern IMP-sort-20-is-pattern IMP-symbol-218-is-pattern IMP-symbol-119-is-pattern IMP-symbol-215-is-pattern substitution-disjoint IMP-symbol-114-is-pattern typecode-cache-Pattern-16 IMP-symbol-117-is-pattern IMP-symbol-112-is-pattern string-literal-9-is-pattern IMP-symbol-196-is-pattern IMP-symbol-176-is-pattern IMP-symbol-216-is-pattern kore-rewrites-star-is-pattern top-is-pattern in-sort-is-pattern substitution-var-same substitution-kore-inj KSEQ-symbol-0-substitution IMP-symbol-119-substitution IMP-symbol-114-substitution IMP-symbol-117-substitution substitution-kore-and substitution-kore-rewrites-star substitution-kore-valid kore-valid-is-pattern BASIC-K-sort-0-is-pattern sorting-cache-193 IMP-symbol-296-sorting rule-imp-transitivity sorting-cache-43 sorting-rearrange-92 equality-elim-1 kore-equals-elim-alt ) HHGCDAIJCDAEKELABMNBOQUACDAIJCDAEKELABMNFFFFPFPSUJUBGUBUKABHGCDAIJCDAEKELABMNBULUMUNSFFFPFPSHGHGCDAIJCDAEKELABMNBOQUABOQUDUCUGUEUISUOFFFFFPFPSUJUBGUBUKABHGCDAIJCDAEKELABMNBULUMUNSFFFPFPSHGRUHBOQUDUCUGUEUISUOVGFFFFPFPSUJUBGUBUKABHGCDAIJCDAEKELABMNBULUMUNSFFFPFPSHGCDAIJCDAEKELABMNBOQUDUCUGUEUISUOFFUPRUPHGCDAIJCDAEKELABMNBOQVHUQHGCDAIJCDAEKELABMNBOQUAHUQVIHGCDAIJCDAEKELABMNBOQVJVKVLVMVNFFFFFPFPSUJUBGUBUKABHGCDAIJCDAEKELABMNBULUMUNSFFFPFPSHGHGCDAIJCDAEKELABMNBOQUABOQUDUCUGUEUISUOFFFFFPFPSUJUBGUBUKABHGCDAIJCDAEKELABMNBULUMUNSFFFPFPSHGRUHBOQUDUCUGUEUISUOHGCDAIJCDAEKELABMNBOQUARTFHGCDAIJCDAEKELABMNBOQUARTUFFFFFPFPSUJUBGUBUKABHGCDAIJCDAEKELABMNBULUMUNSFFFPFPSHGHGCDAIJCDAEKELABMNBOQUABOQUDUCUGUEUISFFFFPFPSUJUBGUBUKABHGCDAIJCDAEKELABMNBULUMUNSFFFPFPSHGRUHBOQUDUCUGUEUISHGCDAIJCDAEKELABMNBOQUARTFHGCDAIJCDAEKELABMNBOQUARTUFFFFPFPSUJUBGUBUKABHGCDAIJCDAEKELABMNBULUMUNSHGCDAIJCDAEKELABMNBOQUARTUFFFFPFPSHGHGCDAIJCDAEKELABMNBOQUABOQUDUCUGUEUIFFFPFPSHGRUHBOQUDUCUGUEUIHGCDAIJCDAEKELABMNBOQUARTFHGCDAIJCDAEKELABMNBOQUARTUFFFPFPSHGCDAIJCDAEKELABMNBOQUARTUFRTHGCDAIJCDAEKELABMNBOQUAHGHGCDAIJCDAEKELABMNBOQUABOQUDUCUGUEHGRUHBOQUDUCUGUERTHGCDAIJCDAEKELABMNBOQUAHGHGCDAIJCDAEKELABMNBOQUABOQUDUCHGRUHBOQUDUCRTHGCDAIJCDAEKELABMNBOQUAHGHGCDAIJCDAEKELABMNBOQUABOQHGRUHBOQRTHGCDAIJCDAEKELABMNBOQUAHGHGCDAIJCDAEKELABMNBOQUABOHGRUHBOHGHGCDAIJCDAEKELABMNBOQUAHGRUHHGCDAIJCDAEKELABMNBOQUARTHHGCDAIJCDAEKELABMNBOQUARTUFGHGCDAIJCDAEKELABMNBOQUARTUFHGCDAIJCDAEKELABMNBOQUARTURUSOHGCDAIJCDAEKELABMNBOQUARTUFUTVAUCHGCDAIJCDAEKELABMNBOQUARTUFVBUEHGCDAIJCDAEKELABMNBOQUARTUFVCVDVEVFFFFFFPFPSUJUBGUBUKABHGCDAIJCDAEKELABMNBULUMUNSFFFPFPSHGCDAIJCDAEKELABMNBOQUDUCUGUEUISUOFFFFFPFPSUJUBGUBUKABHGCDAIJCDAEKELABMNBULUMUNSFFFPFPSHGRUHBOQUDUCUGUEUISUOCDAIJCDAEKELABMNRTFCDAIJCDAEKELABMNRTUFFFFFPFPSUJUBGUBUKABHGCDAIJCDAEKELABMNBULUMUNSFFFPFPSHGCDAIJCDAEKELABMNBOQUDUCUGUEUISFFFFPFPSUJUBGUBUKABHGCDAIJCDAEKELABMNBULUMUNSFFFPFPSHGRUHBOQUDUCUGUEUISCDAIJCDAEKELABMNRTFCDAIJCDAEKELABMNRTUFFFFPFPSUJUBGUBUKABHGCDAIJCDAEKELABMNBULUMUNSCDAIJCDAEKELABMNRTUFFFFPFPSHGCDAIJCDAEKELABMNBOQUDUCUGUEUIFFFPFPSHGRUHBOQUDUCUGUEUICDAIJCDAEKELABMNRTFCDAIJCDAEKELABMNRTUFFFPFPSCDAIJCDAEKELABMNRTUFRTCDAIJCDAEKELABMNHGCDAIJCDAEKELABMNBOQUDUCUGUEHGRUHBOQUDUCUGUERTCDAIJCDAEKELABMNHGCDAIJCDAEKELABMNBOQUDUCHGRUHBOQUDUCRTCDAIJCDAEKELABMNHGCDAIJCDAEKELABMNBOQHGRUHBOQRTCDAIJCDAEKELABMNHGCDAIJCDAEKELABMNBOHGRUHBOHGCDAIJCDAEKELABMNHGRUHCDAIJCDAEKELABMNRTHCDAIJCDAEKELABMNRTUFGCDAIJCDAEKELABMNRTUFCDAIJCDAEKELABMNRTURUSOCDAIJCDAEKELABMNRTUFUTVAUCCDAIJCDAEKELABMNRTUFVBUECDAIJCDAEKELABMNRTUFVCVDVEVFVO $.
sorting-rearrange-93 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-top kore-sort-var-R ) ) ) ) $= ( and-is-pattern typecode-cache-Pattern-2 top-is-pattern kore-is-sort-is-pattern kore-top-is-pattern rule-imp-transitivity in-sort-is-pattern kore-valid-is-pattern rule-weakening rule-and-intro-alt2-sugar and-elim-left-sugar sorting-cache-58 top-intro imp-is-pattern proof-rule-prop-1 kore-top-sorting proof-rule-mp imp-reflexivity kore-top-valid kore-and-is-pattern kore-and-intro-alt ) ACEDBACEDBACEDBACEDBDBBBACACACFACFUAIACEDBACEDBACEDBACEDBDBBAMACEDBACEDBACEDBDBAMACEDBACEDBDAMACEDBDNJKKKACACFACFACEDBACEDBACEDBDBBBACFACHACEDBACEDBACEDBDBBBACFACHOACFACHACEDBACEDBACEDBDBBBPACQRACFACHACEDBACEDBACEDBDBBBACFACHOACFACHACEDBACEDBACEDBDBBBPACQRACEDBACEDBACEDBDBBBACEDBACACFIACEDBACEDBACEDBDBBBACEDACEDBACEDBACEDBDBBBACEDBACEACEDBACEDBACEDBDBBLACEDBACEACEACEDLACESGGACEDBACEDBACEDBDBBBDNJKACEDBACACFIACTJGACEDBACEDBACEDBDBBBACEDBACACFIACEDBACEDBACEDBDBBBACEDACEDBACEDBACEDBDBBBACEDBACEACEDBACEDBACEDBDBBLACEDBACEACEACEDLACESGGACEDBACEDBACEDBDBBBDNJKACEDBACACFIACTJGUBG $.
sorting-rearrange-94 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortStateCell kore-sort-var-R \kore-symbol-LblinitStateCell ( \kore-symbol-Lbl'-LT-'state'-GT-' \kore-symbol-Lbl'Stop'Map ) ) ( \kore-top kore-sort-var-R ) ) ) ) $= ( typecode-cache-Pattern-2 and-is-pattern top-is-pattern kore-is-sort-is-pattern kore-top-is-pattern kore-and-is-pattern rule-imp-transitivity rule-and-intro-alt2-sugar IMP-sort-9-is-pattern IMP-symbol-218-is-pattern IMP-symbol-112-is-pattern IMP-symbol-120-is-pattern kore-equals-is-pattern kore-valid-is-pattern sorting-cache-58 and-elim-left-sugar top-intro rule-weakening kore-implies-is-pattern imp-reflexivity IMP-axiom-2953 sorting-rearrange-93 kore-mp-alt ) ABEDCABEDCABEDCABEDCDCCCABABJABKLMNABFGOABEDCABEDCABEDCABEDCDCCAPABEDCABEDCABEDCDCAPABEDCABEDCDAPABEDCDRSIIIABABABFABFGABJABKLMNABFGABEDCABEDCABEDCDCCCABEDCABEDCABEDCDCCCABEDCABABABABFABFGABJABKLMNABFGTOABEDCABEDCABEDCDCCCABEDABEDCABEDCABEDCDCCCABEDCABEABEDCABEDCABEDCDCCQABEDCABEABEABEDQABEUAHHABEDCABEDCABEDCDCCCDRSIAUBHABEDCABEDCABEDCDCCCABEDCABABABFABFGOABEDCABEDCABEDCDCCQAUCHUDH $.
sorting-rearrange-95 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) \top ) ( \kore-valid kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortStateCell kore-sort-var-R \kore-symbol-LblinitStateCell ( \kore-symbol-Lbl'-LT-'state'-GT-' \kore-symbol-Lbl'Stop'Map ) ) ( \kore-top kore-sort-var-R ) ) ) ) $= ( typecode-cache-Pattern-2 top-is-pattern and-is-pattern kore-is-sort-is-pattern IMP-sort-9-is-pattern IMP-symbol-218-is-pattern IMP-symbol-112-is-pattern IMP-symbol-120-is-pattern kore-equals-is-pattern kore-top-is-pattern kore-and-is-pattern kore-valid-is-pattern sorting-cache-169 top-intro rule-weakening rule-and-intro-alt2-sugar sorting-rearrange-94 rule-imp-transitivity ) ABECDCDABECDABABFABGHIJABKLMABECDCDABECANABECDCDCOPQARS $.
sorting-rearrange-96 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortStateCell kore-sort-var-R \kore-symbol-LblinitStateCell ( \kore-symbol-Lbl'-LT-'state'-GT-' \kore-symbol-Lbl'Stop'Map ) ) ( \kore-top kore-sort-var-R ) ) ) ) $= ( typecode-cache-Pattern-2 and-is-pattern top-is-pattern kore-is-sort-is-pattern rule-imp-transitivity and-elim-left-sugar IMP-sort-9-is-pattern IMP-symbol-218-is-pattern IMP-symbol-112-is-pattern IMP-symbol-120-is-pattern kore-equals-is-pattern kore-top-is-pattern kore-and-is-pattern kore-valid-is-pattern imp-reflexivity top-intro rule-weakening rule-and-intro-alt2-sugar sorting-rearrange-94 ) ABEDCABEDCDCCABEDCABABHABIJKLABMNOABEDCABEDCDCCABEDABEDCABEDCDCCABEDCABEABEDCABEDCDCGABEDCABEABEABEDGABEPFFABEDCABEDCDCCDQRSATF $.
sorting-rearrange-97 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-equals \kore-sort-SortStateCell kore-sort-var-R \kore-symbol-LblinitStateCell ( \kore-symbol-Lbl'-LT-'state'-GT-' \kore-symbol-Lbl'Stop'Map ) ) ) ) $= ( typecode-cache-Pattern-2 and-is-pattern top-is-pattern kore-is-sort-is-pattern IMP-sort-9-is-pattern IMP-symbol-218-is-pattern IMP-symbol-112-is-pattern IMP-symbol-120-is-pattern kore-equals-is-pattern in-sort-is-pattern sorting-cache-58 rule-and-intro-alt2-sugar kore-valid-is-pattern top-intro rule-weakening imp-is-pattern proof-rule-prop-1 kore-equals-sorting proof-rule-mp sorting-rearrange-96 kore-anp-top rule-imp-transitivity ) ABEDCABEDCABEDCDCCABFABGHIJNABEDCABEDCABEDCDCALABEDCABEDCDALABEDCDOPMMABFABGHIJABEDCABEDCDCCFABGHIJABKABEDCABEDCDCCFABGHIJABKQFABGHIJABKABEDCABEDCDCCRFABGHISTAUAUBUC $.
sorting-rearrange-98 $p |- ( \imp ( \and \top ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-equals \kore-sort-SortStateCell kore-sort-var-R \kore-symbol-LblinitStateCell ( \kore-symbol-Lbl'-LT-'state'-GT-' \kore-symbol-Lbl'Stop'Map ) ) ) ) $= ( top-is-pattern typecode-cache-Pattern-2 and-is-pattern kore-is-sort-is-pattern IMP-sort-9-is-pattern IMP-symbol-218-is-pattern IMP-symbol-112-is-pattern IMP-symbol-120-is-pattern kore-equals-is-pattern kore-valid-is-pattern sorting-cache-47 top-intro rule-weakening rule-and-intro-alt2-sugar sorting-rearrange-97 rule-imp-transitivity ) BACEBDDACEBDACFACGHIJKBACEBDDACEBALBACEBDDBMNOAPQ $.
substitution-258 $p #Substitution \kore-sort-SortStateCell \kore-sort-SortStateCell \unit-sort kore-sort-var-R $= ( IMP-sort-9-is-pattern unit-sort-is-symbol symbol-is-pattern element-var-is-var substitution-disjoint ) BCDAEF $.
substitution-259 $p #Substitution \kore-symbol-LblinitStateCell \kore-symbol-LblinitStateCell \unit-sort kore-sort-var-R $= ( IMP-symbol-218-is-pattern unit-sort-is-symbol symbol-is-pattern element-var-is-var substitution-disjoint ) BCDAEF $.
substitution-260 $p #Substitution ( \kore-equals \kore-sort-SortStateCell \unit-sort \kore-symbol-LblinitStateCell ( \kore-symbol-Lbl'-LT-'state'-GT-' \kore-symbol-Lbl'Stop'Map ) ) ( \kore-equals \kore-sort-SortStateCell kore-sort-var-R \kore-symbol-LblinitStateCell ( \kore-symbol-Lbl'-LT-'state'-GT-' \kore-symbol-Lbl'Stop'Map ) ) \unit-sort kore-sort-var-R $= ( unit-sort-is-symbol symbol-is-pattern IMP-symbol-112-is-pattern IMP-symbol-120-is-pattern element-var-is-var IMP-sort-9-is-pattern IMP-symbol-218-is-pattern typecode-cache-Pattern-2 substitution-258 substitution-var-same substitution-259 substitution-disjoint substitution-kore-equals ) GBCHDEGAIHDEBCAFAJBCAFKALDEBCAFMN $.
substitution-261 $p #Substitution \kore-sort-SortStateCell \kore-sort-SortStateCell kore-sort-var-x0 kore-sort-var-R $= ( IMP-sort-9-is-pattern typecode-cache-Pattern-6 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-262 $p #Substitution \kore-symbol-LblinitStateCell \kore-symbol-LblinitStateCell kore-sort-var-x0 kore-sort-var-R $= ( IMP-symbol-218-is-pattern typecode-cache-Pattern-6 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-263 $p #Substitution ( \kore-equals \kore-sort-SortStateCell kore-sort-var-x0 \kore-symbol-LblinitStateCell ( \kore-symbol-Lbl'-LT-'state'-GT-' \kore-symbol-Lbl'Stop'Map ) ) ( \kore-equals \kore-sort-SortStateCell kore-sort-var-R \kore-symbol-LblinitStateCell ( \kore-symbol-Lbl'-LT-'state'-GT-' \kore-symbol-Lbl'Stop'Map ) ) kore-sort-var-x0 kore-sort-var-R $= ( typecode-cache-Pattern-6 IMP-symbol-112-is-pattern IMP-symbol-120-is-pattern element-var-is-var IMP-sort-9-is-pattern IMP-symbol-218-is-pattern typecode-cache-Pattern-2 substitution-261 substitution-var-same substitution-262 substitution-disjoint substitution-kore-equals ) GBCHDEGAIHDEBCAFABJBCAFKABLDEBCAFMN $.
sorting-rearrange-99 $p |- ( \imp \top ( \kore-valid \unit-sort ( \kore-equals \kore-sort-SortStateCell \unit-sort \kore-symbol-LblinitStateCell ( \kore-symbol-Lbl'-LT-'state'-GT-' \kore-symbol-Lbl'Stop'Map ) ) ) ) $= ( kore-sort-var-R-elementvariable top-is-pattern unit-sort-is-symbol symbol-is-pattern kore-sort-var-x0-elementvariable typecode-cache-Pattern-2 IMP-sort-9-is-pattern IMP-symbol-218-is-pattern IMP-symbol-112-is-pattern IMP-symbol-120-is-pattern kore-equals-is-pattern typecode-cache-Pattern-6 and-is-pattern kore-is-sort-is-pattern kore-valid-is-pattern element-var-is-var x-is-element-var rule-weakening substitution-var-same substitution-kore-valid substitution-imp top-intro sorting-cache-49 rule-and-intro-alt2-sugar typecode-cache-Pattern-1 exists-is-pattern unit-sort-is-functional sorting-rearrange-98 substitution-2 substitution-260 substitution-9 substitution-263 functional-substitution-alt rule-imp-transitivity ) BBCDNBMMCDGCDHIJKOBBCDNBMBBUBRUCUDCDAFGAFHIJKOCDGCDHIJKOELGELHIJKOBAFNBMCDNBMELNBMQAEBQUEQUFQUGRAUHCDCDNBMCDGCDHIJKOAFNBMAFGAFHIJKOAPAUICDGCDHIJKAFGAFHIJKCDAPCDAPSAUJTUAELELNBMELGELHIJKOAFNBMAFGAFHIJKOAPAEUKELGELHIJKAFGAFHIJKELAPELAPSAEULTUAUMUN $.
sorting-cache-212 $p |- ( \imp \top ( \in-sort ( \kore-symbol-Lbl'-LT-'state'-GT-' \kore-symbol-Lbl'Stop'Map ) \kore-sort-SortStateCell ) ) $= ( IMP-symbol-112-is-pattern in-sort-is-pattern top-is-pattern IMP-sort-14-is-pattern IMP-symbol-120-is-pattern IMP-sort-9-is-pattern sorting-cache-15 IMP-symbol-120-sorting rule-imp-transitivity ) CADBAEFBGAHI $.
sorting-rearrange-100 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortGeneratedCounterCell kore-sort-var-R \kore-symbol-LblinitGeneratedCounterCell ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) ) ( \kore-top kore-sort-var-R ) ) ) ) $= ( typecode-cache-Pattern-2 and-is-pattern top-is-pattern kore-is-sort-is-pattern kore-top-is-pattern kore-and-is-pattern rule-imp-transitivity rule-and-intro-alt2-sugar IMP-sort-10-is-pattern IMP-symbol-215-is-pattern IMP-sort-22-is-pattern string-literal-1-is-pattern kore-dv-is-pattern IMP-symbol-116-is-pattern kore-equals-is-pattern kore-valid-is-pattern sorting-cache-58 and-elim-left-sugar top-intro rule-weakening kore-implies-is-pattern imp-reflexivity IMP-axiom-2950 sorting-rearrange-93 kore-mp-alt ) ABEDCABEDCABEDCABEDCDCCCABABJABKLMNOPABFGQABEDCABEDCABEDCABEDCDCCARABEDCABEDCABEDCDCARABEDCABEDCDARABEDCDTUAIIIABABABFABFGABJABKLMNOPABFGABEDCABEDCABEDCDCCCABEDCABEDCABEDCDCCCABEDCABABABABFABFGABJABKLMNOPABFGUBQABEDCABEDCABEDCDCCCABEDABEDCABEDCABEDCDCCCABEDCABEABEDCABEDCABEDCDCCSABEDCABEABEABEDSABEUCHHABEDCABEDCABEDCDCCCDTUAIAUDHABEDCABEDCABEDCDCCCABEDCABABABFABFGQABEDCABEDCABEDCDCCSAUEHUFH $.
sorting-rearrange-101 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) \top ) ( \kore-valid kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortGeneratedCounterCell kore-sort-var-R \kore-symbol-LblinitGeneratedCounterCell ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) ) ( \kore-top kore-sort-var-R ) ) ) ) $= ( typecode-cache-Pattern-2 top-is-pattern and-is-pattern kore-is-sort-is-pattern IMP-sort-10-is-pattern IMP-symbol-215-is-pattern IMP-sort-22-is-pattern string-literal-1-is-pattern kore-dv-is-pattern IMP-symbol-116-is-pattern kore-equals-is-pattern kore-top-is-pattern kore-and-is-pattern kore-valid-is-pattern sorting-cache-169 top-intro rule-weakening rule-and-intro-alt2-sugar sorting-rearrange-100 rule-imp-transitivity ) ABECDCDABECDABABFABGHIJKLABMNOABECDCDABECAPABECDCDCQRSATUA $.
sorting-rearrange-102 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortGeneratedCounterCell kore-sort-var-R \kore-symbol-LblinitGeneratedCounterCell ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) ) ( \kore-top kore-sort-var-R ) ) ) ) $= ( typecode-cache-Pattern-2 and-is-pattern top-is-pattern kore-is-sort-is-pattern rule-imp-transitivity and-elim-left-sugar IMP-sort-10-is-pattern IMP-symbol-215-is-pattern IMP-sort-22-is-pattern string-literal-1-is-pattern kore-dv-is-pattern IMP-symbol-116-is-pattern kore-equals-is-pattern kore-top-is-pattern kore-and-is-pattern kore-valid-is-pattern imp-reflexivity top-intro rule-weakening rule-and-intro-alt2-sugar sorting-rearrange-100 ) ABEDCABEDCDCCABEDCABABHABIJKLMNABOPQABEDCABEDCDCCABEDABEDCABEDCDCCABEDCABEABEDCABEDCDCGABEDCABEABEABEDGABERFFABEDCABEDCDCCDSTUAAUBF $.
sorting-rearrange-103 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-equals \kore-sort-SortGeneratedCounterCell kore-sort-var-R \kore-symbol-LblinitGeneratedCounterCell ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) $= ( typecode-cache-Pattern-2 and-is-pattern top-is-pattern kore-is-sort-is-pattern IMP-sort-10-is-pattern IMP-symbol-215-is-pattern IMP-sort-22-is-pattern string-literal-1-is-pattern kore-dv-is-pattern IMP-symbol-116-is-pattern kore-equals-is-pattern in-sort-is-pattern sorting-cache-58 rule-and-intro-alt2-sugar kore-valid-is-pattern top-intro rule-weakening imp-is-pattern proof-rule-prop-1 kore-equals-sorting proof-rule-mp sorting-rearrange-102 kore-anp-top rule-imp-transitivity ) ABEDCABEDCABEDCDCCABFABGHIJKLPABEDCABEDCABEDCDCANABEDCABEDCDANABEDCDQROOABFABGHIJKLABEDCABEDCDCCFABGHIJKLABMABEDCABEDCDCCFABGHIJKLABMSFABGHIJKLABMABEDCABEDCDCCTFABGHIJKUAUBAUCUDUE $.
sorting-rearrange-104 $p |- ( \imp ( \and \top ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-equals \kore-sort-SortGeneratedCounterCell kore-sort-var-R \kore-symbol-LblinitGeneratedCounterCell ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) $= ( top-is-pattern typecode-cache-Pattern-2 and-is-pattern kore-is-sort-is-pattern IMP-sort-10-is-pattern IMP-symbol-215-is-pattern IMP-sort-22-is-pattern string-literal-1-is-pattern kore-dv-is-pattern IMP-symbol-116-is-pattern kore-equals-is-pattern kore-valid-is-pattern sorting-cache-47 top-intro rule-weakening rule-and-intro-alt2-sugar sorting-rearrange-103 rule-imp-transitivity ) BACEBDDACEBDACFACGHIJKLMBACEBDDACEBANBACEBDDBOPQARS $.
substitution-264 $p #Substitution \kore-sort-SortGeneratedCounterCell \kore-sort-SortGeneratedCounterCell \unit-sort kore-sort-var-R $= ( IMP-sort-10-is-pattern unit-sort-is-symbol symbol-is-pattern element-var-is-var substitution-disjoint ) BCDAEF $.
substitution-265 $p #Substitution \kore-symbol-LblinitGeneratedCounterCell \kore-symbol-LblinitGeneratedCounterCell \unit-sort kore-sort-var-R $= ( IMP-symbol-215-is-pattern unit-sort-is-symbol symbol-is-pattern element-var-is-var substitution-disjoint ) BCDAEF $.
substitution-266 $p #Substitution \kore-sort-SortGeneratedCounterCell \kore-sort-SortGeneratedCounterCell kore-sort-var-x0 kore-sort-var-R $= ( IMP-sort-10-is-pattern typecode-cache-Pattern-6 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-267 $p #Substitution \kore-symbol-LblinitGeneratedCounterCell \kore-symbol-LblinitGeneratedCounterCell kore-sort-var-x0 kore-sort-var-R $= ( IMP-symbol-215-is-pattern typecode-cache-Pattern-6 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-268 $p #Substitution ( \kore-equals \kore-sort-SortGeneratedCounterCell kore-sort-var-x0 \kore-symbol-LblinitGeneratedCounterCell ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) ) ( \kore-equals \kore-sort-SortGeneratedCounterCell kore-sort-var-R \kore-symbol-LblinitGeneratedCounterCell ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) ) kore-sort-var-x0 kore-sort-var-R $= ( typecode-cache-Pattern-6 IMP-sort-22-is-pattern string-literal-1-is-pattern kore-dv-is-pattern IMP-symbol-116-is-pattern element-var-is-var IMP-sort-10-is-pattern IMP-symbol-215-is-pattern typecode-cache-Pattern-2 substitution-266 substitution-var-same substitution-267 substitution-disjoint substitution-kore-equals ) IBCJDEFGIAKJDEFGBCAHABLBCAHMABNDEFGBCAHOP $.
sorting-rearrange-105 $p |- ( \imp \top ( \kore-valid \unit-sort ( \kore-equals \kore-sort-SortGeneratedCounterCell \unit-sort \kore-symbol-LblinitGeneratedCounterCell ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) $= ( kore-sort-var-R-elementvariable unit-sort-is-symbol symbol-is-pattern top-is-pattern IMP-sort-22-is-pattern string-literal-1-is-pattern kore-dv-is-pattern IMP-symbol-116-is-pattern IMP-sort-10-is-pattern IMP-symbol-215-is-pattern typecode-cache-Pattern-2 kore-sort-var-x0-elementvariable kore-equals-is-pattern typecode-cache-Pattern-6 and-is-pattern kore-is-sort-is-pattern element-var-is-var kore-valid-is-pattern x-is-element-var substitution-var-same rule-weakening substitution-kore-valid substitution-imp top-intro sorting-cache-49 rule-and-intro-alt2-sugar typecode-cache-Pattern-1 exists-is-pattern unit-sort-is-functional sorting-rearrange-104 substitution-2 substitution-264 substitution-265 substitution-disjoint substitution-kore-equals substitution-9 substitution-268 functional-substitution-alt rule-imp-transitivity ) DDBCPDOOBCIBCJEFGHMRDDBCPDODDUDUAUEUFBCAKIAKJEFGHMRBCIBCJEFGHMRLNILNJEFGHMRDAKPDOBCPDOLNPDOSALDSUGSUHSUIUAAUJBCBCPDOBCIBCJEFGHMRAKPDOAKIAKJEFGHMRAQAUKBCIBCJEFGHMAKIAKJEFGHMBCAQBCAQTIBCJEFGHIAKJEFGHBCAQAULBCAQTAUMEFGHBCAQUNUOUBUCLNLNPDOLNILNJEFGHMRAKPDOAKIAKJEFGHMRAQALUPLNILNJEFGHMAKIAKJEFGHMLNAQLNAQTALUQUBUCURUS $.
equality-elim-3 $p |- ( \imp \top ( \kore-valid \kore-sort-SortGeneratedTopCell ( \kore-rewrites-star \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-top \kore-sort-SortGeneratedTopCell ) ) ( \kore-symbol-LblinitGeneratedTopCell ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) ) ) ) ) ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-top \kore-sort-SortGeneratedTopCell ) ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) \kore-symbol-dotk ) ) ( \kore-symbol-Lbl'-LT-'state'-GT-' \kore-symbol-Lbl'Stop'Map ) ) ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) ) $= ( IMP-sort-8-is-pattern kore-dv-is-pattern kore-inj-is-pattern IMP-sort-22-is-pattern IMP-sort-17-is-pattern string-literal-11-is-pattern kore-top-is-pattern kore-and-is-pattern BASIC-K-sort-1-is-pattern IMP-sort-26-is-pattern IMP-symbol-111-is-pattern IMP-symbol-148-is-pattern IMP-sort-13-is-pattern string-literal-10-is-pattern IMP-symbol-169-is-pattern IMP-symbol-220-is-pattern kore-element-var-x0-elementvariable IMP-symbol-112-is-pattern IMP-sort-20-is-pattern element-var-is-var KSEQ-symbol-1-is-pattern KSEQ-symbol-0-is-pattern IMP-symbol-119-is-pattern IMP-symbol-120-is-pattern IMP-symbol-114-is-pattern IMP-symbol-215-is-pattern IMP-symbol-117-is-pattern string-literal-9-is-pattern IMP-symbol-196-is-pattern IMP-symbol-176-is-pattern IMP-symbol-216-is-pattern substitution-disjoint typecode-cache-Pattern-16 IMP-symbol-218-is-pattern string-literal-1-is-pattern IMP-symbol-116-is-pattern kore-rewrites-star-is-pattern substitution-var-same IMP-symbol-117-substitution substitution-kore-and substitution-kore-rewrites-star substitution-kore-valid kore-valid-is-pattern top-is-pattern IMP-symbol-114-substitution kore-equals-elim-alt IMP-sort-10-is-pattern sorting-cache-170 sorting-cache-23 sorting-rearrange-105 IMP-sort-9-is-pattern sorting-cache-172 sorting-cache-212 sorting-rearrange-99 equality-elim-2 ) VGUFDUOBUPAAAAGAGHRSISUHBCJIEFBKLEFBDMDNBCOPCUIUJUKHAAAGAGHJIEFBKLEFBDMDNBCOPCUAUBUCRUDUEUFUGHUQAAAAAGAGHRSISUHBCJIEFBKLEFBDMDNBCOPCUIUJUKHAAAGAGHJIEFBKLEFBDMDNBCOPCUAUBUCRUDUEQUMUGHUQVCAAAAGAGHRSISUHBCJIEFBKLEFBDMDNBCOPCUIUJUKHAAAGAGHJIEFBKLEFBDMDNBCOPCUAUBUCRUDUEDUOBUPUGHUQAAVDQVHVIVJVKUNRUDAAAAGAGHRSISUHBCJIEFBKLEFBDMDNBCOPCUIUJUKHAAAGAGHJIEFBKLEFBDMDNBCOPCUAUBUCUNUEUFUGHUQAAAAAGAGHRSISUHBCJIEFBKLEFBDMDNBCOPCUIUJUKHAAAGAGHJIEFBKLEFBDMDNBCOPCUAUBUCQUMUEUFUGHUQVCAAAAGAGHRSISUHBCJIEFBKLEFBDMDNBCOPCUIUJUKHAAAGAGHJIEFBKLEFBDMDNBCOPCUAUBUCRUDUEUFUGHUQAAVDQVLVMVNVOAAAAAGAGHRSISUHBCJIEFBKLEFBDMDNBCOPCUIUJUKHAAAGAGHJIEFBKLEFBDMDNBCOPCUAUBUCUNUEUFUGHUQAAAAAGAGHRSISUHBCJIEFBKLEFBDMDNBCOPCUIUJUKHAAAGAGHJIEFBKLEFBDMDNBCOPCUAUBUCQUMUEUFUGHUQUNQTAUNQTULAAAAGAGHRSISUHBCJIEFBKLEFBDMDNBCOPCUIUJUKHAAAGAGHJIEFBKLEFBDMDNBCOPCUAUBUCUNUEUFUGHAAAAGAGHRSISUHBCJIEFBKLEFBDMDNBCOPCUIUJUKHAAAGAGHJIEFBKLEFBDMDNBCOPCUAUBUCQUMUEUFUGHUNQTAUNQTULAAAGAGHRSISUHBCJIEFBKLEFBDMDNBCOPCUIUJUKHUNQTULAAAGAGHJIEFBKLEFBDMDNBCOPCUAUBUCUNUEUFUGAAAGAGHJIEFBKLEFBDMDNBCOPCUAUBUCQUMUEUFUGUNQTAUNQTULAAGAGHUNQTULQTUNJIEFBKLEFBDMDNBCOPCUAUBUCUNUEUFJIEFBKLEFBDMDNBCOPCUAUBUCQUMUEUFQTUNJIEFBKLEFBDMDNBCOPCUAUBUCUNJIEFBKLEFBDMDNBCOPCUAUBUCQUMJIEFBKLEFBDMDNBCOPCUAUBUCUNQTULUNQTURVEUFUNQTULUSUTVAVBAAAAAGAGHRSISUHBCJIEFBKLEFBDMDNBCOPCUIUJUKHAAAGAGHJIEFBKLEFBDMDNBCOPCUAUBUCRUDUEUFUGHUQAAAAAGAGHRSISUHBCJIEFBKLEFBDMDNBCOPCUIUJUKHAAAGAGHJIEFBKLEFBDMDNBCOPCUAUBUCQUMUEUFUGHUQRUDQTARUDQTULAAAAGAGHRSISUHBCJIEFBKLEFBDMDNBCOPCUIUJUKHAAAGAGHJIEFBKLEFBDMDNBCOPCUAUBUCRUDUEUFUGHAAAAGAGHRSISUHBCJIEFBKLEFBDMDNBCOPCUIUJUKHAAAGAGHJIEFBKLEFBDMDNBCOPCUAUBUCQUMUEUFUGHRUDQTARUDQTULAAAGAGHRSISUHBCJIEFBKLEFBDMDNBCOPCUIUJUKHRUDQTULAAAGAGHJIEFBKLEFBDMDNBCOPCUAUBUCRUDUEUFUGAAAGAGHJIEFBKLEFBDMDNBCOPCUAUBUCQUMUEUFUGRUDQTARUDQTULAAGAGHRUDQTULQTRUDJIEFBKLEFBDMDNBCOPCUAUBUCRUDUEUFJIEFBKLEFBDMDNBCOPCUAUBUCQUMUEUFQTRUDJIEFBKLEFBDMDNBCOPCUAUBUCRUDJIEFBKLEFBDMDNBCOPCUAUBUCQUMJIEFBKLEFBDMDNBCOPCUAUBUCRUDQTULRUDQTURVEUFRUDQTULUSUTVAVBVFAAAAAGAGHRSISUHBCJIEFBKLEFBDMDNBCOPCUIUJUKHAAAGAGHJIEFBKLEFBDMDNBCOPCUAUBUCRUDUEUFUGHUQAAAAAGAGHRSISUHBCJIEFBKLEFBDMDNBCOPCUIUJUKHAAAGAGHJIEFBKLEFBDMDNBCOPCUAUBUCRUDUEQUMUGHUQUFQTAUFQTULAAAAGAGHRSISUHBCJIEFBKLEFBDMDNBCOPCUIUJUKHAAAGAGHJIEFBKLEFBDMDNBCOPCUAUBUCRUDUEUFUGHAAAAGAGHRSISUHBCJIEFBKLEFBDMDNBCOPCUIUJUKHAAAGAGHJIEFBKLEFBDMDNBCOPCUAUBUCRUDUEQUMUGHUFQTAUFQTULAAAGAGHRSISUHBCJIEFBKLEFBDMDNBCOPCUIUJUKHUFQTULAAAGAGHJIEFBKLEFBDMDNBCOPCUAUBUCRUDUEUFUGAAAGAGHJIEFBKLEFBDMDNBCOPCUAUBUCRUDUEQUMUGUFQTAUFQTULAAGAGHUFQTULQTUFJIEFBKLEFBDMDNBCOPCUAUBUCRUDUEUFJIEFBKLEFBDMDNBCOPCUAUBUCRUDUEQUMJIEFBKLEFBDMDNBCOPCUAUBUCRUDUEUFQTULUFQTURUSUTVAVBAAAAAGAGHRSISUHBCJIEFBKLEFBDMDNBCOPCUIUJUKHAAAGAGHJIEFBKLEFBDMDNBCOPCUAUBUCRUDUEDUOBUPUGHUQAAAAAGAGHRSISUHBCJIEFBKLEFBDMDNBCOPCUIUJUKHAAAGAGHJIEFBKLEFBDMDNBCOPCUAUBUCRUDUEQUMUGHUQDUOBUPQTADUOBUPQTULAAAAGAGHRSISUHBCJIEFBKLEFBDMDNBCOPCUIUJUKHAAAGAGHJIEFBKLEFBDMDNBCOPCUAUBUCRUDUEDUOBUPUGHAAAAGAGHRSISUHBCJIEFBKLEFBDMDNBCOPCUIUJUKHAAAGAGHJIEFBKLEFBDMDNBCOPCUAUBUCRUDUEQUMUGHDUOBUPQTADUOBUPQTULAAAGAGHRSISUHBCJIEFBKLEFBDMDNBCOPCUIUJUKHDUOBUPQTULAAAGAGHJIEFBKLEFBDMDNBCOPCUAUBUCRUDUEDUOBUPUGAAAGAGHJIEFBKLEFBDMDNBCOPCUAUBUCRUDUEQUMUGDUOBUPQTADUOBUPQTULAAGAGHDUOBUPQTULQTDUOBUPJIEFBKLEFBDMDNBCOPCUAUBUCRUDUEDUOBUPJIEFBKLEFBDMDNBCOPCUAUBUCRUDUEQUMJIEFBKLEFBDMDNBCOPCUAUBUCRUDUEDUOBUPQTULDUOBUPQTURUSUTVAVBVF $.
typecode-cache-Pattern-97 $p #Pattern kore-element-var-VE2 $= ( element-var-is-var var-is-pattern ) ABC $.
typecode-cache-Pattern-98 $p #Pattern kore-element-var-VE3 $= ( element-var-is-var var-is-pattern ) ABC $.
typecode-cache-Pattern-99 $p #Pattern kore-element-var-VE4 $= ( element-var-is-var var-is-pattern ) ABC $.
typecode-cache-Pattern-100 $p #Pattern ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortGeneratedCounterCell ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortMap ) \top ) ) $= ( in-sort-is-pattern and-is-pattern typecode-cache-Pattern-98 IMP-sort-10-is-pattern typecode-cache-Pattern-99 IMP-sort-14-is-pattern top-is-pattern ) BEFCAGHCIDD $.
sorting-rearrange-106 $p |- ( \imp ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortId ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortStmt ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortGeneratedCounterCell ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortMap ) \top ) ) ) ) ( \exists kore-element-var-Val ( \eq kore-element-var-Val \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) ) ) $= ( in-sort-is-pattern and-is-pattern top-is-pattern typecode-cache-Pattern-72 IMP-sort-17-is-pattern typecode-cache-Pattern-97 IMP-sort-30-is-pattern typecode-cache-Pattern-100 IMP-symbol-111-is-pattern typecode-cache-Pattern-3 eq-is-pattern exists-is-pattern top-intro rule-weakening IMP-sort-0-is-pattern sorting-cache-3 sorting-rearrange-21 kore-functional rule-imp-transitivity ) BIJFAKLFCDMGGHEONPEQBIJFAKLFCDMGGHRSTNHEUAEUBUCUD $.
sorting-cache-213 $p |- ( \imp ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortGeneratedCounterCell ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortMap ) \top ) ) ( \in-sort kore-element-var-VE3 \kore-sort-SortGeneratedCounterCell ) ) $= ( in-sort-is-pattern typecode-cache-Pattern-98 IMP-sort-10-is-pattern typecode-cache-Pattern-100 typecode-cache-Pattern-99 IMP-sort-14-is-pattern top-is-pattern and-is-pattern and-elim-left-sugar imp-reflexivity rule-imp-transitivity ) ABFBDECBDECBDECAGHCIJKBDECLM $.
sorting-cache-214 $p |- ( \imp ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortId ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortStmt ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortGeneratedCounterCell ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortMap ) \top ) ) ) ) ( \in-sort kore-element-var-VE3 \kore-sort-SortGeneratedCounterCell ) ) $= ( in-sort-is-pattern typecode-cache-Pattern-100 typecode-cache-Pattern-97 IMP-sort-30-is-pattern and-is-pattern typecode-cache-Pattern-72 IMP-sort-17-is-pattern typecode-cache-Pattern-98 IMP-sort-10-is-pattern and-elim-right-sugar rule-imp-transitivity sorting-cache-213 ) BJKEAGHECDFIIAGHECDFIDLMEBJKEAGHECDFINAGHECDFICDFDLMEAGHECDFNCDPOO $.
sorting-cache-215 $p |- ( \imp ( \and ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortId ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortStmt ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortGeneratedCounterCell ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortMap ) \top ) ) ) ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortIds ) \top ) ) ( \in-sort kore-element-var-VE3 \kore-sort-SortGeneratedCounterCell ) ) $= ( in-sort-is-pattern and-is-pattern typecode-cache-Pattern-72 IMP-sort-17-is-pattern typecode-cache-Pattern-97 IMP-sort-30-is-pattern typecode-cache-Pattern-100 typecode-cache-Pattern-74 IMP-sort-0-is-pattern top-is-pattern typecode-cache-Pattern-98 IMP-sort-10-is-pattern and-elim-left-sugar sorting-cache-214 rule-imp-transitivity ) CHIFBJKFDELGGAMNFOGGCHIFBJKFDELGGEPQFCHIFBJKFDELGGAMNFOGRBCDEST $.
sorting-cache-216 $p |- ( \imp ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortGeneratedCounterCell ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortMap ) \top ) ) ( \in-sort kore-element-var-VE4 \kore-sort-SortMap ) ) $= ( in-sort-is-pattern typecode-cache-Pattern-99 IMP-sort-14-is-pattern top-is-pattern and-is-pattern rule-imp-transitivity typecode-cache-Pattern-100 typecode-cache-Pattern-98 IMP-sort-10-is-pattern and-elim-right-sugar and-elim-left-sugar imp-reflexivity ) ABIADECFGADECBJKCADECFGLADECFGADECADECADECFMADECNHH $.
sorting-cache-217 $p |- ( \imp ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortId ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortStmt ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortGeneratedCounterCell ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortMap ) \top ) ) ) ) ( \in-sort kore-element-var-VE4 \kore-sort-SortMap ) ) $= ( in-sort-is-pattern typecode-cache-Pattern-100 typecode-cache-Pattern-97 IMP-sort-30-is-pattern and-is-pattern typecode-cache-Pattern-72 IMP-sort-17-is-pattern typecode-cache-Pattern-99 IMP-sort-14-is-pattern and-elim-right-sugar rule-imp-transitivity sorting-cache-216 ) BJKEAGHECDFIIAGHECDFICLMEBJKEAGHECDFINAGHECDFICDFCLMEAGHECDFNCDPOO $.
sorting-cache-218 $p |- ( \imp ( \and ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortId ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortStmt ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortGeneratedCounterCell ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortMap ) \top ) ) ) ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortIds ) \top ) ) ( \in-sort kore-element-var-VE4 \kore-sort-SortMap ) ) $= ( in-sort-is-pattern and-is-pattern typecode-cache-Pattern-72 IMP-sort-17-is-pattern typecode-cache-Pattern-97 IMP-sort-30-is-pattern typecode-cache-Pattern-100 typecode-cache-Pattern-74 IMP-sort-0-is-pattern top-is-pattern typecode-cache-Pattern-99 IMP-sort-14-is-pattern and-elim-left-sugar sorting-cache-217 rule-imp-transitivity ) CHIFBJKFDELGGAMNFOGGCHIFBJKFDELGGDPQFCHIFBJKFDELGGAMNFOGRBCDEST $.
sorting-cache-219 $p |- ( \imp ( \and ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortId ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortStmt ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortGeneratedCounterCell ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortMap ) \top ) ) ) ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortIds ) \top ) ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortMap ) \top ) ) $= ( and-is-pattern in-sort-is-pattern top-is-pattern typecode-cache-Pattern-72 IMP-sort-17-is-pattern typecode-cache-Pattern-97 IMP-sort-30-is-pattern typecode-cache-Pattern-100 typecode-cache-Pattern-74 IMP-sort-0-is-pattern typecode-cache-Pattern-99 IMP-sort-14-is-pattern sorting-cache-218 top-intro rule-weakening rule-and-intro-alt2-sugar ) CIJGBKLGDEMFFANOGHFFDPQGHABCDERCIJGBKLGDEMFFANOGHFFHSTUA $.
sorting-cache-220 $p |- ( \imp ( \and ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortId ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortStmt ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortGeneratedCounterCell ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortMap ) \top ) ) ) ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortIds ) \top ) ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortGeneratedCounterCell ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortMap ) \top ) ) ) $= ( in-sort-is-pattern and-is-pattern top-is-pattern typecode-cache-Pattern-72 IMP-sort-17-is-pattern typecode-cache-Pattern-97 IMP-sort-30-is-pattern typecode-cache-Pattern-100 typecode-cache-Pattern-74 IMP-sort-0-is-pattern typecode-cache-Pattern-98 IMP-sort-10-is-pattern typecode-cache-Pattern-99 IMP-sort-14-is-pattern sorting-cache-215 sorting-cache-219 rule-and-intro-alt2-sugar ) CIJFBKLFDEMGGANOFHGGEPQFDRSFHGABCDETABCDEUAUB $.
typecode-cache-Pattern-101 $p #Pattern ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids kore-element-var-VE1 kore-element-var-VE0 ) $= ( typecode-cache-Pattern-72 typecode-cache-Pattern-74 IMP-symbol-148-is-pattern ) BCADE $.
typecode-cache-Pattern-102 $p #Pattern ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids kore-element-var-VE1 kore-element-var-VE0 ) kore-element-var-VE2 ) ) \kore-symbol-dotk ) ) ( \kore-symbol-Lbl'-LT-'state'-GT-' ( \kore-symbol-Lbl'Unds'Map'Unds' kore-element-var-VE4 \kore-symbol-Lbl'Stop'Map ) ) ) $= ( IMP-sort-26-is-pattern BASIC-K-sort-1-is-pattern typecode-cache-Pattern-101 typecode-cache-Pattern-97 IMP-symbol-220-is-pattern kore-inj-is-pattern KSEQ-symbol-1-is-pattern KSEQ-symbol-0-is-pattern IMP-symbol-119-is-pattern typecode-cache-Pattern-99 IMP-symbol-112-is-pattern IMP-symbol-176-is-pattern IMP-symbol-120-is-pattern IMP-symbol-114-is-pattern ) EFACGBHIJKLMDNOPQR $.
typecode-cache-Pattern-103 $p #Pattern ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt kore-element-var-VE0 kore-element-var-VE2 ) $= ( typecode-cache-Pattern-74 typecode-cache-Pattern-97 IMP-symbol-220-is-pattern ) ACBDE $.
sorting-rearrange-107 $p |- ( \imp ( \and ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortId ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortStmt ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortGeneratedCounterCell ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortMap ) \top ) ) ) ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortIds ) \top ) ) ( \kore-valid \kore-sort-SortGeneratedTopCell ( \kore-rewrites \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids kore-element-var-VE1 kore-element-var-VE0 ) kore-element-var-VE2 ) ) \kore-symbol-dotk ) ) ( \kore-symbol-Lbl'-LT-'state'-GT-' ( \kore-symbol-Lbl'Unds'Map'Unds' kore-element-var-VE4 \kore-symbol-Lbl'Stop'Map ) ) ) kore-element-var-VE3 ) ) ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt kore-element-var-VE0 kore-element-var-VE2 ) ) \kore-symbol-dotk ) ) ( \kore-symbol-Lbl'-LT-'state'-GT-' ( \kore-symbol-Lbl'Unds'Map'Unds' kore-element-var-VE4 ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem kore-element-var-VE1 ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortKItem ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) kore-element-var-VE3 ) ) ) ) ) $= ( in-sort-is-pattern and-is-pattern typecode-cache-Pattern-97 IMP-sort-30-is-pattern typecode-cache-Pattern-72 IMP-sort-17-is-pattern typecode-cache-Pattern-100 typecode-cache-Pattern-74 IMP-sort-0-is-pattern top-is-pattern rule-imp-transitivity IMP-sort-8-is-pattern and-elim-left-sugar BASIC-K-sort-1-is-pattern kore-inj-is-pattern imp-reflexivity rule-and-intro-alt2-sugar kore-top-is-pattern typecode-cache-Pattern-98 IMP-symbol-117-is-pattern kore-and-is-pattern IMP-sort-22-is-pattern and-elim-right-sugar typecode-cache-Pattern-102 IMP-sort-26-is-pattern typecode-cache-Pattern-103 KSEQ-symbol-1-is-pattern KSEQ-symbol-0-is-pattern IMP-symbol-119-is-pattern typecode-cache-Pattern-99 string-literal-1-is-pattern kore-dv-is-pattern IMP-symbol-196-is-pattern IMP-symbol-176-is-pattern IMP-symbol-120-is-pattern IMP-symbol-114-is-pattern kore-rewrites-is-pattern kore-valid-is-pattern sorting-cache-220 IMP-axiom-2878 ) CJKFBHIFDELGGAMNFOGGAMNFCJKFBHIFDELGGGQQQQUCABCDUIEUDUEUFQQUCUJSABUKTULUMUNDUOKSCJTUGSUGUPUQTURUSUTVAEUDUEUFVBVCCJKFBHIFDELGGAMNFOGGAMNFCJKFBHIFDELGGCJKFBHIFDELGGAMNFOGGAMNFOGAMNFCJKFBHIFDELGGAMNFOGUHAMNFOGAMNFAMNFAMNFORAMNFUAPPCJKFBHIFDELGGAMNFOGGCJKFBHIFDELGCJKFBHIFDELGGAMNFOGGCJKFBHIFDELGGCJKFCJKFBHIFDELGGAMNFOGRCJKFBHIFDELGGCJKFCJKFCJKFBHIFDELGRCJKFUAPPCJKFBHIFDELGGAMNFOGGBHIFDELCJKFBHIFDELGGAMNFOGGCJKFBHIFDELGGBHIFCJKFBHIFDELGGAMNFOGRCJKFBHIFDELGGBHIFDELGBHIFCJKFBHIFDELGUHBHIFDELGBHIFBHIFBHIFDELRBHIFUAPPPABCDEVDUBUBUBABCDEVEP $.
typecode-cache-Pattern-104 $p #Pattern ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids kore-element-var-VE1 \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) kore-element-var-VE2 ) $= ( typecode-cache-Pattern-72 IMP-symbol-111-is-pattern IMP-symbol-148-is-pattern typecode-cache-Pattern-97 IMP-symbol-220-is-pattern ) BCDEAFG $.
typecode-cache-Pattern-105 $p #Pattern ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids kore-element-var-VE1 kore-element-var-x0 ) $= ( typecode-cache-Pattern-72 typecode-cache-Pattern-16 IMP-symbol-148-is-pattern ) ACBDE $.
typecode-cache-Pattern-106 $p #Pattern ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids kore-element-var-VE1 kore-element-var-x0 ) kore-element-var-VE2 ) ) \kore-symbol-dotk ) ) ( \kore-symbol-Lbl'-LT-'state'-GT-' ( \kore-symbol-Lbl'Unds'Map'Unds' kore-element-var-VE4 \kore-symbol-Lbl'Stop'Map ) ) ) $= ( IMP-sort-26-is-pattern BASIC-K-sort-1-is-pattern typecode-cache-Pattern-105 typecode-cache-Pattern-97 IMP-symbol-220-is-pattern kore-inj-is-pattern KSEQ-symbol-1-is-pattern KSEQ-symbol-0-is-pattern IMP-symbol-119-is-pattern typecode-cache-Pattern-99 IMP-symbol-112-is-pattern IMP-symbol-176-is-pattern IMP-symbol-120-is-pattern IMP-symbol-114-is-pattern ) EFBDGAHIJKLMCNOPQR $.
typecode-cache-Pattern-107 $p #Pattern ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt kore-element-var-x0 kore-element-var-VE2 ) $= ( typecode-cache-Pattern-16 typecode-cache-Pattern-97 IMP-symbol-220-is-pattern ) BCADE $.
substitution-269 $p #Substitution ( \and ( \in-sort \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids \kore-sort-SortIds ) \top ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortIds ) \top ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids kore-element-var-VE0 $= ( IMP-symbol-111-is-pattern IMP-sort-0-is-pattern element-var-is-var top-is-pattern in-sort-is-pattern typecode-cache-Pattern-74 substitution-disjoint substitution-var-same substitution-in-sort substitution-and ) BBCFEAGCFEADBBCAGCADBADICBADHJEBADHK $.
substitution-270 $p #Substitution kore-element-var-VE1 kore-element-var-VE1 \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids kore-element-var-VE0 $= ( typecode-cache-Pattern-72 IMP-symbol-111-is-pattern element-var-is-var substitution-disjoint ) BCDAEF $.
substitution-271 $p #Substitution ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids kore-element-var-VE1 \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids kore-element-var-VE1 kore-element-var-VE0 ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids kore-element-var-VE0 $= ( IMP-symbol-111-is-pattern element-var-is-var typecode-cache-Pattern-72 typecode-cache-Pattern-74 substitution-270 substitution-var-same IMP-symbol-148-substitution ) ADCBECBEAFABGCADHI $.
substitution-272 $p #Substitution kore-element-var-VE2 kore-element-var-VE2 \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids kore-element-var-VE0 $= ( typecode-cache-Pattern-97 IMP-symbol-111-is-pattern element-var-is-var substitution-disjoint ) BCDAEF $.
substitution-273 $p #Substitution ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids kore-element-var-VE1 \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) kore-element-var-VE2 ) ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids kore-element-var-VE1 kore-element-var-VE0 ) kore-element-var-VE2 ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids kore-element-var-VE0 $= ( IMP-symbol-111-is-pattern typecode-cache-Pattern-97 element-var-is-var typecode-cache-Pattern-72 IMP-symbol-148-is-pattern typecode-cache-Pattern-101 substitution-271 substitution-272 IMP-symbol-220-substitution ) AFDCGDHBEACIBEACJABKL $.
substitution-274 $p #Substitution ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids kore-element-var-VE1 \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) kore-element-var-VE2 ) ) ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids kore-element-var-VE1 kore-element-var-VE0 ) kore-element-var-VE2 ) ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids kore-element-var-VE0 $= ( IMP-sort-26-is-pattern BASIC-K-sort-1-is-pattern IMP-symbol-111-is-pattern element-var-is-var substitution-disjoint typecode-cache-Pattern-104 typecode-cache-Pattern-101 typecode-cache-Pattern-97 IMP-symbol-220-is-pattern substitution-273 substitution-kore-inj ) DEBCIDEACJBKLFAGDFAGHEFAGHABCMN $.
substitution-275 $p #Substitution ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids kore-element-var-VE1 \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) kore-element-var-VE2 ) ) \kore-symbol-dotk ) ) ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids kore-element-var-VE1 kore-element-var-VE0 ) kore-element-var-VE2 ) ) \kore-symbol-dotk ) ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids kore-element-var-VE0 $= ( KSEQ-symbol-1-is-pattern IMP-sort-26-is-pattern BASIC-K-sort-1-is-pattern kore-inj-is-pattern element-var-is-var IMP-symbol-111-is-pattern typecode-cache-Pattern-104 KSEQ-symbol-0-is-pattern typecode-cache-Pattern-101 typecode-cache-Pattern-97 IMP-symbol-220-is-pattern substitution-274 substitution-disjoint KSEQ-symbol-0-substitution IMP-symbol-119-substitution ) AHIEFBCJGDKEFACLBMNGDKAHIEFBCJGDEFACLBMNGDABCODIAHPQR $.
substitution-276 $p #Substitution kore-element-var-VE3 kore-element-var-VE3 \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids kore-element-var-VE0 $= ( typecode-cache-Pattern-98 IMP-symbol-111-is-pattern element-var-is-var substitution-disjoint ) BCDAEF $.
substitution-277 $p #Substitution ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids kore-element-var-VE1 \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) kore-element-var-VE2 ) ) \kore-symbol-dotk ) ) ( \kore-symbol-Lbl'-LT-'state'-GT-' ( \kore-symbol-Lbl'Unds'Map'Unds' kore-element-var-VE4 \kore-symbol-Lbl'Stop'Map ) ) ) kore-element-var-VE3 ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids kore-element-var-VE1 kore-element-var-VE0 ) kore-element-var-VE2 ) ) \kore-symbol-dotk ) ) ( \kore-symbol-Lbl'-LT-'state'-GT-' ( \kore-symbol-Lbl'Unds'Map'Unds' kore-element-var-VE4 \kore-symbol-Lbl'Stop'Map ) ) ) kore-element-var-VE3 ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids kore-element-var-VE0 $= ( typecode-cache-Pattern-99 IMP-symbol-112-is-pattern IMP-symbol-176-is-pattern IMP-symbol-120-is-pattern element-var-is-var IMP-symbol-111-is-pattern IMP-sort-26-is-pattern BASIC-K-sort-1-is-pattern kore-inj-is-pattern KSEQ-symbol-1-is-pattern KSEQ-symbol-0-is-pattern IMP-symbol-119-is-pattern typecode-cache-Pattern-104 typecode-cache-Pattern-98 IMP-symbol-114-is-pattern typecode-cache-Pattern-102 typecode-cache-Pattern-101 typecode-cache-Pattern-97 IMP-symbol-220-is-pattern substitution-275 substitution-disjoint IMP-symbol-114-substitution substitution-276 IMP-symbol-117-substitution ) AJKLMBCRNOPQDFGHITESABCDUAESAJKLMBCRNOPQDFGHILMACUBBUCUDNOPQDFGHIABCUEDFGHIKAJUFUGAEUHUI $.
substitution-278 $p #Substitution ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids kore-element-var-VE2 ) ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt kore-element-var-VE0 kore-element-var-VE2 ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids kore-element-var-VE0 $= ( IMP-symbol-111-is-pattern element-var-is-var typecode-cache-Pattern-97 typecode-cache-Pattern-74 substitution-var-same substitution-272 IMP-symbol-220-substitution ) ADCCBEAFBECADGABHI $.
substitution-279 $p #Substitution ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids kore-element-var-VE2 ) ) ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt kore-element-var-VE0 kore-element-var-VE2 ) ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids kore-element-var-VE0 $= ( IMP-symbol-111-is-pattern IMP-sort-26-is-pattern BASIC-K-sort-1-is-pattern element-var-is-var substitution-disjoint typecode-cache-Pattern-97 IMP-symbol-220-is-pattern typecode-cache-Pattern-103 substitution-278 substitution-kore-inj ) DECBHIDEABJCAFDCAFGECAFGABKL $.
substitution-280 $p #Substitution ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids kore-element-var-VE2 ) ) \kore-symbol-dotk ) ) ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt kore-element-var-VE0 kore-element-var-VE2 ) ) \kore-symbol-dotk ) ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids kore-element-var-VE0 $= ( IMP-symbol-111-is-pattern KSEQ-symbol-1-is-pattern IMP-sort-26-is-pattern BASIC-K-sort-1-is-pattern kore-inj-is-pattern element-var-is-var typecode-cache-Pattern-97 IMP-symbol-220-is-pattern KSEQ-symbol-0-is-pattern typecode-cache-Pattern-103 substitution-279 substitution-disjoint KSEQ-symbol-0-substitution IMP-symbol-119-substitution ) AHCEFCBIJGDKEFABLGDKAHCEFCBIJGDEFABLGDABMDCAHNOP $.
substitution-281 $p #Substitution \kore-sort-SortIds \kore-sort-SortIds kore-element-var-x0 kore-element-var-VE0 $= ( IMP-sort-0-is-pattern typecode-cache-Pattern-16 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-282 $p #Substitution ( \in-sort kore-element-var-x0 \kore-sort-SortIds ) ( \in-sort kore-element-var-VE0 \kore-sort-SortIds ) kore-element-var-x0 kore-element-var-VE0 $= ( typecode-cache-Pattern-16 IMP-sort-0-is-pattern element-var-is-var typecode-cache-Pattern-74 substitution-var-same substitution-281 substitution-in-sort ) BCBCDAFDAEBCAEGABHI $.
substitution-283 $p #Substitution ( \and ( \in-sort kore-element-var-x0 \kore-sort-SortIds ) \top ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortIds ) \top ) kore-element-var-x0 kore-element-var-VE0 $= ( typecode-cache-Pattern-16 IMP-sort-0-is-pattern in-sort-is-pattern top-is-pattern typecode-cache-Pattern-74 element-var-is-var substitution-282 substitution-183 substitution-and ) BCBCDEFAGDEFAHABIABJK $.
substitution-284 $p #Substitution \kore-sort-SortKItem \kore-sort-SortKItem kore-element-var-x0 kore-element-var-VE0 $= ( BASIC-K-sort-1-is-pattern typecode-cache-Pattern-16 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-285 $p #Substitution ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids kore-element-var-VE1 kore-element-var-x0 ) ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids kore-element-var-VE1 kore-element-var-VE0 ) kore-element-var-x0 kore-element-var-VE0 $= ( typecode-cache-Pattern-16 element-var-is-var typecode-cache-Pattern-72 typecode-cache-Pattern-74 substitution-187 substitution-var-same IMP-symbol-148-substitution ) AECDBFCDBFAGABCHCDAEIJ $.
substitution-286 $p #Substitution kore-element-var-VE2 kore-element-var-VE2 kore-element-var-x0 kore-element-var-VE0 $= ( typecode-cache-Pattern-97 typecode-cache-Pattern-16 element-var-is-var substitution-disjoint ) BDCEAFG $.
substitution-287 $p #Substitution ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids kore-element-var-VE1 kore-element-var-x0 ) kore-element-var-VE2 ) ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids kore-element-var-VE1 kore-element-var-VE0 ) kore-element-var-VE2 ) kore-element-var-x0 kore-element-var-VE0 $= ( typecode-cache-Pattern-97 element-var-is-var typecode-cache-Pattern-16 typecode-cache-Pattern-105 typecode-cache-Pattern-101 substitution-285 substitution-286 IMP-symbol-220-substitution ) AFDGCDHBEACIBEACDJABDKL $.
substitution-288 $p #Substitution ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids kore-element-var-VE1 kore-element-var-x0 ) kore-element-var-VE2 ) ) ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids kore-element-var-VE1 kore-element-var-VE0 ) kore-element-var-VE2 ) ) kore-element-var-x0 kore-element-var-VE0 $= ( IMP-sort-26-is-pattern BASIC-K-sort-1-is-pattern typecode-cache-Pattern-97 IMP-symbol-220-is-pattern typecode-cache-Pattern-105 typecode-cache-Pattern-101 typecode-cache-Pattern-16 element-var-is-var substitution-249 substitution-284 substitution-287 substitution-kore-inj ) EFCDIBGHEFACJBGHDKALADMADNABCDOP $.
substitution-289 $p #Substitution \kore-symbol-dotk \kore-symbol-dotk kore-element-var-x0 kore-element-var-VE0 $= ( KSEQ-symbol-1-is-pattern typecode-cache-Pattern-16 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-290 $p #Substitution ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids kore-element-var-VE1 kore-element-var-x0 ) kore-element-var-VE2 ) ) \kore-symbol-dotk ) ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids kore-element-var-VE1 kore-element-var-VE0 ) kore-element-var-VE2 ) ) \kore-symbol-dotk ) kore-element-var-x0 kore-element-var-VE0 $= ( IMP-sort-26-is-pattern BASIC-K-sort-1-is-pattern typecode-cache-Pattern-97 IMP-symbol-220-is-pattern kore-inj-is-pattern KSEQ-symbol-1-is-pattern element-var-is-var typecode-cache-Pattern-16 typecode-cache-Pattern-105 typecode-cache-Pattern-101 substitution-288 substitution-289 KSEQ-symbol-0-substitution ) AKDLEFCDMBGHIJEFACNBGHIJABCDOADPQ $.
substitution-291 $p #Substitution ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids kore-element-var-VE1 kore-element-var-x0 ) kore-element-var-VE2 ) ) \kore-symbol-dotk ) ) ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids kore-element-var-VE1 kore-element-var-VE0 ) kore-element-var-VE2 ) ) \kore-symbol-dotk ) ) kore-element-var-x0 kore-element-var-VE0 $= ( IMP-sort-26-is-pattern BASIC-K-sort-1-is-pattern typecode-cache-Pattern-97 IMP-symbol-220-is-pattern kore-inj-is-pattern KSEQ-symbol-1-is-pattern KSEQ-symbol-0-is-pattern element-var-is-var typecode-cache-Pattern-16 typecode-cache-Pattern-105 typecode-cache-Pattern-101 substitution-290 IMP-symbol-119-substitution ) ALDMEFCDNBGHIJKEFACOBGHIJKABCDPQ $.
substitution-292 $p #Substitution kore-element-var-VE3 kore-element-var-VE3 kore-element-var-x0 kore-element-var-VE0 $= ( typecode-cache-Pattern-98 typecode-cache-Pattern-16 element-var-is-var substitution-disjoint ) BDCEAFG $.
substitution-293 $p #Substitution ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids kore-element-var-VE1 kore-element-var-x0 ) kore-element-var-VE2 ) ) \kore-symbol-dotk ) ) ( \kore-symbol-Lbl'-LT-'state'-GT-' ( \kore-symbol-Lbl'Unds'Map'Unds' kore-element-var-VE4 \kore-symbol-Lbl'Stop'Map ) ) ) kore-element-var-VE3 ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids kore-element-var-VE1 kore-element-var-VE0 ) kore-element-var-VE2 ) ) \kore-symbol-dotk ) ) ( \kore-symbol-Lbl'-LT-'state'-GT-' ( \kore-symbol-Lbl'Unds'Map'Unds' kore-element-var-VE4 \kore-symbol-Lbl'Stop'Map ) ) ) kore-element-var-VE3 ) kore-element-var-x0 kore-element-var-VE0 $= ( element-var-is-var typecode-cache-Pattern-16 typecode-cache-Pattern-99 IMP-symbol-112-is-pattern IMP-symbol-176-is-pattern IMP-symbol-120-is-pattern typecode-cache-Pattern-98 IMP-sort-26-is-pattern BASIC-K-sort-1-is-pattern typecode-cache-Pattern-97 IMP-symbol-220-is-pattern kore-inj-is-pattern KSEQ-symbol-1-is-pattern KSEQ-symbol-0-is-pattern IMP-symbol-119-is-pattern typecode-cache-Pattern-106 typecode-cache-Pattern-102 typecode-cache-Pattern-105 typecode-cache-Pattern-101 substitution-291 substitution-disjoint IMP-symbol-114-substitution substitution-292 IMP-symbol-117-substitution ) AGFHBCDFUBEMABCDUCEMAGFHNOCFUDBPQRSTUADIJKLNOACUEBPQRSTUADIJKLABCFUFDIJKLFHAGUGUHAEFUIUJ $.
substitution-294 $p #Substitution ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt kore-element-var-x0 kore-element-var-VE2 ) ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt kore-element-var-VE0 kore-element-var-VE2 ) kore-element-var-x0 kore-element-var-VE0 $= ( typecode-cache-Pattern-16 element-var-is-var typecode-cache-Pattern-97 typecode-cache-Pattern-74 substitution-var-same substitution-286 IMP-symbol-220-substitution ) AECDCDBFAGBFCDAEHABCIJ $.
substitution-295 $p #Substitution ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt kore-element-var-x0 kore-element-var-VE2 ) ) ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt kore-element-var-VE0 kore-element-var-VE2 ) ) kore-element-var-x0 kore-element-var-VE0 $= ( IMP-sort-26-is-pattern BASIC-K-sort-1-is-pattern typecode-cache-Pattern-107 typecode-cache-Pattern-103 typecode-cache-Pattern-16 element-var-is-var substitution-249 substitution-284 substitution-294 substitution-kore-inj ) DEBCFDEABGCHAIACJACKABCLM $.
substitution-296 $p #Substitution ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt kore-element-var-x0 kore-element-var-VE2 ) ) \kore-symbol-dotk ) ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt kore-element-var-VE0 kore-element-var-VE2 ) ) \kore-symbol-dotk ) kore-element-var-x0 kore-element-var-VE0 $= ( IMP-sort-26-is-pattern BASIC-K-sort-1-is-pattern kore-inj-is-pattern KSEQ-symbol-1-is-pattern element-var-is-var typecode-cache-Pattern-16 typecode-cache-Pattern-107 typecode-cache-Pattern-103 substitution-295 substitution-289 KSEQ-symbol-0-substitution ) AHCIDEBCJFGDEABKFGABCLACMN $.
substitution-297 $p #Substitution ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt kore-element-var-x0 kore-element-var-VE2 ) ) \kore-symbol-dotk ) ) ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt kore-element-var-VE0 kore-element-var-VE2 ) ) \kore-symbol-dotk ) ) kore-element-var-x0 kore-element-var-VE0 $= ( IMP-sort-26-is-pattern BASIC-K-sort-1-is-pattern kore-inj-is-pattern KSEQ-symbol-1-is-pattern KSEQ-symbol-0-is-pattern element-var-is-var typecode-cache-Pattern-16 typecode-cache-Pattern-107 typecode-cache-Pattern-103 substitution-296 IMP-symbol-119-substitution ) AICJDEBCKFGHDEABLFGHABCMN $.
sorting-cache-221 $p |- ( \imp ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortId ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortStmt ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortGeneratedCounterCell ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortMap ) \top ) ) ) ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortMap ) \top ) ) $= ( in-sort-is-pattern and-is-pattern typecode-cache-Pattern-72 IMP-sort-17-is-pattern typecode-cache-Pattern-97 IMP-sort-30-is-pattern typecode-cache-Pattern-100 top-is-pattern typecode-cache-Pattern-99 IMP-sort-14-is-pattern sorting-cache-217 top-intro rule-weakening rule-and-intro-alt2-sugar ) BGHEAIJECDKFFCMNELABCDOBGHEAIJECDKFFLPQR $.
sorting-cache-222 $p |- ( \imp ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortId ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortStmt ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortGeneratedCounterCell ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortMap ) \top ) ) ) ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortGeneratedCounterCell ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortMap ) \top ) ) ) $= ( in-sort-is-pattern and-is-pattern typecode-cache-Pattern-72 IMP-sort-17-is-pattern typecode-cache-Pattern-97 IMP-sort-30-is-pattern typecode-cache-Pattern-100 typecode-cache-Pattern-98 IMP-sort-10-is-pattern typecode-cache-Pattern-99 IMP-sort-14-is-pattern top-is-pattern sorting-cache-214 sorting-cache-221 rule-and-intro-alt2-sugar ) BGHEAIJECDKFFDLMECNOEPFABCDQABCDRS $.
sorting-rearrange-108 $p |- ( \imp ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortId ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortStmt ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortGeneratedCounterCell ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortMap ) \top ) ) ) ) ( \kore-valid \kore-sort-SortGeneratedTopCell ( \kore-rewrites \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids kore-element-var-VE1 \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) kore-element-var-VE2 ) ) \kore-symbol-dotk ) ) ( \kore-symbol-Lbl'-LT-'state'-GT-' ( \kore-symbol-Lbl'Unds'Map'Unds' kore-element-var-VE4 \kore-symbol-Lbl'Stop'Map ) ) ) kore-element-var-VE3 ) ) ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids kore-element-var-VE2 ) ) \kore-symbol-dotk ) ) ( \kore-symbol-Lbl'-LT-'state'-GT-' ( \kore-symbol-Lbl'Unds'Map'Unds' kore-element-var-VE4 ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem kore-element-var-VE1 ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortKItem ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) kore-element-var-VE3 ) ) ) ) ) $= ( IMP-sort-8-is-pattern BASIC-K-sort-1-is-pattern kore-inj-is-pattern kore-element-var-VE0-elementvariable IMP-sort-22-is-pattern in-sort-is-pattern typecode-cache-Pattern-72 IMP-sort-17-is-pattern kore-top-is-pattern typecode-cache-Pattern-98 and-is-pattern IMP-symbol-117-is-pattern typecode-cache-Pattern-99 IMP-symbol-176-is-pattern IMP-symbol-120-is-pattern IMP-sort-26-is-pattern KSEQ-symbol-1-is-pattern KSEQ-symbol-0-is-pattern IMP-symbol-119-is-pattern kore-element-var-x0-elementvariable typecode-cache-Pattern-97 kore-and-is-pattern IMP-symbol-111-is-pattern IMP-symbol-114-is-pattern string-literal-1-is-pattern kore-dv-is-pattern IMP-symbol-196-is-pattern IMP-sort-30-is-pattern element-var-is-var typecode-cache-Pattern-100 IMP-sort-0-is-pattern typecode-cache-Pattern-103 kore-rewrites-is-pattern typecode-cache-Pattern-16 top-is-pattern substitution-disjoint typecode-cache-Pattern-102 IMP-symbol-220-is-pattern kore-valid-is-pattern typecode-cache-Pattern-107 typecode-cache-Pattern-104 IMP-symbol-112-is-pattern typecode-cache-Pattern-106 rule-imp-transitivity rule-and-intro-alt2-sugar substitution-kore-and substitution-191 typecode-cache-Pattern-74 and-elim-left-sugar imp-reflexivity kore-element-var-Val-elementvariable IMP-symbol-114-substitution IMP-symbol-117-substitution substitution-kore-rewrites substitution-kore-valid substitution-imp and-elim-right-sugar sorting-cache-222 imp-is-pattern proof-rule-prop-1 IMP-symbol-111-sorting proof-rule-mp top-intro rule-weakening sorting-rearrange-106 sorting-rearrange-107 substitution-269 substitution-277 substitution-280 substitution-276 substitution-283 substitution-293 substitution-297 substitution-292 functional-substitution-alt ) BKLJAUEULJCDUNOOBKLJAUEULJCDUNOOUGUOJUSOOEEEEMTFABVEGUAUBUCCQVFRSUHDNPUFEEMTFUGAUEVBGUAUBUCCQLFBKGIFIUIUJGUKRSUHDNPUFUQVCBKLJAUEULJCDUNOOBKLJAUEULJCDUNOOUGUOJUSOBKLJAUEULJCDUNOOBKLJAUEULJCDUNOBKLJAUEULJCDUNOOBKLJBKLJBKLJAUEULJCDUNOVMBKLJVNVHBKLJAUEULJCDUNOOAUEULJCDUNBKLJAUEULJCDUNOOAUEULJCDUNOAUEULJBKLJAUEULJCDUNOWAAUEULJCDUNOAUEULJAUEULJAUEULJCDUNVMAUEULJVNVHVHABCDWBVIVIBKLJAUEULJCDUNOOUGUOJUSUGUOJBKLJAUEULJCDUNOOUGUOJWCUGUOJBKLJAUEULJCDUNOOWDWEWFBKLJAUEULJCDUNOOUSWGWHVIVIUGEEEEMHABCVADNPUFEEMTFHAUPGUAUBUCCQLFBKGIFIUIUJGUKRSUHDNPUFUQVCEEEEMTFABVEGUAUBUCCQVFRSUHDNPUFEEMTFUGAUEVBGUAUBUCCQLFBKGIFIUIUJGUKRSUHDNPUFUQVCEEEEMABCUDVGDNPUFEEMTFAUDVDGUAUBUCCQLFBKGIFIUIUJGUKRSUHDNPUFUQVCBKLJAUEULJCDUNOOHVLUOJUSOUGUOJUSOUDURUOJUSOVOHUDABCDVOWIHABCDWJUGUGUOJUSOEEEEMTFABVEGUAUBUCCQVFRSUHDNPUFEEMTFUGAUEVBGUAUBUCCQLFBKGIFIUIUJGUKRSUHDNPUFUQVCHVLUOJUSOEEEEMHABCVADNPUFEEMTFHAUPGUAUBUCCQLFBKGIFIUIUJGUKRSUHDNPUFUQVCHUMHWKEEEEMTFABVEGUAUBUCCQVFRSUHDNPUFEEMTFUGAUEVBGUAUBUCCQLFBKGIFIUIUJGUKRSUHDNPUFUQEEEEMHABCVADNPUFEEMTFHAUPGUAUBUCCQLFBKGIFIUIUJGUKRSUHDNPUFUQUGHUMEUGHUMUTEEEMTFABVEGUAUBUCCQVFRSUHDNPUFEEMTFUGAUEVBGUAUBUCCQLFBKGIFIUIUJGUKRSUHDNPUFEEEMHABCVADNPUFEEMTFHAUPGUAUBUCCQLFBKGIFIUIUJGUKRSUHDNPUFUGHUMEUGHUMUTEEMTFABVEGUAUBUCCQVFRSUHDNPEEMHABCVADNPUGHUMEUGHUMUTEMUGHUMUTHABCDWLVJEEMTFUGAUEVBGUAUBUCCQLFBKGIFIUIUJGUKRSUHDNPEEMTFHAUPGUAUBUCCQLFBKGIFIUIUJGUKRSUHDNPUGHUMEUGHUMUTEMUGHUMUTHUMUGTFUGAUEVBGUAUBUCCQLFBKGIFIUIUJGUKRSUHDNTFHAUPGUAUBUCCQLFBKGIFIUIUJGUKRSUHDNHUMUGTFUGAUEVBGUAUBUCCQLFBKGIFIUIUJGUKRSTFHAUPGUAUBUCCQLFBKGIFIUIUJGUKRSHAWMCQLFBKGIFIUIUJGUKRSUGHUMUTVPHDWNVQVJVRVSVTUDURUDURUOJUSOEEEEMABCUDVGDNPUFEEMTFAUDVDGUAUBUCCQLFBKGIFIUIUJGUKRSUHDNPUFUQVCHVLUOJUSOEEEEMHABCVADNPUFEEMTFHAUPGUAUBUCCQLFBKGIFIUIUJGUKRSUHDNPUFUQVCHUMHUDWOEEEEMABCUDVGDNPUFEEMTFAUDVDGUAUBUCCQLFBKGIFIUIUJGUKRSUHDNPUFUQEEEEMHABCVADNPUFEEMTFHAUPGUAUBUCCQLFBKGIFIUIUJGUKRSUHDNPUFUQUDURHUMHUDVKEEEMABCUDVGDNPUFEEMTFAUDVDGUAUBUCCQLFBKGIFIUIUJGUKRSUHDNPUFEEEMHABCVADNPUFEEMTFHAUPGUAUBUCCQLFBKGIFIUIUJGUKRSUHDNPUFUDURHUMHUDVKEEMABCUDVGDNPEEMHABCVADNPUDURHUMHUDVKEMUDURHUMUTHABCDUDWPVJEEMTFAUDVDGUAUBUCCQLFBKGIFIUIUJGUKRSUHDNPEEMTFHAUPGUAUBUCCQLFBKGIFIUIUJGUKRSUHDNPUDURHUMHUDVKEMUDURHUMUTHUMUDURTFAUDVDGUAUBUCCQLFBKGIFIUIUJGUKRSUHDNTFHAUPGUAUBUCCQLFBKGIFIUIUJGUKRSUHDNHUMUDURTFAUDVDGUAUBUCCQLFBKGIFIUIUJGUKRSTFHAUPGUAUBUCCQLFBKGIFIUIUJGUKRSHAUDWQCQLFBKGIFIUIUJGUKRSUDURHUMUTVPHDUDWRVQVJVRVSVTWSVH $.
sorting-rearrange-109 $p |- ( \imp ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortStmt ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortGeneratedCounterCell ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortMap ) \top ) ) ) ( \exists kore-element-var-x1 ( \eq kore-element-var-x1 ( \kore-dv \kore-sort-SortId "a" ) ) ) ) $= ( top-is-pattern IMP-sort-17-is-pattern typecode-cache-Pattern-97 IMP-sort-30-is-pattern in-sort-is-pattern typecode-cache-Pattern-100 and-is-pattern string-literal-11-is-pattern kore-dv-is-pattern typecode-cache-Pattern-19 eq-is-pattern exists-is-pattern top-intro rule-weakening sorting-cache-4 sorting-rearrange-16 kore-functional rule-imp-transitivity ) AGHIBCJKEDNFLMODPAGHIBCJKEQRFFLMEDSDTUAUB $.
sorting-cache-223 $p |- ( \imp ( \and ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortStmt ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortGeneratedCounterCell ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortMap ) \top ) ) ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortId ) \top ) ) ( \in-sort kore-element-var-VE3 \kore-sort-SortGeneratedCounterCell ) ) $= ( in-sort-is-pattern and-is-pattern typecode-cache-Pattern-100 typecode-cache-Pattern-97 IMP-sort-30-is-pattern typecode-cache-Pattern-72 IMP-sort-17-is-pattern top-is-pattern typecode-cache-Pattern-98 IMP-sort-10-is-pattern rule-imp-transitivity and-elim-left-sugar and-elim-right-sugar sorting-cache-213 ) AHIECDGFBJKELFFAHIECDGFDMNEAHIECDGFBJKELFPAHIECDGFCDGDMNEAHIECDGQCDROO $.
sorting-cache-224 $p |- ( \imp ( \and ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortStmt ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortGeneratedCounterCell ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortMap ) \top ) ) ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortId ) \top ) ) ( \in-sort kore-element-var-VE4 \kore-sort-SortMap ) ) $= ( in-sort-is-pattern and-is-pattern typecode-cache-Pattern-100 typecode-cache-Pattern-97 IMP-sort-30-is-pattern typecode-cache-Pattern-72 IMP-sort-17-is-pattern top-is-pattern typecode-cache-Pattern-99 IMP-sort-14-is-pattern rule-imp-transitivity and-elim-left-sugar and-elim-right-sugar sorting-cache-216 ) AHIECDGFBJKELFFAHIECDGFCMNEAHIECDGFBJKELFPAHIECDGFCDGCMNEAHIECDGQCDROO $.
sorting-cache-225 $p |- ( \imp ( \and ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortStmt ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortGeneratedCounterCell ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortMap ) \top ) ) ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortId ) \top ) ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortMap ) \top ) ) $= ( and-is-pattern in-sort-is-pattern top-is-pattern typecode-cache-Pattern-97 IMP-sort-30-is-pattern typecode-cache-Pattern-100 typecode-cache-Pattern-72 IMP-sort-17-is-pattern typecode-cache-Pattern-99 IMP-sort-14-is-pattern sorting-cache-224 top-intro rule-weakening rule-and-intro-alt2-sugar ) AHIFCDJEBKLFGEECMNFGABCDOAHIFCDJEBKLFGEEGPQR $.
sorting-cache-226 $p |- ( \imp ( \and ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortStmt ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortGeneratedCounterCell ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortMap ) \top ) ) ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortId ) \top ) ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortGeneratedCounterCell ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortMap ) \top ) ) ) $= ( in-sort-is-pattern and-is-pattern top-is-pattern typecode-cache-Pattern-97 IMP-sort-30-is-pattern typecode-cache-Pattern-100 typecode-cache-Pattern-72 IMP-sort-17-is-pattern typecode-cache-Pattern-98 IMP-sort-10-is-pattern typecode-cache-Pattern-99 IMP-sort-14-is-pattern sorting-cache-223 sorting-cache-225 rule-and-intro-alt2-sugar ) AHIECDJFBKLEGFFDMNECOPEGFABCDQABCDRS $.
sorting-rearrange-110 $p |- ( \imp ( \and ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortStmt ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortGeneratedCounterCell ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortMap ) \top ) ) ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortId ) \top ) ) ( \kore-valid \kore-sort-SortGeneratedTopCell ( \kore-rewrites \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids kore-element-var-VE1 \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) kore-element-var-VE2 ) ) \kore-symbol-dotk ) ) ( \kore-symbol-Lbl'-LT-'state'-GT-' ( \kore-symbol-Lbl'Unds'Map'Unds' kore-element-var-VE4 \kore-symbol-Lbl'Stop'Map ) ) ) kore-element-var-VE3 ) ) ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids kore-element-var-VE2 ) ) \kore-symbol-dotk ) ) ( \kore-symbol-Lbl'-LT-'state'-GT-' ( \kore-symbol-Lbl'Unds'Map'Unds' kore-element-var-VE4 ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem kore-element-var-VE1 ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortKItem ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) kore-element-var-VE3 ) ) ) ) ) $= ( in-sort-is-pattern and-is-pattern typecode-cache-Pattern-97 IMP-sort-30-is-pattern typecode-cache-Pattern-72 IMP-sort-17-is-pattern typecode-cache-Pattern-100 top-is-pattern IMP-sort-8-is-pattern rule-imp-transitivity BASIC-K-sort-1-is-pattern kore-inj-is-pattern and-elim-left-sugar kore-top-is-pattern IMP-sort-26-is-pattern KSEQ-symbol-1-is-pattern KSEQ-symbol-0-is-pattern IMP-symbol-119-is-pattern typecode-cache-Pattern-99 IMP-symbol-176-is-pattern IMP-symbol-120-is-pattern IMP-symbol-114-is-pattern typecode-cache-Pattern-98 IMP-symbol-117-is-pattern kore-and-is-pattern IMP-sort-22-is-pattern imp-reflexivity rule-and-intro-alt2-sugar typecode-cache-Pattern-104 IMP-symbol-112-is-pattern IMP-symbol-111-is-pattern IMP-symbol-220-is-pattern string-literal-1-is-pattern kore-dv-is-pattern IMP-symbol-196-is-pattern kore-rewrites-is-pattern kore-valid-is-pattern and-elim-right-sugar sorting-cache-226 sorting-rearrange-108 ) AGHECDKFBIJELFFBIJEAGHECDKFFMMMMRSOABUMPTUAUBCUCUNUDUEUFDUGUHUIMMRSOUOAGUPPTUAUBCUCJOBIPUJOUJUQURPUSUDUEUFDUGUHUIUTVAAGHECDKFBIJELFFBIJEAGHECDKFAGHECDKFBIJELFFBIJELFBIJEAGHECDKFBIJELFVBBIJELFBIJEBIJEBIJELQBIJEUKNNAGHECDKFBIJELFFAGHECDKAGHECDKFBIJELFFAGHECDKFAGHEAGHECDKFBIJELFQAGHECDKFAGHEAGHEAGHECDKQAGHEUKNNABCDVCULULABCDVDN $.
typecode-cache-Pattern-108 $p #Pattern ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) kore-element-var-VE2 ) ) \kore-symbol-dotk ) ) ( \kore-symbol-Lbl'-LT-'state'-GT-' ( \kore-symbol-Lbl'Unds'Map'Unds' kore-element-var-VE4 \kore-symbol-Lbl'Stop'Map ) ) ) $= ( IMP-sort-26-is-pattern BASIC-K-sort-1-is-pattern IMP-sort-17-is-pattern string-literal-11-is-pattern kore-dv-is-pattern IMP-symbol-111-is-pattern IMP-symbol-148-is-pattern typecode-cache-Pattern-97 IMP-symbol-220-is-pattern kore-inj-is-pattern KSEQ-symbol-1-is-pattern KSEQ-symbol-0-is-pattern IMP-symbol-119-is-pattern typecode-cache-Pattern-99 IMP-symbol-112-is-pattern IMP-symbol-176-is-pattern IMP-symbol-120-is-pattern IMP-symbol-114-is-pattern ) CDEFGHIAJKLMNOBPQRST $.
typecode-cache-Pattern-109 $p #Pattern ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids kore-element-var-x0 \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) kore-element-var-VE2 ) $= ( typecode-cache-Pattern-16 IMP-symbol-111-is-pattern IMP-symbol-148-is-pattern typecode-cache-Pattern-97 IMP-symbol-220-is-pattern ) BCDEAFG $.
substitution-298 $p #Substitution kore-element-var-VE2 kore-element-var-VE2 ( \kore-dv \kore-sort-SortId "a" ) kore-element-var-VE1 $= ( typecode-cache-Pattern-97 IMP-sort-17-is-pattern string-literal-11-is-pattern kore-dv-is-pattern element-var-is-var substitution-disjoint ) ACDEFBGH $.
substitution-299 $p #Substitution ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) kore-element-var-VE2 ) ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids kore-element-var-VE1 \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) kore-element-var-VE2 ) ( \kore-dv \kore-sort-SortId "a" ) kore-element-var-VE1 $= ( IMP-sort-17-is-pattern string-literal-11-is-pattern kore-dv-is-pattern IMP-symbol-111-is-pattern element-var-is-var IMP-symbol-148-is-pattern typecode-cache-Pattern-97 typecode-cache-Pattern-72 substitution-var-same substitution-disjoint IMP-symbol-148-substitution substitution-298 IMP-symbol-220-substitution ) BGCDECDEFHAIBJFHAIBGCDECDEFBJFCDEBGKFCDEBGLMABNO $.
substitution-300 $p #Substitution kore-element-var-VE3 kore-element-var-VE3 ( \kore-dv \kore-sort-SortId "a" ) kore-element-var-VE1 $= ( typecode-cache-Pattern-98 IMP-sort-17-is-pattern string-literal-11-is-pattern kore-dv-is-pattern element-var-is-var substitution-disjoint ) BCDEFAGH $.
substitution-301 $p #Substitution ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) kore-element-var-VE2 ) ) \kore-symbol-dotk ) ) ( \kore-symbol-Lbl'-LT-'state'-GT-' ( \kore-symbol-Lbl'Unds'Map'Unds' kore-element-var-VE4 \kore-symbol-Lbl'Stop'Map ) ) ) kore-element-var-VE3 ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids kore-element-var-VE1 \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) kore-element-var-VE2 ) ) \kore-symbol-dotk ) ) ( \kore-symbol-Lbl'-LT-'state'-GT-' ( \kore-symbol-Lbl'Unds'Map'Unds' kore-element-var-VE4 \kore-symbol-Lbl'Stop'Map ) ) ) kore-element-var-VE3 ) ( \kore-dv \kore-sort-SortId "a" ) kore-element-var-VE1 $= ( IMP-sort-17-is-pattern string-literal-11-is-pattern kore-dv-is-pattern IMP-sort-26-is-pattern BASIC-K-sort-1-is-pattern element-var-is-var KSEQ-symbol-1-is-pattern kore-inj-is-pattern typecode-cache-Pattern-104 KSEQ-symbol-0-is-pattern typecode-cache-Pattern-99 IMP-symbol-112-is-pattern IMP-symbol-176-is-pattern IMP-symbol-120-is-pattern IMP-symbol-111-is-pattern IMP-symbol-148-is-pattern typecode-cache-Pattern-97 IMP-symbol-220-is-pattern substitution-disjoint IMP-symbol-119-is-pattern typecode-cache-Pattern-98 typecode-cache-Pattern-108 IMP-symbol-114-is-pattern substitution-299 substitution-kore-inj KSEQ-symbol-0-substitution IMP-symbol-119-substitution IMP-symbol-114-substitution substitution-300 IMP-symbol-117-substitution ) BJEFGACUFDUEHIABMLKNUDCOPQRUGDUEBJEFGHIEFGSTAUAUBLKNUDCOPQRHIABMLKNUDCOPQRBJEFGHIEFGSTAUAUBLKNHIABMLKNBJEFGHIEFGSTAUAUBLKHIABMLKHIEFGSTAUAUBHIABMEFGBJHEFGBJUCIEFGBJUCABUHUIKEFGBJUCUJUKCOPQREFGBJUCULBDUMUN $.
substitution-302 $p #Substitution kore-element-var-VE4 kore-element-var-VE4 ( \kore-dv \kore-sort-SortId "a" ) kore-element-var-VE1 $= ( typecode-cache-Pattern-99 IMP-sort-17-is-pattern string-literal-11-is-pattern kore-dv-is-pattern element-var-is-var substitution-disjoint ) BCDEFAGH $.
substitution-303 $p #Substitution \kore-sort-SortId \kore-sort-SortId kore-element-var-x0 kore-element-var-VE1 $= ( IMP-sort-17-is-pattern typecode-cache-Pattern-16 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-304 $p #Substitution ( \in-sort kore-element-var-x0 \kore-sort-SortId ) ( \in-sort kore-element-var-VE1 \kore-sort-SortId ) kore-element-var-x0 kore-element-var-VE1 $= ( typecode-cache-Pattern-16 IMP-sort-17-is-pattern element-var-is-var typecode-cache-Pattern-72 substitution-var-same substitution-303 substitution-in-sort ) BCBCDAFDAEBCAEGABHI $.
substitution-305 $p #Substitution ( \and ( \in-sort kore-element-var-x0 \kore-sort-SortId ) \top ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortId ) \top ) kore-element-var-x0 kore-element-var-VE1 $= ( typecode-cache-Pattern-16 IMP-sort-17-is-pattern in-sort-is-pattern top-is-pattern typecode-cache-Pattern-72 element-var-is-var substitution-304 substitution-196 substitution-and ) BCBCDEFAGDEFAHABIABJK $.
substitution-306 $p #Substitution \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids kore-element-var-x0 kore-element-var-VE1 $= ( IMP-symbol-111-is-pattern typecode-cache-Pattern-16 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-307 $p #Substitution ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids kore-element-var-x0 \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids kore-element-var-VE1 \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) kore-element-var-x0 kore-element-var-VE1 $= ( typecode-cache-Pattern-16 element-var-is-var IMP-symbol-111-is-pattern typecode-cache-Pattern-72 substitution-var-same substitution-306 IMP-symbol-148-substitution ) ADBCBCEAFEBCADGABHI $.
substitution-308 $p #Substitution kore-element-var-VE2 kore-element-var-VE2 kore-element-var-x0 kore-element-var-VE1 $= ( typecode-cache-Pattern-97 typecode-cache-Pattern-16 element-var-is-var substitution-disjoint ) ADCEBFG $.
substitution-309 $p #Substitution ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids kore-element-var-x0 \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) kore-element-var-VE2 ) ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids kore-element-var-VE1 \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) kore-element-var-VE2 ) kore-element-var-x0 kore-element-var-VE1 $= ( typecode-cache-Pattern-16 IMP-symbol-111-is-pattern IMP-symbol-148-is-pattern typecode-cache-Pattern-97 element-var-is-var typecode-cache-Pattern-72 substitution-307 substitution-308 IMP-symbol-220-substitution ) BHCDCDEFAGBIEFAGBCJABCKL $.
substitution-310 $p #Substitution ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids kore-element-var-x0 \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) kore-element-var-VE2 ) ) ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids kore-element-var-VE1 \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) kore-element-var-VE2 ) ) kore-element-var-x0 kore-element-var-VE1 $= ( IMP-sort-26-is-pattern BASIC-K-sort-1-is-pattern typecode-cache-Pattern-109 typecode-cache-Pattern-104 typecode-cache-Pattern-16 element-var-is-var substitution-218 substitution-219 substitution-309 substitution-kore-inj ) DEACFDEABGCHBIBCJBCKABCLM $.
substitution-311 $p #Substitution ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids kore-element-var-x0 \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) kore-element-var-VE2 ) ) \kore-symbol-dotk ) ) ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids kore-element-var-VE1 \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) kore-element-var-VE2 ) ) \kore-symbol-dotk ) ) kore-element-var-x0 kore-element-var-VE1 $= ( IMP-sort-26-is-pattern BASIC-K-sort-1-is-pattern kore-inj-is-pattern KSEQ-symbol-1-is-pattern element-var-is-var typecode-cache-Pattern-16 typecode-cache-Pattern-109 KSEQ-symbol-0-is-pattern typecode-cache-Pattern-104 substitution-310 substitution-220 KSEQ-symbol-0-substitution IMP-symbol-119-substitution ) BHCIDEACJFGKDEABLFGKBHCIDEACJFGDEABLFGABCMBCNOP $.
substitution-312 $p #Substitution kore-element-var-VE3 kore-element-var-VE3 kore-element-var-x0 kore-element-var-VE1 $= ( typecode-cache-Pattern-98 typecode-cache-Pattern-16 element-var-is-var substitution-disjoint ) BDCEAFG $.
substitution-313 $p #Substitution ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids kore-element-var-x0 \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) kore-element-var-VE2 ) ) \kore-symbol-dotk ) ) ( \kore-symbol-Lbl'-LT-'state'-GT-' ( \kore-symbol-Lbl'Unds'Map'Unds' kore-element-var-VE4 \kore-symbol-Lbl'Stop'Map ) ) ) kore-element-var-VE3 ) ) ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids kore-element-var-VE1 \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) kore-element-var-VE2 ) ) \kore-symbol-dotk ) ) ( \kore-symbol-Lbl'-LT-'state'-GT-' ( \kore-symbol-Lbl'Unds'Map'Unds' kore-element-var-VE4 \kore-symbol-Lbl'Stop'Map ) ) ) kore-element-var-VE3 ) ) kore-element-var-x0 kore-element-var-VE1 $= ( typecode-cache-Pattern-99 IMP-symbol-112-is-pattern IMP-symbol-176-is-pattern IMP-symbol-120-is-pattern IMP-sort-26-is-pattern BASIC-K-sort-1-is-pattern kore-inj-is-pattern KSEQ-symbol-1-is-pattern KSEQ-symbol-0-is-pattern IMP-symbol-119-is-pattern IMP-sort-8-is-pattern typecode-cache-Pattern-16 element-var-is-var IMP-symbol-114-is-pattern typecode-cache-Pattern-98 kore-top-is-pattern typecode-cache-Pattern-109 typecode-cache-Pattern-104 IMP-symbol-117-is-pattern substitution-disjoint substitution-200 substitution-311 IMP-symbol-114-substitution substitution-312 IMP-symbol-117-substitution substitution-kore-and ) PPUAJKAEUBLMNOCFGHISDTUDPPUAJKABUCLMNOCFGHISDTUDEQBRBEUFPUAEQBRUEBREQJKAEUBLMNOCFGHISDTJKABUCLMNOCFGHISDTBREQJKAEUBLMNOCFGHIJKABUCLMNOCFGHIABEUGCFGHIEQBRUEUHBDEUIUJUK $.
substitution-314 $p #Substitution kore-element-var-VE4 kore-element-var-VE4 kore-element-var-x0 kore-element-var-VE1 $= ( typecode-cache-Pattern-99 typecode-cache-Pattern-16 element-var-is-var substitution-disjoint ) BDCEAFG $.
substitution-315 $p #Substitution ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem kore-element-var-x0 ) ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem kore-element-var-VE1 ) kore-element-var-x0 kore-element-var-VE1 $= ( typecode-cache-Pattern-16 IMP-sort-17-is-pattern BASIC-K-sort-1-is-pattern element-var-is-var typecode-cache-Pattern-72 substitution-303 substitution-219 substitution-var-same substitution-kore-inj ) DEBCDEAGBCAFABHABIBCAFJK $.
sorting-cache-227 $p |- ( \imp ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortStmt ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortGeneratedCounterCell ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortMap ) \top ) ) ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortMap ) \top ) ) $= ( in-sort-is-pattern typecode-cache-Pattern-100 typecode-cache-Pattern-97 IMP-sort-30-is-pattern and-is-pattern typecode-cache-Pattern-99 IMP-sort-14-is-pattern top-is-pattern and-elim-right-sugar sorting-cache-216 rule-imp-transitivity top-intro rule-weakening rule-and-intro-alt2-sugar ) AFGDBCEHBIJDKAFGDBCEHBCEBIJDAFGDBCELBCMNAFGDBCEHKOPQ $.
sorting-cache-228 $p |- ( \imp ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortStmt ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortGeneratedCounterCell ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortMap ) \top ) ) ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortGeneratedCounterCell ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortMap ) \top ) ) ) $= ( in-sort-is-pattern typecode-cache-Pattern-100 typecode-cache-Pattern-97 IMP-sort-30-is-pattern and-is-pattern typecode-cache-Pattern-98 IMP-sort-10-is-pattern typecode-cache-Pattern-99 IMP-sort-14-is-pattern top-is-pattern and-elim-right-sugar sorting-cache-213 rule-imp-transitivity sorting-cache-227 rule-and-intro-alt2-sugar ) AFGDBCEHCIJDBKLDMHAFGDBCEHBCECIJDAFGDBCENBCOPABCQR $.
sorting-rearrange-111 $p |- ( \imp ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortStmt ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortGeneratedCounterCell ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortMap ) \top ) ) ) ( \kore-valid \kore-sort-SortGeneratedTopCell ( \kore-rewrites \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) kore-element-var-VE2 ) ) \kore-symbol-dotk ) ) ( \kore-symbol-Lbl'-LT-'state'-GT-' ( \kore-symbol-Lbl'Unds'Map'Unds' kore-element-var-VE4 \kore-symbol-Lbl'Stop'Map ) ) ) kore-element-var-VE3 ) ) ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids kore-element-var-VE2 ) ) \kore-symbol-dotk ) ) ( \kore-symbol-Lbl'-LT-'state'-GT-' ( \kore-symbol-Lbl'Unds'Map'Unds' kore-element-var-VE4 ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem ( \kore-dv \kore-sort-SortId "a" ) ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortKItem ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) kore-element-var-VE3 ) ) ) ) ) $= ( BASIC-K-sort-1-is-pattern kore-inj-is-pattern IMP-sort-17-is-pattern IMP-sort-8-is-pattern kore-dv-is-pattern kore-element-var-VE1-elementvariable IMP-sort-22-is-pattern string-literal-11-is-pattern typecode-cache-Pattern-99 typecode-cache-Pattern-97 IMP-symbol-176-is-pattern typecode-cache-Pattern-98 IMP-sort-26-is-pattern KSEQ-symbol-1-is-pattern KSEQ-symbol-0-is-pattern IMP-symbol-119-is-pattern string-literal-1-is-pattern kore-top-is-pattern IMP-symbol-120-is-pattern element-var-is-var IMP-symbol-117-is-pattern kore-element-var-x0-elementvariable IMP-symbol-196-is-pattern IMP-symbol-114-is-pattern kore-and-is-pattern in-sort-is-pattern IMP-symbol-111-is-pattern IMP-symbol-220-is-pattern typecode-cache-Pattern-72 typecode-cache-Pattern-16 and-is-pattern IMP-sort-30-is-pattern substitution-disjoint top-is-pattern typecode-cache-Pattern-100 kore-rewrites-is-pattern IMP-symbol-112-is-pattern kore-valid-is-pattern typecode-cache-Pattern-104 typecode-cache-Pattern-108 typecode-cache-Pattern-109 rule-and-intro-alt2-sugar substitution-kore-and substitution-200 rule-imp-transitivity kore-element-var-x1-elementvariable substitution-var-same IMP-symbol-196-substitution IMP-symbol-176-substitution IMP-symbol-120-substitution IMP-symbol-114-substitution IMP-symbol-117-substitution substitution-kore-rewrites substitution-kore-valid substitution-imp and-elim-left-sugar imp-reflexivity sorting-cache-228 imp-is-pattern proof-rule-prop-1 kore-dv-sorting proof-rule-mp top-intro rule-weakening sorting-rearrange-109 sorting-rearrange-110 substitution-in-sort substitution-and substitution-301 substitution-302 substitution-kore-inj substitution-300 substitution-305 substitution-313 substitution-314 substitution-315 substitution-312 functional-substitution-alt ) AMUOUIBCURUNAMUOUIBCURUNFKHFUIUQUNUNGGGGUAABVCCOUDUHGGUAPDUJAMUKEQRSBLFDFKHEJDJTHEUFNUBUGCOUDUHUSVAAMUOUIBCURUNAMUOUIBCURUNFKHFUIUQUNAMUOUIBCURUNAMUOUIBCURAMUOUIBCURUNAMUOUIAMUOUIAMUOUIBCURVSAMUOUIVTVHABCWAVEAMUOUIBCURUNFKHFUIUQFKHFUIAMUOUIBCURUNFKHFUIWBFKHFUIAMUOUIBCURUNWCFKWDWEAMUOUIBCURUNUQWFWGVEVEFKHGGGGUAPDAIVBEQRSBLUTNUBUGCOUDUHGGUAPDUJAMUKEQRSBLFDIULEJDJTHEUFNUBUGCOUDUHUSVAGGGGUAABVCCOUDUHGGUAPDUJAMUKEQRSBLFDFKHEJDJTHEUFNUBUGCOUDUHUSVAGGGGUAPDAUEVDEQRSBLUTNUBUGCOUDUHGGUAPDUJAMUKEQRSBLFDUEUMEJDJTHEUFNUBUGCOUDUHUSVAAMUOUIBCURUNIULFUIUQUNFKHFUIUQUNUEUMFUIUQUNVIIUEABCVIWHAIBCWIFKHFKHFUIUQUNGGGGUAABVCCOUDUHGGUAPDUJAMUKEQRSBLFDFKHEJDJTHEUFNUBUGCOUDUHUSVAIULFUIUQUNGGGGUAPDAIVBEQRSBLUTNUBUGCOUDUHGGUAPDUJAMUKEQRSBLFDIULEJDJTHEUFNUBUGCOUDUHUSVAIUCFKHFKHFUIUQIULFUIUQIUCFKHFKHFIULFIUCFKHIUCVJFFKHIUCUPWJUQFKHIUCUPWKGGGGUAABVCCOUDUHGGUAPDUJAMUKEQRSBLFDFKHEJDJTHEUFNUBUGCOUDUHUSGGGGUAPDAIVBEQRSBLUTNUBUGCOUDUHGGUAPDUJAMUKEQRSBLFDIULEJDJTHEUFNUBUGCOUDUHUSFKHIUCGFKHIUCUPGGGUAABVCCOUDUHGGUAPDUJAMUKEQRSBLFDFKHEJDJTHEUFNUBUGCOUDUHGGGUAPDAIVBEQRSBLUTNUBUGCOUDUHGGUAPDUJAMUKEQRSBLFDIULEJDJTHEUFNUBUGCOUDUHFKHIUCGFKHIUCUPGGUAABVCCOUDGGUAPDAIVBEQRSBLUTNUBUGCOUDFKHIUCGFKHIUCUPGUAFKHIUCUPAIBCWLVFGGUAPDUJAMUKEQRSBLFDFKHEJDJTHEUFNUBUGCOUDGGUAPDUJAMUKEQRSBLFDIULEJDJTHEUFNUBUGCOUDFKHIUCGFKHIUCUPGUAFKHIUCUPIUCFKHPDUJAMUKEQRSBLFDFKHEJDJTHEUFNUBUGCOPDUJAMUKEQRSBLFDIULEJDJTHEUFNUBUGCOIUCFKHPDUJAMUKEQRSBLFDFKHEJDJTHEUFNUBPDUJAMUKEQRSBLFDIULEJDJTHEUFNUBPDUJAMUKEQRSFKHIUCUPIUCFKHBLFDFKHEJDJTHEUFNBLFDIULEJDJTHEUFNIUCFKHBLFDFKHEJDJTHEUFBLFDIULEJDJTHEUFIBWMIUCFKHFDFKHEJDJTHEFDIULEJDJTHEFDFKHFDIULFKHIUCFFKHIUCUPDFKHIUCUPFKHIUCVJWNJDJTHEFKHIUCUPVKVLVMVNICWOVOVFVPVQVRUEUMUEUMFUIUQUNGGGGUAPDAUEVDEQRSBLUTNUBUGCOUDUHGGUAPDUJAMUKEQRSBLFDUEUMEJDJTHEUFNUBUGCOUDUHUSVAIULFUIUQUNGGGGUAPDAIVBEQRSBLUTNUBUGCOUDUHGGUAPDUJAMUKEQRSBLFDIULEJDJTHEUFNUBUGCOUDUHUSVAIUCIUEWPGGGGUAPDAUEVDEQRSBLUTNUBUGCOUDUHGGUAPDUJAMUKEQRSBLFDUEUMEJDJTHEUFNUBUGCOUDUHUSGGGGUAPDAIVBEQRSBLUTNUBUGCOUDUHGGUAPDUJAMUKEQRSBLFDIULEJDJTHEUFNUBUGCOUDUHUSUEUMIUCIUEVGGGGUAPDAUEVDEQRSBLUTNUBUGCOUDUHGGUAPDUJAMUKEQRSBLFDUEUMEJDJTHEUFNUBUGCOUDUHGGGUAPDAIVBEQRSBLUTNUBUGCOUDUHGGUAPDUJAMUKEQRSBLFDIULEJDJTHEUFNUBUGCOUDUHUEUMIUCIUEVGAIBCUEWQGGUAPDUJAMUKEQRSBLFDUEUMEJDJTHEUFNUBUGCOUDGGUAPDUJAMUKEQRSBLFDIULEJDJTHEUFNUBUGCOUDUEUMIUCIUEVGGUAUEUMIUCUPIUCUEUMPDUJAMUKEQRSBLFDUEUMEJDJTHEUFNUBUGCOPDUJAMUKEQRSBLFDIULEJDJTHEUFNUBUGCOIUCUEUMPDUJAMUKEQRSBLFDUEUMEJDJTHEUFNUBPDUJAMUKEQRSBLFDIULEJDJTHEUFNUBPDUJAMUKEQRSUEUMIUCUPIUCUEUMBLFDUEUMEJDJTHEUFNBLFDIULEJDJTHEUFNIUCUEUMBLFDUEUMEJDJTHEUFBLFDIULEJDJTHEUFIBUEWRIUCUEUMFDUEUMEJDJTHEFDIULEJDJTHEIUEWSJDJTHEUEUMIUCUPVKVLVMVNICUEWTVOVFVPVQVRXAVH $.
sorting-rearrange-112 $p |- ( \imp ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortGeneratedCounterCell ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortMap ) \top ) ) ( \exists kore-element-var-Val ( \eq kore-element-var-Val ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) ) $= ( kore-dv-is-pattern IMP-sort-22-is-pattern top-is-pattern typecode-cache-Pattern-100 IMP-sort-17-is-pattern string-literal-11-is-pattern IMP-sort-13-is-pattern string-literal-10-is-pattern kore-inj-is-pattern IMP-symbol-169-is-pattern typecode-cache-Pattern-3 eq-is-pattern exists-is-pattern top-intro rule-weakening IMP-sort-30-is-pattern sorting-cache-9 sorting-rearrange-43 kore-functional rule-imp-transitivity ) ABGFCNHIDEJEKDLMOCPABGFQRSHIDEJEKDLMFCTCUAUBUC $.
sorting-cache-229 $p |- ( \imp ( \and ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortGeneratedCounterCell ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortMap ) \top ) ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortStmt ) \top ) ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortGeneratedCounterCell ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortMap ) \top ) ) ) $= ( and-is-pattern in-sort-is-pattern top-is-pattern typecode-cache-Pattern-100 typecode-cache-Pattern-97 IMP-sort-30-is-pattern typecode-cache-Pattern-99 IMP-sort-14-is-pattern typecode-cache-Pattern-98 IMP-sort-10-is-pattern and-elim-left-sugar rule-imp-transitivity rule-and-intro-alt2-sugar sorting-cache-213 sorting-cache-216 top-intro rule-weakening ) BCGAHIEFDDCLMEBJKEFDBCGAHIEFDDBCGCLMEBCGAHIEFDNBCQOBCGAHIEFDDBJKEFBCGAHIEFDDBCGBJKEBCGAHIEFDNBCROBCGAHIEFDDFSTPP $.
typecode-cache-Pattern-110 $p #Pattern ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) kore-element-var-x0 ) ) \kore-symbol-dotk ) ) ( \kore-symbol-Lbl'-LT-'state'-GT-' ( \kore-symbol-Lbl'Unds'Map'Unds' kore-element-var-VE4 \kore-symbol-Lbl'Stop'Map ) ) ) $= ( IMP-sort-26-is-pattern BASIC-K-sort-1-is-pattern IMP-sort-17-is-pattern string-literal-11-is-pattern kore-dv-is-pattern IMP-symbol-111-is-pattern IMP-symbol-148-is-pattern typecode-cache-Pattern-16 IMP-symbol-220-is-pattern kore-inj-is-pattern KSEQ-symbol-1-is-pattern KSEQ-symbol-0-is-pattern IMP-symbol-119-is-pattern typecode-cache-Pattern-99 IMP-symbol-112-is-pattern IMP-symbol-176-is-pattern IMP-symbol-120-is-pattern IMP-symbol-114-is-pattern ) CDEFGHIBJKLMNOAPQRST $.
substitution-316 $p #Substitution \kore-sort-SortStmt \kore-sort-SortStmt kore-element-var-x0 kore-element-var-VE2 $= ( IMP-sort-30-is-pattern typecode-cache-Pattern-16 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-317 $p #Substitution ( \in-sort kore-element-var-x0 \kore-sort-SortStmt ) ( \in-sort kore-element-var-VE2 \kore-sort-SortStmt ) kore-element-var-x0 kore-element-var-VE2 $= ( typecode-cache-Pattern-16 IMP-sort-30-is-pattern element-var-is-var typecode-cache-Pattern-97 substitution-var-same substitution-316 substitution-in-sort ) BCBCDAFDAEBCAEGABHI $.
substitution-318 $p #Substitution \top \top kore-element-var-x0 kore-element-var-VE2 $= ( top-is-pattern typecode-cache-Pattern-16 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-319 $p #Substitution ( \and ( \in-sort kore-element-var-x0 \kore-sort-SortStmt ) \top ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortStmt ) \top ) kore-element-var-x0 kore-element-var-VE2 $= ( typecode-cache-Pattern-16 IMP-sort-30-is-pattern in-sort-is-pattern top-is-pattern typecode-cache-Pattern-97 element-var-is-var substitution-317 substitution-318 substitution-and ) BCBCDEFAGDEFAHABIABJK $.
substitution-320 $p #Substitution \kore-sort-SortGeneratedTopCell \kore-sort-SortGeneratedTopCell kore-element-var-x0 kore-element-var-VE2 $= ( IMP-sort-8-is-pattern typecode-cache-Pattern-16 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-321 $p #Substitution \kore-sort-SortPgm \kore-sort-SortPgm kore-element-var-x0 kore-element-var-VE2 $= ( IMP-sort-26-is-pattern typecode-cache-Pattern-16 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-322 $p #Substitution \kore-sort-SortKItem \kore-sort-SortKItem kore-element-var-x0 kore-element-var-VE2 $= ( BASIC-K-sort-1-is-pattern typecode-cache-Pattern-16 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-323 $p #Substitution ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) kore-element-var-x0 ) ) ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) kore-element-var-VE2 ) ) kore-element-var-x0 kore-element-var-VE2 $= ( typecode-cache-Pattern-16 IMP-sort-17-is-pattern string-literal-11-is-pattern kore-dv-is-pattern IMP-symbol-111-is-pattern IMP-symbol-148-is-pattern element-var-is-var IMP-sort-26-is-pattern BASIC-K-sort-1-is-pattern IMP-symbol-220-is-pattern typecode-cache-Pattern-97 substitution-321 substitution-322 substitution-disjoint substitution-var-same IMP-symbol-220-substitution substitution-kore-inj ) JKDEFGHBCLJKDEFGHAMLBCAIABNABOAIBCDEFGHBCDEFGHAMDEFGHBCAIPBCAIQRS $.
substitution-324 $p #Substitution \kore-symbol-dotk \kore-symbol-dotk kore-element-var-x0 kore-element-var-VE2 $= ( KSEQ-symbol-1-is-pattern typecode-cache-Pattern-16 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-325 $p #Substitution kore-element-var-VE3 kore-element-var-VE3 kore-element-var-x0 kore-element-var-VE2 $= ( typecode-cache-Pattern-98 typecode-cache-Pattern-16 element-var-is-var substitution-disjoint ) BDCEAFG $.
substitution-326 $p #Substitution ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) kore-element-var-x0 ) ) \kore-symbol-dotk ) ) ( \kore-symbol-Lbl'-LT-'state'-GT-' ( \kore-symbol-Lbl'Unds'Map'Unds' kore-element-var-VE4 \kore-symbol-Lbl'Stop'Map ) ) ) kore-element-var-VE3 ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) kore-element-var-VE2 ) ) \kore-symbol-dotk ) ) ( \kore-symbol-Lbl'-LT-'state'-GT-' ( \kore-symbol-Lbl'Unds'Map'Unds' kore-element-var-VE4 \kore-symbol-Lbl'Stop'Map ) ) ) kore-element-var-VE3 ) kore-element-var-x0 kore-element-var-VE2 $= ( typecode-cache-Pattern-16 IMP-sort-26-is-pattern BASIC-K-sort-1-is-pattern IMP-sort-17-is-pattern string-literal-11-is-pattern kore-dv-is-pattern IMP-symbol-111-is-pattern IMP-symbol-148-is-pattern IMP-symbol-220-is-pattern kore-inj-is-pattern KSEQ-symbol-1-is-pattern element-var-is-var KSEQ-symbol-0-is-pattern typecode-cache-Pattern-99 IMP-symbol-112-is-pattern IMP-symbol-176-is-pattern IMP-symbol-120-is-pattern typecode-cache-Pattern-97 typecode-cache-Pattern-98 IMP-symbol-119-is-pattern typecode-cache-Pattern-110 typecode-cache-Pattern-108 substitution-323 substitution-324 KSEQ-symbol-0-substitution IMP-symbol-119-substitution substitution-disjoint IMP-symbol-114-substitution substitution-325 IMP-symbol-117-substitution ) APDEBDUECUCABUFCUCAPDEFGHIJKLDEMNOQUDBRSTUAFGHIJKLAUBMNOQUDBRSTUAAPDEFGHIJKLDEMNOQFGHIJKLAUBMNOQAPDEFGHIJKLDEMNOFGHIJKLAUBMNOADUGADUHUIUJBRSTUADEAPUKULACDUMUN $.
substitution-327 $p #Substitution \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids kore-element-var-x0 kore-element-var-VE2 $= ( IMP-symbol-111-is-pattern typecode-cache-Pattern-16 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-328 $p #Substitution ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids kore-element-var-x0 ) ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids kore-element-var-VE2 ) kore-element-var-x0 kore-element-var-VE2 $= ( typecode-cache-Pattern-16 element-var-is-var IMP-symbol-111-is-pattern typecode-cache-Pattern-97 substitution-327 substitution-var-same IMP-symbol-220-substitution ) ADBCEBCEAFABGBCADHI $.
substitution-329 $p #Substitution ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids kore-element-var-x0 ) ) ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids kore-element-var-VE2 ) ) kore-element-var-x0 kore-element-var-VE2 $= ( IMP-sort-26-is-pattern BASIC-K-sort-1-is-pattern IMP-symbol-111-is-pattern typecode-cache-Pattern-16 IMP-symbol-220-is-pattern typecode-cache-Pattern-97 element-var-is-var substitution-321 substitution-322 substitution-328 substitution-kore-inj ) CDEBFGCDEAHGBFAIABJABKABLM $.
substitution-330 $p #Substitution ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids kore-element-var-x0 ) ) \kore-symbol-dotk ) ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids kore-element-var-VE2 ) ) \kore-symbol-dotk ) kore-element-var-x0 kore-element-var-VE2 $= ( typecode-cache-Pattern-16 IMP-sort-26-is-pattern BASIC-K-sort-1-is-pattern IMP-symbol-111-is-pattern IMP-symbol-220-is-pattern kore-inj-is-pattern KSEQ-symbol-1-is-pattern element-var-is-var typecode-cache-Pattern-97 substitution-329 substitution-324 KSEQ-symbol-0-substitution ) AJBCDEFBCGHIDEFAKGHIABLABMN $.
sorting-cache-230 $p |- ( \imp ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortGeneratedCounterCell ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortMap ) \top ) ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortGeneratedCounterCell ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortMap ) \top ) ) ) $= ( typecode-cache-Pattern-100 in-sort-is-pattern top-is-pattern typecode-cache-Pattern-99 IMP-sort-14-is-pattern rule-and-intro-alt2-sugar typecode-cache-Pattern-98 IMP-sort-10-is-pattern and-is-pattern sorting-cache-213 sorting-cache-216 top-intro rule-weakening ) ABCBIJDAFGDEKABLABCAFGDEABMABCENOHH $.
sorting-cache-231 $p |- ( \imp ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortGeneratedCounterCell ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortMap ) \top ) ) ( \and ( \and ( \kore-is-sort \kore-sort-SortInt ) ( \kore-is-sort \kore-sort-SortAExp ) ) ( \in-sort ( \kore-dv \kore-sort-SortInt "10" ) \kore-sort-SortInt ) ) ) $= ( IMP-sort-22-is-pattern kore-is-sort-is-pattern typecode-cache-Pattern-100 IMP-sort-13-is-pattern string-literal-10-is-pattern kore-dv-is-pattern in-sort-is-pattern imp-is-pattern proof-rule-prop-1 proof-rule-mp rule-and-intro-alt2-sugar and-is-pattern IMP-sort-22-sort IMP-sort-13-sort kore-dv-sorting ) ABECDFDNCGHCIABECDFDCDABECDJCDABEKOLFDABEFDJFDABEKPLMCGHCIABECGHCIJCGHCIABEKCGQLM $.
sorting-cache-232 $p |- ( \imp ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortGeneratedCounterCell ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortMap ) \top ) ) ( \and ( \in-sort ( \kore-dv \kore-sort-SortId "a" ) \kore-sort-SortId ) ( \in-sort ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) \kore-sort-SortAExp ) ) ) $= ( IMP-sort-17-is-pattern IMP-sort-22-is-pattern kore-dv-is-pattern in-sort-is-pattern IMP-sort-13-is-pattern string-literal-11-is-pattern typecode-cache-Pattern-100 string-literal-10-is-pattern kore-inj-is-pattern kore-is-sort-is-pattern and-is-pattern imp-is-pattern proof-rule-prop-1 kore-dv-sorting proof-rule-mp sorting-cache-231 INJ-symbol-0-sorting rule-imp-transitivity rule-and-intro-alt2-sugar ) ABICHECFDGDJEKGFCHECFABICHECFNCHECFABIOCHPQABIDLGLMDJEDFMDGDJEKGFABRDGDJESTUA $.
sorting-cache-233 $p |- ( \imp ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortGeneratedCounterCell ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortMap ) \top ) ) ( \and ( \in-sort ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) \kore-sort-SortStmt ) \top ) ) $= ( kore-dv-is-pattern IMP-sort-22-is-pattern IMP-sort-17-is-pattern IMP-sort-13-is-pattern string-literal-11-is-pattern string-literal-10-is-pattern kore-inj-is-pattern in-sort-is-pattern typecode-cache-Pattern-100 IMP-symbol-169-is-pattern IMP-sort-30-is-pattern top-is-pattern and-is-pattern sorting-cache-232 IMP-symbol-169-sorting rule-imp-transitivity top-intro rule-weakening rule-and-intro-alt2-sugar ) ABKEGCDFDHCILMJNABKEGCEJDFDHCIFJOEGCDFDHCILMJABPEGCDFDHCIQRABKNSTUA $.
sorting-rearrange-113 $p |- ( \imp ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortGeneratedCounterCell ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortMap ) \top ) ) ( \kore-valid \kore-sort-SortGeneratedTopCell ( \kore-rewrites \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) \kore-symbol-dotk ) ) ( \kore-symbol-Lbl'-LT-'state'-GT-' ( \kore-symbol-Lbl'Unds'Map'Unds' kore-element-var-VE4 \kore-symbol-Lbl'Stop'Map ) ) ) kore-element-var-VE3 ) ) ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) \kore-symbol-dotk ) ) ( \kore-symbol-Lbl'-LT-'state'-GT-' ( \kore-symbol-Lbl'Unds'Map'Unds' kore-element-var-VE4 ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem ( \kore-dv \kore-sort-SortId "a" ) ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortKItem ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) kore-element-var-VE3 ) ) ) ) ) $= ( kore-dv-is-pattern IMP-sort-22-is-pattern kore-inj-is-pattern IMP-sort-17-is-pattern string-literal-11-is-pattern IMP-sort-8-is-pattern kore-element-var-VE2-elementvariable BASIC-K-sort-1-is-pattern IMP-sort-13-is-pattern string-literal-10-is-pattern IMP-symbol-169-is-pattern IMP-symbol-111-is-pattern IMP-sort-26-is-pattern element-var-is-var IMP-symbol-220-is-pattern KSEQ-symbol-1-is-pattern typecode-cache-Pattern-98 kore-top-is-pattern KSEQ-symbol-0-is-pattern IMP-symbol-117-is-pattern typecode-cache-Pattern-97 typecode-cache-Pattern-99 IMP-symbol-176-is-pattern IMP-symbol-120-is-pattern IMP-symbol-119-is-pattern kore-element-var-x0-elementvariable kore-and-is-pattern IMP-symbol-114-is-pattern string-literal-1-is-pattern IMP-symbol-196-is-pattern IMP-sort-30-is-pattern in-sort-is-pattern substitution-disjoint typecode-cache-Pattern-16 and-is-pattern top-is-pattern IMP-symbol-148-is-pattern kore-rewrites-is-pattern typecode-cache-Pattern-100 typecode-cache-Pattern-108 IMP-symbol-112-is-pattern kore-valid-is-pattern typecode-cache-Pattern-110 rule-imp-transitivity substitution-kore-and substitution-320 substitution-var-same IMP-symbol-119-substitution IMP-symbol-114-substitution IMP-symbol-117-substitution rule-and-intro-alt2-sugar kore-element-var-Val-elementvariable IMP-symbol-220-substitution substitution-kore-inj KSEQ-symbol-0-substitution substitution-kore-rewrites substitution-kore-valid substitution-imp sorting-cache-230 sorting-cache-233 sorting-rearrange-112 and-elim-right-sugar and-elim-left-sugar imp-reflexivity sorting-cache-229 sorting-rearrange-111 substitution-in-sort substitution-and substitution-319 substitution-326 substitution-330 substitution-325 functional-substitution-alt ) ABVAABVAFGCDKDLCEMUMUNURUQUQHHHHTOJFGCNUSFGCDKDLCEMQERUAUGAUDVCUEUFUJBSUBUIHHTOJNFGCDKDLCEMQERUAUGAUDFJFGCEDJDUKCEULUEUFUJBSUBUIUTVDABVAABVAFGCDKDLCEMUMUNURUQABWAABWBVMFGCDKDLCEMHHHHTIAVBBSUBUIHHTOJNIUCQERUAUGAUDFJFGCEDJDUKCEULUEUFUJBSUBUIUTVDHHHHTOJFGCNUSFGCDKDLCEMQERUAUGAUDVCUEUFUJBSUBUIHHTOJNFGCDKDLCEMQERUAUGAUDFJFGCEDJDUKCEULUEUFUJBSUBUIUTVDHHHHTAUHVEBSUBUIHHTOJNUHUPQERUAUGAUDFJFGCEDJDUKCEULUEUFUJBSUBUIUTVDABVAIUCUMUNURUQFGCDKDLCEMUMUNURUQUHUPUMUNURUQVNIUHABVNWCABVAIUCUMUNURUQUQIUCUMUNABVAUQHHHHTIAVBBSUBUIHHTOJNIUCQERUAUGAUDFJFGCEDJDUKCEULUEUFUJBSUBUIUTVDABVAIUCUMUNURUQUQIUCUMUNABVAABVAIUCUMUNURUQUQIUCUMUNURUQIUCUMUNABVAIUCUMUNURUQWDIUCUMUNURUQIUCUMUNIUCUMUNIUCUMUNURWEIUCUMUNWFVFVFIABWGVMIABWHVFFGCDKDLCEMFGCDKDLCEMUMUNURUQHHHHTOJFGCNUSFGCDKDLCEMQERUAUGAUDVCUEUFUJBSUBUIHHTOJNFGCDKDLCEMQERUAUGAUDFJFGCEDJDUKCEULUEUFUJBSUBUIUTVDIUCUMUNURUQHHHHTIAVBBSUBUIHHTOJNIUCQERUAUGAUDFJFGCEDJDUKCEULUEUFUJBSUBUIUTVDIPFGCDKDLCEMFGCDKDLCEMUMUNURIUCUMUNURIPFGCDKDLCEMFGCDKDLCEMUMIUCUMIPFGCDKDLCEMIPVIUMFGCDKDLCEMIPUOWIURFGCDKDLCEMIPUOWJHHHHTOJFGCNUSFGCDKDLCEMQERUAUGAUDVCUEUFUJBSUBUIHHTOJNFGCDKDLCEMQERUAUGAUDFJFGCEDJDUKCEULUEUFUJBSUBUIUTHHHHTIAVBBSUBUIHHTOJNIUCQERUAUGAUDFJFGCEDJDUKCEULUEUFUJBSUBUIUTFGCDKDLCEMIPHFGCDKDLCEMIPUOHHHTOJFGCNUSFGCDKDLCEMQERUAUGAUDVCUEUFUJBSUBUIHHTOJNFGCDKDLCEMQERUAUGAUDFJFGCEDJDUKCEULUEUFUJBSUBUIHHHTIAVBBSUBUIHHTOJNIUCQERUAUGAUDFJFGCEDJDUKCEULUEUFUJBSUBUIFGCDKDLCEMIPHFGCDKDLCEMIPUOHHTOJFGCNUSFGCDKDLCEMQERUAUGAUDVCUEUFUJBSUBHHTIAVBBSUBFGCDKDLCEMIPHFGCDKDLCEMIPUOHTFGCDKDLCEMIPUOIPFGCDKDLCEMOJFGCNUSFGCDKDLCEMQERUAUGAUDVCUEUFUJBSIAVBBSIPFGCDKDLCEMOJFGCNUSFGCDKDLCEMQERUAUGAUDVCUEUFOJFGCNUSIUCQERUAUGAUDVCUEUFIPFGCDKDLCEMOJFGCNUSFGCDKDLCEMQERUAOJFGCNUSIUCQERUAIPFGCDKDLCEMOJFGCNUSFGCDKDLCEMQEROJFGCNUSIUCQEROJFGCNUSFGCDKDLCEMQOJFGCNUSIUCQFGCDKDLCEMIPOFGCDKDLCEMIPUOJFGCDKDLCEMIPUOIPFGCDKDLCEMFGCNUSFGCDKDLCEMFGCNUSIUCFGCNUSFGCDKDLCEMIPUOFGCDKDLCEMIPVIVOVPRFGCDKDLCEMIPUOVQVJAUDVCUEUFFGCDKDLCEMIPUOVKBSFGCDKDLCEMIPUOVLVGHHTOJNFGCDKDLCEMQERUAUGAUDFJFGCEDJDUKCEULUEUFUJBSUBHHTOJNIUCQERUAUGAUDFJFGCEDJDUKCEULUEUFUJBSUBFGCDKDLCEMIPHFGCDKDLCEMIPUOHTFGCDKDLCEMIPUOIPFGCDKDLCEMOJNFGCDKDLCEMQERUAUGAUDFJFGCEDJDUKCEULUEUFUJBSOJNIUCQERUAUGAUDFJFGCEDJDUKCEULUEUFUJBSIPFGCDKDLCEMOJNFGCDKDLCEMQERUAUGAUDFJFGCEDJDUKCEULUEUFOJNIUCQERUAUGAUDFJFGCEDJDUKCEULUEUFIPFGCDKDLCEMOJNFGCDKDLCEMQERUAOJNIUCQERUAIPFGCDKDLCEMOJNFGCDKDLCEMQEROJNIUCQEROJNFGCDKDLCEMQOJNIUCQFGCDKDLCEMIPOFGCDKDLCEMIPUOJFGCDKDLCEMIPUOIPFGCDKDLCEMNFGCDKDLCEMNIUCNFGCDKDLCEMIPUOFGCDKDLCEMIPVIVOVPRFGCDKDLCEMIPUOVQVJAUDFJFGCEDJDUKCEULUEUFFGCDKDLCEMIPUOVKBSFGCDKDLCEMIPUOVLVGVRVSVTUHUPUHUPUMUNURUQHHHHTAUHVEBSUBUIHHTOJNUHUPQERUAUGAUDFJFGCEDJDUKCEULUEUFUJBSUBUIUTVDIUCUMUNURUQHHHHTIAVBBSUBUIHHTOJNIUCQERUAUGAUDFJFGCEDJDUKCEULUEUFUJBSUBUIUTVDIPIUHWKHHHHTAUHVEBSUBUIHHTOJNUHUPQERUAUGAUDFJFGCEDJDUKCEULUEUFUJBSUBUIUTHHHHTIAVBBSUBUIHHTOJNIUCQERUAUGAUDFJFGCEDJDUKCEULUEUFUJBSUBUIUTUHUPIPIUHVHHHHTAUHVEBSUBUIHHTOJNUHUPQERUAUGAUDFJFGCEDJDUKCEULUEUFUJBSUBUIHHHTIAVBBSUBUIHHTOJNIUCQERUAUGAUDFJFGCEDJDUKCEULUEUFUJBSUBUIUHUPIPIUHVHHHTAUHVEBSUBHHTIAVBBSUBUHUPIPIUHVHHTUHUPIPUOIABUHWLVGHHTOJNUHUPQERUAUGAUDFJFGCEDJDUKCEULUEUFUJBSUBHHTOJNIUCQERUAUGAUDFJFGCEDJDUKCEULUEUFUJBSUBUHUPIPIUHVHHTUHUPIPUOIPUHUPOJNUHUPQERUAUGAUDFJFGCEDJDUKCEULUEUFUJBSOJNIUCQERUAUGAUDFJFGCEDJDUKCEULUEUFUJBSIPUHUPOJNUHUPQERUAUGAUDFJFGCEDJDUKCEULUEUFOJNIUCQERUAUGAUDFJFGCEDJDUKCEULUEUFIPUHUPOJNUHUPQERUAOJNIUCQERUAIUHWMVJAUDFJFGCEDJDUKCEULUEUFUHUPIPUOVKIBUHWNVLVGVRVSVTWOVF $.
sorting-rearrange-114 $p |- ( \imp ( \and \top ( \and ( \kore-is-sort kore-sort-var-x0 ) \top ) ) ( \kore-valid kore-sort-var-x0 ( \kore-exists \kore-sort-SortInt kore-sort-var-x0 kore-element-var-x1 ( \kore-equals \kore-sort-SortInt kore-sort-var-x0 kore-element-var-x1 ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) $= ( top-is-pattern typecode-cache-Pattern-6 and-is-pattern kore-is-sort-is-pattern IMP-sort-22-is-pattern typecode-cache-Pattern-19 string-literal-1-is-pattern kore-dv-is-pattern kore-equals-is-pattern kore-exists-is-pattern kore-valid-is-pattern sorting-cache-54 top-intro rule-weakening rule-and-intro-alt2-sugar domain-value-1-functional rule-imp-transitivity ) CADFCEEADFCEADGADGADBHGIJKBLMCADFCEEADFCANCADFCEECOPQABRS $.
substitution-331 $p #Substitution ( \kore-equals \kore-sort-SortInt \unit-sort kore-element-var-x1 ( \kore-dv \kore-sort-SortInt "0" ) ) ( \kore-equals \kore-sort-SortInt kore-sort-var-x0 kore-element-var-x1 ( \kore-dv \kore-sort-SortInt "0" ) ) \unit-sort kore-sort-var-x0 $= ( IMP-sort-22-is-pattern unit-sort-is-symbol symbol-is-pattern string-literal-1-is-pattern kore-dv-is-pattern element-var-is-var typecode-cache-Pattern-19 typecode-cache-Pattern-6 substitution-128 substitution-var-same substitution-37 substitution-disjoint substitution-kore-equals ) CDEBICFGCAJBICFGDEAHAKDEAHLABMCFGDEAHNO $.
substitution-332 $p #Substitution ( \kore-equals \kore-sort-SortInt kore-sort-var-x1 kore-element-var-x1 ( \kore-dv \kore-sort-SortInt "0" ) ) ( \kore-equals \kore-sort-SortInt kore-sort-var-x0 kore-element-var-x1 ( \kore-dv \kore-sort-SortInt "0" ) ) kore-sort-var-x1 kore-sort-var-x0 $= ( IMP-sort-22-is-pattern typecode-cache-Pattern-20 string-literal-1-is-pattern kore-dv-is-pattern element-var-is-var typecode-cache-Pattern-19 typecode-cache-Pattern-6 substitution-130 substitution-var-same substitution-43 substitution-disjoint substitution-kore-equals ) DCEBIDFGDAJBIDFGCEAHACKCEAHLABCMDFGCEAHNO $.
sorting-rearrange-115 $p |- ( \imp \top ( \kore-valid \unit-sort ( \kore-exists \kore-sort-SortInt \unit-sort kore-element-var-x1 ( \kore-equals \kore-sort-SortInt \unit-sort kore-element-var-x1 ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) $= ( IMP-sort-22-is-pattern kore-sort-var-x0-elementvariable unit-sort-is-symbol symbol-is-pattern typecode-cache-Pattern-6 kore-sort-var-x1-elementvariable typecode-cache-Pattern-20 top-is-pattern typecode-cache-Pattern-19 string-literal-1-is-pattern kore-dv-is-pattern kore-equals-is-pattern kore-exists-is-pattern and-is-pattern element-var-is-var kore-is-sort-is-pattern kore-valid-is-pattern x-is-element-var substitution-var-same rule-weakening substitution-kore-exists-alt substitution-kore-valid substitution-imp top-intro sorting-cache-49 rule-and-intro-alt2-sugar typecode-cache-Pattern-1 exists-is-pattern unit-sort-is-functional sorting-rearrange-114 substitution-35 substitution-128 substitution-331 substitution-41 substitution-130 substitution-332 functional-substitution-alt rule-imp-transitivity ) IIDEQIOODEBDEBDEAJBKLMANRIIDEQIOIIUEUAUFUGDECFBCFBCFAJBKLMANRDEBDEBDEAJBKLMANRGHBGHBGHAJBKLMANRICFQIODEQIOGHQIOSCGISUHSUISUJUACAUKDEDEQIODEBDEBDEAJBKLMANRCFQIOCFBCFBCFAJBKLMANRCPCULDEBDEBDEAJBKLMANCFBCFBCFAJBKLMANDECPDECPTBDEBDEAJBKLMBCFBCFAJBKLMDEACPCUMDECPTCAUNUBUCUDGHGHQIOGHBGHBGHAJBKLMANRCFQIOCFBCFBCFAJBKLMANRCPCGUOGHBGHBGHAJBKLMANCFBCFBCFAJBKLMANGHCPGHCPTBGHBGHAJBKLMBCFBCFAJBKLMGHACPCGUPGHCPTCAGUQUBUCUDURUS $.
sorting-rearrange-116 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \exists kore-element-var-x1 ( \eq kore-element-var-x1 ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) $= ( top-is-pattern IMP-sort-22-is-pattern typecode-cache-Pattern-2 kore-is-sort-is-pattern and-is-pattern string-literal-1-is-pattern kore-dv-is-pattern typecode-cache-Pattern-19 eq-is-pattern exists-is-pattern top-intro rule-weakening sorting-cache-18 sorting-rearrange-115 kore-functional rule-imp-transitivity ) AEFCGCBJDHIKBLAEFCGCMNDDHICBOBPQR $.
sorting-cache-234 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortInt ) \top ) ) ( \kore-is-sort kore-sort-var-R ) ) $= ( typecode-cache-Pattern-2 kore-is-sort-is-pattern top-is-pattern and-is-pattern typecode-cache-Pattern-27 IMP-sort-22-is-pattern in-sort-is-pattern and-elim-left-sugar rule-imp-transitivity imp-reflexivity ) ACDEFBGHIEFFACDEFACDACDEFBGHIEFJACDEFACDACDACDEJACDLKK $.
sorting-cache-235 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortInt ) \top ) ) ( \in-sort kore-element-var-K0 \kore-sort-SortInt ) ) $= ( typecode-cache-Pattern-27 IMP-sort-22-is-pattern in-sort-is-pattern top-is-pattern and-is-pattern typecode-cache-Pattern-2 kore-is-sort-is-pattern rule-imp-transitivity and-elim-right-sugar and-elim-left-sugar imp-reflexivity ) AHIFGBCDEFGGBCDEFGBCDEAHIFGBCDEFGKBCDEFGBCDEBCDEBCDEFLBCDEMJJ $.
sorting-cache-236 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortInt ) \top ) ) ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortInt ) \top ) ) ) $= ( and-is-pattern top-is-pattern typecode-cache-Pattern-27 IMP-sort-22-is-pattern in-sort-is-pattern typecode-cache-Pattern-2 kore-is-sort-is-pattern rule-and-intro-alt2-sugar sorting-cache-234 sorting-cache-235 top-intro rule-weakening ) AHIDCBEFGDCCAHIBEFGDCABKAHIDCBEFGDCCBEFGDABLAHIDCBEFGDCCDMNJJ $.
typecode-cache-Pattern-111 $p #Pattern ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortInt ) \top ) ) $= ( and-is-pattern typecode-cache-Pattern-2 kore-is-sort-is-pattern typecode-cache-Pattern-27 IMP-sort-22-is-pattern in-sort-is-pattern top-is-pattern ) ADEBFGHICC $.
typecode-cache-Pattern-112 $p #Pattern ( \kore-equals \kore-sort-SortGeneratedCounterCell kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' kore-element-var-K0 ) ) $= ( IMP-sort-10-is-pattern typecode-cache-Pattern-2 typecode-cache-Pattern-3 typecode-cache-Pattern-27 IMP-symbol-116-is-pattern kore-equals-is-pattern ) DAEBFCGHI $.
sorting-rearrange-117 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortInt ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortGeneratedCounterCell kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortGeneratedCounterCell kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' kore-element-var-K0 ) ) ) ) ) $= ( typecode-cache-Pattern-2 and-is-pattern top-is-pattern kore-is-sort-is-pattern typecode-cache-Pattern-27 IMP-sort-22-is-pattern in-sort-is-pattern typecode-cache-Pattern-111 IMP-sort-10-is-pattern typecode-cache-Pattern-112 kore-exists-is-pattern kore-valid-is-pattern sorting-cache-236 IMP-axiom-2663 rule-imp-transitivity ) ADGFECHIJFEEACKADLADABCMBNOACPABCQR $.
typecode-cache-Pattern-113 $p #Pattern ( \kore-equals \kore-sort-SortGeneratedCounterCell kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) ) $= ( IMP-sort-10-is-pattern typecode-cache-Pattern-2 typecode-cache-Pattern-3 IMP-sort-22-is-pattern string-literal-1-is-pattern kore-dv-is-pattern IMP-symbol-116-is-pattern kore-equals-is-pattern ) CADBEFGHIJ $.
typecode-cache-Pattern-114 $p #Pattern ( \kore-equals \kore-sort-SortGeneratedCounterCell kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' kore-element-var-x0 ) ) $= ( IMP-sort-10-is-pattern typecode-cache-Pattern-2 typecode-cache-Pattern-3 typecode-cache-Pattern-16 IMP-symbol-116-is-pattern kore-equals-is-pattern ) DAEBFCGHI $.
substitution-333 $p #Substitution kore-sort-var-R kore-sort-var-R ( \kore-dv \kore-sort-SortInt "0" ) kore-element-var-K0 $= ( typecode-cache-Pattern-2 IMP-sort-22-is-pattern string-literal-1-is-pattern kore-dv-is-pattern element-var-is-var substitution-disjoint ) ACDEFBGH $.
substitution-334 $p #Substitution kore-element-var-Val kore-element-var-Val ( \kore-dv \kore-sort-SortInt "0" ) kore-element-var-K0 $= ( typecode-cache-Pattern-3 IMP-sort-22-is-pattern string-literal-1-is-pattern kore-dv-is-pattern element-var-is-var substitution-disjoint ) ACDEFBGH $.
substitution-335 $p #Substitution ( \kore-equals \kore-sort-SortGeneratedCounterCell kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) ) ( \kore-equals \kore-sort-SortGeneratedCounterCell kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' kore-element-var-K0 ) ) ( \kore-dv \kore-sort-SortInt "0" ) kore-element-var-K0 $= ( IMP-sort-22-is-pattern string-literal-1-is-pattern kore-dv-is-pattern element-var-is-var IMP-sort-10-is-pattern typecode-cache-Pattern-2 typecode-cache-Pattern-3 IMP-symbol-116-is-pattern typecode-cache-Pattern-27 substitution-disjoint substitution-333 substitution-334 substitution-var-same IMP-symbol-116-substitution substitution-kore-equals ) HAIBJDEFKHAIBJCLKDEFCGHDEFCGMACNBCOCGDEFDEFCLDEFCGPQR $.
substitution-336 $p #Substitution \kore-sort-SortInt \kore-sort-SortInt kore-element-var-x0 kore-element-var-K0 $= ( IMP-sort-22-is-pattern typecode-cache-Pattern-16 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-337 $p #Substitution ( \in-sort kore-element-var-x0 \kore-sort-SortInt ) ( \in-sort kore-element-var-K0 \kore-sort-SortInt ) kore-element-var-x0 kore-element-var-K0 $= ( typecode-cache-Pattern-16 IMP-sort-22-is-pattern element-var-is-var typecode-cache-Pattern-27 substitution-var-same substitution-336 substitution-in-sort ) BCBCDAFDAEBCAEGABHI $.
substitution-338 $p #Substitution ( \and ( \in-sort kore-element-var-x0 \kore-sort-SortInt ) \top ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortInt ) \top ) kore-element-var-x0 kore-element-var-K0 $= ( typecode-cache-Pattern-16 IMP-sort-22-is-pattern in-sort-is-pattern top-is-pattern typecode-cache-Pattern-27 element-var-is-var substitution-337 substitution-63 substitution-and ) BCBCDEFAGDEFAHABIABJK $.
substitution-339 $p #Substitution \kore-sort-SortGeneratedCounterCell \kore-sort-SortGeneratedCounterCell kore-element-var-x0 kore-element-var-K0 $= ( IMP-sort-10-is-pattern typecode-cache-Pattern-16 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-340 $p #Substitution ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' kore-element-var-x0 ) ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' kore-element-var-K0 ) kore-element-var-x0 kore-element-var-K0 $= ( typecode-cache-Pattern-16 element-var-is-var typecode-cache-Pattern-27 substitution-var-same IMP-symbol-116-substitution ) ADBCBCAEBCADFG $.
substitution-341 $p #Substitution ( \kore-equals \kore-sort-SortGeneratedCounterCell kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' kore-element-var-x0 ) ) ( \kore-equals \kore-sort-SortGeneratedCounterCell kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' kore-element-var-K0 ) ) kore-element-var-x0 kore-element-var-K0 $= ( IMP-sort-10-is-pattern typecode-cache-Pattern-2 typecode-cache-Pattern-3 typecode-cache-Pattern-16 IMP-symbol-116-is-pattern typecode-cache-Pattern-27 element-var-is-var substitution-339 substitution-65 substitution-67 substitution-340 substitution-kore-equals ) EAFBGDHIEAFBGCJIDHCKCDLACDMBCDNCDOP $.
substitution-342 $p #Substitution ( \kore-exists \kore-sort-SortGeneratedCounterCell kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortGeneratedCounterCell kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' kore-element-var-x0 ) ) ) ( \kore-exists \kore-sort-SortGeneratedCounterCell kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortGeneratedCounterCell kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' kore-element-var-K0 ) ) ) kore-element-var-x0 kore-element-var-K0 $= ( IMP-sort-10-is-pattern typecode-cache-Pattern-2 typecode-cache-Pattern-114 typecode-cache-Pattern-112 typecode-cache-Pattern-16 element-var-is-var substitution-339 substitution-65 substitution-341 substitution-kore-exists-alt ) EAFABDGEAFABCHDIBCJCDKACDLABCDMN $.
substitution-343 $p #Substitution ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortGeneratedCounterCell kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortGeneratedCounterCell kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' kore-element-var-x0 ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortGeneratedCounterCell kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortGeneratedCounterCell kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' kore-element-var-K0 ) ) ) ) kore-element-var-x0 kore-element-var-K0 $= ( typecode-cache-Pattern-2 IMP-sort-10-is-pattern kore-exists-is-pattern typecode-cache-Pattern-114 typecode-cache-Pattern-112 typecode-cache-Pattern-16 element-var-is-var substitution-65 substitution-342 substitution-kore-valid ) AEFAEABDHBGAEFAEABCIBGDJCKACDLABCDMN $.
sorting-cache-237 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \in-sort ( \kore-dv \kore-sort-SortInt "0" ) \kore-sort-SortInt ) ) $= ( IMP-sort-22-is-pattern string-literal-1-is-pattern kore-dv-is-pattern in-sort-is-pattern typecode-cache-Pattern-2 kore-is-sort-is-pattern top-is-pattern and-is-pattern imp-is-pattern proof-rule-prop-1 kore-dv-sorting proof-rule-mp ) BCDBEAFGHIBCDBEJBCDBEAFGHIKBCLM $.
sorting-cache-238 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \in-sort ( \kore-dv \kore-sort-SortInt "0" ) \kore-sort-SortInt ) \top ) ) $= ( top-is-pattern typecode-cache-Pattern-2 kore-is-sort-is-pattern and-is-pattern IMP-sort-22-is-pattern string-literal-1-is-pattern kore-dv-is-pattern in-sort-is-pattern sorting-cache-237 top-intro rule-weakening rule-and-intro-alt2-sugar ) ACDBEFGHFIBAJACDBEBKLM $.
sorting-rearrange-118 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortGeneratedCounterCell kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortGeneratedCounterCell kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) $= ( IMP-sort-22-is-pattern typecode-cache-Pattern-2 kore-element-var-K0-elementvariable top-is-pattern string-literal-1-is-pattern kore-dv-is-pattern and-is-pattern IMP-sort-10-is-pattern in-sort-is-pattern kore-exists-is-pattern element-var-is-var kore-valid-is-pattern kore-element-var-x0-elementvariable kore-is-sort-is-pattern typecode-cache-Pattern-113 typecode-cache-Pattern-112 typecode-cache-Pattern-27 typecode-cache-Pattern-16 substitution-disjoint typecode-cache-Pattern-114 kore-element-var-x1-elementvariable substitution-333 substitution-imp sorting-cache-58 sorting-cache-238 rule-and-intro-alt2-sugar sorting-rearrange-116 sorting-rearrange-117 substitution-var-same substitution-in-sort substitution-and substitution-335 substitution-kore-exists-alt substitution-kore-valid substitution-338 substitution-343 functional-substitution-alt rule-imp-transitivity ) ADPFIADPFICGHCKFIIADJADABQBLNADPFIADPFICGHCKFIAUFAUGUHCGHADJADABERBLNADJADABQBLNADJADABOUBBLNADPFIESCKFICGHCKFIOTCKFIUCEOAUCUIABEUJCGHCGHCKFIADJADABQBLNESCKFIADJADABERBLNEMCGHCGHCKFESCKFEMCGHCGHCESCEMCGHEMUKCCGHEMUAULFCGHEMUAUMADJADABQBLADJADABERBLCGHEMAEUDJADABQJADABERCGHBEMJCGHEMUAAEUDABEUNUOUPUEOTOTCKFIADJADABOUBBLNESCKFIADJADABERBLNEMEOUQABEOURUEUSUT $.
typecode-cache-Pattern-115 $p #Pattern ( \kore-equals \kore-sort-SortGeneratedCounterCell \unit-sort kore-element-var-Val ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) ) $= ( IMP-sort-10-is-pattern unit-sort-is-symbol symbol-is-pattern typecode-cache-Pattern-3 IMP-sort-22-is-pattern string-literal-1-is-pattern kore-dv-is-pattern IMP-symbol-116-is-pattern kore-equals-is-pattern ) BCDAEFGHIJ $.
typecode-cache-Pattern-116 $p #Pattern ( \kore-equals \kore-sort-SortGeneratedCounterCell kore-sort-var-x0 kore-element-var-Val ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) ) $= ( IMP-sort-10-is-pattern typecode-cache-Pattern-6 typecode-cache-Pattern-3 IMP-sort-22-is-pattern string-literal-1-is-pattern kore-dv-is-pattern IMP-symbol-116-is-pattern kore-equals-is-pattern ) CBDAEFGHIJ $.
substitution-344 $p #Substitution ( \kore-equals \kore-sort-SortGeneratedCounterCell \unit-sort kore-element-var-Val ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) ) ( \kore-equals \kore-sort-SortGeneratedCounterCell kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) ) \unit-sort kore-sort-var-R $= ( unit-sort-is-symbol symbol-is-pattern IMP-sort-22-is-pattern string-literal-1-is-pattern kore-dv-is-pattern IMP-symbol-116-is-pattern element-var-is-var IMP-sort-10-is-pattern typecode-cache-Pattern-3 typecode-cache-Pattern-2 substitution-264 substitution-var-same substitution-4 substitution-disjoint substitution-kore-equals ) JCDBKEFGHJALBKEFGHCDAIAMCDAINABOEFGHCDAIPQ $.
substitution-345 $p #Substitution ( \kore-equals \kore-sort-SortGeneratedCounterCell kore-sort-var-x0 kore-element-var-Val ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) ) ( \kore-equals \kore-sort-SortGeneratedCounterCell kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) ) kore-sort-var-x0 kore-sort-var-R $= ( typecode-cache-Pattern-6 IMP-sort-22-is-pattern string-literal-1-is-pattern kore-dv-is-pattern IMP-symbol-116-is-pattern element-var-is-var IMP-sort-10-is-pattern typecode-cache-Pattern-3 typecode-cache-Pattern-2 substitution-266 substitution-var-same substitution-11 substitution-disjoint substitution-kore-equals ) JCDBKEFGHJALBKEFGHCDAIACMCDAINABCOEFGHCDAIPQ $.
sorting-rearrange-119 $p |- ( \imp \top ( \kore-valid \unit-sort ( \kore-exists \kore-sort-SortGeneratedCounterCell \unit-sort kore-element-var-Val ( \kore-equals \kore-sort-SortGeneratedCounterCell \unit-sort kore-element-var-Val ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) $= ( kore-sort-var-R-elementvariable top-is-pattern typecode-cache-Pattern-2 kore-sort-var-x0-elementvariable unit-sort-is-symbol symbol-is-pattern and-is-pattern IMP-sort-10-is-pattern kore-is-sort-is-pattern typecode-cache-Pattern-6 kore-exists-is-pattern element-var-is-var kore-valid-is-pattern typecode-cache-Pattern-113 typecode-cache-Pattern-115 typecode-cache-Pattern-116 x-is-element-var substitution-var-same rule-weakening top-intro rule-and-intro-alt2-sugar rule-imp-transitivity substitution-kore-exists-alt substitution-kore-valid substitution-imp sorting-cache-49 typecode-cache-Pattern-1 exists-is-pattern unit-sort-is-functional sorting-cache-47 sorting-rearrange-118 substitution-2 substitution-264 substitution-344 substitution-9 substitution-266 substitution-345 functional-substitution-alt ) CCFGJCHHFGIFGAPALNCCFGJCHCCUATUGUBFGBDIBDBAOALNFGIFGAPALNEKIEKAEQALNCBDJCHFGJCHEKJCHRBECRUHRUIRUJTCBDJCHHBDJCHBDIBDBAOALNCBDJCHHBDJCBUKCBDJCHHCUATUBBAULUCFGFGJCHFGIFGAPALNBDJCHBDIBDBAOALNBMBUMFGIFGAPALBDIBDBAOALFGBMFGBMSIFGAPIBDBAOFGABMBUNFGBMSBAUOUDUEUFEKEKJCHEKIEKAEQALNBDJCHBDIBDBAOALNBMBEUPEKIEKAEQALBDIBDBAOALEKBMEKBMSIEKAEQIBDBAOEKABMBEUQEKBMSBAEURUDUEUFUSUC $.
sorting-rearrange-120 $p |- ( \imp ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortMap ) \top ) ( \exists kore-element-var-Val ( \eq kore-element-var-Val ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) $= ( top-is-pattern typecode-cache-Pattern-99 IMP-sort-14-is-pattern in-sort-is-pattern and-is-pattern IMP-sort-22-is-pattern string-literal-1-is-pattern kore-dv-is-pattern IMP-symbol-116-is-pattern typecode-cache-Pattern-3 eq-is-pattern exists-is-pattern top-intro rule-weakening IMP-sort-10-is-pattern sorting-cache-23 sorting-rearrange-119 kore-functional rule-imp-transitivity ) ADEFCGCBLHIJKMBNADEFCGCOPQHIJKCBRBSTUA $.
sorting-cache-239 $p |- ( \imp ( \and ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortMap ) \top ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortGeneratedCounterCell ) \top ) ) ( \in-sort kore-element-var-VE3 \kore-sort-SortGeneratedCounterCell ) ) $= ( in-sort-is-pattern typecode-cache-Pattern-98 IMP-sort-10-is-pattern top-is-pattern and-is-pattern typecode-cache-Pattern-99 IMP-sort-14-is-pattern rule-imp-transitivity and-elim-right-sugar and-elim-left-sugar imp-reflexivity ) AHICFGBDECFGGBDECFGBDECAHICFGBDECFGKBDECFGBDECBDECBDECFLBDECMJJ $.
sorting-cache-240 $p |- ( \imp ( \and ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortMap ) \top ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortGeneratedCounterCell ) \top ) ) ( \in-sort kore-element-var-VE4 \kore-sort-SortMap ) ) $= ( in-sort-is-pattern typecode-cache-Pattern-99 IMP-sort-14-is-pattern top-is-pattern and-is-pattern typecode-cache-Pattern-98 IMP-sort-10-is-pattern and-elim-left-sugar rule-imp-transitivity imp-reflexivity ) ADECFGBHICFGGADECFGADECADECFGBHICFGJADECFGADECADECADECFJADECLKK $.
substitution-346 $p #Substitution \kore-sort-SortGeneratedCounterCell \kore-sort-SortGeneratedCounterCell kore-element-var-x0 kore-element-var-VE3 $= ( IMP-sort-10-is-pattern typecode-cache-Pattern-16 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-347 $p #Substitution ( \in-sort kore-element-var-x0 \kore-sort-SortGeneratedCounterCell ) ( \in-sort kore-element-var-VE3 \kore-sort-SortGeneratedCounterCell ) kore-element-var-x0 kore-element-var-VE3 $= ( typecode-cache-Pattern-16 IMP-sort-10-is-pattern element-var-is-var typecode-cache-Pattern-98 substitution-var-same substitution-346 substitution-in-sort ) BCBCDAFDAEBCAEGABHI $.
substitution-348 $p #Substitution \top \top kore-element-var-x0 kore-element-var-VE3 $= ( top-is-pattern typecode-cache-Pattern-16 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-349 $p #Substitution ( \and ( \in-sort kore-element-var-x0 \kore-sort-SortGeneratedCounterCell ) \top ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortGeneratedCounterCell ) \top ) kore-element-var-x0 kore-element-var-VE3 $= ( typecode-cache-Pattern-16 IMP-sort-10-is-pattern in-sort-is-pattern top-is-pattern typecode-cache-Pattern-98 element-var-is-var substitution-347 substitution-348 substitution-and ) BCBCDEFAGDEFAHABIABJK $.
substitution-350 $p #Substitution \kore-sort-SortGeneratedTopCell \kore-sort-SortGeneratedTopCell kore-element-var-x0 kore-element-var-VE3 $= ( IMP-sort-8-is-pattern typecode-cache-Pattern-16 element-var-is-var substitution-disjoint ) CBDAEF $.
sorting-cache-241 $p |- ( \imp ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortMap ) \top ) ( \in-sort ( \kore-dv \kore-sort-SortInt "0" ) \kore-sort-SortInt ) ) $= ( IMP-sort-22-is-pattern in-sort-is-pattern string-literal-1-is-pattern kore-dv-is-pattern typecode-cache-Pattern-99 IMP-sort-14-is-pattern top-is-pattern and-is-pattern imp-is-pattern proof-rule-prop-1 kore-dv-sorting proof-rule-mp ) BDEBCAFGCHIBDEBCJBDEBCAFGCHIKBDLM $.
sorting-cache-242 $p |- ( \imp ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortMap ) \top ) ( \in-sort ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) \kore-sort-SortGeneratedCounterCell ) ) $= ( IMP-sort-22-is-pattern in-sort-is-pattern string-literal-1-is-pattern kore-dv-is-pattern typecode-cache-Pattern-99 IMP-sort-14-is-pattern top-is-pattern and-is-pattern IMP-symbol-116-is-pattern IMP-sort-10-is-pattern sorting-cache-241 IMP-symbol-116-sorting rule-imp-transitivity ) AFGCHIBDEBCBDEJKCALBDEMN $.
sorting-cache-243 $p |- ( \imp ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortMap ) \top ) ( \and ( \in-sort ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) \kore-sort-SortGeneratedCounterCell ) \top ) ) $= ( top-is-pattern in-sort-is-pattern typecode-cache-Pattern-99 IMP-sort-14-is-pattern and-is-pattern IMP-sort-22-is-pattern string-literal-1-is-pattern kore-dv-is-pattern IMP-symbol-116-is-pattern IMP-sort-10-is-pattern sorting-cache-242 top-intro rule-weakening rule-and-intro-alt2-sugar ) ADECBFGHIJKCBALADECBFBMNO $.
sorting-cache-244 $p |- ( \imp ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortMap ) \top ) ( \and ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortMap ) \top ) ( \and ( \in-sort ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) \kore-sort-SortGeneratedCounterCell ) \top ) ) ) $= ( in-sort-is-pattern typecode-cache-Pattern-99 IMP-sort-14-is-pattern top-is-pattern and-is-pattern rule-and-intro-alt2-sugar IMP-sort-22-is-pattern string-literal-1-is-pattern kore-dv-is-pattern IMP-symbol-116-is-pattern IMP-sort-10-is-pattern and-elim-left-sugar imp-reflexivity rule-imp-transitivity top-intro rule-weakening sorting-cache-243 ) ACDBEFACDBEFHIJKLBEFACDBEFACDBEACDBEFACDBACDBACDBEMACDBNOACDBEFEPQGARG $.
sorting-rearrange-121 $p |- ( \imp ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortMap ) \top ) ( \kore-valid \kore-sort-SortGeneratedTopCell ( \kore-rewrites \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) \kore-symbol-dotk ) ) ( \kore-symbol-Lbl'-LT-'state'-GT-' ( \kore-symbol-Lbl'Unds'Map'Unds' kore-element-var-VE4 \kore-symbol-Lbl'Stop'Map ) ) ) ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) \kore-symbol-dotk ) ) ( \kore-symbol-Lbl'-LT-'state'-GT-' ( \kore-symbol-Lbl'Unds'Map'Unds' kore-element-var-VE4 ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem ( \kore-dv \kore-sort-SortId "a" ) ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortKItem ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) ) $= ( kore-dv-is-pattern IMP-sort-22-is-pattern kore-inj-is-pattern IMP-sort-17-is-pattern IMP-sort-8-is-pattern BASIC-K-sort-1-is-pattern string-literal-11-is-pattern kore-element-var-VE3-elementvariable string-literal-1-is-pattern typecode-cache-Pattern-99 IMP-sort-26-is-pattern IMP-symbol-111-is-pattern IMP-sort-13-is-pattern string-literal-10-is-pattern IMP-symbol-169-is-pattern IMP-symbol-220-is-pattern KSEQ-symbol-1-is-pattern KSEQ-symbol-0-is-pattern IMP-symbol-119-is-pattern IMP-symbol-176-is-pattern IMP-symbol-120-is-pattern IMP-symbol-114-is-pattern kore-top-is-pattern IMP-symbol-116-is-pattern IMP-symbol-117-is-pattern element-var-is-var kore-and-is-pattern typecode-cache-Pattern-98 kore-element-var-x0-elementvariable IMP-symbol-148-is-pattern IMP-symbol-112-is-pattern IMP-symbol-196-is-pattern typecode-cache-Pattern-16 top-is-pattern and-is-pattern in-sort-is-pattern IMP-sort-10-is-pattern substitution-disjoint kore-rewrites-is-pattern IMP-sort-14-is-pattern kore-valid-is-pattern substitution-var-same IMP-symbol-117-substitution substitution-kore-and substitution-350 kore-element-var-Val-elementvariable rule-and-intro-alt2-sugar rule-imp-transitivity substitution-kore-rewrites substitution-kore-valid substitution-imp sorting-cache-244 sorting-rearrange-120 typecode-cache-Pattern-100 sorting-cache-239 sorting-cache-240 top-intro rule-weakening sorting-rearrange-113 substitution-in-sort substitution-and substitution-349 functional-substitution-alt ) AKVAUQUOUPAKVAUQUOUPCJBUEURUQUOUPUPFFFFUDLGEHBMUKEHBCNCOBDPQDRSTAKULUAUBUCCJBUEUFUHFFUDLGMEHBCNCOBDPQDRSTAKEGEHBDCGCJBDUMUAUBUCCJBUEUFUHUTVBAVMCJBUEFFFFUDLGEHBMUKEHBCNCOBDPQDRSTAKULUAUBUCIUIUFUHFFUDLGMEHBCNCOBDPQDRSTAKEGEHBDCGCJBDUMUAUBUCIUIUFUHUTVBFFFFUDLGEHBMUKEHBCNCOBDPQDRSTAKULUAUBUCCJBUEUFUHFFUDLGMEHBCNCOBDPQDRSTAKEGEHBDCGCJBDUMUAUBUCCJBUEUFUHUTVBFFFFUDLGEHBMUKEHBCNCOBDPQDRSTAKULUAUBUCUJUNUFUHFFUDLGMEHBCNCOBDPQDRSTAKEGEHBDCGCJBDUMUAUBUCUJUNUFUHUTVBAKVAUQUOUPIUIURUQUOUPCJBUEURUQUOUPUJUNURUQUOUPVGIUJAVGVNAKVAUQUOUPIUIURUQUOUPUPAIVOFFFFUDLGEHBMUKEHBCNCOBDPQDRSTAKULUAUBUCIUIUFUHFFUDLGMEHBCNCOBDPQDRSTAKEGEHBDCGCJBDUMUAUBUCIUIUFUHUTVBAKVAUQUOUPIUIURUQUOUPUPIUIURUQAKVAUQUOUPAIVPAKVAUQUOUPIUIURUQUOUPUPAKVAUQUOAIVQAKVAUQUOUPIUIURUQUOUPUPUOVRVSVHVHAIVTVICJBUECJBUEURUQUOUPFFFFUDLGEHBMUKEHBCNCOBDPQDRSTAKULUAUBUCCJBUEUFUHFFUDLGMEHBCNCOBDPQDRSTAKEGEHBDCGCJBDUMUAUBUCCJBUEUFUHUTVBIUIURUQUOUPFFFFUDLGEHBMUKEHBCNCOBDPQDRSTAKULUAUBUCIUIUFUHFFUDLGMEHBCNCOBDPQDRSTAKEGEHBDCGCJBDUMUAUBUCIUIUFUHUTVBIUGCJBUECJBUEURUQUOIUIURUQUOIUGCJBUECJBUEURIUIURIUGCJBUEIUGVCURCJBUEIUGUSWAUOCJBUEIUGUSWBFFFFUDLGEHBMUKEHBCNCOBDPQDRSTAKULUAUBUCCJBUEUFUHFFUDLGMEHBCNCOBDPQDRSTAKEGEHBDCGCJBDUMUAUBUCCJBUEUFUHUTFFFFUDLGEHBMUKEHBCNCOBDPQDRSTAKULUAUBUCIUIUFUHFFUDLGMEHBCNCOBDPQDRSTAKEGEHBDCGCJBDUMUAUBUCIUIUFUHUTCJBUEIUGFCJBUEIUGUSFFFUDLGEHBMUKEHBCNCOBDPQDRSTAKULUAUBUCCJBUEUFUHFFUDLGMEHBCNCOBDPQDRSTAKEGEHBDCGCJBDUMUAUBUCCJBUEUFUHFFFUDLGEHBMUKEHBCNCOBDPQDRSTAKULUAUBUCIUIUFUHFFUDLGMEHBCNCOBDPQDRSTAKEGEHBDCGCJBDUMUAUBUCIUIUFUHCJBUEIUGFCJBUEIUGUSFFUDLGEHBMUKEHBCNCOBDPQDRSTAKULUAUBUCCJBUEUFFFUDLGEHBMUKEHBCNCOBDPQDRSTAKULUAUBUCIUIUFCJBUEIUGFCJBUEIUGUSFUDCJBUEIUGUSIUGCJBUELGEHBMUKEHBCNCOBDPQDRSTAKULUAUBUCCJBUELGEHBMUKEHBCNCOBDPQDRSTAKULUAUBUCIUILGEHBMUKEHBCNCOBDPQDRSTAKULUAUBUCCJBUEIUGUSCJBUEIUGVCVDVEFFUDLGMEHBCNCOBDPQDRSTAKEGEHBDCGCJBDUMUAUBUCCJBUEUFFFUDLGMEHBCNCOBDPQDRSTAKEGEHBDCGCJBDUMUAUBUCIUIUFCJBUEIUGFCJBUEIUGUSFUDCJBUEIUGUSIUGCJBUELGMEHBCNCOBDPQDRSTAKEGEHBDCGCJBDUMUAUBUCCJBUELGMEHBCNCOBDPQDRSTAKEGEHBDCGCJBDUMUAUBUCIUILGMEHBCNCOBDPQDRSTAKEGEHBDCGCJBDUMUAUBUCCJBUEIUGUSCJBUEIUGVCVDVEVJVKVLUJUNUJUNURUQUOUPFFFFUDLGEHBMUKEHBCNCOBDPQDRSTAKULUAUBUCUJUNUFUHFFUDLGMEHBCNCOBDPQDRSTAKEGEHBDCGCJBDUMUAUBUCUJUNUFUHUTVBIUIURUQUOUPFFFFUDLGEHBMUKEHBCNCOBDPQDRSTAKULUAUBUCIUIUFUHFFUDLGMEHBCNCOBDPQDRSTAKEGEHBDCGCJBDUMUAUBUCIUIUFUHUTVBIUGIUJWCFFFFUDLGEHBMUKEHBCNCOBDPQDRSTAKULUAUBUCUJUNUFUHFFUDLGMEHBCNCOBDPQDRSTAKEGEHBDCGCJBDUMUAUBUCUJUNUFUHUTFFFFUDLGEHBMUKEHBCNCOBDPQDRSTAKULUAUBUCIUIUFUHFFUDLGMEHBCNCOBDPQDRSTAKEGEHBDCGCJBDUMUAUBUCIUIUFUHUTUJUNIUGIUJVFFFFUDLGEHBMUKEHBCNCOBDPQDRSTAKULUAUBUCUJUNUFUHFFUDLGMEHBCNCOBDPQDRSTAKEGEHBDCGCJBDUMUAUBUCUJUNUFUHFFFUDLGEHBMUKEHBCNCOBDPQDRSTAKULUAUBUCIUIUFUHFFUDLGMEHBCNCOBDPQDRSTAKEGEHBDCGCJBDUMUAUBUCIUIUFUHUJUNIUGIUJVFFFUDLGEHBMUKEHBCNCOBDPQDRSTAKULUAUBUCUJUNUFFFUDLGEHBMUKEHBCNCOBDPQDRSTAKULUAUBUCIUIUFUJUNIUGIUJVFFUDUJUNIUGUSIUGUJUNLGEHBMUKEHBCNCOBDPQDRSTAKULUAUBUCUJUNLGEHBMUKEHBCNCOBDPQDRSTAKULUAUBUCIUILGEHBMUKEHBCNCOBDPQDRSTAKULUAUBUCUJUNIUGUSUJUNIUGVCVDVEFFUDLGMEHBCNCOBDPQDRSTAKEGEHBDCGCJBDUMUAUBUCUJUNUFFFUDLGMEHBCNCOBDPQDRSTAKEGEHBDCGCJBDUMUAUBUCIUIUFUJUNIUGIUJVFFUDUJUNIUGUSIUGUJUNLGMEHBCNCOBDPQDRSTAKEGEHBDCGCJBDUMUAUBUCUJUNLGMEHBCNCOBDPQDRSTAKEGEHBDCGCJBDUMUAUBUCIUILGMEHBCNCOBDPQDRSTAKEGEHBDCGCJBDUMUAUBUCUJUNIUGUSUJUNIUGVCVDVEVJVKVLWDVI $.
sorting-cache-245 $p |- ( \imp ( \and \top ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortMap ) \top ) ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortMap ) \top ) ) $= ( top-is-pattern typecode-cache-Pattern-99 IMP-sort-14-is-pattern in-sort-is-pattern and-is-pattern rule-imp-transitivity and-elim-right-sugar and-elim-left-sugar imp-reflexivity top-intro rule-weakening rule-and-intro-alt2-sugar ) BACDEBFFACDEBBACDEBFFACDEBFACDEBACDEBFHACDEBFACDEACDEACDEBIACDEJGGBACDEBFFBKLM $.
substitution-351 $p #Substitution ( \and ( \in-sort \kore-symbol-Lbl'Stop'Map \kore-sort-SortMap ) \top ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortMap ) \top ) \kore-symbol-Lbl'Stop'Map kore-element-var-VE4 $= ( IMP-symbol-112-is-pattern IMP-sort-14-is-pattern element-var-is-var top-is-pattern in-sort-is-pattern typecode-cache-Pattern-99 substitution-disjoint substitution-var-same substitution-in-sort substitution-and ) BBCFEAGCFEADBBCAGCADBADICBADHJEBADHK $.
substitution-352 $p #Substitution \kore-sort-SortMap \kore-sort-SortMap kore-element-var-x0 kore-element-var-VE4 $= ( IMP-sort-14-is-pattern typecode-cache-Pattern-16 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-353 $p #Substitution ( \in-sort kore-element-var-x0 \kore-sort-SortMap ) ( \in-sort kore-element-var-VE4 \kore-sort-SortMap ) kore-element-var-x0 kore-element-var-VE4 $= ( typecode-cache-Pattern-16 IMP-sort-14-is-pattern element-var-is-var typecode-cache-Pattern-99 substitution-var-same substitution-352 substitution-in-sort ) BCBCDAFDAEBCAEGABHI $.
substitution-354 $p #Substitution \top \top kore-element-var-x0 kore-element-var-VE4 $= ( top-is-pattern typecode-cache-Pattern-16 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-355 $p #Substitution ( \and ( \in-sort kore-element-var-x0 \kore-sort-SortMap ) \top ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortMap ) \top ) kore-element-var-x0 kore-element-var-VE4 $= ( typecode-cache-Pattern-16 IMP-sort-14-is-pattern in-sort-is-pattern top-is-pattern typecode-cache-Pattern-99 element-var-is-var substitution-353 substitution-354 substitution-and ) BCBCDEFAGDEFAHABIABJK $.
substitution-356 $p #Substitution \kore-sort-SortGeneratedTopCell \kore-sort-SortGeneratedTopCell kore-element-var-x0 kore-element-var-VE4 $= ( IMP-sort-8-is-pattern typecode-cache-Pattern-16 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-357 $p #Substitution \kore-symbol-Lbl'Stop'Map \kore-symbol-Lbl'Stop'Map kore-element-var-x0 kore-element-var-VE4 $= ( IMP-symbol-112-is-pattern typecode-cache-Pattern-16 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-358 $p #Substitution ( \kore-symbol-Lbl'Unds'Map'Unds' kore-element-var-x0 \kore-symbol-Lbl'Stop'Map ) ( \kore-symbol-Lbl'Unds'Map'Unds' kore-element-var-VE4 \kore-symbol-Lbl'Stop'Map ) kore-element-var-x0 kore-element-var-VE4 $= ( typecode-cache-Pattern-16 element-var-is-var IMP-symbol-112-is-pattern typecode-cache-Pattern-99 substitution-var-same substitution-357 IMP-symbol-176-substitution ) ADBCBCEAFEBCADGABHI $.
substitution-359 $p #Substitution ( \kore-symbol-Lbl'-LT-'state'-GT-' ( \kore-symbol-Lbl'Unds'Map'Unds' kore-element-var-x0 \kore-symbol-Lbl'Stop'Map ) ) ( \kore-symbol-Lbl'-LT-'state'-GT-' ( \kore-symbol-Lbl'Unds'Map'Unds' kore-element-var-VE4 \kore-symbol-Lbl'Stop'Map ) ) kore-element-var-x0 kore-element-var-VE4 $= ( typecode-cache-Pattern-16 IMP-symbol-112-is-pattern IMP-symbol-176-is-pattern element-var-is-var typecode-cache-Pattern-99 substitution-358 IMP-symbol-120-substitution ) AFBCBCDEAGDEABHI $.
sorting-rearrange-122 $p |- ( \imp \top ( \kore-valid \kore-sort-SortGeneratedTopCell ( \kore-rewrites \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) \kore-symbol-dotk ) ) ( \kore-symbol-Lbl'-LT-'state'-GT-' ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map \kore-symbol-Lbl'Stop'Map ) ) ) ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) \kore-symbol-dotk ) ) ( \kore-symbol-Lbl'-LT-'state'-GT-' ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem ( \kore-dv \kore-sort-SortId "a" ) ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortKItem ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) ) $= ( kore-dv-is-pattern IMP-sort-22-is-pattern kore-inj-is-pattern IMP-sort-17-is-pattern BASIC-K-sort-1-is-pattern string-literal-11-is-pattern IMP-sort-8-is-pattern kore-element-var-VE4-elementvariable string-literal-1-is-pattern IMP-symbol-112-is-pattern IMP-symbol-176-is-pattern IMP-sort-26-is-pattern IMP-symbol-111-is-pattern IMP-sort-13-is-pattern string-literal-10-is-pattern IMP-symbol-169-is-pattern IMP-symbol-220-is-pattern KSEQ-symbol-1-is-pattern KSEQ-symbol-0-is-pattern IMP-symbol-119-is-pattern IMP-symbol-120-is-pattern IMP-symbol-116-is-pattern IMP-symbol-114-is-pattern kore-top-is-pattern element-var-is-var kore-element-var-x0-elementvariable IMP-symbol-117-is-pattern IMP-symbol-196-is-pattern typecode-cache-Pattern-99 typecode-cache-Pattern-16 kore-and-is-pattern IMP-symbol-148-is-pattern top-is-pattern substitution-disjoint IMP-sort-14-is-pattern and-is-pattern kore-rewrites-is-pattern in-sort-is-pattern kore-valid-is-pattern IMP-symbol-114-substitution IMP-symbol-117-substitution substitution-kore-and substitution-356 kore-element-var-Val-elementvariable substitution-var-same IMP-symbol-176-substitution IMP-symbol-120-substitution top-intro rule-weakening sorting-cache-15 rule-and-intro-alt2-sugar rule-imp-transitivity substitution-kore-rewrites substitution-kore-valid substitution-imp sorting-rearrange-1 kore-functional sorting-cache-245 sorting-rearrange-121 substitution-351 substitution-355 substitution-359 functional-substitution-alt ) UMUMJUOURUMUPUPGGGGUDLEDFAMULDFABNBOACPQCRSTJJKUAUCBIAUBUGUKGGUDLEMDFABNBOACPQCRSTJDEDFACBEBIACUHKUAUCBIAUBUGUKUQUSUMUMJUOURUMUPUMUMVHVIUMJUOURUMVJUMUMVHVIVKVKJGGGGUDLEDFAMULDFABNBOACPQCRSTHUIJKUAUCBIAUBUGUKGGUDLEMDFABNBOACPQCRSTHUIDEDFACBEBIACUHKUAUCBIAUBUGUKUQUSGGGGUDLEDFAMULDFABNBOACPQCRSTJJKUAUCBIAUBUGUKGGUDLEMDFABNBOACPQCRSTJDEDFACBEBIACUHKUAUCBIAUBUGUKUQUSGGGGUDLEDFAMULDFABNBOACPQCRSTUFUJJKUAUCBIAUBUGUKGGUDLEMDFABNBOACPQCRSTUFUJDEDFACBEBIACUHKUAUCBIAUBUGUKUQUSUMHUIUOURUMUPJUOURUMUPUFUJUOURUMUPVDHUFUOJUMVDVJVDVPVQUMHUIUOURUMUPUPHUIUOURUMUPGGGGUDLEDFAMULDFABNBOACPQCRSTHUIJKUAUCBIAUBUGUKGGUDLEMDFABNBOACPQCRSTHUIDEDFACBEBIACUHKUAUCBIAUBUGUKUQUSHVRHVSVLJJUOURUMUPGGGGUDLEDFAMULDFABNBOACPQCRSTJJKUAUCBIAUBUGUKGGUDLEMDFABNBOACPQCRSTJDEDFACBEBIACUHKUAUCBIAUBUGUKUQUSHUIUOURUMUPGGGGUDLEDFAMULDFABNBOACPQCRSTHUIJKUAUCBIAUBUGUKGGUDLEMDFABNBOACPQCRSTHUIDEDFACBEBIACUHKUAUCBIAUBUGUKUQUSHUEHVTGGGGUDLEDFAMULDFABNBOACPQCRSTJJKUAUCBIAUBUGUKGGUDLEMDFABNBOACPQCRSTJDEDFACBEBIACUHKUAUCBIAUBUGUKUQGGGGUDLEDFAMULDFABNBOACPQCRSTHUIJKUAUCBIAUBUGUKGGUDLEMDFABNBOACPQCRSTHUIDEDFACBEBIACUHKUAUCBIAUBUGUKUQJHUEGJHUEUNGGGUDLEDFAMULDFABNBOACPQCRSTJJKUAUCBIAUBUGUKGGUDLEMDFABNBOACPQCRSTJDEDFACBEBIACUHKUAUCBIAUBUGUKGGGUDLEDFAMULDFABNBOACPQCRSTHUIJKUAUCBIAUBUGUKGGUDLEMDFABNBOACPQCRSTHUIDEDFACBEBIACUHKUAUCBIAUBUGUKJHUEGJHUEUNGGUDLEDFAMULDFABNBOACPQCRSTJJKUAUCBIAUBUGGGUDLEDFAMULDFABNBOACPQCRSTHUIJKUAUCBIAUBUGJHUEGJHUEUNGUDJHUEUNHUEJLEDFAMULDFABNBOACPQCRSTJJKUAUCBIAUBLEDFAMULDFABNBOACPQCRSTHUIJKUAUCBIAUBHUEJLEDFAMULDFABNBOACPQCRSTJJKUALEDFAMULDFABNBOACPQCRSTHUIJKUALEDFAMULDFABNBOACPQCRSTJHUEUNHUEJJJKHUIJKHUEJJJHUIJJHUEVEJJHUEUNVFVGUTBIAUBJHUEUNVAVBGGUDLEMDFABNBOACPQCRSTJDEDFACBEBIACUHKUAUCBIAUBUGGGUDLEMDFABNBOACPQCRSTHUIDEDFACBEBIACUHKUAUCBIAUBUGJHUEGJHUEUNGUDJHUEUNHUEJLEMDFABNBOACPQCRSTJDEDFACBEBIACUHKUAUCBIAUBLEMDFABNBOACPQCRSTHUIDEDFACBEBIACUHKUAUCBIAUBHUEJLEMDFABNBOACPQCRSTJDEDFACBEBIACUHKUALEMDFABNBOACPQCRSTHUIDEDFACBEBIACUHKUALEMDFABNBOACPQCRSTJHUEUNHUEJJDEDFACBEBIACUHKHUIDEDFACBEBIACUHKHUEJJDEDFACBEBIACUHHUIDEDFACBEBIACUHJHUEVEDEDFACBEBIACUHJHUEUNVFVGUTBIAUBJHUEUNVAVBVMVNVOUFUJUFUJUOURUMUPGGGGUDLEDFAMULDFABNBOACPQCRSTUFUJJKUAUCBIAUBUGUKGGUDLEMDFABNBOACPQCRSTUFUJDEDFACBEBIACUHKUAUCBIAUBUGUKUQUSHUIUOURUMUPGGGGUDLEDFAMULDFABNBOACPQCRSTHUIJKUAUCBIAUBUGUKGGUDLEMDFABNBOACPQCRSTHUIDEDFACBEBIACUHKUAUCBIAUBUGUKUQUSHUEHUFWAGGGGUDLEDFAMULDFABNBOACPQCRSTUFUJJKUAUCBIAUBUGUKGGUDLEMDFABNBOACPQCRSTUFUJDEDFACBEBIACUHKUAUCBIAUBUGUKUQGGGGUDLEDFAMULDFABNBOACPQCRSTHUIJKUAUCBIAUBUGUKGGUDLEMDFABNBOACPQCRSTHUIDEDFACBEBIACUHKUAUCBIAUBUGUKUQUFUJHUEHUFVCGGGUDLEDFAMULDFABNBOACPQCRSTUFUJJKUAUCBIAUBUGUKGGUDLEMDFABNBOACPQCRSTUFUJDEDFACBEBIACUHKUAUCBIAUBUGUKGGGUDLEDFAMULDFABNBOACPQCRSTHUIJKUAUCBIAUBUGUKGGUDLEMDFABNBOACPQCRSTHUIDEDFACBEBIACUHKUAUCBIAUBUGUKUFUJHUEHUFVCGGUDLEDFAMULDFABNBOACPQCRSTUFUJJKUAUCBIAUBUGGGUDLEDFAMULDFABNBOACPQCRSTHUIJKUAUCBIAUBUGUFUJHUEHUFVCGUDUFUJHUEUNHUEUFUJLEDFAMULDFABNBOACPQCRSTUFUJJKUAUCBIAUBLEDFAMULDFABNBOACPQCRSTHUIJKUAUCBIAUBHUEUFUJLEDFAMULDFABNBOACPQCRSTUFUJJKUALEDFAMULDFABNBOACPQCRSTHUIJKUALEDFAMULDFABNBOACPQCRSTUFUJHUEUNHUFWBUTBIAUBUFUJHUEUNVAVBGGUDLEMDFABNBOACPQCRSTUFUJDEDFACBEBIACUHKUAUCBIAUBUGGGUDLEMDFABNBOACPQCRSTHUIDEDFACBEBIACUHKUAUCBIAUBUGUFUJHUEHUFVCGUDUFUJHUEUNHUEUFUJLEMDFABNBOACPQCRSTUFUJDEDFACBEBIACUHKUAUCBIAUBLEMDFABNBOACPQCRSTHUIDEDFACBEBIACUHKUAUCBIAUBHUEUFUJLEMDFABNBOACPQCRSTUFUJDEDFACBEBIACUHKUALEMDFABNBOACPQCRSTHUIDEDFACBEBIACUHKUALEMDFABNBOACPQCRSTUFUJHUEUNHUEUFUJUFUJDEDFACBEBIACUHKHUIDEDFACBEBIACUHKHUEUFUJUFUJDEDFACBEBIACUHHUIDEDFACBEBIACUHUFUJHUEVEDEDFACBEBIACUHUFUJHUEUNVFVGUTBIAUBUFUJHUEUNVAVBVMVNVOWCVL $.
sorting-cache-246 $p |- ( \imp \top ( \in-sort ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) \kore-symbol-dotk ) ) ( \kore-symbol-Lbl'-LT-'state'-GT-' ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem ( \kore-dv \kore-sort-SortId "a" ) ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortKItem ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) \kore-sort-SortGeneratedTopCell ) ) $= ( kore-dv-is-pattern IMP-sort-22-is-pattern kore-inj-is-pattern BASIC-K-sort-1-is-pattern IMP-sort-17-is-pattern string-literal-11-is-pattern string-literal-1-is-pattern IMP-sort-8-is-pattern in-sort-is-pattern IMP-sort-26-is-pattern IMP-symbol-111-is-pattern IMP-sort-13-is-pattern string-literal-10-is-pattern IMP-symbol-169-is-pattern IMP-symbol-220-is-pattern KSEQ-symbol-1-is-pattern KSEQ-symbol-0-is-pattern IMP-symbol-119-is-pattern IMP-symbol-112-is-pattern IMP-symbol-196-is-pattern IMP-symbol-176-is-pattern IMP-symbol-120-is-pattern IMP-symbol-114-is-pattern IMP-symbol-116-is-pattern IMP-symbol-117-is-pattern top-is-pattern kore-top-is-pattern and-is-pattern IMP-sort-29-is-pattern IMP-sort-10-is-pattern rule-and-intro-alt2-sugar rule-imp-transitivity kore-and-is-pattern sorting-cache-0 sorting-cache-22 sorting-cache-23 IMP-symbol-117-sorting kore-and-sorting ) UFHUGHIJDKEFABLBMACNOCPQRSEDEFACBDBGACTUAUBUCBGAUDUEHIUHHHUGJDKEFABLBMACNOCPQRSEDEFACBDBGACTUAUBUCBGAUDUEUMHIUFHUGHIJDKEFABLBMACNOCPQRSEDEFACBDBGACTUAUBUCBGAUDUEHIUNUFJDKEFABLBMACNOCPQRSEDEFACBDBGACTUAUBUCUIIBGAUDUJIUHJDKEFABLBMACNOCPQRSEDEFACBDBGACTUAUBUCBGAUDUEHIUFJDKEFABLBMACNOCPQRSEDEFACBDBGACTUAUBUCUIIBGAUDUJIUOUPUKJDKEFABLBMACNOCPQRSEDEFACBDBGACTUAUBUCBGAUDUQULUKHHUGJDKEFABLBMACNOCPQRSEDEFACBDBGACTUAUBUCBGAUDUEURUL $.
sorting-cache-247 $p |- ( \imp \top ( \in-sort ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) \kore-symbol-dotk ) ) ( \kore-symbol-Lbl'-LT-'state'-GT-' \kore-symbol-Lbl'Stop'Map ) ) \kore-sort-SortTCell ) ) $= ( kore-dv-is-pattern IMP-sort-17-is-pattern string-literal-11-is-pattern IMP-sort-22-is-pattern kore-inj-is-pattern IMP-sort-26-is-pattern BASIC-K-sort-1-is-pattern IMP-symbol-111-is-pattern IMP-symbol-148-is-pattern IMP-sort-13-is-pattern string-literal-10-is-pattern IMP-symbol-169-is-pattern IMP-symbol-220-is-pattern KSEQ-symbol-1-is-pattern KSEQ-symbol-0-is-pattern in-sort-is-pattern IMP-symbol-119-is-pattern IMP-symbol-112-is-pattern IMP-symbol-120-is-pattern top-is-pattern IMP-sort-7-is-pattern IMP-sort-9-is-pattern rule-imp-transitivity and-is-pattern IMP-symbol-114-is-pattern IMP-sort-29-is-pattern BASIC-K-sort-0-is-pattern sorting-cache-193 IMP-symbol-119-sorting sorting-cache-212 rule-and-intro-alt2-sugar IMP-symbol-114-sorting ) TFGBCAHIBCADJDKAELMENOQUAPRSUBPUDFGBCAHIBCADJDKAELMENOQRSUEUFPTFGBCAHIBCADJDKAELMENOQUAPRSUBPTFGBCAHIBCADJDKAELMENOUGPFGBCAHIBCADJDKAELMENOQUAPUHFGBCAHIBCADJDKAELMENOUIUCUJUKFGBCAHIBCADJDKAELMENOQRSULUC $.
sorting-cache-248 $p |- ( \imp \top ( \in-sort ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) \kore-symbol-dotk ) ) ( \kore-symbol-Lbl'-LT-'state'-GT-' \kore-symbol-Lbl'Stop'Map ) ) ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) ) \kore-sort-SortGeneratedTopCell ) ) $= ( kore-dv-is-pattern IMP-sort-22-is-pattern IMP-sort-17-is-pattern string-literal-11-is-pattern kore-inj-is-pattern in-sort-is-pattern IMP-sort-26-is-pattern BASIC-K-sort-1-is-pattern IMP-symbol-111-is-pattern IMP-symbol-148-is-pattern IMP-sort-13-is-pattern string-literal-10-is-pattern IMP-symbol-169-is-pattern IMP-symbol-220-is-pattern KSEQ-symbol-1-is-pattern KSEQ-symbol-0-is-pattern IMP-symbol-119-is-pattern IMP-symbol-112-is-pattern IMP-symbol-120-is-pattern IMP-symbol-114-is-pattern string-literal-1-is-pattern IMP-symbol-116-is-pattern top-is-pattern IMP-sort-29-is-pattern IMP-sort-10-is-pattern and-is-pattern IMP-symbol-117-is-pattern IMP-sort-8-is-pattern sorting-cache-247 sorting-cache-23 rule-and-intro-alt2-sugar IMP-symbol-117-sorting rule-imp-transitivity ) UCGHCDAIJCDABKBLAEMNEOPQRSTUDFBUAAUBUEFUFGHCDAIJCDABKBLAEMNEOPQRSTBUAAUBUGUHFUCGHCDAIJCDABKBLAEMNEOPQRSTUDFBUAAUBUEFUIUJUKGHCDAIJCDABKBLAEMNEOPQRSTBUAAUBULUM $.
sorting-cache-249 $p |- ( \imp \top ( \in-sort ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-top \kore-sort-SortGeneratedTopCell ) ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) \kore-symbol-dotk ) ) ( \kore-symbol-Lbl'-LT-'state'-GT-' \kore-symbol-Lbl'Stop'Map ) ) ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) \kore-sort-SortGeneratedTopCell ) ) $= ( IMP-sort-8-is-pattern kore-top-is-pattern kore-dv-is-pattern IMP-sort-22-is-pattern in-sort-is-pattern IMP-sort-17-is-pattern string-literal-11-is-pattern kore-inj-is-pattern kore-and-is-pattern top-is-pattern IMP-sort-26-is-pattern BASIC-K-sort-1-is-pattern IMP-symbol-111-is-pattern IMP-symbol-148-is-pattern IMP-sort-13-is-pattern string-literal-10-is-pattern IMP-symbol-169-is-pattern IMP-symbol-220-is-pattern KSEQ-symbol-1-is-pattern KSEQ-symbol-0-is-pattern IMP-symbol-119-is-pattern IMP-symbol-112-is-pattern IMP-symbol-120-is-pattern IMP-symbol-114-is-pattern string-literal-1-is-pattern IMP-symbol-116-is-pattern IMP-symbol-117-is-pattern and-is-pattern sorting-cache-0 rule-and-intro-alt2-sugar kore-and-sorting rule-imp-transitivity sorting-cache-248 ) JAABABIAEKLFGCMNFGCDODPCHQRHSTUAUBUCUDDUECUFUGAEUHAAABABIKLFGCMNFGCDODPCHQRHSTUAUBUCUDDUECUFUGIAEJAABABIAEKLFGCMNFGCDODPCHQRHSTUAUBUCUDDUECUFUGAEJABAEABAEUHAABABIAEJABAEABAEUIUIUJAABABUKULUMUJAAABABIKLFGCMNFGCDODPCHQRHSTUAUBUCUDDUECUFUGUKUL $.
sorting-rearrange-123 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \exists kore-element-var-Val ( \eq kore-element-var-Val \kore-symbol-Lbl'Stop'Map ) ) ) $= ( top-is-pattern typecode-cache-Pattern-2 kore-is-sort-is-pattern and-is-pattern IMP-symbol-112-is-pattern typecode-cache-Pattern-3 eq-is-pattern exists-is-pattern top-intro rule-weakening IMP-sort-14-is-pattern sorting-cache-15 sorting-rearrange-1 kore-functional rule-imp-transitivity ) ADECFCBHGIBJADECFCKLMGCBNBOPQ $.
typecode-cache-Pattern-117 $p #Pattern kore-element-var-K $= ( element-var-is-var var-is-pattern ) ABC $.
sorting-cache-250 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \in-sort kore-element-var-K \kore-sort-SortMap ) \top ) ) ( \kore-is-sort kore-sort-var-R ) ) $= ( typecode-cache-Pattern-2 kore-is-sort-is-pattern top-is-pattern and-is-pattern typecode-cache-Pattern-117 IMP-sort-14-is-pattern in-sort-is-pattern and-elim-left-sugar rule-imp-transitivity imp-reflexivity ) ACDEFBGHIEFFACDEFACDACDEFBGHIEFJACDEFACDACDACDEJACDLKK $.
sorting-cache-251 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \in-sort kore-element-var-K \kore-sort-SortMap ) \top ) ) ( \in-sort kore-element-var-K \kore-sort-SortMap ) ) $= ( typecode-cache-Pattern-117 IMP-sort-14-is-pattern in-sort-is-pattern top-is-pattern and-is-pattern typecode-cache-Pattern-2 kore-is-sort-is-pattern rule-imp-transitivity and-elim-right-sugar and-elim-left-sugar imp-reflexivity ) AHIFGBCDEFGGBCDEFGBCDEAHIFGBCDEFGKBCDEFGBCDEBCDEBCDEFLBCDEMJJ $.
sorting-cache-252 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \in-sort kore-element-var-K \kore-sort-SortMap ) \top ) ) ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K \kore-sort-SortMap ) \top ) ) ) $= ( and-is-pattern top-is-pattern typecode-cache-Pattern-117 IMP-sort-14-is-pattern in-sort-is-pattern typecode-cache-Pattern-2 kore-is-sort-is-pattern rule-and-intro-alt2-sugar sorting-cache-250 sorting-cache-251 top-intro rule-weakening ) AHIDCBEFGDCCAHIBEFGDCABKAHIDCBEFGDCCBEFGDABLAHIDCBEFGDCCDMNJJ $.
typecode-cache-Pattern-118 $p #Pattern ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K \kore-sort-SortMap ) \top ) ) $= ( and-is-pattern typecode-cache-Pattern-2 kore-is-sort-is-pattern typecode-cache-Pattern-117 IMP-sort-14-is-pattern in-sort-is-pattern top-is-pattern ) ADEBFGHICC $.
sorting-rearrange-124 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \in-sort kore-element-var-K \kore-sort-SortMap ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-equals \kore-sort-SortMap kore-sort-var-R ( \kore-symbol-Lbl'Unds'Map'Unds' kore-element-var-K \kore-symbol-Lbl'Stop'Map ) kore-element-var-K ) ) ) $= ( typecode-cache-Pattern-2 and-is-pattern typecode-cache-Pattern-117 top-is-pattern IMP-sort-14-is-pattern kore-is-sort-is-pattern in-sort-is-pattern typecode-cache-Pattern-118 IMP-symbol-112-is-pattern IMP-symbol-176-is-pattern kore-equals-is-pattern kore-valid-is-pattern sorting-cache-252 IMP-axiom-2734 rule-imp-transitivity ) ACHFDBEGIFDDABJACGACBEKLBEMNABOABPQ $.
substitution-360 $p #Substitution ( \and ( \in-sort \kore-symbol-Lbl'Stop'Map \kore-sort-SortMap ) \top ) ( \and ( \in-sort kore-element-var-K \kore-sort-SortMap ) \top ) \kore-symbol-Lbl'Stop'Map kore-element-var-K $= ( IMP-symbol-112-is-pattern IMP-sort-14-is-pattern element-var-is-var top-is-pattern in-sort-is-pattern typecode-cache-Pattern-117 substitution-disjoint substitution-var-same substitution-in-sort substitution-and ) BBCFEAGCFEADBBCAGCADBADICBADHJEBADHK $.
substitution-361 $p #Substitution kore-sort-var-R kore-sort-var-R \kore-symbol-Lbl'Stop'Map kore-element-var-K $= ( typecode-cache-Pattern-2 IMP-symbol-112-is-pattern element-var-is-var substitution-disjoint ) ACDBEF $.
substitution-362 $p #Substitution ( \kore-equals \kore-sort-SortMap kore-sort-var-R ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map \kore-symbol-Lbl'Stop'Map ) \kore-symbol-Lbl'Stop'Map ) ( \kore-equals \kore-sort-SortMap kore-sort-var-R ( \kore-symbol-Lbl'Unds'Map'Unds' kore-element-var-K \kore-symbol-Lbl'Stop'Map ) kore-element-var-K ) \kore-symbol-Lbl'Stop'Map kore-element-var-K $= ( IMP-symbol-112-is-pattern element-var-is-var IMP-sort-14-is-pattern typecode-cache-Pattern-117 typecode-cache-Pattern-2 IMP-symbol-176-is-pattern substitution-disjoint substitution-var-same substitution-361 IMP-symbol-176-substitution substitution-kore-equals ) EAGCCHCEAGBFCHBFCBDECBDIABKBDCCCBFCCBDJCCBDILCBDJM $.
substitution-363 $p #Substitution \kore-sort-SortMap \kore-sort-SortMap kore-element-var-x0 kore-element-var-K $= ( IMP-sort-14-is-pattern typecode-cache-Pattern-16 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-364 $p #Substitution ( \in-sort kore-element-var-x0 \kore-sort-SortMap ) ( \in-sort kore-element-var-K \kore-sort-SortMap ) kore-element-var-x0 kore-element-var-K $= ( typecode-cache-Pattern-16 IMP-sort-14-is-pattern element-var-is-var typecode-cache-Pattern-117 substitution-var-same substitution-363 substitution-in-sort ) BCBCDAFDAEBCAEGABHI $.
substitution-365 $p #Substitution \top \top kore-element-var-x0 kore-element-var-K $= ( top-is-pattern typecode-cache-Pattern-16 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-366 $p #Substitution ( \and ( \in-sort kore-element-var-x0 \kore-sort-SortMap ) \top ) ( \and ( \in-sort kore-element-var-K \kore-sort-SortMap ) \top ) kore-element-var-x0 kore-element-var-K $= ( typecode-cache-Pattern-16 IMP-sort-14-is-pattern in-sort-is-pattern top-is-pattern typecode-cache-Pattern-117 element-var-is-var substitution-364 substitution-365 substitution-and ) BCBCDEFAGDEFAHABIABJK $.
substitution-367 $p #Substitution kore-sort-var-R kore-sort-var-R kore-element-var-x0 kore-element-var-K $= ( typecode-cache-Pattern-2 typecode-cache-Pattern-16 element-var-is-var substitution-disjoint ) ADCEBFG $.
substitution-368 $p #Substitution \kore-symbol-Lbl'Stop'Map \kore-symbol-Lbl'Stop'Map kore-element-var-x0 kore-element-var-K $= ( IMP-symbol-112-is-pattern typecode-cache-Pattern-16 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-369 $p #Substitution ( \kore-symbol-Lbl'Unds'Map'Unds' kore-element-var-x0 \kore-symbol-Lbl'Stop'Map ) ( \kore-symbol-Lbl'Unds'Map'Unds' kore-element-var-K \kore-symbol-Lbl'Stop'Map ) kore-element-var-x0 kore-element-var-K $= ( typecode-cache-Pattern-16 element-var-is-var IMP-symbol-112-is-pattern typecode-cache-Pattern-117 substitution-var-same substitution-368 IMP-symbol-176-substitution ) ADBCBCEAFEBCADGABHI $.
substitution-370 $p #Substitution ( \kore-equals \kore-sort-SortMap kore-sort-var-R ( \kore-symbol-Lbl'Unds'Map'Unds' kore-element-var-x0 \kore-symbol-Lbl'Stop'Map ) kore-element-var-x0 ) ( \kore-equals \kore-sort-SortMap kore-sort-var-R ( \kore-symbol-Lbl'Unds'Map'Unds' kore-element-var-K \kore-symbol-Lbl'Stop'Map ) kore-element-var-K ) kore-element-var-x0 kore-element-var-K $= ( typecode-cache-Pattern-16 IMP-sort-14-is-pattern typecode-cache-Pattern-2 IMP-symbol-112-is-pattern IMP-symbol-176-is-pattern typecode-cache-Pattern-117 element-var-is-var substitution-363 substitution-367 substitution-369 substitution-var-same substitution-kore-equals ) EAFCDGHCDEAFBIGHBICDBJBCKABCLBCMCDBJNO $.
substitution-371 $p #Substitution ( \kore-valid kore-sort-var-R ( \kore-equals \kore-sort-SortMap kore-sort-var-R ( \kore-symbol-Lbl'Unds'Map'Unds' kore-element-var-x0 \kore-symbol-Lbl'Stop'Map ) kore-element-var-x0 ) ) ( \kore-valid kore-sort-var-R ( \kore-equals \kore-sort-SortMap kore-sort-var-R ( \kore-symbol-Lbl'Unds'Map'Unds' kore-element-var-K \kore-symbol-Lbl'Stop'Map ) kore-element-var-K ) ) kore-element-var-x0 kore-element-var-K $= ( typecode-cache-Pattern-2 typecode-cache-Pattern-16 IMP-sort-14-is-pattern IMP-symbol-112-is-pattern IMP-symbol-176-is-pattern kore-equals-is-pattern typecode-cache-Pattern-117 element-var-is-var substitution-367 substitution-370 substitution-kore-valid ) ADFADCEGHCEIADFADBJGHBJICEBKABCLABCMN $.
sorting-cache-253 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \in-sort \kore-symbol-Lbl'Stop'Map \kore-sort-SortMap ) \top ) ) $= ( top-is-pattern typecode-cache-Pattern-2 kore-is-sort-is-pattern and-is-pattern IMP-symbol-112-is-pattern IMP-sort-14-is-pattern in-sort-is-pattern sorting-cache-145 top-intro rule-weakening rule-and-intro-alt2-sugar ) ACDBEFGHBAIACDBEBJKL $.
sorting-rearrange-125 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-equals \kore-sort-SortMap kore-sort-var-R ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map \kore-symbol-Lbl'Stop'Map ) \kore-symbol-Lbl'Stop'Map ) ) ) $= ( typecode-cache-Pattern-2 IMP-symbol-112-is-pattern kore-element-var-K-elementvariable IMP-sort-14-is-pattern and-is-pattern top-is-pattern typecode-cache-Pattern-117 IMP-symbol-176-is-pattern kore-equals-is-pattern kore-element-var-x0-elementvariable in-sort-is-pattern kore-valid-is-pattern typecode-cache-Pattern-16 kore-is-sort-is-pattern element-var-is-var kore-element-var-Val-elementvariable substitution-imp sorting-cache-58 sorting-cache-253 rule-and-intro-alt2-sugar sorting-rearrange-123 sorting-rearrange-124 substitution-360 substitution-361 substitution-362 substitution-kore-valid substitution-366 substitution-371 functional-substitution-alt rule-imp-transitivity ) ABOGFABOGFCELGFFABEABCCICJMABOGFABOGFCELGFASATUACABEABDHCIDHJMABEABCCICJMABEABKNCIKNJMABOGFDHELGFCELGFKNELGFQDKAQUBADUCCCELGFABEABCCICJMDHELGFABEABDHCIDHJMDPDUDABEABCCICJABEABDHCIDHJCDPADUEADUFUGRKNKNELGFABEABKNCIKNJMDHELGFABEABDHCIDHJMDPDKUHADKUIRUJUK $.
sorting-rearrange-126 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) \top ) ( \kore-valid kore-sort-var-R ( \kore-equals \kore-sort-SortMap kore-sort-var-R ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map \kore-symbol-Lbl'Stop'Map ) \kore-symbol-Lbl'Stop'Map ) ) ) $= ( top-is-pattern typecode-cache-Pattern-2 and-is-pattern kore-is-sort-is-pattern IMP-symbol-112-is-pattern IMP-sort-14-is-pattern IMP-symbol-176-is-pattern kore-equals-is-pattern kore-valid-is-pattern sorting-cache-169 top-intro rule-weakening rule-and-intro-alt2-sugar sorting-rearrange-125 rule-imp-transitivity ) ACEBDBDACEBDACGACFFHFIJACEBDBDACEBAKACEBDBDBLMNAOP $.
sorting-rearrange-127 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-equals \kore-sort-SortMap kore-sort-var-R ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map \kore-symbol-Lbl'Stop'Map ) \kore-symbol-Lbl'Stop'Map ) ) ) $= ( and-is-pattern typecode-cache-Pattern-2 top-is-pattern kore-is-sort-is-pattern IMP-symbol-112-is-pattern rule-imp-transitivity and-elim-left-sugar IMP-sort-14-is-pattern IMP-symbol-176-is-pattern kore-equals-is-pattern kore-valid-is-pattern imp-reflexivity top-intro rule-weakening rule-and-intro-alt2-sugar sorting-rearrange-125 ) ACEDBACEDBDBBACEDBACIACFFJFKLACEDBACEDBDBBACEDACEDBACEDBDBBACEDBACEACEDBACEDBDBHACEDBACEACEACEDHACEMGGACEDBACEDBDBBDNOPAQG $.
sorting-rearrange-128 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-equals \kore-sort-SortMap kore-sort-var-R \kore-symbol-Lbl'Stop'Map ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map \kore-symbol-Lbl'Stop'Map ) ) ) ) $= ( top-is-pattern and-is-pattern typecode-cache-Pattern-2 kore-is-sort-is-pattern IMP-symbol-112-is-pattern IMP-sort-14-is-pattern IMP-symbol-176-is-pattern sorting-cache-58 rule-and-intro-alt2-sugar kore-equals-is-pattern kore-valid-is-pattern top-intro rule-weakening sorting-rearrange-127 kore-equals-symmetry rule-imp-transitivity ) ADEBCADEBCADEBCBCCADGADFFFHKLADEBCADEBCADEBCBCAIADEBCADEBCBAIADEBCBMNJJADGFFFHADEBCADEBCBCCAOPQ $.
sorting-rearrange-129 $p |- ( \imp ( \and \top ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-equals \kore-sort-SortMap kore-sort-var-R \kore-symbol-Lbl'Stop'Map ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map \kore-symbol-Lbl'Stop'Map ) ) ) ) $= ( top-is-pattern typecode-cache-Pattern-2 and-is-pattern kore-is-sort-is-pattern IMP-symbol-112-is-pattern IMP-sort-14-is-pattern IMP-symbol-176-is-pattern kore-equals-is-pattern kore-valid-is-pattern sorting-cache-47 top-intro rule-weakening rule-and-intro-alt2-sugar sorting-rearrange-128 rule-imp-transitivity ) BACEBDDACEBDACGACFFFHIJBACEBDDACEBAKBACEBDDBLMNAOP $.
substitution-372 $p #Substitution ( \kore-equals \kore-sort-SortMap kore-sort-var-x0 \kore-symbol-Lbl'Stop'Map ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map \kore-symbol-Lbl'Stop'Map ) ) ( \kore-equals \kore-sort-SortMap kore-sort-var-R \kore-symbol-Lbl'Stop'Map ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map \kore-symbol-Lbl'Stop'Map ) ) kore-sort-var-x0 kore-sort-var-R $= ( IMP-symbol-112-is-pattern typecode-cache-Pattern-6 IMP-symbol-176-is-pattern element-var-is-var IMP-sort-14-is-pattern typecode-cache-Pattern-2 substitution-10 substitution-var-same substitution-12 substitution-disjoint substitution-kore-equals ) GBDCCCEGAHCCCEBDAFABIBDAFJABKCCEBDAFLM $.
sorting-rearrange-130 $p |- ( \imp \top ( \kore-valid \unit-sort ( \kore-equals \kore-sort-SortMap \unit-sort \kore-symbol-Lbl'Stop'Map ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map \kore-symbol-Lbl'Stop'Map ) ) ) ) $= ( IMP-symbol-112-is-pattern kore-sort-var-R-elementvariable unit-sort-is-symbol symbol-is-pattern top-is-pattern IMP-symbol-176-is-pattern IMP-sort-14-is-pattern typecode-cache-Pattern-2 kore-sort-var-x0-elementvariable kore-equals-is-pattern typecode-cache-Pattern-6 and-is-pattern kore-is-sort-is-pattern element-var-is-var kore-valid-is-pattern x-is-element-var substitution-var-same rule-weakening substitution-kore-valid substitution-imp top-intro sorting-cache-49 rule-and-intro-alt2-sugar typecode-cache-Pattern-1 exists-is-pattern unit-sort-is-functional sorting-rearrange-129 substitution-2 substitution-3 substitution-5 substitution-disjoint substitution-kore-equals substitution-9 substitution-372 functional-substitution-alt rule-imp-transitivity ) EECDMELLCDGCDAAAFJOEECDMELEEUARUBUCCDBHGBHAAAFJOCDGCDAAAFJOIKGIKAAAFJOEBHMELCDMELIKMELPBIEPUDPUEPUFRBUGCDCDMELCDGCDAAAFJOBHMELBHGBHAAAFJOBNBUHCDGCDAAAFJBHGBHAAAFJCDBNCDBNQGCDAAAFGBHAAAFCDBNBUICDBNQBUJAAFCDBNUKULSTIKIKMELIKGIKAAAFJOBHMELBHGBHAAAFJOBNBIUMIKGIKAAAFJBHGBHAAAFJIKBNIKBNQBIUNSTUOUP $.
sorting-cache-254 $p |- ( \imp \top ( \in-sort ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map \kore-symbol-Lbl'Stop'Map ) \kore-sort-SortMap ) ) $= ( IMP-symbol-112-is-pattern IMP-sort-14-is-pattern in-sort-is-pattern top-is-pattern sorting-cache-15 and-is-pattern IMP-symbol-176-is-pattern rule-and-intro-alt2-sugar IMP-symbol-176-sorting rule-imp-transitivity ) DABCABCFAAGBCDABCABCEEHAAIJ $.
typecode-cache-Pattern-119 $p #Pattern kore-element-var-K2 $= ( element-var-is-var var-is-pattern ) ABC $.
typecode-cache-Pattern-120 $p #Pattern ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K2 \kore-sort-SortMap ) \top ) ) $= ( and-is-pattern typecode-cache-Pattern-2 kore-is-sort-is-pattern typecode-cache-Pattern-119 IMP-sort-14-is-pattern in-sort-is-pattern top-is-pattern ) ADEBFGHICC $.
sorting-rearrange-131 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K2 \kore-sort-SortMap ) \top ) ) ( \exists kore-element-var-Val ( \eq kore-element-var-Val \kore-symbol-Lbl'Stop'Map ) ) ) $= ( top-is-pattern typecode-cache-Pattern-120 IMP-symbol-112-is-pattern typecode-cache-Pattern-3 eq-is-pattern exists-is-pattern top-intro rule-weakening IMP-sort-14-is-pattern sorting-cache-15 sorting-rearrange-1 kore-functional rule-imp-transitivity ) ACEDBGFHBIACEDJKLFDBMBNOP $.
sorting-cache-255 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K2 \kore-sort-SortMap ) \top ) ) ( \kore-is-sort kore-sort-var-R ) ) $= ( typecode-cache-Pattern-2 kore-is-sort-is-pattern typecode-cache-Pattern-120 typecode-cache-Pattern-119 IMP-sort-14-is-pattern in-sort-is-pattern top-is-pattern and-is-pattern and-elim-left-sugar imp-reflexivity rule-imp-transitivity ) ABEACDACDACDBFGHIJKACDLM $.
sorting-cache-256 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K2 \kore-sort-SortMap ) \top ) ) ( \in-sort kore-element-var-K2 \kore-sort-SortMap ) ) $= ( typecode-cache-Pattern-119 IMP-sort-14-is-pattern in-sort-is-pattern top-is-pattern and-is-pattern rule-imp-transitivity typecode-cache-Pattern-120 typecode-cache-Pattern-2 kore-is-sort-is-pattern and-elim-right-sugar and-elim-left-sugar imp-reflexivity ) ABIBCDEFGBCDEAJKBCDEFGLBCDEFGBCDEBCDEBCDEFMBCDENHH $.
sorting-cache-257 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K2 \kore-sort-SortMap ) \top ) ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortMap ) \top ) ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortMap ) ( \and ( \in-sort kore-element-var-K2 \kore-sort-SortMap ) \top ) ) ) $= ( IMP-sort-14-is-pattern in-sort-is-pattern typecode-cache-Pattern-25 and-is-pattern top-is-pattern typecode-cache-Pattern-120 typecode-cache-Pattern-119 rule-imp-transitivity and-elim-left-sugar rule-and-intro-alt2-sugar and-elim-right-sugar imp-reflexivity sorting-cache-256 top-intro rule-weakening ) ACIBFDEHGGBFDECJDEHGACIBFDEHGGBFDEHGBFDEACIBFDEHGNBFDEHGBFDEBFDEBFDEHLBFDEOKKACIBFDEHGGCJDEHACIBFDEHGGACICJDEACIBFDEHGLACPKACIBFDEHGGHQRMM $.
typecode-cache-Pattern-121 $p #Pattern ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortMap ) ( \and ( \in-sort kore-element-var-K2 \kore-sort-SortMap ) \top ) ) ) $= ( and-is-pattern IMP-sort-14-is-pattern in-sort-is-pattern typecode-cache-Pattern-2 kore-is-sort-is-pattern typecode-cache-Pattern-25 typecode-cache-Pattern-119 top-is-pattern ) AGHBIEFCJEFKDDD $.
typecode-cache-Pattern-122 $p #Pattern ( \kore-symbol-Lbl'Unds'Map'Unds' kore-element-var-K1 kore-element-var-K2 ) $= ( typecode-cache-Pattern-25 typecode-cache-Pattern-119 IMP-symbol-176-is-pattern ) ACBDE $.
typecode-cache-Pattern-123 $p #Pattern ( \kore-symbol-Lbl'Unds'Map'Unds' kore-element-var-K2 kore-element-var-K1 ) $= ( typecode-cache-Pattern-119 typecode-cache-Pattern-25 IMP-symbol-176-is-pattern ) BCADE $.
sorting-rearrange-132 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K2 \kore-sort-SortMap ) \top ) ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortMap ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-equals \kore-sort-SortMap kore-sort-var-R ( \kore-symbol-Lbl'Unds'Map'Unds' kore-element-var-K1 kore-element-var-K2 ) ( \kore-symbol-Lbl'Unds'Map'Unds' kore-element-var-K2 kore-element-var-K1 ) ) ) ) $= ( and-is-pattern IMP-sort-14-is-pattern in-sort-is-pattern typecode-cache-Pattern-120 typecode-cache-Pattern-25 top-is-pattern typecode-cache-Pattern-2 kore-is-sort-is-pattern rule-imp-transitivity typecode-cache-Pattern-121 typecode-cache-Pattern-122 typecode-cache-Pattern-123 kore-equals-is-pattern kore-valid-is-pattern typecode-cache-Pattern-119 and-elim-left-sugar sorting-cache-255 sorting-cache-257 rule-and-intro-alt2-sugar IMP-axiom-2733 ) ACGBHEFIDDABCMAJEAJBCNBCOPQACGBHEFIDDAJKBHEFCREFIDDACGBHEFIDDACGAJKACGBHEFIDSACTLABCUAUBABCUCL $.
typecode-cache-Pattern-124 $p #Pattern ( \kore-symbol-Lbl'Unds'Map'Unds' kore-element-var-x0 kore-element-var-K2 ) $= ( typecode-cache-Pattern-16 typecode-cache-Pattern-119 IMP-symbol-176-is-pattern ) BCADE $.
typecode-cache-Pattern-125 $p #Pattern ( \kore-symbol-Lbl'Unds'Map'Unds' kore-element-var-K2 kore-element-var-x0 ) $= ( typecode-cache-Pattern-119 typecode-cache-Pattern-16 IMP-symbol-176-is-pattern ) ACBDE $.
substitution-373 $p #Substitution ( \and ( \in-sort \kore-symbol-Lbl'Stop'Map \kore-sort-SortMap ) \top ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortMap ) \top ) \kore-symbol-Lbl'Stop'Map kore-element-var-K1 $= ( IMP-symbol-112-is-pattern IMP-sort-14-is-pattern element-var-is-var top-is-pattern in-sort-is-pattern typecode-cache-Pattern-25 substitution-disjoint substitution-var-same substitution-in-sort substitution-and ) BBCFEAGCFEADBBCAGCADBADICBADHJEBADHK $.
substitution-374 $p #Substitution kore-sort-var-R kore-sort-var-R \kore-symbol-Lbl'Stop'Map kore-element-var-K1 $= ( typecode-cache-Pattern-2 IMP-symbol-112-is-pattern element-var-is-var substitution-disjoint ) ACDBEF $.
substitution-375 $p #Substitution kore-element-var-K2 kore-element-var-K2 \kore-symbol-Lbl'Stop'Map kore-element-var-K1 $= ( typecode-cache-Pattern-119 IMP-symbol-112-is-pattern element-var-is-var substitution-disjoint ) BCDAEF $.
substitution-376 $p #Substitution ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map kore-element-var-K2 ) ( \kore-symbol-Lbl'Unds'Map'Unds' kore-element-var-K1 kore-element-var-K2 ) \kore-symbol-Lbl'Stop'Map kore-element-var-K1 $= ( IMP-symbol-112-is-pattern element-var-is-var typecode-cache-Pattern-119 typecode-cache-Pattern-25 substitution-var-same substitution-375 IMP-symbol-176-substitution ) ADCCBEAFBECADGABHI $.
substitution-377 $p #Substitution ( \kore-symbol-Lbl'Unds'Map'Unds' kore-element-var-K2 \kore-symbol-Lbl'Stop'Map ) ( \kore-symbol-Lbl'Unds'Map'Unds' kore-element-var-K2 kore-element-var-K1 ) \kore-symbol-Lbl'Stop'Map kore-element-var-K1 $= ( IMP-symbol-112-is-pattern element-var-is-var typecode-cache-Pattern-119 typecode-cache-Pattern-25 substitution-375 substitution-var-same IMP-symbol-176-substitution ) ADCBECBEAFABGCADHI $.
substitution-378 $p #Substitution ( \kore-equals \kore-sort-SortMap kore-sort-var-R ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map kore-element-var-K2 ) ( \kore-symbol-Lbl'Unds'Map'Unds' kore-element-var-K2 \kore-symbol-Lbl'Stop'Map ) ) ( \kore-equals \kore-sort-SortMap kore-sort-var-R ( \kore-symbol-Lbl'Unds'Map'Unds' kore-element-var-K1 kore-element-var-K2 ) ( \kore-symbol-Lbl'Unds'Map'Unds' kore-element-var-K2 kore-element-var-K1 ) ) \kore-symbol-Lbl'Stop'Map kore-element-var-K1 $= ( IMP-symbol-112-is-pattern IMP-sort-14-is-pattern typecode-cache-Pattern-2 typecode-cache-Pattern-119 IMP-symbol-176-is-pattern element-var-is-var typecode-cache-Pattern-122 typecode-cache-Pattern-123 substitution-disjoint substitution-374 substitution-376 substitution-377 substitution-kore-equals ) EAFDCGHCGDHEAFBCJBCKDBIEDBILABMBCNBCOP $.
substitution-379 $p #Substitution ( \kore-valid kore-sort-var-R ( \kore-equals \kore-sort-SortMap kore-sort-var-R ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map kore-element-var-K2 ) ( \kore-symbol-Lbl'Unds'Map'Unds' kore-element-var-K2 \kore-symbol-Lbl'Stop'Map ) ) ) ( \kore-valid kore-sort-var-R ( \kore-equals \kore-sort-SortMap kore-sort-var-R ( \kore-symbol-Lbl'Unds'Map'Unds' kore-element-var-K1 kore-element-var-K2 ) ( \kore-symbol-Lbl'Unds'Map'Unds' kore-element-var-K2 kore-element-var-K1 ) ) ) \kore-symbol-Lbl'Stop'Map kore-element-var-K1 $= ( typecode-cache-Pattern-2 IMP-symbol-112-is-pattern IMP-sort-14-is-pattern typecode-cache-Pattern-119 IMP-symbol-176-is-pattern kore-equals-is-pattern typecode-cache-Pattern-122 typecode-cache-Pattern-123 element-var-is-var substitution-374 substitution-378 substitution-kore-valid ) ADFADECGHCGEHIADFADBCJBCKIEBLABMABCNO $.
substitution-380 $p #Substitution ( \in-sort kore-element-var-x0 \kore-sort-SortMap ) ( \in-sort kore-element-var-K1 \kore-sort-SortMap ) kore-element-var-x0 kore-element-var-K1 $= ( typecode-cache-Pattern-16 IMP-sort-14-is-pattern element-var-is-var typecode-cache-Pattern-25 substitution-var-same substitution-167 substitution-in-sort ) BCBCDAFDAEBCAEGABHI $.
substitution-381 $p #Substitution ( \and ( \in-sort kore-element-var-x0 \kore-sort-SortMap ) \top ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortMap ) \top ) kore-element-var-x0 kore-element-var-K1 $= ( typecode-cache-Pattern-16 IMP-sort-14-is-pattern in-sort-is-pattern top-is-pattern typecode-cache-Pattern-25 element-var-is-var substitution-380 substitution-103 substitution-and ) BCBCDEFAGDEFAHABIABJK $.
substitution-382 $p #Substitution kore-element-var-K2 kore-element-var-K2 kore-element-var-x0 kore-element-var-K1 $= ( typecode-cache-Pattern-119 typecode-cache-Pattern-16 element-var-is-var substitution-disjoint ) BDCEAFG $.
substitution-383 $p #Substitution ( \kore-symbol-Lbl'Unds'Map'Unds' kore-element-var-x0 kore-element-var-K2 ) ( \kore-symbol-Lbl'Unds'Map'Unds' kore-element-var-K1 kore-element-var-K2 ) kore-element-var-x0 kore-element-var-K1 $= ( typecode-cache-Pattern-16 element-var-is-var typecode-cache-Pattern-119 typecode-cache-Pattern-25 substitution-var-same substitution-382 IMP-symbol-176-substitution ) AECDCDBFAGBFCDAEHABCIJ $.
substitution-384 $p #Substitution ( \kore-symbol-Lbl'Unds'Map'Unds' kore-element-var-K2 kore-element-var-x0 ) ( \kore-symbol-Lbl'Unds'Map'Unds' kore-element-var-K2 kore-element-var-K1 ) kore-element-var-x0 kore-element-var-K1 $= ( typecode-cache-Pattern-16 element-var-is-var typecode-cache-Pattern-119 typecode-cache-Pattern-25 substitution-382 substitution-var-same IMP-symbol-176-substitution ) AECDBFCDBFAGABCHCDAEIJ $.
substitution-385 $p #Substitution ( \kore-equals \kore-sort-SortMap kore-sort-var-R ( \kore-symbol-Lbl'Unds'Map'Unds' kore-element-var-x0 kore-element-var-K2 ) ( \kore-symbol-Lbl'Unds'Map'Unds' kore-element-var-K2 kore-element-var-x0 ) ) ( \kore-equals \kore-sort-SortMap kore-sort-var-R ( \kore-symbol-Lbl'Unds'Map'Unds' kore-element-var-K1 kore-element-var-K2 ) ( \kore-symbol-Lbl'Unds'Map'Unds' kore-element-var-K2 kore-element-var-K1 ) ) kore-element-var-x0 kore-element-var-K1 $= ( IMP-sort-14-is-pattern typecode-cache-Pattern-2 typecode-cache-Pattern-124 typecode-cache-Pattern-125 typecode-cache-Pattern-122 typecode-cache-Pattern-123 typecode-cache-Pattern-16 element-var-is-var substitution-167 substitution-105 substitution-383 substitution-384 substitution-kore-equals ) EAFCDGCDHEAFBCIBCJDKBLBDMABDNBCDOBCDPQ $.
substitution-386 $p #Substitution ( \kore-valid kore-sort-var-R ( \kore-equals \kore-sort-SortMap kore-sort-var-R ( \kore-symbol-Lbl'Unds'Map'Unds' kore-element-var-x0 kore-element-var-K2 ) ( \kore-symbol-Lbl'Unds'Map'Unds' kore-element-var-K2 kore-element-var-x0 ) ) ) ( \kore-valid kore-sort-var-R ( \kore-equals \kore-sort-SortMap kore-sort-var-R ( \kore-symbol-Lbl'Unds'Map'Unds' kore-element-var-K1 kore-element-var-K2 ) ( \kore-symbol-Lbl'Unds'Map'Unds' kore-element-var-K2 kore-element-var-K1 ) ) ) kore-element-var-x0 kore-element-var-K1 $= ( typecode-cache-Pattern-2 IMP-sort-14-is-pattern kore-equals-is-pattern typecode-cache-Pattern-124 typecode-cache-Pattern-125 typecode-cache-Pattern-122 typecode-cache-Pattern-123 typecode-cache-Pattern-16 element-var-is-var substitution-105 substitution-385 substitution-kore-valid ) AEFAECDHCDIGAEFAEBCJBCKGDLBMABDNABCDOP $.
substitution-387 $p #Substitution ( \imp ( \and ( \in-sort kore-element-var-x0 \kore-sort-SortMap ) \top ) ( \kore-valid kore-sort-var-R ( \kore-equals \kore-sort-SortMap kore-sort-var-R ( \kore-symbol-Lbl'Unds'Map'Unds' kore-element-var-x0 kore-element-var-K2 ) ( \kore-symbol-Lbl'Unds'Map'Unds' kore-element-var-K2 kore-element-var-x0 ) ) ) ) ( \imp ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortMap ) \top ) ( \kore-valid kore-sort-var-R ( \kore-equals \kore-sort-SortMap kore-sort-var-R ( \kore-symbol-Lbl'Unds'Map'Unds' kore-element-var-K1 kore-element-var-K2 ) ( \kore-symbol-Lbl'Unds'Map'Unds' kore-element-var-K2 kore-element-var-K1 ) ) ) ) kore-element-var-x0 kore-element-var-K1 $= ( IMP-sort-14-is-pattern typecode-cache-Pattern-2 typecode-cache-Pattern-16 in-sort-is-pattern top-is-pattern and-is-pattern kore-equals-is-pattern kore-valid-is-pattern typecode-cache-Pattern-124 typecode-cache-Pattern-125 typecode-cache-Pattern-25 typecode-cache-Pattern-122 typecode-cache-Pattern-123 element-var-is-var substitution-381 substitution-386 substitution-imp ) DGDGEHIJAFEAFCDMCDNKLBOEHIJAFEAFBCPBCQKLBRBDSABCDTUA $.
sorting-cache-258 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K2 \kore-sort-SortMap ) \top ) ) ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K2 \kore-sort-SortMap ) \top ) ) ) $= ( typecode-cache-Pattern-120 top-is-pattern typecode-cache-Pattern-119 IMP-sort-14-is-pattern in-sort-is-pattern rule-and-intro-alt2-sugar typecode-cache-Pattern-2 kore-is-sort-is-pattern and-is-pattern sorting-cache-255 sorting-cache-256 top-intro rule-weakening ) ABCAIJBEFGDKABLABCBEFGDABMABCDNOHH $.
sorting-rearrange-133 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K2 \kore-sort-SortMap ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-equals \kore-sort-SortMap kore-sort-var-R ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map kore-element-var-K2 ) ( \kore-symbol-Lbl'Unds'Map'Unds' kore-element-var-K2 \kore-symbol-Lbl'Stop'Map ) ) ) ) $= ( IMP-sort-14-is-pattern IMP-symbol-112-is-pattern typecode-cache-Pattern-2 kore-element-var-K1-elementvariable in-sort-is-pattern typecode-cache-Pattern-120 top-is-pattern and-is-pattern typecode-cache-Pattern-119 IMP-symbol-176-is-pattern kore-equals-is-pattern kore-valid-is-pattern kore-element-var-x0-elementvariable rule-and-intro-alt2-sugar typecode-cache-Pattern-122 typecode-cache-Pattern-123 typecode-cache-Pattern-25 kore-element-var-Val-elementvariable sorting-cache-258 imp-is-pattern proof-rule-prop-1 IMP-symbol-112-sorting proof-rule-mp top-intro rule-weakening typecode-cache-Pattern-124 typecode-cache-Pattern-125 typecode-cache-Pattern-16 sorting-rearrange-131 sorting-rearrange-132 element-var-is-var substitution-373 substitution-379 substitution-imp substitution-387 functional-substitution-alt rule-imp-transitivity ) ABHABHDCGIJJAECAEDBKLBKDLMNABHABHDCGIJABUAABHDCGIDCGABHDCGUBDCGABHUCUDUEABHIUFUGPPDAECAEFBQFBRMNAECAEDBKLBKDLMNAECAEBOUHBOUIMNABHFSCGIJDCGIJOUJCGIJTFOATBUKAFBULDDCGIJAECAEDBKLBKDLMNFSCGIJAECAEFBQFBRMNFUMFUNAFBUOUPAFBOUQURUS $.
sorting-cache-259 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \in-sort kore-element-var-K2 \kore-sort-SortMap ) \top ) ) ( \kore-is-sort kore-sort-var-R ) ) $= ( typecode-cache-Pattern-2 kore-is-sort-is-pattern top-is-pattern and-is-pattern typecode-cache-Pattern-119 IMP-sort-14-is-pattern in-sort-is-pattern and-elim-left-sugar rule-imp-transitivity imp-reflexivity ) ACDEFBGHIEFFACDEFACDACDEFBGHIEFJACDEFACDACDACDEJACDLKK $.
sorting-cache-260 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \in-sort kore-element-var-K2 \kore-sort-SortMap ) \top ) ) ( \in-sort kore-element-var-K2 \kore-sort-SortMap ) ) $= ( typecode-cache-Pattern-119 IMP-sort-14-is-pattern in-sort-is-pattern top-is-pattern and-is-pattern typecode-cache-Pattern-2 kore-is-sort-is-pattern rule-imp-transitivity and-elim-right-sugar and-elim-left-sugar imp-reflexivity ) AHIFGBCDEFGGBCDEFGBCDEAHIFGBCDEFGKBCDEFGBCDEBCDEBCDEFLBCDEMJJ $.
sorting-cache-261 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \in-sort kore-element-var-K2 \kore-sort-SortMap ) \top ) ) ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K2 \kore-sort-SortMap ) \top ) ) ) $= ( and-is-pattern top-is-pattern typecode-cache-Pattern-119 IMP-sort-14-is-pattern in-sort-is-pattern typecode-cache-Pattern-2 kore-is-sort-is-pattern rule-and-intro-alt2-sugar sorting-cache-259 sorting-cache-260 top-intro rule-weakening ) AHIDCBEFGDCCAHIBEFGDCABKAHIDCBEFGDCCBEFGDABLAHIDCBEFGDCCDMNJJ $.
sorting-rearrange-134 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \in-sort kore-element-var-K2 \kore-sort-SortMap ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-equals \kore-sort-SortMap kore-sort-var-R ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map kore-element-var-K2 ) ( \kore-symbol-Lbl'Unds'Map'Unds' kore-element-var-K2 \kore-symbol-Lbl'Stop'Map ) ) ) ) $= ( typecode-cache-Pattern-2 and-is-pattern typecode-cache-Pattern-119 top-is-pattern IMP-sort-14-is-pattern IMP-symbol-112-is-pattern IMP-symbol-176-is-pattern kore-is-sort-is-pattern in-sort-is-pattern typecode-cache-Pattern-120 kore-equals-is-pattern kore-valid-is-pattern sorting-cache-261 sorting-rearrange-133 rule-imp-transitivity ) ACJFDBEGKFDDABLACGACHBEIBEHIMNABOABPQ $.
substitution-388 $p #Substitution ( \and ( \in-sort \kore-symbol-Lbl'Stop'Map \kore-sort-SortMap ) \top ) ( \and ( \in-sort kore-element-var-K2 \kore-sort-SortMap ) \top ) \kore-symbol-Lbl'Stop'Map kore-element-var-K2 $= ( IMP-symbol-112-is-pattern IMP-sort-14-is-pattern element-var-is-var top-is-pattern in-sort-is-pattern typecode-cache-Pattern-119 substitution-disjoint substitution-var-same substitution-in-sort substitution-and ) BBCFEAGCFEADBBCAGCADBADICBADHJEBADHK $.
substitution-389 $p #Substitution kore-sort-var-R kore-sort-var-R \kore-symbol-Lbl'Stop'Map kore-element-var-K2 $= ( typecode-cache-Pattern-2 IMP-symbol-112-is-pattern element-var-is-var substitution-disjoint ) ACDBEF $.
substitution-390 $p #Substitution \kore-sort-SortMap \kore-sort-SortMap kore-element-var-x0 kore-element-var-K2 $= ( IMP-sort-14-is-pattern typecode-cache-Pattern-16 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-391 $p #Substitution ( \in-sort kore-element-var-x0 \kore-sort-SortMap ) ( \in-sort kore-element-var-K2 \kore-sort-SortMap ) kore-element-var-x0 kore-element-var-K2 $= ( typecode-cache-Pattern-16 IMP-sort-14-is-pattern element-var-is-var typecode-cache-Pattern-119 substitution-var-same substitution-390 substitution-in-sort ) BCBCDAFDAEBCAEGABHI $.
substitution-392 $p #Substitution \top \top kore-element-var-x0 kore-element-var-K2 $= ( top-is-pattern typecode-cache-Pattern-16 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-393 $p #Substitution ( \and ( \in-sort kore-element-var-x0 \kore-sort-SortMap ) \top ) ( \and ( \in-sort kore-element-var-K2 \kore-sort-SortMap ) \top ) kore-element-var-x0 kore-element-var-K2 $= ( typecode-cache-Pattern-16 IMP-sort-14-is-pattern in-sort-is-pattern top-is-pattern typecode-cache-Pattern-119 element-var-is-var substitution-391 substitution-392 substitution-and ) BCBCDEFAGDEFAHABIABJK $.
substitution-394 $p #Substitution kore-sort-var-R kore-sort-var-R kore-element-var-x0 kore-element-var-K2 $= ( typecode-cache-Pattern-2 typecode-cache-Pattern-16 element-var-is-var substitution-disjoint ) ADCEBFG $.
substitution-395 $p #Substitution \kore-symbol-Lbl'Stop'Map \kore-symbol-Lbl'Stop'Map kore-element-var-x0 kore-element-var-K2 $= ( IMP-symbol-112-is-pattern typecode-cache-Pattern-16 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-396 $p #Substitution ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map kore-element-var-x0 ) ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map kore-element-var-K2 ) kore-element-var-x0 kore-element-var-K2 $= ( typecode-cache-Pattern-16 element-var-is-var IMP-symbol-112-is-pattern typecode-cache-Pattern-119 substitution-395 substitution-var-same IMP-symbol-176-substitution ) ADBCEBCEAFABGBCADHI $.
substitution-397 $p #Substitution ( \kore-symbol-Lbl'Unds'Map'Unds' kore-element-var-x0 \kore-symbol-Lbl'Stop'Map ) ( \kore-symbol-Lbl'Unds'Map'Unds' kore-element-var-K2 \kore-symbol-Lbl'Stop'Map ) kore-element-var-x0 kore-element-var-K2 $= ( typecode-cache-Pattern-16 element-var-is-var IMP-symbol-112-is-pattern typecode-cache-Pattern-119 substitution-var-same substitution-395 IMP-symbol-176-substitution ) ADBCBCEAFEBCADGABHI $.
substitution-398 $p #Substitution ( \kore-equals \kore-sort-SortMap kore-sort-var-R ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map kore-element-var-x0 ) ( \kore-symbol-Lbl'Unds'Map'Unds' kore-element-var-x0 \kore-symbol-Lbl'Stop'Map ) ) ( \kore-equals \kore-sort-SortMap kore-sort-var-R ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map kore-element-var-K2 ) ( \kore-symbol-Lbl'Unds'Map'Unds' kore-element-var-K2 \kore-symbol-Lbl'Stop'Map ) ) kore-element-var-x0 kore-element-var-K2 $= ( IMP-symbol-112-is-pattern IMP-symbol-176-is-pattern typecode-cache-Pattern-16 IMP-sort-14-is-pattern typecode-cache-Pattern-2 typecode-cache-Pattern-119 element-var-is-var substitution-390 substitution-394 substitution-396 substitution-397 substitution-kore-equals ) GAHDCFECFDEGAHDBIEBIDECFBJBCKABCLBCMBCNO $.
sorting-rearrange-135 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-equals \kore-sort-SortMap kore-sort-var-R ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map \kore-symbol-Lbl'Stop'Map ) ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map \kore-symbol-Lbl'Stop'Map ) ) ) ) $= ( IMP-symbol-112-is-pattern kore-element-var-K2-elementvariable typecode-cache-Pattern-2 IMP-symbol-176-is-pattern IMP-sort-14-is-pattern typecode-cache-Pattern-119 and-is-pattern top-is-pattern kore-element-var-x0-elementvariable kore-equals-is-pattern element-var-is-var typecode-cache-Pattern-16 in-sort-is-pattern kore-valid-is-pattern kore-is-sort-is-pattern substitution-disjoint kore-element-var-Val-elementvariable substitution-389 substitution-var-same IMP-symbol-176-substitution substitution-kore-valid substitution-imp sorting-cache-58 sorting-cache-253 rule-and-intro-alt2-sugar sorting-rearrange-123 sorting-rearrange-134 substitution-388 substitution-kore-equals substitution-393 substitution-394 substitution-398 functional-substitution-alt rule-imp-transitivity ) ADPIHADPIHBFNIHHADFADBBEBBEKOADPIHADPIHBFNIHAUDAUEUFBADFADBCGECGBEKOADFADBBEBBEKOADFADBJMEJMBEKOADPIHCGFNIHBFNIHJMFNIHRCJARUGACUHBBFNIHADFADBBEBBEKOCGFNIHADFADBCGECGBEKOCLCUIADFADBBEBBEKADFADBCGECGBEKBCLACSFADBBEBBEFADBCGECGBEBCLFBCLQACSCLBBBBCGBBCLQBCLTUACLBBBCGBBCLTBBCLQUAUJUBUCJMJMFNIHADFADBJMEJMBEKOCGFNIHADFADBCGECGBEKOCLCJUKADFADBJMEJMBEKADFADBCGECGBEKJMCLACJULACJUMUBUCUNUO $.
sorting-cache-262 $p |- ( \imp \top ( \in-sort ( \kore-symbol-Lbl'-LT-'state'-GT-' ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map \kore-symbol-Lbl'Stop'Map ) ) \kore-sort-SortStateCell ) ) $= ( IMP-symbol-112-is-pattern IMP-symbol-176-is-pattern in-sort-is-pattern top-is-pattern IMP-sort-14-is-pattern IMP-symbol-120-is-pattern IMP-sort-9-is-pattern sorting-cache-254 IMP-symbol-120-sorting rule-imp-transitivity ) DAABECAABFGCHAABIJ $.
sorting-cache-263 $p |- ( \imp \top ( \in-sort ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) \kore-symbol-dotk ) ) ( \kore-symbol-Lbl'-LT-'state'-GT-' ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map \kore-symbol-Lbl'Stop'Map ) ) ) \kore-sort-SortTCell ) ) $= ( kore-dv-is-pattern IMP-sort-17-is-pattern string-literal-11-is-pattern IMP-sort-22-is-pattern kore-inj-is-pattern IMP-symbol-112-is-pattern IMP-sort-26-is-pattern BASIC-K-sort-1-is-pattern IMP-symbol-111-is-pattern IMP-symbol-148-is-pattern IMP-sort-13-is-pattern string-literal-10-is-pattern IMP-symbol-169-is-pattern IMP-symbol-220-is-pattern KSEQ-symbol-1-is-pattern KSEQ-symbol-0-is-pattern in-sort-is-pattern IMP-symbol-119-is-pattern IMP-symbol-176-is-pattern IMP-symbol-120-is-pattern top-is-pattern IMP-sort-7-is-pattern IMP-sort-9-is-pattern rule-imp-transitivity and-is-pattern IMP-symbol-114-is-pattern IMP-sort-29-is-pattern BASIC-K-sort-0-is-pattern sorting-cache-193 IMP-symbol-119-sorting sorting-cache-262 rule-and-intro-alt2-sugar IMP-symbol-114-sorting ) UAGHBCAIJBCADKDLAEMNEOPRUBQFFSTUCQUEGHBCAIJBCADKDLAEMNEOPRFFSTUFUGQUAGHBCAIJBCADKDLAEMNEOPRUBQFFSTUCQUAGHBCAIJBCADKDLAEMNEOPUHQGHBCAIJBCADKDLAEMNEOPRUBQUIGHBCAIJBCADKDLAEMNEOPUJUDUKULGHBCAIJBCADKDLAEMNEOPRFFSTUMUD $.
sorting-cache-264 $p |- ( \imp \top ( \in-sort ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) \kore-symbol-dotk ) ) ( \kore-symbol-Lbl'-LT-'state'-GT-' ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map \kore-symbol-Lbl'Stop'Map ) ) ) ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) ) \kore-sort-SortGeneratedTopCell ) ) $= ( kore-dv-is-pattern IMP-sort-22-is-pattern IMP-sort-17-is-pattern string-literal-11-is-pattern kore-inj-is-pattern IMP-symbol-112-is-pattern in-sort-is-pattern IMP-sort-26-is-pattern BASIC-K-sort-1-is-pattern IMP-symbol-111-is-pattern IMP-symbol-148-is-pattern IMP-sort-13-is-pattern string-literal-10-is-pattern IMP-symbol-169-is-pattern IMP-symbol-220-is-pattern KSEQ-symbol-1-is-pattern KSEQ-symbol-0-is-pattern IMP-symbol-119-is-pattern IMP-symbol-176-is-pattern IMP-symbol-120-is-pattern IMP-symbol-114-is-pattern string-literal-1-is-pattern IMP-symbol-116-is-pattern top-is-pattern IMP-sort-29-is-pattern IMP-sort-10-is-pattern and-is-pattern IMP-symbol-117-is-pattern IMP-sort-8-is-pattern sorting-cache-263 sorting-cache-23 rule-and-intro-alt2-sugar IMP-symbol-117-sorting rule-imp-transitivity ) UDHICDAJKCDABLBMAENOEPQRFFSTUAUEGBUBAUCUFGUGHICDAJKCDABLBMAENOEPQRFFSTUABUBAUCUHUIGUDHICDAJKCDABLBMAENOEPQRFFSTUAUEGBUBAUCUFGUJUKULHICDAJKCDABLBMAENOEPQRFFSTUABUBAUCUMUN $.
pattern-subsumption-0 $p |- ( \imp \top ( \kore-valid \kore-sort-SortGeneratedTopCell ( \kore-implies \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-top \kore-sort-SortGeneratedTopCell ) ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) \kore-symbol-dotk ) ) ( \kore-symbol-Lbl'-LT-'state'-GT-' \kore-symbol-Lbl'Stop'Map ) ) ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) \kore-symbol-dotk ) ) ( \kore-symbol-Lbl'-LT-'state'-GT-' ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map \kore-symbol-Lbl'Stop'Map ) ) ) ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) ) $= ( IMP-sort-8-is-pattern kore-dv-is-pattern IMP-sort-22-is-pattern IMP-symbol-112-is-pattern IMP-sort-17-is-pattern string-literal-11-is-pattern kore-inj-is-pattern kore-top-is-pattern kore-and-is-pattern kore-element-var-x0-elementvariable IMP-sort-26-is-pattern BASIC-K-sort-1-is-pattern IMP-symbol-111-is-pattern IMP-symbol-148-is-pattern IMP-sort-13-is-pattern string-literal-10-is-pattern IMP-symbol-169-is-pattern IMP-symbol-220-is-pattern KSEQ-symbol-1-is-pattern KSEQ-symbol-0-is-pattern IMP-symbol-119-is-pattern IMP-symbol-120-is-pattern string-literal-1-is-pattern IMP-symbol-116-is-pattern IMP-symbol-114-is-pattern IMP-symbol-117-is-pattern element-var-is-var IMP-symbol-176-is-pattern substitution-disjoint typecode-cache-Pattern-16 top-is-pattern kore-implies-is-pattern in-sort-is-pattern sorting-cache-0 kore-valid-is-pattern substitution-var-same IMP-symbol-120-substitution IMP-symbol-114-substitution IMP-symbol-117-substitution substitution-kore-and substitution-kore-implies substitution-kore-valid and-is-pattern rule-and-intro-alt2-sugar kore-and-sorting rule-imp-transitivity sorting-cache-264 kore-top-valid rule-weakening kore-weakening IMP-sort-14-is-pattern sorting-cache-15 sorting-cache-254 sorting-rearrange-130 sorting-cache-249 kore-implies-reflexivity-alt kore-equals-elim-alt kore-imp-conj-simplify ) AAAHAHIAHAAAHAHIKLEFBMNEFBCOCPBGQRGSTUADUBUECUCBUDUFIKLEFBMNEFBCOCPBGQRGSTUADDUHUBUECUCBUDUFUKUKAHAUMAHAUMVCAAHAHIAUMUKAHAUMAHAUMUNUNVDAAHAHVEVFUNVGAAAHAHIAHUKUKAAHUOAVHVIVJVKDDDUHAAAAHAHIKLEFBMNEFBCOCPBGQRGSTUADUBUECUCBUDUFIAAAHAHIKLEFBMNEFBCOCPBGQRGSTUADUBUECUCBUDUFIULAAAAAHAHIKLEFBMNEFBCOCPBGQRGSTUADUBUECUCBUDUFIAAAHAHIKLEFBMNEFBCOCPBGQRGSTUAJUJUBUECUCBUDUFIULUOAAAAHAHIKLEFBMNEFBCOCPBGQRGSTUADUBUECUCBUDUFIAAAHAHIKLEFBMNEFBCOCPBGQRGSTUADDUHUBUECUCBUDUFIULAAUKJVLVMVNAAAAHAHIKLEFBMNEFBCOCPBGQRGSTUADUBUECUCBUDUFIUKVOVPAAAAAHAHIKLEFBMNEFBCOCPBGQRGSTUADUBUECUCBUDUFIAAAHAHIKLEFBMNEFBCOCPBGQRGSTUADUBUECUCBUDUFIULAAAAAHAHIKLEFBMNEFBCOCPBGQRGSTUADUBUECUCBUDUFIAAAHAHIKLEFBMNEFBCOCPBGQRGSTUAJUJUBUECUCBUDUFIULDJUGADJUGUIAAAAHAHIKLEFBMNEFBCOCPBGQRGSTUADUBUECUCBUDUFIAAAHAHIKLEFBMNEFBCOCPBGQRGSTUADUBUECUCBUDUFIAAAAHAHIKLEFBMNEFBCOCPBGQRGSTUADUBUECUCBUDUFIAAAHAHIKLEFBMNEFBCOCPBGQRGSTUAJUJUBUECUCBUDUFIDJUGADJUGUIAAAHAHIKLEFBMNEFBCOCPBGQRGSTUADUBUECUCBUDUFIDJUGUIAAAHAHIKLEFBMNEFBCOCPBGQRGSTUADUBUECUCBUDUFAAAHAHIKLEFBMNEFBCOCPBGQRGSTUAJUJUBUECUCBUDUFDJUGADJUGUIAAHAHIDJUGUIJUGDKLEFBMNEFBCOCPBGQRGSTUADUBUECUCBUDKLEFBMNEFBCOCPBGQRGSTUAJUJUBUECUCBUDJUGDKLEFBMNEFBCOCPBGQRGSTUADUBKLEFBMNEFBCOCPBGQRGSTUAJUJUBKLEFBMNEFBCOCPBGQRGSTUADJUGUIJUGDDJUJDJUGUPUQURCUCBUDDJUGUIUSUTVAVBAAAAAHAHIKLEFBMNEFBCOCPBGQRGSTUADUBUECUCBUDUFIAAAHAHIKLEFBMNEFBCOCPBGQRGSTUADDUHUBUECUCBUDUFIULAAAAAHAHIKLEFBMNEFBCOCPBGQRGSTUADUBUECUCBUDUFIAAAHAHIKLEFBMNEFBCOCPBGQRGSTUAJUJUBUECUCBUDUFIULDDUHJUGADDUHJUGUIAAAAHAHIKLEFBMNEFBCOCPBGQRGSTUADUBUECUCBUDUFIAAAHAHIKLEFBMNEFBCOCPBGQRGSTUADDUHUBUECUCBUDUFIAAAAHAHIKLEFBMNEFBCOCPBGQRGSTUADUBUECUCBUDUFIAAAHAHIKLEFBMNEFBCOCPBGQRGSTUAJUJUBUECUCBUDUFIDDUHJUGADDUHJUGUIAAAHAHIKLEFBMNEFBCOCPBGQRGSTUADUBUECUCBUDUFIDDUHJUGUIAAAHAHIKLEFBMNEFBCOCPBGQRGSTUADDUHUBUECUCBUDUFAAAHAHIKLEFBMNEFBCOCPBGQRGSTUAJUJUBUECUCBUDUFDDUHJUGADDUHJUGUIAAHAHIDDUHJUGUIJUGDDUHKLEFBMNEFBCOCPBGQRGSTUADDUHUBUECUCBUDKLEFBMNEFBCOCPBGQRGSTUAJUJUBUECUCBUDJUGDDUHKLEFBMNEFBCOCPBGQRGSTUADDUHUBKLEFBMNEFBCOCPBGQRGSTUAJUJUBKLEFBMNEFBCOCPBGQRGSTUADDUHJUGUIJUGDDUHDDUHJUJDDUHJUGUPUQURCUCBUDDDUHJUGUIUSUTVAVBVQVR $.
pattern-subsumption-1 $p |- ( \imp \top ( \kore-valid \kore-sort-SortGeneratedTopCell ( \kore-implies \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-top \kore-sort-SortGeneratedTopCell ) ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) \kore-symbol-dotk ) ) ( \kore-symbol-Lbl'-LT-'state'-GT-' ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem ( \kore-dv \kore-sort-SortId "a" ) ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortKItem ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-top \kore-sort-SortGeneratedTopCell ) ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) \kore-symbol-dotk ) ) ( \kore-symbol-Lbl'-LT-'state'-GT-' ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem ( \kore-dv \kore-sort-SortId "a" ) ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortKItem ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) ) $= ( IMP-sort-8-is-pattern kore-dv-is-pattern IMP-sort-22-is-pattern kore-inj-is-pattern BASIC-K-sort-1-is-pattern IMP-sort-17-is-pattern kore-top-is-pattern kore-and-is-pattern string-literal-11-is-pattern string-literal-1-is-pattern IMP-sort-26-is-pattern IMP-symbol-111-is-pattern IMP-sort-13-is-pattern string-literal-10-is-pattern IMP-symbol-169-is-pattern IMP-symbol-220-is-pattern KSEQ-symbol-1-is-pattern KSEQ-symbol-0-is-pattern IMP-symbol-119-is-pattern IMP-symbol-112-is-pattern IMP-symbol-196-is-pattern IMP-symbol-176-is-pattern IMP-symbol-120-is-pattern IMP-symbol-114-is-pattern IMP-symbol-116-is-pattern IMP-symbol-117-is-pattern top-is-pattern sorting-cache-24 kore-implies-reflexivity-alt ) AAAAGAGHKELFIBCMCNBDOPDQRSTFEFIBDCECJBDUAUBUCUDCJBUEUFHUGUHUI $.
symbolic-step-0 $p |- ( \imp \top ( \kore-valid \kore-sort-SortGeneratedTopCell ( \kore-rewrites-star \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-top \kore-sort-SortGeneratedTopCell ) ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) \kore-symbol-dotk ) ) ( \kore-symbol-Lbl'-LT-'state'-GT-' \kore-symbol-Lbl'Stop'Map ) ) ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-top \kore-sort-SortGeneratedTopCell ) ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) \kore-symbol-dotk ) ) ( \kore-symbol-Lbl'-LT-'state'-GT-' ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem ( \kore-dv \kore-sort-SortId "a" ) ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortKItem ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) ) $= ( kore-dv-is-pattern IMP-sort-8-is-pattern IMP-sort-22-is-pattern kore-inj-is-pattern IMP-sort-17-is-pattern BASIC-K-sort-1-is-pattern kore-top-is-pattern string-literal-11-is-pattern string-literal-1-is-pattern in-sort-is-pattern IMP-symbol-112-is-pattern kore-and-is-pattern IMP-sort-26-is-pattern IMP-symbol-111-is-pattern IMP-sort-13-is-pattern string-literal-10-is-pattern IMP-symbol-169-is-pattern IMP-symbol-220-is-pattern KSEQ-symbol-1-is-pattern KSEQ-symbol-0-is-pattern IMP-symbol-119-is-pattern IMP-symbol-120-is-pattern IMP-symbol-114-is-pattern IMP-symbol-116-is-pattern top-is-pattern IMP-symbol-117-is-pattern IMP-symbol-176-is-pattern IMP-symbol-196-is-pattern IMP-symbol-148-is-pattern sorting-cache-0 and-is-pattern rule-and-intro-alt2-sugar rule-imp-transitivity IMP-sort-29-is-pattern IMP-sort-10-is-pattern kore-and-sorting sorting-cache-248 sorting-cache-24 sorting-cache-22 sorting-cache-23 IMP-symbol-117-sorting predicate-intro-top kore-is-predicate-top kore-rewrites-subsumption-rhs kore-implies-is-pattern kore-valid-is-pattern top-intro proof-rule-mp kore-implies-reflexivity rule-weakening kore-implies-reflexivity-alt kore-implies-compat-in-kore-and sorting-cache-249 kore-is-predicate-and-alt pattern-subsumption-0 sorting-cache-246 sorting-rearrange-122 kore-and-elim-right-alt3 kore-rewrites-subsumption-lhs kore-rewrites-constraint-lemma pattern-subsumption-1 kore-rewrites-star-intro kore-rewrites-star-subsumption-lhs ) BBBBGBGLMFEHANUIEHACOCPADQRDSTUAKUBUCCIAUDUFLBBBGBGLMFEHANUIEHACOCPADQRDSTUAKUBUCCIAUDUFLBBBGBGLMFNEHACOCPADQRDSTUAKEFEHADCFCIADUHUGUBUCCIAUDUFLUEBBBGBGLBBGBGLMFEHANUIEHACOCPADQRDSTUAKUBUCCIAUDUFMFEHANUIEHACOCPADQRDSTUAKUBUCCIAUDUFUEUEBGBJBGBJUKBBGBGLBJUEBGBJBGBJUJUJULBBGBGUPUMUEBGBJBGBJUKBBGBGLBJUEBGBJBGBJUJUJULBBGBGUPUMUQUQUEBBBBGBGLBBGBGLVEVFBBBGBGLUEBBGBGLBJUEBGBJBGBJUKBBGBGLBJUEBGBJBGBJUJUJULBBGBGUPUMVGVHVIVJBMFEHANUIEHACOCPADQRDSTUAKUBUCCIAUDUFUEUQVKVLBBBBGBGLMFEHANUIEHACOCPADQRDSTUAKUBUCCIAUDUFLBBBGBGLMFNEHACOCPADQRDSTUAKEFEHADCFCIADUHUGUBUCCIAUDUFLUEVMURBBBBGBGLMFEHANUIEHACOCPADQRDSTUAKUBUCCIAUDUFLBBBGBGLMFNEHACOCPADQRDSTUAKEFEHADCFCIADUHUGUBUCCIAUDUFLBBBGBGLMFNEHACOCPADQRDSTUAKEFEHADCFCIADUHUGUBUCCIAUDUFLUEVBURURBBBGBGLMFEHANUIEHACOCPADQRDSTUAKUBUCCIAUDUFMFNEHACOCPADQRDSTUAKEFEHADCFCIADUHUGUBUCCIAUDUFUEBBGBGBVCBVCVNUEBGBJBGBJUKBBGBGLBJUEBGBJBGBJUJUJULBBGBGUPUMUQUEMFNEHACOCPADQRDSTUAKEFEHADCFCIADUHUGUBUCUNJCIAUDUOJUKMFNEHACOCPADQRDSTUAKEFEHADCFCIADUHUGUBUCCIAUDUFBJUEMFNEHACOCPADQRDSTUAKEFEHADCFCIADUHUGUBUCUNJCIAUDUOJUSUTULMFNEHACOCPADQRDSTUAKEFEHADCFCIADUHUGUBUCCIAUDVAUMBBBBGBGLMFEHANUIEHACOCPADQRDSTUAKUBUCCIAUDUFLBBGMFEHANUIEHACOCPADQRDSTUAKKUGUBUCCIAUDUFLMFNEHACOCPADQRDSTUAKEFEHADCFCIADUHUGUBUCCIAUDUFUEVOBBBGMFEHANUIEHACOCPADQRDSTUAKKUGUBUCCIAUDUFLBBGMFNEHACOCPADQRDSTUAKEFEHADCFCIADUHUGUBUCCIAUDUFLMFNEHACOCPADQRDSTUAKEFEHADCFCIADUHUGUBUCCIAUDUFUEVBVPUEMFNEHACOCPADQRDSTUAKEFEHADCFCIADUHUGUBUCUNJCIAUDUOJUKMFNEHACOCPADQRDSTUAKEFEHADCFCIADUHUGUBUCCIAUDUFBJUEMFNEHACOCPADQRDSTUAKEFEHADCFCIADUHUGUBUCUNJCIAUDUOJUSUTULMFNEHACOCPADQRDSTUAKEFEHADCFCIADUHUGUBUCCIAUDVAUMVQBBGMFNEHACOCPADQRDSTUAKEFEHADCFCIADUHUGUBUCCIAUDUFUEUJUEMFNEHACOCPADQRDSTUAKEFEHADCFCIADUHUGUBUCUNJCIAUDUOJUKMFNEHACOCPADQRDSTUAKEFEHADCFCIADUHUGUBUCCIAUDUFBJUEMFNEHACOCPADQRDSTUAKEFEHADCFCIADUHUGUBUCUNJCIAUDUOJUSUTULMFNEHACOCPADQRDSTUAKEFEHADCFCIADUHUGUBUCCIAUDVAUMVRVDVSVTWAVDWBWC $.
intermediate-state-1 $p |- ( \imp \top ( \kore-valid \kore-sort-SortGeneratedTopCell ( \kore-rewrites-star \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-top \kore-sort-SortGeneratedTopCell ) ) ( \kore-symbol-LblinitGeneratedTopCell ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) ) ) ) ) ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-top \kore-sort-SortGeneratedTopCell ) ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) \kore-symbol-dotk ) ) ( \kore-symbol-Lbl'-LT-'state'-GT-' ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem ( \kore-dv \kore-sort-SortId "a" ) ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortKItem ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) ) $= ( IMP-sort-8-is-pattern kore-dv-is-pattern IMP-sort-22-is-pattern kore-inj-is-pattern IMP-sort-17-is-pattern kore-top-is-pattern kore-and-is-pattern string-literal-11-is-pattern BASIC-K-sort-1-is-pattern string-literal-1-is-pattern IMP-symbol-112-is-pattern IMP-sort-26-is-pattern IMP-symbol-111-is-pattern IMP-sort-13-is-pattern string-literal-10-is-pattern IMP-symbol-169-is-pattern IMP-symbol-220-is-pattern KSEQ-symbol-1-is-pattern KSEQ-symbol-0-is-pattern IMP-symbol-119-is-pattern IMP-symbol-120-is-pattern IMP-symbol-114-is-pattern IMP-symbol-116-is-pattern IMP-symbol-117-is-pattern IMP-symbol-148-is-pattern IMP-symbol-196-is-pattern IMP-symbol-176-is-pattern top-is-pattern IMP-sort-20-is-pattern sorting-cache-249 string-literal-9-is-pattern IMP-symbol-216-is-pattern sorting-cache-46 sorting-cache-24 equality-elim-3 kore-implies-reflexivity-alt symbolic-step-0 kore-rewrites-star-subsumption-lhs kore-rewrites-star-transitivity ) AAAAFAFGKUIIUIUKBDLIEHBMUEEHBCNCOBDPQDUFUGULGAAAFAFGLIEHBMUEEHBCNCOBDPQDRSTKUAUBCJBUCUDGAAAFAFGLIMEHBCNCOBDPQDRSTKEIEHBDCICJBDUFUGUAUBCJBUCUDGUHUMUJUNUOAAAAFAFGLIEHBMUEEHBCNCOBDPQDRSTKUAUBCJBUCUDGAAAFAFGLIEHBMUEEHBCNCOBDPQDRSTKUAUBCJBUCUDGAAAFAFGLIMEHBCNCOBDPQDRSTKEIEHBDCICJBDUFUGUAUBCJBUCUDGUHAAAAFAFGLIEHBMUEEHBCNCOBDPQDRSTKUAUBCJBUCUDGUHUJUPUQURUS $.
sorting-rearrange-136 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \exists kore-element-var-x1 ( \eq kore-element-var-x1 ( \kore-dv \kore-sort-SortId "a" ) ) ) ) $= ( top-is-pattern IMP-sort-17-is-pattern typecode-cache-Pattern-2 kore-is-sort-is-pattern and-is-pattern string-literal-11-is-pattern kore-dv-is-pattern typecode-cache-Pattern-19 eq-is-pattern exists-is-pattern top-intro rule-weakening sorting-cache-4 sorting-rearrange-16 kore-functional rule-imp-transitivity ) AEFCGCBJDHIKBLAEFCGCMNDDHICBOBPQR $.
sorting-cache-265 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \in-sort kore-element-var-From \kore-sort-SortId ) \top ) ) ( \kore-is-sort kore-sort-var-R ) ) $= ( typecode-cache-Pattern-2 kore-is-sort-is-pattern top-is-pattern and-is-pattern typecode-cache-Pattern-21 IMP-sort-17-is-pattern in-sort-is-pattern and-elim-left-sugar rule-imp-transitivity imp-reflexivity ) ACDEFBGHIEFFACDEFACDACDEFBGHIEFJACDEFACDACDACDEJACDLKK $.
sorting-cache-266 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \in-sort kore-element-var-From \kore-sort-SortId ) \top ) ) ( \in-sort kore-element-var-From \kore-sort-SortId ) ) $= ( typecode-cache-Pattern-21 IMP-sort-17-is-pattern in-sort-is-pattern top-is-pattern and-is-pattern typecode-cache-Pattern-2 kore-is-sort-is-pattern rule-imp-transitivity and-elim-right-sugar and-elim-left-sugar imp-reflexivity ) AHIFGBCDEFGGBCDEFGBCDEAHIFGBCDEFGKBCDEFGBCDEBCDEBCDEFLBCDEMJJ $.
sorting-cache-267 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \in-sort kore-element-var-From \kore-sort-SortId ) \top ) ) ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-From \kore-sort-SortId ) \top ) ) ) $= ( and-is-pattern top-is-pattern typecode-cache-Pattern-21 IMP-sort-17-is-pattern in-sort-is-pattern typecode-cache-Pattern-2 kore-is-sort-is-pattern rule-and-intro-alt2-sugar sorting-cache-265 sorting-cache-266 top-intro rule-weakening ) AHIDCBEFGDCCAHIBEFGDCABKAHIDCBEFGDCCBEFGDABLAHIDCBEFGDCCDMNJJ $.
typecode-cache-Pattern-126 $p #Pattern ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-From \kore-sort-SortId ) \top ) ) $= ( and-is-pattern typecode-cache-Pattern-2 kore-is-sort-is-pattern typecode-cache-Pattern-21 IMP-sort-17-is-pattern in-sort-is-pattern top-is-pattern ) ADEBFGHICC $.
typecode-cache-Pattern-127 $p #Pattern ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem kore-element-var-From ) ) $= ( BASIC-K-sort-1-is-pattern typecode-cache-Pattern-2 typecode-cache-Pattern-3 IMP-sort-17-is-pattern typecode-cache-Pattern-21 kore-inj-is-pattern kore-equals-is-pattern ) DAEBFGDCHIJ $.
sorting-rearrange-137 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \in-sort kore-element-var-From \kore-sort-SortId ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem kore-element-var-From ) ) ) ) ) $= ( typecode-cache-Pattern-2 and-is-pattern top-is-pattern kore-is-sort-is-pattern typecode-cache-Pattern-21 IMP-sort-17-is-pattern in-sort-is-pattern typecode-cache-Pattern-126 BASIC-K-sort-1-is-pattern typecode-cache-Pattern-127 kore-exists-is-pattern kore-valid-is-pattern sorting-cache-267 IMP-axiom-32 rule-imp-transitivity ) ADGFECHIJFEEACKADLADABCMBNOACPABCQR $.
typecode-cache-Pattern-128 $p #Pattern ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem kore-element-var-x0 ) ) $= ( BASIC-K-sort-1-is-pattern typecode-cache-Pattern-2 typecode-cache-Pattern-3 IMP-sort-17-is-pattern typecode-cache-Pattern-16 kore-inj-is-pattern kore-equals-is-pattern ) DAEBFGDCHIJ $.
substitution-399 $p #Substitution kore-sort-var-R kore-sort-var-R ( \kore-dv \kore-sort-SortId "a" ) kore-element-var-From $= ( typecode-cache-Pattern-2 IMP-sort-17-is-pattern string-literal-11-is-pattern kore-dv-is-pattern element-var-is-var substitution-disjoint ) ACDEFBGH $.
substitution-400 $p #Substitution kore-element-var-Val kore-element-var-Val ( \kore-dv \kore-sort-SortId "a" ) kore-element-var-From $= ( typecode-cache-Pattern-3 IMP-sort-17-is-pattern string-literal-11-is-pattern kore-dv-is-pattern element-var-is-var substitution-disjoint ) ACDEFBGH $.
substitution-401 $p #Substitution ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem ( \kore-dv \kore-sort-SortId "a" ) ) ) ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem kore-element-var-From ) ) ( \kore-dv \kore-sort-SortId "a" ) kore-element-var-From $= ( IMP-sort-17-is-pattern BASIC-K-sort-1-is-pattern string-literal-11-is-pattern kore-dv-is-pattern element-var-is-var substitution-disjoint typecode-cache-Pattern-2 typecode-cache-Pattern-3 kore-inj-is-pattern typecode-cache-Pattern-21 substitution-399 substitution-400 substitution-var-same substitution-kore-inj substitution-kore-equals ) EAJBKDEDFGLEAJBKDECMLDFGCHEDFGCHIACNBCODEDFGDECMDFGCHDDFGCHIEDFGCHIDFGCHPQR $.
substitution-402 $p #Substitution \kore-sort-SortId \kore-sort-SortId kore-element-var-x0 kore-element-var-From $= ( IMP-sort-17-is-pattern typecode-cache-Pattern-16 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-403 $p #Substitution ( \in-sort kore-element-var-x0 \kore-sort-SortId ) ( \in-sort kore-element-var-From \kore-sort-SortId ) kore-element-var-x0 kore-element-var-From $= ( typecode-cache-Pattern-16 IMP-sort-17-is-pattern element-var-is-var typecode-cache-Pattern-21 substitution-var-same substitution-402 substitution-in-sort ) BCBCDAFDAEBCAEGABHI $.
substitution-404 $p #Substitution ( \and ( \in-sort kore-element-var-x0 \kore-sort-SortId ) \top ) ( \and ( \in-sort kore-element-var-From \kore-sort-SortId ) \top ) kore-element-var-x0 kore-element-var-From $= ( typecode-cache-Pattern-16 IMP-sort-17-is-pattern in-sort-is-pattern top-is-pattern typecode-cache-Pattern-21 element-var-is-var substitution-403 substitution-50 substitution-and ) BCBCDEFAGDEFAHABIABJK $.
substitution-405 $p #Substitution ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem kore-element-var-x0 ) ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem kore-element-var-From ) kore-element-var-x0 kore-element-var-From $= ( typecode-cache-Pattern-16 IMP-sort-17-is-pattern BASIC-K-sort-1-is-pattern element-var-is-var typecode-cache-Pattern-21 substitution-402 substitution-53 substitution-var-same substitution-kore-inj ) DEBCDEAGBCAFABHABIBCAFJK $.
substitution-406 $p #Substitution ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem kore-element-var-x0 ) ) ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem kore-element-var-From ) ) kore-element-var-x0 kore-element-var-From $= ( BASIC-K-sort-1-is-pattern typecode-cache-Pattern-2 typecode-cache-Pattern-3 IMP-sort-17-is-pattern typecode-cache-Pattern-16 kore-inj-is-pattern typecode-cache-Pattern-21 element-var-is-var substitution-53 substitution-52 substitution-54 substitution-405 substitution-kore-equals ) EAFBGHEDIJEAFBGHECKJDICLCDMACDNBCDOCDPQ $.
substitution-407 $p #Substitution ( \kore-exists \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem kore-element-var-x0 ) ) ) ( \kore-exists \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem kore-element-var-From ) ) ) kore-element-var-x0 kore-element-var-From $= ( BASIC-K-sort-1-is-pattern typecode-cache-Pattern-2 typecode-cache-Pattern-128 typecode-cache-Pattern-127 typecode-cache-Pattern-16 element-var-is-var substitution-53 substitution-52 substitution-406 substitution-kore-exists-alt ) EAFABDGEAFABCHDIBCJCDKACDLABCDMN $.
sorting-cache-268 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \in-sort ( \kore-dv \kore-sort-SortId "a" ) \kore-sort-SortId ) \top ) ) $= ( top-is-pattern typecode-cache-Pattern-2 kore-is-sort-is-pattern and-is-pattern IMP-sort-17-is-pattern string-literal-11-is-pattern kore-dv-is-pattern in-sort-is-pattern sorting-cache-104 top-intro rule-weakening rule-and-intro-alt2-sugar ) ACDBEFGHFIBAJACDBEBKLM $.
sorting-rearrange-138 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem ( \kore-dv \kore-sort-SortId "a" ) ) ) ) ) ) $= ( IMP-sort-17-is-pattern typecode-cache-Pattern-2 kore-element-var-From-elementvariable BASIC-K-sort-1-is-pattern string-literal-11-is-pattern kore-dv-is-pattern top-is-pattern and-is-pattern kore-exists-is-pattern in-sort-is-pattern kore-element-var-x0-elementvariable element-var-is-var kore-valid-is-pattern typecode-cache-Pattern-127 kore-is-sort-is-pattern typecode-cache-Pattern-3 kore-inj-is-pattern kore-equals-is-pattern typecode-cache-Pattern-21 typecode-cache-Pattern-16 typecode-cache-Pattern-128 substitution-disjoint kore-element-var-x1-elementvariable substitution-399 substitution-kore-valid substitution-imp sorting-cache-58 sorting-cache-268 rule-and-intro-alt2-sugar sorting-rearrange-136 sorting-rearrange-137 substitution-var-same substitution-in-sort substitution-and substitution-401 substitution-kore-exists-alt substitution-404 substitution-52 substitution-407 functional-substitution-alt rule-imp-transitivity ) ADQIJADQIJCGHCLIJJADFADFADBRCFCGHSTBKOADQIJADQIJCGHCLIJAUIAUJUKCGHADFADABEPBKOADFADFADBRCFCGHSTBKOADFADABMUCBKOADQIJEUACLIJCGHCLIJMUBCLIJUEEMAUEULABEUMCGHCGHCLIJADFADFADBRCFCGHSTBKOEUACLIJADFADABEPBKOENCGHCGHCLIEUACLIENCGHCGHCEUACENCGHENUNCCGHENUDUOICGHENUDUPADFADFADBRCFCGHSTBKADFADABEPBKCGHENAEUFFADFADBRCFCGHSTFADABEPCGHBENFCGHENUDAEUFABEUQURUGUHMUBMUBCLIJADFADABMUCBKOEUACLIJADFADABEPBKOENEMUSADFADABMUCBKADFADABEPBKMUBENAEMUTABEMVAUGUHVBVC $.
sorting-rearrange-139 $p |- ( \imp ( \and \top ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem ( \kore-dv \kore-sort-SortId "a" ) ) ) ) ) ) $= ( top-is-pattern typecode-cache-Pattern-2 and-is-pattern kore-is-sort-is-pattern BASIC-K-sort-1-is-pattern IMP-sort-17-is-pattern typecode-cache-Pattern-3 string-literal-11-is-pattern kore-dv-is-pattern kore-inj-is-pattern kore-equals-is-pattern kore-exists-is-pattern kore-valid-is-pattern sorting-cache-47 top-intro rule-weakening rule-and-intro-alt2-sugar sorting-rearrange-138 rule-imp-transitivity ) CADFCEEADFCEADGADGADBIHGHJKLMBNOCADFCEEADFCAPCADFCEECQRSABTUA $.
sorting-rearrange-140 $p |- ( \imp \top ( \kore-valid \unit-sort ( \kore-exists \kore-sort-SortKItem \unit-sort kore-element-var-Val ( \kore-equals \kore-sort-SortKItem \unit-sort kore-element-var-Val ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem ( \kore-dv \kore-sort-SortId "a" ) ) ) ) ) ) $= ( BASIC-K-sort-1-is-pattern kore-sort-var-R-elementvariable IMP-sort-17-is-pattern unit-sort-is-symbol symbol-is-pattern kore-sort-var-x0-elementvariable typecode-cache-Pattern-2 string-literal-11-is-pattern kore-dv-is-pattern kore-inj-is-pattern typecode-cache-Pattern-6 typecode-cache-Pattern-3 top-is-pattern kore-equals-is-pattern element-var-is-var kore-exists-is-pattern and-is-pattern kore-is-sort-is-pattern kore-valid-is-pattern substitution-var-same x-is-element-var rule-weakening substitution-58 substitution-disjoint substitution-kore-equals substitution-kore-exists-alt substitution-kore-valid substitution-imp substitution-59 top-intro sorting-cache-49 rule-and-intro-alt2-sugar typecode-cache-Pattern-1 exists-is-pattern unit-sort-is-functional sorting-rearrange-139 substitution-2 substitution-4 substitution-9 substitution-11 functional-substitution-alt rule-imp-transitivity ) NNEFSNRREFBEFBEFAMDBDIJKOAQTNNEFSNRNNUKUCULUMEFCHBCHBCHAMDBDIJKOAQTEFBEFBEFAMDBDIJKOAQTGLBGLBGLAMDBDIJKOAQTNCHSNREFSNRGLSNRUBCGNUBUNUBUOUBUPUCCAUQEFEFSNREFBEFBEFAMDBDIJKOAQTCHSNRCHBCHBCHAMDBDIJKOAQTCPCUREFBEFBEFAMDBDIJKOAQCHBCHBCHAMDBDIJKOAQEFCPEFCPUABEFBEFAMDBDIJKOBCHBCHAMDBDIJKOEFACPCUDEFCPUABEFAMDBDIJKBCHAMDBDIJKEFCPCUDEFCPUACAUSDBDIJKEFCPUEUFUGUHUIGLGLSNRGLBGLBGLAMDBDIJKOAQTCHSNRCHBCHBCHAMDBDIJKOAQTCPCGUTGLBGLBGLAMDBDIJKOAQCHBCHBCHAMDBDIJKOAQGLCPGLCPUABGLBGLAMDBDIJKOBCHBCHAMDBDIJKOGLACPCGUJGLCPUABGLAMDBDIJKBCHAMDBDIJKGLCPCGUJGLCPUACAGVADBDIJKGLCPUEUFUGUHUIVBVC $.
sorting-rearrange-141 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortKItem ) \top ) ) ( \exists kore-element-var-Val ( \eq kore-element-var-Val ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem ( \kore-dv \kore-sort-SortId "a" ) ) ) ) ) $= ( IMP-sort-17-is-pattern top-is-pattern BASIC-K-sort-1-is-pattern typecode-cache-Pattern-26 string-literal-11-is-pattern kore-dv-is-pattern kore-inj-is-pattern typecode-cache-Pattern-3 eq-is-pattern exists-is-pattern top-intro rule-weakening sorting-cache-17 sorting-rearrange-140 kore-functional rule-imp-transitivity ) ACGEBKDFDHIJLBMACGENOFDFDHIJEBPBQRS $.
typecode-cache-Pattern-129 $p #Pattern ( \kore-equals \kore-sort-SortMap kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem ( \kore-dv \kore-sort-SortId "a" ) ) kore-element-var-K1 ) ) $= ( IMP-sort-17-is-pattern IMP-sort-14-is-pattern typecode-cache-Pattern-2 typecode-cache-Pattern-3 BASIC-K-sort-1-is-pattern string-literal-11-is-pattern kore-dv-is-pattern kore-inj-is-pattern typecode-cache-Pattern-25 IMP-symbol-196-is-pattern kore-equals-is-pattern ) EAFBGDHDIJKCLMN $.
substitution-408 $p #Substitution ( \kore-exists \kore-sort-SortMap kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortMap kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem ( \kore-dv \kore-sort-SortId "a" ) ) kore-element-var-K1 ) ) ) ( \kore-exists \kore-sort-SortMap kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortMap kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' kore-element-var-K0 kore-element-var-K1 ) ) ) ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem ( \kore-dv \kore-sort-SortId "a" ) ) kore-element-var-K0 $= ( IMP-sort-17-is-pattern BASIC-K-sort-1-is-pattern string-literal-11-is-pattern kore-dv-is-pattern kore-inj-is-pattern element-var-is-var IMP-sort-14-is-pattern typecode-cache-Pattern-2 substitution-disjoint typecode-cache-Pattern-25 typecode-cache-Pattern-3 typecode-cache-Pattern-129 typecode-cache-Pattern-30 IMP-symbol-196-is-pattern typecode-cache-Pattern-29 typecode-cache-Pattern-27 substitution-var-same IMP-symbol-196-substitution substitution-kore-equals substitution-kore-exists-alt ) KALABDPKALABCDQEFEGHIBCJKEFEGHICJMALEFEGHICJMKALBOEFEGHIDNRKALBOCDSEFEGHICJKEFEGHICJMALEFEGHICJMBOEFEGHICJMCJEFEGHIEFEGHIDNCTDNEFEGHICJUADNEFEGHICJMUBUCUD $.
sorting-cache-269 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortKItem ) \top ) ) ( \and ( \kore-is-sort \kore-sort-SortId ) ( \kore-is-sort \kore-sort-SortKItem ) ) ) $= ( kore-is-sort-is-pattern typecode-cache-Pattern-26 IMP-sort-17-is-pattern BASIC-K-sort-1-is-pattern imp-is-pattern proof-rule-prop-1 proof-rule-mp IMP-sort-17-sort BASIC-K-sort-1-sort rule-and-intro-alt2-sugar ) ABDECFCECABDECGECABDHJIFCABDFCGFCABDHKIL $.
sorting-cache-270 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortKItem ) \top ) ) ( \in-sort ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem ( \kore-dv \kore-sort-SortId "a" ) ) \kore-sort-SortKItem ) ) $= ( IMP-sort-17-is-pattern string-literal-11-is-pattern kore-dv-is-pattern in-sort-is-pattern BASIC-K-sort-1-is-pattern typecode-cache-Pattern-26 kore-is-sort-is-pattern and-is-pattern kore-inj-is-pattern sorting-cache-269 imp-is-pattern proof-rule-prop-1 kore-dv-sorting proof-rule-mp rule-and-intro-alt2-sugar INJ-symbol-0-sorting rule-imp-transitivity ) ABHCIGIJCDECFJCGCDEKGFABHCIGIJCDECFABLCDECFABHCDECFMCDECFABHNCDOPQCGCDERS $.
sorting-rearrange-142 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortKItem ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortMap kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortMap kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem ( \kore-dv \kore-sort-SortId "a" ) ) kore-element-var-K1 ) ) ) ) ) $= ( IMP-sort-17-is-pattern BASIC-K-sort-1-is-pattern kore-element-var-K0-elementvariable typecode-cache-Pattern-2 string-literal-11-is-pattern kore-dv-is-pattern kore-inj-is-pattern top-is-pattern in-sort-is-pattern and-is-pattern IMP-sort-14-is-pattern kore-exists-is-pattern element-var-is-var kore-valid-is-pattern kore-element-var-x0-elementvariable typecode-cache-Pattern-26 typecode-cache-Pattern-27 typecode-cache-Pattern-129 typecode-cache-Pattern-30 typecode-cache-Pattern-16 substitution-disjoint rule-and-intro-alt2-sugar typecode-cache-Pattern-33 substitution-imp sorting-cache-64 sorting-cache-270 top-intro rule-weakening sorting-rearrange-141 sorting-rearrange-13 substitution-var-same substitution-in-sort substitution-and substitution-408 substitution-kore-valid substitution-64 substitution-72 functional-substitution-alt rule-imp-transitivity ) ACSACSDEDHIJELKMMAGNAGABCUABOQACSACSDEDHIJELKMACUHACSDEDHIJELKACUIACSKUJUKUEUEDEDHIJAGNAGABFCUBBOQAGNAGABCUABOQAGNAGABCRUFBOQACSFTELKMDEDHIJELKMRUCELKMBFRABCULABFCUMDEDHIJDEDHIJELKMAGNAGABCUABOQFTELKMAGNAGABFCUBBOQFPDEDHIJDEDHIJELKFTELKFPDEDHIJDEDHIJEFTEFPDEDHIJFPUNEDEDHIJFPUDUOKDEDHIJFPUDUPAGNAGABCUABOAGNAGABFCUBBODEDHIJFPAGDEDHIJFPUDABFCUQURUGRUCRUCELKMAGNAGABCRUFBOQFTELKMAGNAGABFCUBBOQFPFRUSABFCRUTUGVAVB $.
typecode-cache-Pattern-130 $p #Pattern ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortInt \kore-sort-SortKItem kore-element-var-From ) ) $= ( BASIC-K-sort-1-is-pattern typecode-cache-Pattern-2 typecode-cache-Pattern-3 IMP-sort-22-is-pattern typecode-cache-Pattern-21 kore-inj-is-pattern kore-equals-is-pattern ) DAEBFGDCHIJ $.
sorting-rearrange-143 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \in-sort kore-element-var-From \kore-sort-SortInt ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortInt \kore-sort-SortKItem kore-element-var-From ) ) ) ) ) $= ( typecode-cache-Pattern-2 and-is-pattern top-is-pattern kore-is-sort-is-pattern typecode-cache-Pattern-21 IMP-sort-22-is-pattern in-sort-is-pattern typecode-cache-Pattern-62 BASIC-K-sort-1-is-pattern typecode-cache-Pattern-130 kore-exists-is-pattern kore-valid-is-pattern sorting-cache-90 IMP-axiom-37 rule-imp-transitivity ) ADGFECHIJFEEACKADLADABCMBNOACPABCQR $.
typecode-cache-Pattern-131 $p #Pattern ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortInt \kore-sort-SortKItem kore-element-var-x0 ) ) $= ( BASIC-K-sort-1-is-pattern typecode-cache-Pattern-2 typecode-cache-Pattern-3 IMP-sort-22-is-pattern typecode-cache-Pattern-16 kore-inj-is-pattern kore-equals-is-pattern ) DAEBFGDCHIJ $.
substitution-409 $p #Substitution kore-sort-var-R kore-sort-var-R ( \kore-dv \kore-sort-SortInt "0" ) kore-element-var-From $= ( typecode-cache-Pattern-2 IMP-sort-22-is-pattern string-literal-1-is-pattern kore-dv-is-pattern element-var-is-var substitution-disjoint ) ACDEFBGH $.
substitution-410 $p #Substitution kore-element-var-Val kore-element-var-Val ( \kore-dv \kore-sort-SortInt "0" ) kore-element-var-From $= ( typecode-cache-Pattern-3 IMP-sort-22-is-pattern string-literal-1-is-pattern kore-dv-is-pattern element-var-is-var substitution-disjoint ) ACDEFBGH $.
substitution-411 $p #Substitution ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortInt \kore-sort-SortKItem ( \kore-dv \kore-sort-SortInt "0" ) ) ) ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortInt \kore-sort-SortKItem kore-element-var-From ) ) ( \kore-dv \kore-sort-SortInt "0" ) kore-element-var-From $= ( IMP-sort-22-is-pattern BASIC-K-sort-1-is-pattern string-literal-1-is-pattern kore-dv-is-pattern element-var-is-var substitution-disjoint typecode-cache-Pattern-2 typecode-cache-Pattern-3 kore-inj-is-pattern typecode-cache-Pattern-21 substitution-409 substitution-410 substitution-var-same substitution-kore-inj substitution-kore-equals ) EAJBKDEDFGLEAJBKDECMLDFGCHEDFGCHIACNBCODEDFGDECMDFGCHDDFGCHIEDFGCHIDFGCHPQR $.
substitution-412 $p #Substitution ( \kore-inj \kore-sort-SortInt \kore-sort-SortKItem kore-element-var-x0 ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortKItem kore-element-var-From ) kore-element-var-x0 kore-element-var-From $= ( typecode-cache-Pattern-16 IMP-sort-22-is-pattern BASIC-K-sort-1-is-pattern element-var-is-var typecode-cache-Pattern-21 substitution-135 substitution-53 substitution-var-same substitution-kore-inj ) DEBCDEAGBCAFABHABIBCAFJK $.
substitution-413 $p #Substitution ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortInt \kore-sort-SortKItem kore-element-var-x0 ) ) ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortInt \kore-sort-SortKItem kore-element-var-From ) ) kore-element-var-x0 kore-element-var-From $= ( BASIC-K-sort-1-is-pattern typecode-cache-Pattern-2 typecode-cache-Pattern-3 IMP-sort-22-is-pattern typecode-cache-Pattern-16 kore-inj-is-pattern typecode-cache-Pattern-21 element-var-is-var substitution-53 substitution-52 substitution-54 substitution-412 substitution-kore-equals ) EAFBGHEDIJEAFBGHECKJDICLCDMACDNBCDOCDPQ $.
substitution-414 $p #Substitution ( \kore-exists \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortInt \kore-sort-SortKItem kore-element-var-x0 ) ) ) ( \kore-exists \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortInt \kore-sort-SortKItem kore-element-var-From ) ) ) kore-element-var-x0 kore-element-var-From $= ( BASIC-K-sort-1-is-pattern typecode-cache-Pattern-2 typecode-cache-Pattern-131 typecode-cache-Pattern-130 typecode-cache-Pattern-16 element-var-is-var substitution-53 substitution-52 substitution-413 substitution-kore-exists-alt ) EAFABDGEAFABCHDIBCJCDKACDLABCDMN $.
sorting-rearrange-144 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortInt \kore-sort-SortKItem ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) $= ( IMP-sort-22-is-pattern typecode-cache-Pattern-2 kore-element-var-From-elementvariable BASIC-K-sort-1-is-pattern string-literal-1-is-pattern kore-dv-is-pattern top-is-pattern and-is-pattern kore-exists-is-pattern in-sort-is-pattern kore-element-var-x0-elementvariable element-var-is-var kore-valid-is-pattern typecode-cache-Pattern-130 kore-is-sort-is-pattern typecode-cache-Pattern-3 kore-inj-is-pattern kore-equals-is-pattern typecode-cache-Pattern-21 typecode-cache-Pattern-16 typecode-cache-Pattern-131 substitution-disjoint kore-element-var-x1-elementvariable substitution-409 substitution-kore-valid substitution-imp sorting-cache-58 sorting-cache-238 rule-and-intro-alt2-sugar sorting-rearrange-116 sorting-rearrange-143 substitution-var-same substitution-in-sort substitution-and substitution-411 substitution-kore-exists-alt substitution-137 substitution-52 substitution-414 functional-substitution-alt rule-imp-transitivity ) ADQIJADQIJCGHCLIJJADFADFADBRCFCGHSTBKOADQIJADQIJCGHCLIJAUIAUJUKCGHADFADABEPBKOADFADFADBRCFCGHSTBKOADFADABMUCBKOADQIJEUACLIJCGHCLIJMUBCLIJUEEMAUEULABEUMCGHCGHCLIJADFADFADBRCFCGHSTBKOEUACLIJADFADABEPBKOENCGHCGHCLIEUACLIENCGHCGHCEUACENCGHENUNCCGHENUDUOICGHENUDUPADFADFADBRCFCGHSTBKADFADABEPBKCGHENAEUFFADFADBRCFCGHSTFADABEPCGHBENFCGHENUDAEUFABEUQURUGUHMUBMUBCLIJADFADABMUCBKOEUACLIJADFADABEPBKOENEMUSADFADABMUCBKADFADABEPBKMUBENAEMUTABEMVAUGUHVBVC $.
sorting-rearrange-145 $p |- ( \imp ( \and \top ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortInt \kore-sort-SortKItem ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) $= ( top-is-pattern typecode-cache-Pattern-2 and-is-pattern kore-is-sort-is-pattern BASIC-K-sort-1-is-pattern IMP-sort-22-is-pattern typecode-cache-Pattern-3 string-literal-1-is-pattern kore-dv-is-pattern kore-inj-is-pattern kore-equals-is-pattern kore-exists-is-pattern kore-valid-is-pattern sorting-cache-47 top-intro rule-weakening rule-and-intro-alt2-sugar sorting-rearrange-144 rule-imp-transitivity ) CADFCEEADFCEADGADGADBIHGHJKLMBNOCADFCEEADFCAPCADFCEECQRSABTUA $.
sorting-rearrange-146 $p |- ( \imp \top ( \kore-valid \unit-sort ( \kore-exists \kore-sort-SortKItem \unit-sort kore-element-var-Val ( \kore-equals \kore-sort-SortKItem \unit-sort kore-element-var-Val ( \kore-inj \kore-sort-SortInt \kore-sort-SortKItem ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) $= ( BASIC-K-sort-1-is-pattern kore-sort-var-R-elementvariable IMP-sort-22-is-pattern unit-sort-is-symbol symbol-is-pattern kore-sort-var-x0-elementvariable typecode-cache-Pattern-2 string-literal-1-is-pattern kore-dv-is-pattern kore-inj-is-pattern typecode-cache-Pattern-6 typecode-cache-Pattern-3 top-is-pattern kore-equals-is-pattern element-var-is-var kore-exists-is-pattern and-is-pattern kore-is-sort-is-pattern kore-valid-is-pattern substitution-var-same x-is-element-var rule-weakening substitution-58 substitution-disjoint substitution-kore-equals substitution-kore-exists-alt substitution-kore-valid substitution-imp substitution-59 top-intro sorting-cache-49 rule-and-intro-alt2-sugar typecode-cache-Pattern-1 exists-is-pattern unit-sort-is-functional sorting-rearrange-145 substitution-2 substitution-4 substitution-9 substitution-11 functional-substitution-alt rule-imp-transitivity ) NNEFSNRREFBEFBEFAMDBDIJKOAQTNNEFSNRNNUKUCULUMEFCHBCHBCHAMDBDIJKOAQTEFBEFBEFAMDBDIJKOAQTGLBGLBGLAMDBDIJKOAQTNCHSNREFSNRGLSNRUBCGNUBUNUBUOUBUPUCCAUQEFEFSNREFBEFBEFAMDBDIJKOAQTCHSNRCHBCHBCHAMDBDIJKOAQTCPCUREFBEFBEFAMDBDIJKOAQCHBCHBCHAMDBDIJKOAQEFCPEFCPUABEFBEFAMDBDIJKOBCHBCHAMDBDIJKOEFACPCUDEFCPUABEFAMDBDIJKBCHAMDBDIJKEFCPCUDEFCPUACAUSDBDIJKEFCPUEUFUGUHUIGLGLSNRGLBGLBGLAMDBDIJKOAQTCHSNRCHBCHBCHAMDBDIJKOAQTCPCGUTGLBGLBGLAMDBDIJKOAQCHBCHBCHAMDBDIJKOAQGLCPGLCPUABGLBGLAMDBDIJKOBCHBCHAMDBDIJKOGLACPCGUJGLCPUABGLAMDBDIJKBCHAMDBDIJKGLCPCGUJGLCPUACAGVADBDIJKGLCPUEUFUGUHUIVBVC $.
sorting-rearrange-147 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \exists kore-element-var-Val ( \eq kore-element-var-Val ( \kore-inj \kore-sort-SortInt \kore-sort-SortKItem ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) $= ( top-is-pattern IMP-sort-22-is-pattern BASIC-K-sort-1-is-pattern typecode-cache-Pattern-2 kore-is-sort-is-pattern and-is-pattern string-literal-1-is-pattern kore-dv-is-pattern kore-inj-is-pattern typecode-cache-Pattern-3 eq-is-pattern exists-is-pattern top-intro rule-weakening sorting-cache-19 sorting-rearrange-146 kore-functional rule-imp-transitivity ) AFGCHCBLDEDIJKMBNAFGCHCOPEDEDIJKCBQBRST $.
typecode-cache-Pattern-132 $p #Pattern ( \kore-equals \kore-sort-SortMap kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem ( \kore-dv \kore-sort-SortId "a" ) ) kore-element-var-x0 ) ) $= ( IMP-sort-17-is-pattern IMP-sort-14-is-pattern typecode-cache-Pattern-2 typecode-cache-Pattern-3 BASIC-K-sort-1-is-pattern string-literal-11-is-pattern kore-dv-is-pattern kore-inj-is-pattern typecode-cache-Pattern-16 IMP-symbol-196-is-pattern kore-equals-is-pattern ) EAFBGDHDIJKCLMN $.
substitution-415 $p #Substitution ( \kore-equals \kore-sort-SortMap kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem ( \kore-dv \kore-sort-SortId "a" ) ) kore-element-var-x0 ) ) ( \kore-equals \kore-sort-SortMap kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem ( \kore-dv \kore-sort-SortId "a" ) ) kore-element-var-K1 ) ) kore-element-var-x0 kore-element-var-K1 $= ( IMP-sort-17-is-pattern typecode-cache-Pattern-16 BASIC-K-sort-1-is-pattern string-literal-11-is-pattern kore-dv-is-pattern kore-inj-is-pattern element-var-is-var IMP-sort-14-is-pattern typecode-cache-Pattern-2 typecode-cache-Pattern-3 IMP-symbol-196-is-pattern typecode-cache-Pattern-25 substitution-167 substitution-105 substitution-106 substitution-disjoint substitution-var-same IMP-symbol-196-substitution substitution-kore-equals ) LAMBNEGEHIJDFOLAMBNEGEHIJCPODFCKCDQACDRBCDSCKDFEGEHIJDFEGEHIJCPEGEHIJDFCKTDFCKUAUBUC $.
sorting-cache-271 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \kore-is-sort \kore-sort-SortInt ) ( \kore-is-sort \kore-sort-SortKItem ) ) ) $= ( kore-is-sort-is-pattern typecode-cache-Pattern-2 top-is-pattern and-is-pattern IMP-sort-22-is-pattern BASIC-K-sort-1-is-pattern sorting-cache-96 sorting-cache-117 rule-and-intro-alt2-sugar ) ACBDEFBGBAHAIJ $.
sorting-cache-272 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \and ( \kore-is-sort \kore-sort-SortInt ) ( \kore-is-sort \kore-sort-SortKItem ) ) ( \in-sort ( \kore-dv \kore-sort-SortInt "0" ) \kore-sort-SortInt ) ) ) $= ( kore-is-sort-is-pattern IMP-sort-22-is-pattern and-is-pattern typecode-cache-Pattern-2 top-is-pattern BASIC-K-sort-1-is-pattern string-literal-1-is-pattern kore-dv-is-pattern in-sort-is-pattern sorting-cache-271 sorting-cache-237 rule-and-intro-alt2-sugar ) AEBFDCBGBDCHICJAKALM $.
sorting-cache-273 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \in-sort ( \kore-inj \kore-sort-SortInt \kore-sort-SortKItem ( \kore-dv \kore-sort-SortInt "0" ) ) \kore-sort-SortKItem ) ) $= ( IMP-sort-22-is-pattern BASIC-K-sort-1-is-pattern kore-is-sort-is-pattern and-is-pattern string-literal-1-is-pattern kore-dv-is-pattern in-sort-is-pattern typecode-cache-Pattern-2 top-is-pattern kore-inj-is-pattern sorting-cache-272 INJ-symbol-0-sorting rule-imp-transitivity ) AIDJEBDCDEBFGBHEBCBFGKCHALBCBFGMN $.
sorting-rearrange-148 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortMap kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortMap kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem ( \kore-dv \kore-sort-SortId "a" ) ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortKItem ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) ) $= ( IMP-sort-22-is-pattern BASIC-K-sort-1-is-pattern typecode-cache-Pattern-2 kore-element-var-K1-elementvariable kore-dv-is-pattern kore-inj-is-pattern string-literal-1-is-pattern IMP-sort-14-is-pattern top-is-pattern element-var-is-var and-is-pattern IMP-sort-17-is-pattern kore-element-var-x0-elementvariable in-sort-is-pattern kore-exists-is-pattern string-literal-11-is-pattern kore-valid-is-pattern substitution-disjoint kore-is-sort-is-pattern typecode-cache-Pattern-3 typecode-cache-Pattern-129 typecode-cache-Pattern-25 IMP-symbol-196-is-pattern kore-equals-is-pattern typecode-cache-Pattern-16 typecode-cache-Pattern-132 rule-and-intro-alt2-sugar rule-imp-transitivity substitution-var-same substitution-kore-exists-alt substitution-kore-valid substitution-imp substitution-105 sorting-cache-58 sorting-cache-273 top-intro rule-weakening sorting-rearrange-147 typecode-cache-Pattern-26 sorting-cache-115 sorting-rearrange-142 substitution-in-sort substitution-and IMP-symbol-196-substitution substitution-kore-equals substitution-166 substitution-167 substitution-415 functional-substitution-alt ) AEUAKMAEUAKMCDCIGHDPKMMAEJAEJAEBUBNDNRGHCDCIGHUEUFBQSAEUAKMAEUAKMCDCIGHDPKMAUPAEUAKMCDCIGHDPKAUQAEUAKMKURUSUIUICDCIGHAEJAEABFUCBQSAEJAEJAEBUBNDNRGHCDCIGHUEUFBQSAEJAEABOUHBQSAEUAKMFUDDPKMCDCIGHDPKMOUGDPKMBFOABUTAEUAKMFUDDPKMMAFVAAEJAEABFUCBQSAFVBABFVCUJCDCIGHCDCIGHDPKMAEJAEJAEBUBNDNRGHCDCIGHUEUFBQSFUDDPKMAEJAEABFUCBQSFLCDCIGHCDCIGHDPKFUDDPKFLCDCIGHCDCIGHDFUDDFLCDCIGHFLUKDCDCIGHFLTVDKCDCIGHFLTVEAEJAEJAEBUBNDNRGHCDCIGHUEUFBQAEJAEABFUCBQCDCIGHFLAECDCIGHFLTJAEJAEBUBNDNRGHCDCIGHUEUFJAEABFUCCDCIGHBFLJCDCIGHFLTAECDCIGHFLTJAEBUBNDNRGHCDCIGHUEJAEBUBNDNRGHFUDUECDCIGHFLJCDCIGHFLTAECDCIGHFLTBUBCDCIGHFLTFLCDCIGHNDNRGHCDCIGHNDNRGHFUDNDNRGHCDCIGHFLTCDCIGHFLUKVFVGULUMUNOUGOUGDPKMAEJAEABOUHBQSFUDDPKMAEJAEABFUCBQSFLFOVHAEJAEABOUHBQAEJAEABFUCBQOUGFLAFOUOJAEABOUHJAEABFUCOUGBFLFOVIAFOUOABFOVJULUMUNVKUJ $.
sorting-rearrange-149 $p |- ( \imp ( \and \top ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortMap kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortMap kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem ( \kore-dv \kore-sort-SortId "a" ) ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortKItem ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) ) $= ( top-is-pattern typecode-cache-Pattern-2 and-is-pattern kore-is-sort-is-pattern IMP-sort-14-is-pattern IMP-sort-17-is-pattern BASIC-K-sort-1-is-pattern kore-dv-is-pattern kore-inj-is-pattern IMP-sort-22-is-pattern typecode-cache-Pattern-3 string-literal-11-is-pattern string-literal-1-is-pattern IMP-symbol-196-is-pattern kore-equals-is-pattern kore-exists-is-pattern kore-valid-is-pattern sorting-cache-47 top-intro rule-weakening rule-and-intro-alt2-sugar sorting-rearrange-148 rule-imp-transitivity ) CADFCEEADFCEADGADGADBMHIHNJKLILOJKPQBRSCADFCEEADFCATCADFCEECUAUBUCABUDUE $.
sorting-rearrange-150 $p |- ( \imp \top ( \kore-valid \unit-sort ( \kore-exists \kore-sort-SortMap \unit-sort kore-element-var-Val ( \kore-equals \kore-sort-SortMap \unit-sort kore-element-var-Val ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem ( \kore-dv \kore-sort-SortId "a" ) ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortKItem ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) ) $= ( kore-sort-var-R-elementvariable IMP-sort-17-is-pattern BASIC-K-sort-1-is-pattern kore-dv-is-pattern kore-inj-is-pattern IMP-sort-22-is-pattern IMP-sort-14-is-pattern unit-sort-is-symbol symbol-is-pattern kore-sort-var-x0-elementvariable typecode-cache-Pattern-2 string-literal-11-is-pattern string-literal-1-is-pattern IMP-symbol-196-is-pattern typecode-cache-Pattern-6 typecode-cache-Pattern-3 top-is-pattern kore-equals-is-pattern element-var-is-var kore-exists-is-pattern and-is-pattern kore-is-sort-is-pattern kore-valid-is-pattern substitution-var-same x-is-element-var rule-weakening substitution-3 substitution-disjoint substitution-kore-equals substitution-kore-exists-alt substitution-kore-valid substitution-imp substitution-10 top-intro sorting-cache-49 rule-and-intro-alt2-sugar typecode-cache-Pattern-1 exists-is-pattern unit-sort-is-functional sorting-rearrange-149 substitution-2 substitution-4 substitution-9 substitution-11 functional-substitution-alt rule-imp-transitivity ) RRIJUCRUBUBIJHIJHIJAQCDCMEFGDGNEFOSAUAUDRRIJUCRUBRRUOUGUPUQIJBLHBLHBLAQCDCMEFGDGNEFOSAUAUDIJHIJHIJAQCDCMEFGDGNEFOSAUAUDKPHKPHKPAQCDCMEFGDGNEFOSAUAUDRBLUCRUBIJUCRUBKPUCRUBUFBKRUFURUFUSUFUTUGBAVAIJIJUCRUBIJHIJHIJAQCDCMEFGDGNEFOSAUAUDBLUCRUBBLHBLHBLAQCDCMEFGDGNEFOSAUAUDBTBVBIJHIJHIJAQCDCMEFGDGNEFOSAUABLHBLHBLAQCDCMEFGDGNEFOSAUAIJBTIJBTUEHIJHIJAQCDCMEFGDGNEFOSHBLHBLAQCDCMEFGDGNEFOSIJABTBUHIJBTUEHIJAQCDCMEFGDGNEFOHBLAQCDCMEFGDGNEFOIJBTBUHIJBTUEBAVCCDCMEFGDGNEFOIJBTUIUJUKULUMKPKPUCRUBKPHKPHKPAQCDCMEFGDGNEFOSAUAUDBLUCRUBBLHBLHBLAQCDCMEFGDGNEFOSAUAUDBTBKVDKPHKPHKPAQCDCMEFGDGNEFOSAUABLHBLHBLAQCDCMEFGDGNEFOSAUAKPBTKPBTUEHKPHKPAQCDCMEFGDGNEFOSHBLHBLAQCDCMEFGDGNEFOSKPABTBKUNKPBTUEHKPAQCDCMEFGDGNEFOHBLAQCDCMEFGDGNEFOKPBTBKUNKPBTUEBAKVECDCMEFGDGNEFOKPBTUIUJUKULUMVFVG $.
sorting-rearrange-151 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \exists kore-element-var-Val ( \eq kore-element-var-Val ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem ( \kore-dv \kore-sort-SortId "a" ) ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortKItem ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) $= ( top-is-pattern IMP-sort-17-is-pattern BASIC-K-sort-1-is-pattern kore-dv-is-pattern kore-inj-is-pattern IMP-sort-22-is-pattern typecode-cache-Pattern-2 kore-is-sort-is-pattern and-is-pattern string-literal-11-is-pattern string-literal-1-is-pattern IMP-symbol-196-is-pattern typecode-cache-Pattern-3 eq-is-pattern exists-is-pattern top-intro rule-weakening IMP-sort-14-is-pattern sorting-cache-20 sorting-rearrange-150 kore-functional rule-imp-transitivity ) AIJCKCBODEDLFGHEHMFGNPBQAIJCKCRSTDEDLFGHEHMFGNCBUABUBUCUD $.
sorting-cache-274 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortMap ) \top ) ) ( \kore-is-sort kore-sort-var-R ) ) $= ( typecode-cache-Pattern-2 kore-is-sort-is-pattern top-is-pattern and-is-pattern typecode-cache-Pattern-27 IMP-sort-14-is-pattern in-sort-is-pattern and-elim-left-sugar rule-imp-transitivity imp-reflexivity ) ACDEFBGHIEFFACDEFACDACDEFBGHIEFJACDEFACDACDACDEJACDLKK $.
sorting-cache-275 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortMap ) \top ) ) ( \in-sort kore-element-var-K0 \kore-sort-SortMap ) ) $= ( typecode-cache-Pattern-27 IMP-sort-14-is-pattern in-sort-is-pattern top-is-pattern and-is-pattern typecode-cache-Pattern-2 kore-is-sort-is-pattern rule-imp-transitivity and-elim-right-sugar and-elim-left-sugar imp-reflexivity ) AHIFGBCDEFGGBCDEFGBCDEAHIFGBCDEFGKBCDEFGBCDEBCDEBCDEFLBCDEMJJ $.
sorting-cache-276 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortMap ) \top ) ) ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortMap ) \top ) ) ) $= ( and-is-pattern top-is-pattern typecode-cache-Pattern-27 IMP-sort-14-is-pattern in-sort-is-pattern typecode-cache-Pattern-2 kore-is-sort-is-pattern rule-and-intro-alt2-sugar sorting-cache-274 sorting-cache-275 top-intro rule-weakening ) AHIDCBEFGDCCAHIBEFGDCABKAHIDCBEFGDCCBEFGDABLAHIDCBEFGDCCDMNJJ $.
typecode-cache-Pattern-133 $p #Pattern ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortMap ) \top ) ) $= ( and-is-pattern typecode-cache-Pattern-2 kore-is-sort-is-pattern typecode-cache-Pattern-27 IMP-sort-14-is-pattern in-sort-is-pattern top-is-pattern ) ADEBFGHICC $.
typecode-cache-Pattern-134 $p #Pattern ( \kore-equals \kore-sort-SortStateCell kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'-LT-'state'-GT-' kore-element-var-K0 ) ) $= ( IMP-sort-9-is-pattern typecode-cache-Pattern-2 typecode-cache-Pattern-3 typecode-cache-Pattern-27 IMP-symbol-120-is-pattern kore-equals-is-pattern ) DAEBFCGHI $.
sorting-rearrange-152 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortMap ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortStateCell kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortStateCell kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'-LT-'state'-GT-' kore-element-var-K0 ) ) ) ) ) $= ( typecode-cache-Pattern-2 and-is-pattern top-is-pattern kore-is-sort-is-pattern typecode-cache-Pattern-27 IMP-sort-14-is-pattern in-sort-is-pattern typecode-cache-Pattern-133 IMP-sort-9-is-pattern typecode-cache-Pattern-134 kore-exists-is-pattern kore-valid-is-pattern sorting-cache-276 IMP-axiom-2671 rule-imp-transitivity ) ADGFECHIJFEEACKADLADABCMBNOACPABCQR $.
typecode-cache-Pattern-135 $p #Pattern ( \kore-equals \kore-sort-SortStateCell kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'-LT-'state'-GT-' kore-element-var-x0 ) ) $= ( IMP-sort-9-is-pattern typecode-cache-Pattern-2 typecode-cache-Pattern-3 typecode-cache-Pattern-16 IMP-symbol-120-is-pattern kore-equals-is-pattern ) DAEBFCGHI $.
substitution-416 $p #Substitution ( \in-sort kore-element-var-x0 \kore-sort-SortMap ) ( \in-sort kore-element-var-K0 \kore-sort-SortMap ) kore-element-var-x0 kore-element-var-K0 $= ( typecode-cache-Pattern-16 IMP-sort-14-is-pattern element-var-is-var typecode-cache-Pattern-27 substitution-var-same substitution-66 substitution-in-sort ) BCBCDAFDAEBCAEGABHI $.
substitution-417 $p #Substitution ( \and ( \in-sort kore-element-var-x0 \kore-sort-SortMap ) \top ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortMap ) \top ) kore-element-var-x0 kore-element-var-K0 $= ( typecode-cache-Pattern-16 IMP-sort-14-is-pattern in-sort-is-pattern top-is-pattern typecode-cache-Pattern-27 element-var-is-var substitution-416 substitution-63 substitution-and ) BCBCDEFAGDEFAHABIABJK $.
substitution-418 $p #Substitution \kore-sort-SortStateCell \kore-sort-SortStateCell kore-element-var-x0 kore-element-var-K0 $= ( IMP-sort-9-is-pattern typecode-cache-Pattern-16 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-419 $p #Substitution ( \kore-symbol-Lbl'-LT-'state'-GT-' kore-element-var-x0 ) ( \kore-symbol-Lbl'-LT-'state'-GT-' kore-element-var-K0 ) kore-element-var-x0 kore-element-var-K0 $= ( typecode-cache-Pattern-16 element-var-is-var typecode-cache-Pattern-27 substitution-var-same IMP-symbol-120-substitution ) ADBCBCAEBCADFG $.
substitution-420 $p #Substitution ( \kore-equals \kore-sort-SortStateCell kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'-LT-'state'-GT-' kore-element-var-x0 ) ) ( \kore-equals \kore-sort-SortStateCell kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'-LT-'state'-GT-' kore-element-var-K0 ) ) kore-element-var-x0 kore-element-var-K0 $= ( IMP-sort-9-is-pattern typecode-cache-Pattern-2 typecode-cache-Pattern-3 typecode-cache-Pattern-16 IMP-symbol-120-is-pattern typecode-cache-Pattern-27 element-var-is-var substitution-418 substitution-65 substitution-67 substitution-419 substitution-kore-equals ) EAFBGDHIEAFBGCJIDHCKCDLACDMBCDNCDOP $.
substitution-421 $p #Substitution ( \kore-exists \kore-sort-SortStateCell kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortStateCell kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'-LT-'state'-GT-' kore-element-var-x0 ) ) ) ( \kore-exists \kore-sort-SortStateCell kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortStateCell kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'-LT-'state'-GT-' kore-element-var-K0 ) ) ) kore-element-var-x0 kore-element-var-K0 $= ( IMP-sort-9-is-pattern typecode-cache-Pattern-2 typecode-cache-Pattern-135 typecode-cache-Pattern-134 typecode-cache-Pattern-16 element-var-is-var substitution-418 substitution-65 substitution-420 substitution-kore-exists-alt ) EAFABDGEAFABCHDIBCJCDKACDLABCDMN $.
substitution-422 $p #Substitution ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortStateCell kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortStateCell kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'-LT-'state'-GT-' kore-element-var-x0 ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortStateCell kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortStateCell kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'-LT-'state'-GT-' kore-element-var-K0 ) ) ) ) kore-element-var-x0 kore-element-var-K0 $= ( typecode-cache-Pattern-2 IMP-sort-9-is-pattern kore-exists-is-pattern typecode-cache-Pattern-135 typecode-cache-Pattern-134 typecode-cache-Pattern-16 element-var-is-var substitution-65 substitution-421 substitution-kore-valid ) AEFAEABDHBGAEFAEABCIBGDJCKACDLABCDMN $.
sorting-cache-277 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-is-sort \kore-sort-SortId ) ) $= ( kore-is-sort-is-pattern IMP-sort-17-is-pattern typecode-cache-Pattern-2 top-is-pattern and-is-pattern imp-is-pattern proof-rule-prop-1 IMP-sort-17-sort proof-rule-mp ) CBADBEFCBGCBADBEFHIJ $.
sorting-cache-278 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \kore-is-sort \kore-sort-SortId ) ( \kore-is-sort \kore-sort-SortKItem ) ) ) $= ( kore-is-sort-is-pattern typecode-cache-Pattern-2 top-is-pattern and-is-pattern IMP-sort-17-is-pattern BASIC-K-sort-1-is-pattern sorting-cache-277 sorting-cache-117 rule-and-intro-alt2-sugar ) ACBDEFBGBAHAIJ $.
sorting-cache-279 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \and ( \kore-is-sort \kore-sort-SortId ) ( \kore-is-sort \kore-sort-SortKItem ) ) ( \in-sort ( \kore-dv \kore-sort-SortId "a" ) \kore-sort-SortId ) ) ) $= ( kore-is-sort-is-pattern IMP-sort-17-is-pattern and-is-pattern typecode-cache-Pattern-2 top-is-pattern BASIC-K-sort-1-is-pattern string-literal-11-is-pattern kore-dv-is-pattern in-sort-is-pattern sorting-cache-278 sorting-cache-104 rule-and-intro-alt2-sugar ) AEBFDCBGBDCHICJAKALM $.
sorting-cache-280 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \in-sort ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem ( \kore-dv \kore-sort-SortId "a" ) ) \kore-sort-SortKItem ) ) $= ( IMP-sort-17-is-pattern BASIC-K-sort-1-is-pattern kore-is-sort-is-pattern and-is-pattern string-literal-11-is-pattern kore-dv-is-pattern in-sort-is-pattern typecode-cache-Pattern-2 top-is-pattern kore-inj-is-pattern sorting-cache-279 INJ-symbol-0-sorting rule-imp-transitivity ) AIDJEBDCDEBFGBHEBCBFGKCHALBCBFGMN $.
sorting-cache-281 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \in-sort ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem ( \kore-dv \kore-sort-SortId "a" ) ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortKItem ( \kore-dv \kore-sort-SortInt "0" ) ) ) \kore-sort-SortMap ) ) $= ( BASIC-K-sort-1-is-pattern IMP-sort-17-is-pattern kore-dv-is-pattern kore-inj-is-pattern IMP-sort-22-is-pattern in-sort-is-pattern string-literal-11-is-pattern string-literal-1-is-pattern and-is-pattern typecode-cache-Pattern-2 kore-is-sort-is-pattern top-is-pattern IMP-symbol-196-is-pattern IMP-sort-14-is-pattern sorting-cache-280 sorting-cache-273 rule-and-intro-alt2-sugar IMP-symbol-196-sorting rule-imp-transitivity ) AKLMJCBCHDEBGFBFIDEBGJCBCHDEFBFIDENOGAKLMJCBCHDEBGFBFIDEBGAPAQRCBCHDEFBFIDEST $.
sorting-rearrange-153 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortStateCell kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortStateCell kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'-LT-'state'-GT-' ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem ( \kore-dv \kore-sort-SortId "a" ) ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortKItem ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) ) ) $= ( IMP-sort-17-is-pattern BASIC-K-sort-1-is-pattern kore-dv-is-pattern kore-inj-is-pattern IMP-sort-22-is-pattern typecode-cache-Pattern-2 kore-element-var-K0-elementvariable string-literal-11-is-pattern string-literal-1-is-pattern IMP-symbol-196-is-pattern top-is-pattern IMP-sort-9-is-pattern element-var-is-var and-is-pattern IMP-sort-14-is-pattern in-sort-is-pattern kore-exists-is-pattern typecode-cache-Pattern-3 kore-valid-is-pattern kore-element-var-x0-elementvariable substitution-disjoint kore-is-sort-is-pattern IMP-symbol-120-is-pattern typecode-cache-Pattern-27 kore-equals-is-pattern typecode-cache-Pattern-134 typecode-cache-Pattern-16 rule-and-intro-alt2-sugar typecode-cache-Pattern-135 substitution-var-same substitution-imp sorting-cache-58 sorting-cache-281 top-intro rule-weakening sorting-rearrange-151 sorting-rearrange-152 substitution-in-sort substitution-and IMP-symbol-120-substitution substitution-kore-equals substitution-kore-exists-alt substitution-kore-valid substitution-417 substitution-422 functional-substitution-alt rule-imp-transitivity ) AHUDMPAHUDMPCDCJEFGDGKEFLQRMPPAHNAHNAHBTCDCJEFGDGKEFLUEUGBSUAAHUDMPAHUDMPCDCJEFGDGKEFLQRMPAUNAHUDMPCDCJEFGDGKEFLQRMAUOAHUDMPMUPUQUJUJCDCJEFGDGKEFLAHNAHABIUHBSUAAHNAHNAHBTCDCJEFGDGKEFLUEUGBSUAAHNAHABUBUKBSUAAHUDMPIUFQRMPCDCJEFGDGKEFLQRMPUBUIQRMPBIUBABURABIUSCDCJEFGDGKEFLCDCJEFGDGKEFLQRMPAHNAHNAHBTCDCJEFGDGKEFLUEUGBSUAIUFQRMPAHNAHABIUHBSUAIOCDCJEFGDGKEFLCDCJEFGDGKEFLQRMIUFQRMIOCDCJEFGDGKEFLCDCJEFGDGKEFLQIUFQIOCDCJEFGDGKEFLIOULQCDCJEFGDGKEFLIOUCUTMCDCJEFGDGKEFLIOUCVAAHNAHNAHBTCDCJEFGDGKEFLUEUGBSAHNAHABIUHBSCDCJEFGDGKEFLIOAHCDCJEFGDGKEFLIOUCNAHNAHBTCDCJEFGDGKEFLUEUGNAHABIUHCDCJEFGDGKEFLBIONCDCJEFGDGKEFLIOUCAHCDCJEFGDGKEFLIOUCNAHBTCDCJEFGDGKEFLUENAHBTIUFUECDCJEFGDGKEFLIONCDCJEFGDGKEFLIOUCAHCDCJEFGDGKEFLIOUCBTCDCJEFGDGKEFLIOUCIOCDCJEFGDGKEFLCDCJEFGDGKEFLIUFCDCJEFGDGKEFLIOULVBVCVDVEUMUBUIUBUIQRMPAHNAHABUBUKBSUAIUFQRMPAHNAHABIUHBSUAIOIUBVFABIUBVGUMVHVI $.
sorting-rearrange-154 $p |- ( \imp ( \and \top ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortStateCell kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortStateCell kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'-LT-'state'-GT-' ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem ( \kore-dv \kore-sort-SortId "a" ) ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortKItem ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) ) ) $= ( top-is-pattern typecode-cache-Pattern-2 and-is-pattern kore-is-sort-is-pattern IMP-sort-9-is-pattern IMP-sort-17-is-pattern BASIC-K-sort-1-is-pattern kore-dv-is-pattern kore-inj-is-pattern IMP-sort-22-is-pattern typecode-cache-Pattern-3 string-literal-11-is-pattern string-literal-1-is-pattern IMP-symbol-196-is-pattern IMP-symbol-120-is-pattern kore-equals-is-pattern kore-exists-is-pattern kore-valid-is-pattern sorting-cache-47 top-intro rule-weakening rule-and-intro-alt2-sugar sorting-rearrange-153 rule-imp-transitivity ) CADFCEEADFCEADGADGADBMHIHNJKLILOJKPQRBSTCADFCEEADFCAUACADFCEECUBUCUDABUEUF $.
sorting-rearrange-155 $p |- ( \imp \top ( \kore-valid \unit-sort ( \kore-exists \kore-sort-SortStateCell \unit-sort kore-element-var-Val ( \kore-equals \kore-sort-SortStateCell \unit-sort kore-element-var-Val ( \kore-symbol-Lbl'-LT-'state'-GT-' ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem ( \kore-dv \kore-sort-SortId "a" ) ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortKItem ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) ) ) $= ( kore-sort-var-R-elementvariable IMP-sort-17-is-pattern BASIC-K-sort-1-is-pattern kore-dv-is-pattern kore-inj-is-pattern IMP-sort-22-is-pattern IMP-sort-9-is-pattern unit-sort-is-symbol symbol-is-pattern kore-sort-var-x0-elementvariable typecode-cache-Pattern-2 string-literal-11-is-pattern string-literal-1-is-pattern IMP-symbol-196-is-pattern IMP-symbol-120-is-pattern typecode-cache-Pattern-6 typecode-cache-Pattern-3 top-is-pattern kore-equals-is-pattern element-var-is-var kore-exists-is-pattern and-is-pattern kore-is-sort-is-pattern kore-valid-is-pattern substitution-var-same x-is-element-var rule-weakening substitution-258 substitution-disjoint substitution-kore-equals substitution-kore-exists-alt substitution-kore-valid substitution-imp substitution-261 top-intro sorting-cache-49 rule-and-intro-alt2-sugar typecode-cache-Pattern-1 exists-is-pattern unit-sort-is-functional sorting-rearrange-154 substitution-2 substitution-4 substitution-9 substitution-11 functional-substitution-alt rule-imp-transitivity ) SSIJUDSUCUCIJHIJHIJARCDCMEFGDGNEFOPTAUBUESSIJUDSUCSSUPUHUQURIJBLHBLHBLARCDCMEFGDGNEFOPTAUBUEIJHIJHIJARCDCMEFGDGNEFOPTAUBUEKQHKQHKQARCDCMEFGDGNEFOPTAUBUESBLUDSUCIJUDSUCKQUDSUCUGBKSUGUSUGUTUGVAUHBAVBIJIJUDSUCIJHIJHIJARCDCMEFGDGNEFOPTAUBUEBLUDSUCBLHBLHBLARCDCMEFGDGNEFOPTAUBUEBUABVCIJHIJHIJARCDCMEFGDGNEFOPTAUBBLHBLHBLARCDCMEFGDGNEFOPTAUBIJBUAIJBUAUFHIJHIJARCDCMEFGDGNEFOPTHBLHBLARCDCMEFGDGNEFOPTIJABUABUIIJBUAUFHIJARCDCMEFGDGNEFOPHBLARCDCMEFGDGNEFOPIJBUABUIIJBUAUFBAVDCDCMEFGDGNEFOPIJBUAUJUKULUMUNKQKQUDSUCKQHKQHKQARCDCMEFGDGNEFOPTAUBUEBLUDSUCBLHBLHBLARCDCMEFGDGNEFOPTAUBUEBUABKVEKQHKQHKQARCDCMEFGDGNEFOPTAUBBLHBLHBLARCDCMEFGDGNEFOPTAUBKQBUAKQBUAUFHKQHKQARCDCMEFGDGNEFOPTHBLHBLARCDCMEFGDGNEFOPTKQABUABKUOKQBUAUFHKQARCDCMEFGDGNEFOPHBLARCDCMEFGDGNEFOPKQBUABKUOKQBUAUFBAKVFCDCMEFGDGNEFOPKQBUAUJUKULUMUNVGVH $.
typecode-cache-Pattern-136 $p #Pattern ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortGeneratedCounterCell ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortStmt ) \top ) ) $= ( in-sort-is-pattern and-is-pattern typecode-cache-Pattern-97 IMP-sort-10-is-pattern typecode-cache-Pattern-98 IMP-sort-30-is-pattern top-is-pattern ) AEFCBGHCIDD $.
sorting-rearrange-156 $p |- ( \imp ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortGeneratedCounterCell ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortStmt ) \top ) ) ) ( \exists kore-element-var-Val ( \eq kore-element-var-Val ( \kore-symbol-Lbl'-LT-'state'-GT-' ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem ( \kore-dv \kore-sort-SortId "a" ) ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortKItem ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) ) $= ( IMP-sort-17-is-pattern BASIC-K-sort-1-is-pattern kore-dv-is-pattern kore-inj-is-pattern IMP-sort-22-is-pattern string-literal-11-is-pattern string-literal-1-is-pattern IMP-symbol-196-is-pattern in-sort-is-pattern top-is-pattern IMP-symbol-120-is-pattern typecode-cache-Pattern-72 BASIC-K-sort-0-is-pattern typecode-cache-Pattern-136 and-is-pattern IMP-sort-9-is-pattern rule-imp-transitivity typecode-cache-Pattern-3 eq-is-pattern exists-is-pattern top-intro rule-weakening IMP-sort-14-is-pattern sorting-cache-20 IMP-symbol-120-sorting sorting-rearrange-155 kore-functional ) BPQMACRSNDUBEFEJGHIFIKGHLOUCDUDBPQMACRSNUEUFTEFEJGHIFIKGHLONDNEFEJGHIFIKGHLUGMEFEJGHIFIKGHLOTMUHEFEJGHIFIKGHLUIUADUJUKUA $.
sorting-cache-282 $p |- ( \imp ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortGeneratedCounterCell ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortStmt ) \top ) ) ( \in-sort kore-element-var-VE2 \kore-sort-SortGeneratedCounterCell ) ) $= ( in-sort-is-pattern typecode-cache-Pattern-97 IMP-sort-10-is-pattern typecode-cache-Pattern-136 typecode-cache-Pattern-98 IMP-sort-30-is-pattern top-is-pattern and-is-pattern and-elim-left-sugar imp-reflexivity rule-imp-transitivity ) ABFADECADECADECBGHCIJKADECLM $.
sorting-cache-283 $p |- ( \imp ( \and ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortGeneratedCounterCell ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortStmt ) \top ) ) ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortStateCell ) \top ) ) ( \in-sort kore-element-var-VE2 \kore-sort-SortGeneratedCounterCell ) ) $= ( in-sort-is-pattern and-is-pattern typecode-cache-Pattern-136 typecode-cache-Pattern-72 BASIC-K-sort-0-is-pattern typecode-cache-Pattern-74 IMP-sort-9-is-pattern top-is-pattern typecode-cache-Pattern-97 IMP-sort-10-is-pattern rule-imp-transitivity and-elim-left-sugar and-elim-right-sugar sorting-cache-282 ) CHIEBDGFAJKELFFCHIEBDGFBMNECHIEBDGFAJKELFPCHIEBDGFBDGBMNECHIEBDGQBDROO $.
sorting-cache-284 $p |- ( \imp ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortGeneratedCounterCell ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortStmt ) \top ) ) ( \in-sort kore-element-var-VE3 \kore-sort-SortStmt ) ) $= ( in-sort-is-pattern typecode-cache-Pattern-98 IMP-sort-30-is-pattern top-is-pattern and-is-pattern rule-imp-transitivity typecode-cache-Pattern-136 typecode-cache-Pattern-97 IMP-sort-10-is-pattern and-elim-right-sugar and-elim-left-sugar imp-reflexivity ) ABIBDECFGBDECAJKCBDECFGLBDECFGBDECBDECBDECFMBDECNHH $.
sorting-cache-285 $p |- ( \imp ( \and ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortGeneratedCounterCell ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortStmt ) \top ) ) ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortStateCell ) \top ) ) ( \in-sort kore-element-var-VE3 \kore-sort-SortStmt ) ) $= ( in-sort-is-pattern and-is-pattern typecode-cache-Pattern-136 typecode-cache-Pattern-72 BASIC-K-sort-0-is-pattern typecode-cache-Pattern-74 IMP-sort-9-is-pattern top-is-pattern typecode-cache-Pattern-98 IMP-sort-30-is-pattern rule-imp-transitivity and-elim-left-sugar and-elim-right-sugar sorting-cache-284 ) CHIEBDGFAJKELFFCHIEBDGFDMNECHIEBDGFAJKELFPCHIEBDGFBDGDMNECHIEBDGQBDROO $.
sorting-cache-286 $p |- ( \imp ( \and ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortGeneratedCounterCell ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortStmt ) \top ) ) ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortStateCell ) \top ) ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortStmt ) \top ) ) $= ( and-is-pattern in-sort-is-pattern top-is-pattern typecode-cache-Pattern-72 BASIC-K-sort-0-is-pattern typecode-cache-Pattern-136 typecode-cache-Pattern-74 IMP-sort-9-is-pattern typecode-cache-Pattern-98 IMP-sort-30-is-pattern sorting-cache-285 top-intro rule-weakening rule-and-intro-alt2-sugar ) CHIFBDJEAKLFGEEDMNFGABCDOCHIFBDJEAKLFGEEGPQR $.
sorting-cache-287 $p |- ( \imp ( \and ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortGeneratedCounterCell ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortStmt ) \top ) ) ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortStateCell ) \top ) ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortGeneratedCounterCell ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortStmt ) \top ) ) ) $= ( in-sort-is-pattern and-is-pattern top-is-pattern typecode-cache-Pattern-72 BASIC-K-sort-0-is-pattern typecode-cache-Pattern-136 typecode-cache-Pattern-74 IMP-sort-9-is-pattern typecode-cache-Pattern-97 IMP-sort-10-is-pattern typecode-cache-Pattern-98 IMP-sort-30-is-pattern sorting-cache-283 sorting-cache-286 rule-and-intro-alt2-sugar ) CHIEBDJFAKLEGFFBMNEDOPEGFABCDQABCDRS $.
typecode-cache-Pattern-137 $p #Pattern ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids kore-element-var-VE3 ) ) kore-element-var-VE1 ) $= ( IMP-sort-26-is-pattern BASIC-K-sort-1-is-pattern IMP-symbol-111-is-pattern typecode-cache-Pattern-98 IMP-symbol-220-is-pattern kore-inj-is-pattern typecode-cache-Pattern-72 KSEQ-symbol-0-is-pattern ) CDEBFGHAIJ $.
typecode-cache-Pattern-138 $p #Pattern ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem kore-element-var-VE3 ) kore-element-var-VE1 ) $= ( IMP-sort-30-is-pattern BASIC-K-sort-1-is-pattern typecode-cache-Pattern-98 kore-inj-is-pattern typecode-cache-Pattern-72 KSEQ-symbol-0-is-pattern ) CDBEFAGH $.
sorting-rearrange-157 $p |- ( \imp ( \and ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortGeneratedCounterCell ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortStmt ) \top ) ) ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortStateCell ) \top ) ) ( \kore-valid \kore-sort-SortGeneratedTopCell ( \kore-rewrites \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids kore-element-var-VE3 ) ) kore-element-var-VE1 ) ) kore-element-var-VE0 ) kore-element-var-VE2 ) ) ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem kore-element-var-VE3 ) kore-element-var-VE1 ) ) kore-element-var-VE0 ) kore-element-var-VE2 ) ) ) ) ) $= ( in-sort-is-pattern and-is-pattern typecode-cache-Pattern-74 typecode-cache-Pattern-72 BASIC-K-sort-0-is-pattern IMP-sort-9-is-pattern typecode-cache-Pattern-136 top-is-pattern IMP-sort-8-is-pattern rule-imp-transitivity and-elim-left-sugar kore-top-is-pattern IMP-symbol-119-is-pattern IMP-symbol-114-is-pattern typecode-cache-Pattern-97 IMP-symbol-117-is-pattern kore-and-is-pattern imp-reflexivity rule-and-intro-alt2-sugar typecode-cache-Pattern-137 typecode-cache-Pattern-138 kore-rewrites-is-pattern kore-valid-is-pattern and-elim-right-sugar sorting-cache-287 IMP-axiom-2877 ) CHIEBDKFAGJELFFAGJECHIEBDKFFMMMMPCDUDQAGRBSTUAMMPCDUEQAGRBSTUAUFUGCHIEBDKFAGJELFFAGJECHIEBDKFCHIEBDKFAGJELFFAGJELFAGJECHIEBDKFAGJELFUHAGJELFAGJEAGJEAGJELOAGJEUBNNCHIEBDKFAGJELFFCHIEBDKCHIEBDKFAGJELFFCHIEBDKFCHIECHIEBDKFAGJELFOCHIEBDKFCHIECHIECHIEBDKOCHIEUBNNABCDUIUCUCABCDUJN $.
substitution-423 $p #Substitution \kore-sort-SortStateCell \kore-sort-SortStateCell kore-element-var-x0 kore-element-var-VE0 $= ( IMP-sort-9-is-pattern typecode-cache-Pattern-16 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-424 $p #Substitution ( \in-sort kore-element-var-x0 \kore-sort-SortStateCell ) ( \in-sort kore-element-var-VE0 \kore-sort-SortStateCell ) kore-element-var-x0 kore-element-var-VE0 $= ( typecode-cache-Pattern-16 IMP-sort-9-is-pattern element-var-is-var typecode-cache-Pattern-74 substitution-var-same substitution-423 substitution-in-sort ) BCBCDAFDAEBCAEGABHI $.
substitution-425 $p #Substitution ( \and ( \in-sort kore-element-var-x0 \kore-sort-SortStateCell ) \top ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortStateCell ) \top ) kore-element-var-x0 kore-element-var-VE0 $= ( typecode-cache-Pattern-16 IMP-sort-9-is-pattern in-sort-is-pattern top-is-pattern typecode-cache-Pattern-74 element-var-is-var substitution-424 substitution-183 substitution-and ) BCBCDEFAGDEFAHABIABJK $.
sorting-cache-288 $p |- ( \imp ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortGeneratedCounterCell ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortStmt ) \top ) ) ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortStmt ) \top ) ) $= ( in-sort-is-pattern typecode-cache-Pattern-136 typecode-cache-Pattern-72 BASIC-K-sort-0-is-pattern and-is-pattern typecode-cache-Pattern-98 IMP-sort-30-is-pattern top-is-pattern and-elim-right-sugar sorting-cache-284 rule-imp-transitivity top-intro rule-weakening rule-and-intro-alt2-sugar ) BFGDACEHCIJDKBFGDACEHACECIJDBFGDACELACMNBFGDACEHKOPQ $.
sorting-cache-289 $p |- ( \imp ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortGeneratedCounterCell ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortStmt ) \top ) ) ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortGeneratedCounterCell ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortStmt ) \top ) ) ) $= ( in-sort-is-pattern typecode-cache-Pattern-136 typecode-cache-Pattern-72 BASIC-K-sort-0-is-pattern and-is-pattern typecode-cache-Pattern-97 IMP-sort-10-is-pattern typecode-cache-Pattern-98 IMP-sort-30-is-pattern top-is-pattern and-elim-right-sugar sorting-cache-282 rule-imp-transitivity sorting-cache-288 rule-and-intro-alt2-sugar ) BFGDACEHAIJDCKLDMHBFGDACEHACEAIJDBFGDACENACOPABCQR $.
sorting-cache-290 $p |- ( \imp ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortGeneratedCounterCell ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortStmt ) \top ) ) ) ( \and ( \kore-is-sort \kore-sort-SortId ) ( \kore-is-sort \kore-sort-SortKItem ) ) ) $= ( kore-is-sort-is-pattern typecode-cache-Pattern-72 BASIC-K-sort-0-is-pattern in-sort-is-pattern typecode-cache-Pattern-136 and-is-pattern IMP-sort-17-is-pattern BASIC-K-sort-1-is-pattern imp-is-pattern proof-rule-prop-1 proof-rule-mp IMP-sort-17-sort BASIC-K-sort-1-sort rule-and-intro-alt2-sugar ) BEFGACHIJDKDJDBEFGACHIJDLJDBEFGACHIMONKDBEFGACHIKDLKDBEFGACHIMPNQ $.
sorting-cache-291 $p |- ( \imp ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortGeneratedCounterCell ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortStmt ) \top ) ) ) ( \in-sort ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem ( \kore-dv \kore-sort-SortId "a" ) ) \kore-sort-SortKItem ) ) $= ( IMP-sort-17-is-pattern in-sort-is-pattern string-literal-11-is-pattern and-is-pattern kore-dv-is-pattern BASIC-K-sort-1-is-pattern typecode-cache-Pattern-72 BASIC-K-sort-0-is-pattern typecode-cache-Pattern-136 kore-is-sort-is-pattern kore-inj-is-pattern sorting-cache-290 imp-is-pattern proof-rule-prop-1 kore-dv-sorting proof-rule-mp rule-and-intro-alt2-sugar INJ-symbol-0-sorting rule-imp-transitivity ) BJKEACLGDMIMGDFHDEGDIDFHNIEBJKEACLGDMIMGDFHDEABCODFHDEBJKEACLGDFHDEPDFHDEBJKEACLGQDFRSTDIDFHUAUB $.
sorting-cache-292 $p |- ( \imp ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortGeneratedCounterCell ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortStmt ) \top ) ) ) ( \and ( \kore-is-sort \kore-sort-SortInt ) ( \kore-is-sort \kore-sort-SortKItem ) ) ) $= ( kore-is-sort-is-pattern typecode-cache-Pattern-72 BASIC-K-sort-0-is-pattern in-sort-is-pattern typecode-cache-Pattern-136 and-is-pattern IMP-sort-22-is-pattern BASIC-K-sort-1-is-pattern imp-is-pattern proof-rule-prop-1 proof-rule-mp IMP-sort-22-sort BASIC-K-sort-1-sort rule-and-intro-alt2-sugar ) BEFGACHIJDKDJDBEFGACHIJDLJDBEFGACHIMONKDBEFGACHIKDLKDBEFGACHIMPNQ $.
sorting-cache-293 $p |- ( \imp ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortGeneratedCounterCell ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortStmt ) \top ) ) ) ( \in-sort ( \kore-inj \kore-sort-SortInt \kore-sort-SortKItem ( \kore-dv \kore-sort-SortInt "0" ) ) \kore-sort-SortKItem ) ) $= ( IMP-sort-22-is-pattern in-sort-is-pattern string-literal-1-is-pattern and-is-pattern kore-dv-is-pattern BASIC-K-sort-1-is-pattern typecode-cache-Pattern-72 BASIC-K-sort-0-is-pattern typecode-cache-Pattern-136 kore-is-sort-is-pattern kore-inj-is-pattern sorting-cache-292 imp-is-pattern proof-rule-prop-1 kore-dv-sorting proof-rule-mp rule-and-intro-alt2-sugar INJ-symbol-0-sorting rule-imp-transitivity ) BJKEACLGDMIMGDFHDEGDIDFHNIEBJKEACLGDMIMGDFHDEABCODFHDEBJKEACLGDFHDEPDFHDEBJKEACLGQDFRSTDIDFHUAUB $.
sorting-cache-294 $p |- ( \imp ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortGeneratedCounterCell ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortStmt ) \top ) ) ) ( \in-sort ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem ( \kore-dv \kore-sort-SortId "a" ) ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortKItem ( \kore-dv \kore-sort-SortInt "0" ) ) ) \kore-sort-SortMap ) ) $= ( BASIC-K-sort-1-is-pattern IMP-sort-17-is-pattern kore-dv-is-pattern kore-inj-is-pattern IMP-sort-22-is-pattern in-sort-is-pattern string-literal-11-is-pattern string-literal-1-is-pattern and-is-pattern typecode-cache-Pattern-72 BASIC-K-sort-0-is-pattern typecode-cache-Pattern-136 IMP-symbol-196-is-pattern IMP-sort-14-is-pattern sorting-cache-291 sorting-cache-293 rule-and-intro-alt2-sugar IMP-symbol-196-sorting rule-imp-transitivity ) BMNIACOLEDEJFGDIHDHKFGDILEDEJFGHDHKFGPQIBMNIACOLEDEJFGDIHDHKFGDIABCRABCSTEDEJFGHDHKFGUAUB $.
sorting-rearrange-158 $p |- ( \imp ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortGeneratedCounterCell ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortStmt ) \top ) ) ) ( \kore-valid \kore-sort-SortGeneratedTopCell ( \kore-rewrites \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids kore-element-var-VE3 ) ) kore-element-var-VE1 ) ) ( \kore-symbol-Lbl'-LT-'state'-GT-' ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem ( \kore-dv \kore-sort-SortId "a" ) ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortKItem ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) kore-element-var-VE2 ) ) ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem kore-element-var-VE3 ) kore-element-var-VE1 ) ) ( \kore-symbol-Lbl'-LT-'state'-GT-' ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem ( \kore-dv \kore-sort-SortId "a" ) ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortKItem ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) kore-element-var-VE2 ) ) ) ) ) $= ( IMP-sort-8-is-pattern IMP-sort-17-is-pattern BASIC-K-sort-1-is-pattern kore-dv-is-pattern kore-inj-is-pattern IMP-sort-22-is-pattern kore-element-var-VE0-elementvariable IMP-symbol-119-is-pattern string-literal-11-is-pattern string-literal-1-is-pattern IMP-symbol-196-is-pattern IMP-symbol-120-is-pattern typecode-cache-Pattern-97 IMP-symbol-114-is-pattern kore-top-is-pattern element-var-is-var IMP-symbol-117-is-pattern kore-element-var-x0-elementvariable kore-and-is-pattern typecode-cache-Pattern-74 typecode-cache-Pattern-16 typecode-cache-Pattern-137 typecode-cache-Pattern-138 in-sort-is-pattern and-is-pattern IMP-sort-9-is-pattern substitution-disjoint typecode-cache-Pattern-72 BASIC-K-sort-0-is-pattern top-is-pattern typecode-cache-Pattern-136 kore-rewrites-is-pattern kore-valid-is-pattern substitution-var-same IMP-symbol-114-substitution IMP-symbol-117-substitution substitution-kore-and substitution-191 rule-imp-transitivity rule-and-intro-alt2-sugar kore-element-var-Val-elementvariable substitution-kore-rewrites substitution-kore-valid substitution-imp substitution-286 and-elim-left-sugar imp-reflexivity sorting-cache-289 IMP-sort-14-is-pattern sorting-cache-294 IMP-symbol-120-sorting top-intro rule-weakening sorting-rearrange-156 sorting-rearrange-157 substitution-in-sort substitution-and substitution-425 functional-substitution-alt ) BUKULUGACUNUHBUKULUGACUNUHEFELGHIFIMGHNOUIUGUMUHUHDDDDRBCUEKEFELGHIFIMGHNOQAPTUBDDRBCUFKEFELGHIFIMGHNOQAPTUBUOUPBUKULUGACUNUHBUKULUGACUNUHEFELGHIFIMGHNOUIUGUMUHBUKULUGACUNUHBUKULUGACUNBUKULUGACUNUHBUKULUGBUKULUGBUKULUGACUNVIBUKULUGVJVBABCVKVCBUKULUGACUNUHEFELGHIFIMGHNOUIUGUMBUKULUGACUNUHEFELGHIFIMGHNVLUGEFELGHIFIMGHNOUIUGABCVMEFELGHIFIMGHNVNVBBUKULUGACUNUHUMVOVPVCVCEFELGHIFIMGHNODDDDRBCUEKJUCQAPTUBDDRBCUFKJUCQAPTUBUOUPDDDDRBCUEKEFELGHIFIMGHNOQAPTUBDDRBCUFKEFELGHIFIMGHNOQAPTUBUOUPDDDDRBCUEKUAUDQAPTUBDDRBCUFKUAUDQAPTUBUOUPBUKULUGACUNUHJUCUIUGUMUHEFELGHIFIMGHNOUIUGUMUHUAUDUIUGUMUHVDJUAABCVDVQJABCVREFELGHIFIMGHNOEFELGHIFIMGHNOUIUGUMUHDDDDRBCUEKEFELGHIFIMGHNOQAPTUBDDRBCUFKEFELGHIFIMGHNOQAPTUBUOUPJUCUIUGUMUHDDDDRBCUEKJUCQAPTUBDDRBCUFKJUCQAPTUBUOUPJSEFELGHIFIMGHNOEFELGHIFIMGHNOUIUGUMJUCUIUGUMJSEFELGHIFIMGHNOEFELGHIFIMGHNOUIJUCUIJSEFELGHIFIMGHNOJSUQUIEFELGHIFIMGHNOJSUJVSUMEFELGHIFIMGHNOJSUJVTDDDDRBCUEKEFELGHIFIMGHNOQAPTUBDDRBCUFKEFELGHIFIMGHNOQAPTUBUODDDDRBCUEKJUCQAPTUBDDRBCUFKJUCQAPTUBUOEFELGHIFIMGHNOJSDEFELGHIFIMGHNOJSUJDDDRBCUEKEFELGHIFIMGHNOQAPTUBDDRBCUFKEFELGHIFIMGHNOQAPTUBDDDRBCUEKJUCQAPTUBDDRBCUFKJUCQAPTUBEFELGHIFIMGHNOJSDEFELGHIFIMGHNOJSUJDDRBCUEKEFELGHIFIMGHNOQAPTDDRBCUEKJUCQAPTEFELGHIFIMGHNOJSDEFELGHIFIMGHNOJSUJDREFELGHIFIMGHNOJSUJJSEFELGHIFIMGHNOBCUEKEFELGHIFIMGHNOQAPBCUEKJUCQAPJSEFELGHIFIMGHNOBCUEKEFELGHIFIMGHNOBCUEKJUCBCUEKEFELGHIFIMGHNOJSUJEFELGHIFIMGHNOJSUQURAPEFELGHIFIMGHNOJSUJUSUTDDRBCUFKEFELGHIFIMGHNOQAPTDDRBCUFKJUCQAPTEFELGHIFIMGHNOJSDEFELGHIFIMGHNOJSUJDREFELGHIFIMGHNOJSUJJSEFELGHIFIMGHNOBCUFKEFELGHIFIMGHNOQAPBCUFKJUCQAPJSEFELGHIFIMGHNOBCUFKEFELGHIFIMGHNOBCUFKJUCBCUFKEFELGHIFIMGHNOJSUJEFELGHIFIMGHNOJSUQURAPEFELGHIFIMGHNOJSUJUSUTVEVFVGUAUDUAUDUIUGUMUHDDDDRBCUEKUAUDQAPTUBDDRBCUFKUAUDQAPTUBUOUPJUCUIUGUMUHDDDDRBCUEKJUCQAPTUBDDRBCUFKJUCQAPTUBUOUPJSJUAWADDDDRBCUEKUAUDQAPTUBDDRBCUFKUAUDQAPTUBUODDDDRBCUEKJUCQAPTUBDDRBCUFKJUCQAPTUBUOUAUDJSJUAVADDDRBCUEKUAUDQAPTUBDDRBCUFKUAUDQAPTUBDDDRBCUEKJUCQAPTUBDDRBCUFKJUCQAPTUBUAUDJSJUAVADDRBCUEKUAUDQAPTDDRBCUEKJUCQAPTUAUDJSJUAVADRUAUDJSUJJSUAUDBCUEKUAUDQAPBCUEKJUCQAPJSUAUDBCUEKUAUDBCUEKJUCBCUEKUAUDJSUJUAUDJSUQURJAUAVHUSUTDDRBCUFKUAUDQAPTDDRBCUFKJUCQAPTUAUDJSJUAVADRUAUDJSUJJSUAUDBCUFKUAUDQAPBCUFKJUCQAPJSUAUDBCUFKUAUDBCUFKJUCBCUFKUAUDJSUJUAUDJSUQURJAUAVHUSUTVEVFVGWBVB $.
sorting-rearrange-159 $p |- ( \imp ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortGeneratedCounterCell ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortStmt ) \top ) ) ( \exists kore-element-var-V0 ( \eq kore-element-var-V0 \kore-symbol-dotk ) ) ) $= ( top-is-pattern typecode-cache-Pattern-136 KSEQ-symbol-1-is-pattern typecode-cache-Pattern-12 eq-is-pattern exists-is-pattern top-intro rule-weakening BASIC-K-sort-0-is-pattern sorting-cache-12 sorting-rearrange-81 kore-functional rule-imp-transitivity ) ABEDCGFHCIABEDJKLFDCMCNOP $.
sorting-cache-295 $p |- ( \imp ( \and ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortGeneratedCounterCell ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortStmt ) \top ) ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortK ) \top ) ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortGeneratedCounterCell ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortStmt ) \top ) ) ) $= ( and-is-pattern in-sort-is-pattern top-is-pattern typecode-cache-Pattern-136 typecode-cache-Pattern-72 BASIC-K-sort-0-is-pattern typecode-cache-Pattern-98 IMP-sort-30-is-pattern typecode-cache-Pattern-97 IMP-sort-10-is-pattern and-elim-left-sugar rule-imp-transitivity rule-and-intro-alt2-sugar sorting-cache-282 sorting-cache-284 top-intro rule-weakening ) ACGBHIEFDDALMECJKEFDACGBHIEFDDACGALMEACGBHIEFDNACQOACGBHIEFDDCJKEFACGBHIEFDDACGCJKEACGBHIEFDNACROACGBHIEFDDFSTPP $.
typecode-cache-Pattern-139 $p #Pattern ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids kore-element-var-VE3 ) ) kore-element-var-x0 ) $= ( IMP-sort-26-is-pattern BASIC-K-sort-1-is-pattern IMP-symbol-111-is-pattern typecode-cache-Pattern-98 IMP-symbol-220-is-pattern kore-inj-is-pattern typecode-cache-Pattern-16 KSEQ-symbol-0-is-pattern ) CDEAFGHBIJ $.
typecode-cache-Pattern-140 $p #Pattern ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem kore-element-var-VE3 ) kore-element-var-x0 ) $= ( IMP-sort-30-is-pattern BASIC-K-sort-1-is-pattern typecode-cache-Pattern-98 kore-inj-is-pattern typecode-cache-Pattern-16 KSEQ-symbol-0-is-pattern ) CDAEFBGH $.
substitution-426 $p #Substitution ( \and ( \in-sort \kore-symbol-dotk \kore-sort-SortK ) \top ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortK ) \top ) \kore-symbol-dotk kore-element-var-VE1 $= ( KSEQ-symbol-1-is-pattern BASIC-K-sort-0-is-pattern element-var-is-var top-is-pattern in-sort-is-pattern typecode-cache-Pattern-72 substitution-disjoint substitution-var-same substitution-in-sort substitution-and ) BBCFEAGCFEADBBCAGCADBADICBADHJEBADHK $.
substitution-427 $p #Substitution kore-element-var-VE2 kore-element-var-VE2 \kore-symbol-dotk kore-element-var-VE1 $= ( typecode-cache-Pattern-97 KSEQ-symbol-1-is-pattern element-var-is-var substitution-disjoint ) ACDBEF $.
substitution-428 $p #Substitution ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem kore-element-var-VE3 ) \kore-symbol-dotk ) ) ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem kore-element-var-VE3 ) kore-element-var-VE1 ) ) \kore-symbol-dotk kore-element-var-VE1 $= ( KSEQ-symbol-1-is-pattern element-var-is-var IMP-sort-30-is-pattern BASIC-K-sort-1-is-pattern typecode-cache-Pattern-98 kore-inj-is-pattern KSEQ-symbol-0-is-pattern typecode-cache-Pattern-138 typecode-cache-Pattern-72 substitution-disjoint substitution-var-same KSEQ-symbol-0-substitution IMP-symbol-119-substitution ) ADCEFBGHCIABJADCEFBGHCEFBGHAKEFBGHCADLCADMNO $.
substitution-429 $p #Substitution ( \in-sort kore-element-var-x0 \kore-sort-SortK ) ( \in-sort kore-element-var-VE1 \kore-sort-SortK ) kore-element-var-x0 kore-element-var-VE1 $= ( typecode-cache-Pattern-16 BASIC-K-sort-0-is-pattern element-var-is-var typecode-cache-Pattern-72 substitution-var-same substitution-255 substitution-in-sort ) BCBCDAFDAEBCAEGABHI $.
substitution-430 $p #Substitution ( \and ( \in-sort kore-element-var-x0 \kore-sort-SortK ) \top ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortK ) \top ) kore-element-var-x0 kore-element-var-VE1 $= ( typecode-cache-Pattern-16 BASIC-K-sort-0-is-pattern in-sort-is-pattern top-is-pattern typecode-cache-Pattern-72 element-var-is-var substitution-429 substitution-196 substitution-and ) BCBCDEFAGDEFAHABIABJK $.
substitution-431 $p #Substitution ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids kore-element-var-VE3 ) ) kore-element-var-x0 ) ) ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids kore-element-var-VE3 ) ) kore-element-var-VE1 ) ) kore-element-var-x0 kore-element-var-VE1 $= ( typecode-cache-Pattern-16 element-var-is-var IMP-sort-26-is-pattern BASIC-K-sort-1-is-pattern IMP-symbol-111-is-pattern typecode-cache-Pattern-98 IMP-symbol-220-is-pattern kore-inj-is-pattern typecode-cache-Pattern-139 typecode-cache-Pattern-137 typecode-cache-Pattern-72 substitution-disjoint substitution-var-same KSEQ-symbol-0-substitution IMP-symbol-119-substitution ) AECDBCLABMAECDFGHBIJKCDFGHBIJKANFGHBIJKCDAEOCDAEPQR $.
substitution-432 $p #Substitution ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem kore-element-var-VE3 ) kore-element-var-x0 ) ) ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem kore-element-var-VE3 ) kore-element-var-VE1 ) ) kore-element-var-x0 kore-element-var-VE1 $= ( typecode-cache-Pattern-16 element-var-is-var IMP-sort-30-is-pattern BASIC-K-sort-1-is-pattern typecode-cache-Pattern-98 kore-inj-is-pattern typecode-cache-Pattern-140 typecode-cache-Pattern-138 typecode-cache-Pattern-72 substitution-disjoint substitution-var-same KSEQ-symbol-0-substitution IMP-symbol-119-substitution ) AECDBCJABKAECDFGBHICDFGBHIALFGBHICDAEMCDAENOP $.
sorting-cache-296 $p |- ( \imp ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortGeneratedCounterCell ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortStmt ) \top ) ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortGeneratedCounterCell ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortStmt ) \top ) ) ) $= ( typecode-cache-Pattern-136 in-sort-is-pattern top-is-pattern typecode-cache-Pattern-98 IMP-sort-30-is-pattern rule-and-intro-alt2-sugar typecode-cache-Pattern-97 IMP-sort-10-is-pattern and-is-pattern sorting-cache-282 sorting-cache-284 top-intro rule-weakening ) ABCAIJDBFGDEKABLABCBFGDEABMABCENOHH $.
sorting-rearrange-160 $p |- ( \imp ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortGeneratedCounterCell ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortStmt ) \top ) ) ( \kore-valid \kore-sort-SortGeneratedTopCell ( \kore-rewrites \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids kore-element-var-VE3 ) ) \kore-symbol-dotk ) ) ( \kore-symbol-Lbl'-LT-'state'-GT-' ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem ( \kore-dv \kore-sort-SortId "a" ) ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortKItem ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) kore-element-var-VE2 ) ) ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem kore-element-var-VE3 ) \kore-symbol-dotk ) ) ( \kore-symbol-Lbl'-LT-'state'-GT-' ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem ( \kore-dv \kore-sort-SortId "a" ) ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortKItem ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) kore-element-var-VE2 ) ) ) ) ) $= ( BASIC-K-sort-1-is-pattern kore-inj-is-pattern IMP-sort-17-is-pattern kore-dv-is-pattern IMP-sort-22-is-pattern IMP-sort-8-is-pattern kore-element-var-VE1-elementvariable string-literal-11-is-pattern string-literal-1-is-pattern IMP-symbol-196-is-pattern IMP-symbol-120-is-pattern IMP-symbol-119-is-pattern IMP-symbol-114-is-pattern typecode-cache-Pattern-97 KSEQ-symbol-1-is-pattern kore-top-is-pattern IMP-symbol-117-is-pattern kore-element-var-x0-elementvariable kore-and-is-pattern element-var-is-var BASIC-K-sort-0-is-pattern in-sort-is-pattern and-is-pattern typecode-cache-Pattern-98 top-is-pattern KSEQ-symbol-0-is-pattern typecode-cache-Pattern-72 typecode-cache-Pattern-136 typecode-cache-Pattern-137 typecode-cache-Pattern-16 typecode-cache-Pattern-138 kore-rewrites-is-pattern substitution-disjoint IMP-sort-26-is-pattern IMP-symbol-111-is-pattern IMP-symbol-220-is-pattern kore-valid-is-pattern IMP-sort-30-is-pattern typecode-cache-Pattern-139 typecode-cache-Pattern-140 rule-imp-transitivity IMP-symbol-114-substitution IMP-symbol-117-substitution substitution-kore-and substitution-200 rule-and-intro-alt2-sugar kore-element-var-V0-elementvariable substitution-427 substitution-kore-rewrites substitution-kore-valid substitution-imp substitution-308 sorting-cache-296 imp-is-pattern proof-rule-prop-1 KSEQ-symbol-1-sorting proof-rule-mp top-intro rule-weakening sorting-rearrange-159 and-elim-right-sugar and-elim-left-sugar imp-reflexivity sorting-cache-295 sorting-rearrange-158 substitution-426 substitution-var-same KSEQ-symbol-0-substitution IMP-symbol-119-substitution substitution-428 substitution-430 substitution-431 substitution-432 functional-substitution-alt ) ABUJABUJQUCUDUGUEUEHHHHRUPCUQBUFURDQUHNECEJFDGCGKFDLMOAPSUAHHRUTCBUFDQUHNECEJFDGCGKFDLMOAPSUAUNUSABUJABUJQUCUDUGUEABVOABUJQUCUDUGQUCUDABUJQUCUDVPQUCUDABUJVQVRVSABUJUGVTWAVHVHQHHHHRIBUKNECEJFDGCGKFDLMOAPSUAHHRIBUMNECEJFDGCGKFDLMOAPSUAUNUSHHHHRUPCUQBUFURDQUHNECEJFDGCGKFDLMOAPSUAHHRUTCBUFDQUHNECEJFDGCGKFDLMOAPSUAUNUSHHHHRBTVANECEJFDGCGKFDLMOAPSUAHHRBTVBNECEJFDGCGKFDLMOAPSUAUNUSABUJIUIUCUDUGUEQUCUDUGUETULUCUDUGUEVIITABVIWBABUJIUIUCUDUGUEUEIUIUCUDABUJUEHHHHRIBUKNECEJFDGCGKFDLMOAPSUAHHRIBUMNECEJFDGCGKFDLMOAPSUAUNUSABUJIUIUCUDUGUEUEIUIUCUDABUJABUJIUIUCUDUGUEUEIUIUCUDUGUEIUIUCUDABUJIUIUCUDUGUEWCIUIUCUDUGUEIUIUCUDIUIUCUDIUIUCUDUGWDIUIUCUDWEVCVCAIBWFVHAIBWGVCQQUCUDUGUEHHHHRUPCUQBUFURDQUHNECEJFDGCGKFDLMOAPSUAHHRUTCBUFDQUHNECEJFDGCGKFDLMOAPSUAUNUSIUIUCUDUGUEHHHHRIBUKNECEJFDGCGKFDLMOAPSUAHHRIBUMNECEJFDGCGKFDLMOAPSUAUNUSIUBIWHHHHHRUPCUQBUFURDQUHNECEJFDGCGKFDLMOAPSUAHHRUTCBUFDQUHNECEJFDGCGKFDLMOAPSUAUNHHHHRIBUKNECEJFDGCGKFDLMOAPSUAHHRIBUMNECEJFDGCGKFDLMOAPSUAUNQIUBHQIUBUOHHHRUPCUQBUFURDQUHNECEJFDGCGKFDLMOAPSUAHHRUTCBUFDQUHNECEJFDGCGKFDLMOAPSUAHHHRIBUKNECEJFDGCGKFDLMOAPSUAHHRIBUMNECEJFDGCGKFDLMOAPSUAQIUBHQIUBUOHHRUPCUQBUFURDQUHNECEJFDGCGKFDLMOAPSHHRIBUKNECEJFDGCGKFDLMOAPSQIUBHQIUBUOHRQIUBUOIUBQUPCUQBUFURDQUHNECEJFDGCGKFDLMOAPIBUKNECEJFDGCGKFDLMOAPIUBQUPCUQBUFURDQUHNECEJFDGCGKFDLMIBUKNECEJFDGCGKFDLMIUBQUPCUQBUFURDQUHIBUKIUBQUPCUQBUFURDQUPCUQBUFURDIUIUPCUQBUFURDQIUBUOQIUBWIWJWKECEJFDGCGKFDLMQIUBUOVDAIVJVEVFHHRUTCBUFDQUHNECEJFDGCGKFDLMOAPSHHRIBUMNECEJFDGCGKFDLMOAPSQIUBHQIUBUOHRQIUBUOIUBQUTCBUFDQUHNECEJFDGCGKFDLMOAPIBUMNECEJFDGCGKFDLMOAPIUBQUTCBUFDQUHNECEJFDGCGKFDLMIBUMNECEJFDGCGKFDLMIBWLECEJFDGCGKFDLMQIUBUOVDAIVJVEVFVKVLVMTULTULUCUDUGUEHHHHRBTVANECEJFDGCGKFDLMOAPSUAHHRBTVBNECEJFDGCGKFDLMOAPSUAUNUSIUIUCUDUGUEHHHHRIBUKNECEJFDGCGKFDLMOAPSUAHHRIBUMNECEJFDGCGKFDLMOAPSUAUNUSIUBITWMHHHHRBTVANECEJFDGCGKFDLMOAPSUAHHRBTVBNECEJFDGCGKFDLMOAPSUAUNHHHHRIBUKNECEJFDGCGKFDLMOAPSUAHHRIBUMNECEJFDGCGKFDLMOAPSUAUNTULIUBITVGHHHRBTVANECEJFDGCGKFDLMOAPSUAHHRBTVBNECEJFDGCGKFDLMOAPSUAHHHRIBUKNECEJFDGCGKFDLMOAPSUAHHRIBUMNECEJFDGCGKFDLMOAPSUATULIUBITVGHHRBTVANECEJFDGCGKFDLMOAPSHHRIBUKNECEJFDGCGKFDLMOAPSTULIUBITVGHRTULIUBUOIUBTULBTVANECEJFDGCGKFDLMOAPIBUKNECEJFDGCGKFDLMOAPIUBTULBTVANECEJFDGCGKFDLMIBUKNECEJFDGCGKFDLMIBTWNECEJFDGCGKFDLMTULIUBUOVDAITVNVEVFHHRBTVBNECEJFDGCGKFDLMOAPSHHRIBUMNECEJFDGCGKFDLMOAPSTULIUBITVGHRTULIUBUOIUBTULBTVBNECEJFDGCGKFDLMOAPIBUMNECEJFDGCGKFDLMOAPIUBTULBTVBNECEJFDGCGKFDLMIBUMNECEJFDGCGKFDLMIBTWOECEJFDGCGKFDLMTULIUBUOVDAITVNVEVFVKVLVMWPVC $.
sorting-rearrange-161 $p |- ( \imp ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortStmt ) \top ) ( \exists kore-element-var-Val ( \eq kore-element-var-Val ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) $= ( top-is-pattern typecode-cache-Pattern-98 IMP-sort-30-is-pattern in-sort-is-pattern and-is-pattern IMP-sort-22-is-pattern string-literal-1-is-pattern kore-dv-is-pattern IMP-symbol-116-is-pattern typecode-cache-Pattern-3 eq-is-pattern exists-is-pattern top-intro rule-weakening IMP-sort-10-is-pattern sorting-cache-23 sorting-rearrange-119 kore-functional rule-imp-transitivity ) ADEFCGCBLHIJKMBNADEFCGCOPQHIJKCBRBSTUA $.
sorting-cache-297 $p |- ( \imp ( \and ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortStmt ) \top ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortGeneratedCounterCell ) \top ) ) ( \in-sort kore-element-var-VE2 \kore-sort-SortGeneratedCounterCell ) ) $= ( in-sort-is-pattern typecode-cache-Pattern-97 IMP-sort-10-is-pattern top-is-pattern and-is-pattern typecode-cache-Pattern-98 IMP-sort-30-is-pattern rule-imp-transitivity and-elim-right-sugar and-elim-left-sugar imp-reflexivity ) BHICFGADECFGGADECFGADECBHICFGADECFGKADECFGADECADECADECFLADECMJJ $.
sorting-cache-298 $p |- ( \imp ( \and ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortStmt ) \top ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortGeneratedCounterCell ) \top ) ) ( \in-sort kore-element-var-VE3 \kore-sort-SortStmt ) ) $= ( in-sort-is-pattern typecode-cache-Pattern-98 IMP-sort-30-is-pattern top-is-pattern and-is-pattern typecode-cache-Pattern-97 IMP-sort-10-is-pattern and-elim-left-sugar rule-imp-transitivity imp-reflexivity ) BDECFGAHICFGGBDECFGBDECBDECFGAHICFGJBDECFGBDECBDECBDECFJBDECLKK $.
substitution-433 $p #Substitution \kore-sort-SortGeneratedCounterCell \kore-sort-SortGeneratedCounterCell kore-element-var-x0 kore-element-var-VE2 $= ( IMP-sort-10-is-pattern typecode-cache-Pattern-16 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-434 $p #Substitution ( \in-sort kore-element-var-x0 \kore-sort-SortGeneratedCounterCell ) ( \in-sort kore-element-var-VE2 \kore-sort-SortGeneratedCounterCell ) kore-element-var-x0 kore-element-var-VE2 $= ( typecode-cache-Pattern-16 IMP-sort-10-is-pattern element-var-is-var typecode-cache-Pattern-97 substitution-var-same substitution-433 substitution-in-sort ) BCBCDAFDAEBCAEGABHI $.
substitution-435 $p #Substitution ( \and ( \in-sort kore-element-var-x0 \kore-sort-SortGeneratedCounterCell ) \top ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortGeneratedCounterCell ) \top ) kore-element-var-x0 kore-element-var-VE2 $= ( typecode-cache-Pattern-16 IMP-sort-10-is-pattern in-sort-is-pattern top-is-pattern typecode-cache-Pattern-97 element-var-is-var substitution-434 substitution-318 substitution-and ) BCBCDEFAGDEFAHABIABJK $.
sorting-cache-299 $p |- ( \imp ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortStmt ) \top ) ( \in-sort ( \kore-dv \kore-sort-SortInt "0" ) \kore-sort-SortInt ) ) $= ( IMP-sort-22-is-pattern in-sort-is-pattern string-literal-1-is-pattern kore-dv-is-pattern typecode-cache-Pattern-98 IMP-sort-30-is-pattern top-is-pattern and-is-pattern imp-is-pattern proof-rule-prop-1 kore-dv-sorting proof-rule-mp ) BDEBCAFGCHIBDEBCJBDEBCAFGCHIKBDLM $.
sorting-cache-300 $p |- ( \imp ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortStmt ) \top ) ( \in-sort ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) \kore-sort-SortGeneratedCounterCell ) ) $= ( IMP-sort-22-is-pattern in-sort-is-pattern string-literal-1-is-pattern kore-dv-is-pattern typecode-cache-Pattern-98 IMP-sort-30-is-pattern top-is-pattern and-is-pattern IMP-symbol-116-is-pattern IMP-sort-10-is-pattern sorting-cache-299 IMP-symbol-116-sorting rule-imp-transitivity ) AFGCHIBDEBCBDEJKCALBDEMN $.
sorting-cache-301 $p |- ( \imp ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortStmt ) \top ) ( \and ( \in-sort ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) \kore-sort-SortGeneratedCounterCell ) \top ) ) $= ( top-is-pattern in-sort-is-pattern typecode-cache-Pattern-98 IMP-sort-30-is-pattern and-is-pattern IMP-sort-22-is-pattern string-literal-1-is-pattern kore-dv-is-pattern IMP-symbol-116-is-pattern IMP-sort-10-is-pattern sorting-cache-300 top-intro rule-weakening rule-and-intro-alt2-sugar ) ADECBFGHIJKCBALADECBFBMNO $.
sorting-cache-302 $p |- ( \imp ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortStmt ) \top ) ( \and ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortStmt ) \top ) ( \and ( \in-sort ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) \kore-sort-SortGeneratedCounterCell ) \top ) ) ) $= ( in-sort-is-pattern typecode-cache-Pattern-98 IMP-sort-30-is-pattern top-is-pattern and-is-pattern rule-and-intro-alt2-sugar IMP-sort-22-is-pattern string-literal-1-is-pattern kore-dv-is-pattern IMP-symbol-116-is-pattern IMP-sort-10-is-pattern and-elim-left-sugar imp-reflexivity rule-imp-transitivity top-intro rule-weakening sorting-cache-301 ) ACDBEFACDBEFHIJKLBEFACDBEFACDBEACDBEFACDBACDBACDBEMACDBNOACDBEFEPQGARG $.
sorting-rearrange-162 $p |- ( \imp ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortStmt ) \top ) ( \kore-valid \kore-sort-SortGeneratedTopCell ( \kore-rewrites \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids kore-element-var-VE3 ) ) \kore-symbol-dotk ) ) ( \kore-symbol-Lbl'-LT-'state'-GT-' ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem ( \kore-dv \kore-sort-SortId "a" ) ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortKItem ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem kore-element-var-VE3 ) \kore-symbol-dotk ) ) ( \kore-symbol-Lbl'-LT-'state'-GT-' ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem ( \kore-dv \kore-sort-SortId "a" ) ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortKItem ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) ) $= ( BASIC-K-sort-1-is-pattern kore-inj-is-pattern IMP-sort-22-is-pattern kore-dv-is-pattern IMP-sort-8-is-pattern IMP-sort-17-is-pattern string-literal-1-is-pattern kore-element-var-VE2-elementvariable typecode-cache-Pattern-98 KSEQ-symbol-1-is-pattern KSEQ-symbol-0-is-pattern IMP-symbol-119-is-pattern string-literal-11-is-pattern IMP-symbol-196-is-pattern IMP-symbol-120-is-pattern IMP-symbol-114-is-pattern kore-top-is-pattern IMP-symbol-116-is-pattern IMP-symbol-117-is-pattern IMP-sort-30-is-pattern element-var-is-var kore-and-is-pattern typecode-cache-Pattern-97 kore-element-var-x0-elementvariable IMP-sort-26-is-pattern IMP-symbol-111-is-pattern IMP-symbol-220-is-pattern typecode-cache-Pattern-16 top-is-pattern and-is-pattern in-sort-is-pattern IMP-sort-10-is-pattern substitution-disjoint kore-rewrites-is-pattern kore-valid-is-pattern substitution-var-same IMP-symbol-117-substitution substitution-kore-and substitution-320 kore-element-var-Val-elementvariable rule-and-intro-alt2-sugar rule-imp-transitivity substitution-kore-rewrites substitution-kore-valid substitution-imp sorting-cache-302 sorting-rearrange-161 typecode-cache-Pattern-136 sorting-cache-297 sorting-cache-298 top-intro rule-weakening sorting-rearrange-160 substitution-in-sort substitution-and substitution-435 functional-substitution-alt ) AJUAULUJUKAJUAULUJUKDHESUMULUJUKUKFFFFRUFBUGAJUHCKLMGBGNECDBDHECOPQDHESTUCFFRUABAJCKLMGBGNECDBDHECOPQDHESTUCUOUPAVGDHESFFFFRUFBUGAJUHCKLMGBGNECDBDHECOPQIUDTUCFFRUABAJCKLMGBGNECDBDHECOPQIUDTUCUOUPFFFFRUFBUGAJUHCKLMGBGNECDBDHECOPQDHESTUCFFRUABAJCKLMGBGNECDBDHECOPQDHESTUCUOUPFFFFRUFBUGAJUHCKLMGBGNECDBDHECOPQUEUITUCFFRUABAJCKLMGBGNECDBDHECOPQUEUITUCUOUPAJUAULUJUKIUDUMULUJUKDHESUMULUJUKUEUIUMULUJUKVAIUEAVAVHAJUAULUJUKIUDUMULUJUKUKIAVIFFFFRUFBUGAJUHCKLMGBGNECDBDHECOPQIUDTUCFFRUABAJCKLMGBGNECDBDHECOPQIUDTUCUOUPAJUAULUJUKIUDUMULUJUKUKIUDUMULAJUAULUJUKIAVJAJUAULUJUKIUDUMULUJUKUKAJUAULUJIAVKAJUAULUJUKIUDUMULUJUKUKUJVLVMVBVBIAVNVCDHESDHESUMULUJUKFFFFRUFBUGAJUHCKLMGBGNECDBDHECOPQDHESTUCFFRUABAJCKLMGBGNECDBDHECOPQDHESTUCUOUPIUDUMULUJUKFFFFRUFBUGAJUHCKLMGBGNECDBDHECOPQIUDTUCFFRUABAJCKLMGBGNECDBDHECOPQIUDTUCUOUPIUBDHESDHESUMULUJIUDUMULUJIUBDHESDHESUMIUDUMIUBDHESIUBUQUMDHESIUBUNVOUJDHESIUBUNVPFFFFRUFBUGAJUHCKLMGBGNECDBDHECOPQDHESTUCFFRUABAJCKLMGBGNECDBDHECOPQDHESTUCUOFFFFRUFBUGAJUHCKLMGBGNECDBDHECOPQIUDTUCFFRUABAJCKLMGBGNECDBDHECOPQIUDTUCUODHESIUBFDHESIUBUNFFFRUFBUGAJUHCKLMGBGNECDBDHECOPQDHESTUCFFRUABAJCKLMGBGNECDBDHECOPQDHESTUCFFFRUFBUGAJUHCKLMGBGNECDBDHECOPQIUDTUCFFRUABAJCKLMGBGNECDBDHECOPQIUDTUCDHESIUBFDHESIUBUNFFRUFBUGAJUHCKLMGBGNECDBDHECOPQDHESTFFRUFBUGAJUHCKLMGBGNECDBDHECOPQIUDTDHESIUBFDHESIUBUNFRDHESIUBUNIUBDHESUFBUGAJUHCKLMGBGNECDBDHECOPQDHESUFBUGAJUHCKLMGBGNECDBDHECOPQIUDUFBUGAJUHCKLMGBGNECDBDHECOPQDHESIUBUNDHESIUBUQURUSFFRUABAJCKLMGBGNECDBDHECOPQDHESTFFRUABAJCKLMGBGNECDBDHECOPQIUDTDHESIUBFDHESIUBUNFRDHESIUBUNIUBDHESUABAJCKLMGBGNECDBDHECOPQDHESUABAJCKLMGBGNECDBDHECOPQIUDUABAJCKLMGBGNECDBDHECOPQDHESIUBUNDHESIUBUQURUSVDVEVFUEUIUEUIUMULUJUKFFFFRUFBUGAJUHCKLMGBGNECDBDHECOPQUEUITUCFFRUABAJCKLMGBGNECDBDHECOPQUEUITUCUOUPIUDUMULUJUKFFFFRUFBUGAJUHCKLMGBGNECDBDHECOPQIUDTUCFFRUABAJCKLMGBGNECDBDHECOPQIUDTUCUOUPIUBIUEVQFFFFRUFBUGAJUHCKLMGBGNECDBDHECOPQUEUITUCFFRUABAJCKLMGBGNECDBDHECOPQUEUITUCUOFFFFRUFBUGAJUHCKLMGBGNECDBDHECOPQIUDTUCFFRUABAJCKLMGBGNECDBDHECOPQIUDTUCUOUEUIIUBIUEUTFFFRUFBUGAJUHCKLMGBGNECDBDHECOPQUEUITUCFFRUABAJCKLMGBGNECDBDHECOPQUEUITUCFFFRUFBUGAJUHCKLMGBGNECDBDHECOPQIUDTUCFFRUABAJCKLMGBGNECDBDHECOPQIUDTUCUEUIIUBIUEUTFFRUFBUGAJUHCKLMGBGNECDBDHECOPQUEUITFFRUFBUGAJUHCKLMGBGNECDBDHECOPQIUDTUEUIIUBIUEUTFRUEUIIUBUNIUBUEUIUFBUGAJUHCKLMGBGNECDBDHECOPQUEUIUFBUGAJUHCKLMGBGNECDBDHECOPQIUDUFBUGAJUHCKLMGBGNECDBDHECOPQUEUIIUBUNUEUIIUBUQURUSFFRUABAJCKLMGBGNECDBDHECOPQUEUITFFRUABAJCKLMGBGNECDBDHECOPQIUDTUEUIIUBIUEUTFRUEUIIUBUNIUBUEUIUABAJCKLMGBGNECDBDHECOPQUEUIUABAJCKLMGBGNECDBDHECOPQIUDUABAJCKLMGBGNECDBDHECOPQUEUIIUBUNUEUIIUBUQURUSVDVEVFVRVC $.
sorting-cache-303 $p |- ( \imp ( \and \top ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortStmt ) \top ) ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortStmt ) \top ) ) $= ( top-is-pattern typecode-cache-Pattern-98 IMP-sort-30-is-pattern in-sort-is-pattern and-is-pattern rule-imp-transitivity and-elim-right-sugar and-elim-left-sugar imp-reflexivity top-intro rule-weakening rule-and-intro-alt2-sugar ) BACDEBFFACDEBBACDEBFFACDEBFACDEBACDEBFHACDEBFACDEACDEACDEBIACDEJGGBACDEBFFBKLM $.
substitution-436 $p #Substitution \kore-sort-SortStmt \kore-sort-SortStmt kore-element-var-x0 kore-element-var-VE3 $= ( IMP-sort-30-is-pattern typecode-cache-Pattern-16 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-437 $p #Substitution ( \in-sort kore-element-var-x0 \kore-sort-SortStmt ) ( \in-sort kore-element-var-VE3 \kore-sort-SortStmt ) kore-element-var-x0 kore-element-var-VE3 $= ( typecode-cache-Pattern-16 IMP-sort-30-is-pattern element-var-is-var typecode-cache-Pattern-98 substitution-var-same substitution-436 substitution-in-sort ) BCBCDAFDAEBCAEGABHI $.
substitution-438 $p #Substitution ( \and ( \in-sort kore-element-var-x0 \kore-sort-SortStmt ) \top ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortStmt ) \top ) kore-element-var-x0 kore-element-var-VE3 $= ( typecode-cache-Pattern-16 IMP-sort-30-is-pattern in-sort-is-pattern top-is-pattern typecode-cache-Pattern-98 element-var-is-var substitution-437 substitution-348 substitution-and ) BCBCDEFAGDEFAHABIABJK $.
substitution-439 $p #Substitution \kore-sort-SortPgm \kore-sort-SortPgm kore-element-var-x0 kore-element-var-VE3 $= ( IMP-sort-26-is-pattern typecode-cache-Pattern-16 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-440 $p #Substitution \kore-sort-SortKItem \kore-sort-SortKItem kore-element-var-x0 kore-element-var-VE3 $= ( BASIC-K-sort-1-is-pattern typecode-cache-Pattern-16 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-441 $p #Substitution \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids kore-element-var-x0 kore-element-var-VE3 $= ( IMP-symbol-111-is-pattern typecode-cache-Pattern-16 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-442 $p #Substitution ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids kore-element-var-x0 ) ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids kore-element-var-VE3 ) kore-element-var-x0 kore-element-var-VE3 $= ( typecode-cache-Pattern-16 element-var-is-var IMP-symbol-111-is-pattern typecode-cache-Pattern-98 substitution-441 substitution-var-same IMP-symbol-220-substitution ) ADBCEBCEAFABGBCADHI $.
substitution-443 $p #Substitution ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids kore-element-var-x0 ) ) ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids kore-element-var-VE3 ) ) kore-element-var-x0 kore-element-var-VE3 $= ( IMP-sort-26-is-pattern BASIC-K-sort-1-is-pattern IMP-symbol-111-is-pattern typecode-cache-Pattern-16 IMP-symbol-220-is-pattern typecode-cache-Pattern-98 element-var-is-var substitution-439 substitution-440 substitution-442 substitution-kore-inj ) CDEBFGCDEAHGBFAIABJABKABLM $.
substitution-444 $p #Substitution \kore-symbol-dotk \kore-symbol-dotk kore-element-var-x0 kore-element-var-VE3 $= ( KSEQ-symbol-1-is-pattern typecode-cache-Pattern-16 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-445 $p #Substitution ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids kore-element-var-x0 ) ) \kore-symbol-dotk ) ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids kore-element-var-VE3 ) ) \kore-symbol-dotk ) kore-element-var-x0 kore-element-var-VE3 $= ( typecode-cache-Pattern-16 IMP-sort-26-is-pattern BASIC-K-sort-1-is-pattern IMP-symbol-111-is-pattern IMP-symbol-220-is-pattern kore-inj-is-pattern KSEQ-symbol-1-is-pattern element-var-is-var typecode-cache-Pattern-98 substitution-443 substitution-444 KSEQ-symbol-0-substitution ) AJBCDEFBCGHIDEFAKGHIABLABMN $.
substitution-446 $p #Substitution ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem kore-element-var-x0 ) ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem kore-element-var-VE3 ) kore-element-var-x0 kore-element-var-VE3 $= ( typecode-cache-Pattern-16 IMP-sort-30-is-pattern BASIC-K-sort-1-is-pattern element-var-is-var typecode-cache-Pattern-98 substitution-436 substitution-440 substitution-var-same substitution-kore-inj ) DEBCDEAGBCAFABHABIBCAFJK $.
substitution-447 $p #Substitution ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem kore-element-var-x0 ) \kore-symbol-dotk ) ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem kore-element-var-VE3 ) \kore-symbol-dotk ) kore-element-var-x0 kore-element-var-VE3 $= ( typecode-cache-Pattern-16 IMP-sort-30-is-pattern BASIC-K-sort-1-is-pattern kore-inj-is-pattern KSEQ-symbol-1-is-pattern element-var-is-var typecode-cache-Pattern-98 substitution-446 substitution-444 KSEQ-symbol-0-substitution ) AHBCDEBCFGDEAIFGABJABKL $.
sorting-rearrange-163 $p |- ( \imp \top ( \kore-valid \kore-sort-SortGeneratedTopCell ( \kore-rewrites \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) \kore-symbol-dotk ) ) ( \kore-symbol-Lbl'-LT-'state'-GT-' ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem ( \kore-dv \kore-sort-SortId "a" ) ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortKItem ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) \kore-symbol-dotk ) ) ( \kore-symbol-Lbl'-LT-'state'-GT-' ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem ( \kore-dv \kore-sort-SortId "a" ) ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortKItem ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) ) $= ( kore-dv-is-pattern IMP-sort-22-is-pattern kore-inj-is-pattern BASIC-K-sort-1-is-pattern IMP-sort-17-is-pattern string-literal-11-is-pattern IMP-sort-8-is-pattern string-literal-1-is-pattern kore-element-var-VE3-elementvariable IMP-sort-13-is-pattern string-literal-10-is-pattern IMP-symbol-169-is-pattern KSEQ-symbol-1-is-pattern KSEQ-symbol-0-is-pattern IMP-symbol-196-is-pattern IMP-symbol-120-is-pattern IMP-symbol-119-is-pattern element-var-is-var IMP-sort-30-is-pattern IMP-symbol-116-is-pattern IMP-symbol-114-is-pattern kore-top-is-pattern typecode-cache-Pattern-98 kore-element-var-x0-elementvariable IMP-symbol-117-is-pattern IMP-symbol-111-is-pattern IMP-sort-26-is-pattern IMP-symbol-220-is-pattern typecode-cache-Pattern-16 kore-and-is-pattern top-is-pattern substitution-disjoint in-sort-is-pattern and-is-pattern kore-rewrites-is-pattern kore-valid-is-pattern IMP-symbol-119-substitution IMP-symbol-114-substitution IMP-symbol-117-substitution substitution-kore-and substitution-350 kore-element-var-Val-elementvariable substitution-var-same top-intro rule-weakening sorting-cache-9 rule-and-intro-alt2-sugar rule-imp-transitivity substitution-kore-inj KSEQ-symbol-0-substitution substitution-kore-rewrites substitution-kore-valid substitution-imp sorting-rearrange-43 kore-functional sorting-cache-303 sorting-rearrange-162 substitution-in-sort substitution-and IMP-symbol-220-substitution substitution-438 substitution-445 substitution-447 functional-substitution-alt ) UKUKEFABJBKACLSUMUKUNUNGGGGUBUGDUFEFABJBKACLUHCMNQEDEFACBDBHACOPUABHATUEUJGGUBSDEFABJBKACLCMNQEDEFACBDBHACOPUABHATUEUJUOUPUKUKEFABJBKACLSUMUKUNUKUKVDVEUKEFABJBKACLSUMUKVFUKUKVDVEVGVGEFABJBKACLGGGGUBUGDUFIUCUHCMNQEDEFACBDBHACOPUABHATUEUJGGUBSDIUCCMNQEDEFACBDBHACOPUABHATUEUJUOUPGGGGUBUGDUFEFABJBKACLUHCMNQEDEFACBDBHACOPUABHATUEUJGGUBSDEFABJBKACLCMNQEDEFACBDBHACOPUABHATUEUJUOUPGGGGUBUGDUFUDUIUHCMNQEDEFACBDBHACOPUABHATUEUJGGUBSDUDUICMNQEDEFACBDBHACOPUABHATUEUJUOUPUKIUCSUMUKUNEFABJBKACLSUMUKUNUDUISUMUKUNVBIUDSEFABJBKACLUKVBVFVBVNVOUKIUCSUMUKUNUNIUCSUMUKUNGGGGUBUGDUFIUCUHCMNQEDEFACBDBHACOPUABHATUEUJGGUBSDIUCCMNQEDEFACBDBHACOPUABHATUEUJUOUPIVPIVQVHEFABJBKACLEFABJBKACLSUMUKUNGGGGUBUGDUFEFABJBKACLUHCMNQEDEFACBDBHACOPUABHATUEUJGGUBSDEFABJBKACLCMNQEDEFACBDBHACOPUABHATUEUJUOUPIUCSUMUKUNGGGGUBUGDUFIUCUHCMNQEDEFACBDBHACOPUABHATUEUJGGUBSDIUCCMNQEDEFACBDBHACOPUABHATUEUJUOUPIREFABJBKACLEFABJBKACLSUMUKIUCSUMUKIREFABJBKACLEFABJBKACLSIUCSIREFABJBKACLIRVCSEFABJBKACLIRULVRUKEFABJBKACLIRULVSGGGGUBUGDUFEFABJBKACLUHCMNQEDEFACBDBHACOPUABHATUEUJGGUBSDEFABJBKACLCMNQEDEFACBDBHACOPUABHATUEUJUOGGGGUBUGDUFIUCUHCMNQEDEFACBDBHACOPUABHATUEUJGGUBSDIUCCMNQEDEFACBDBHACOPUABHATUEUJUOEFABJBKACLIRGEFABJBKACLIRULGGGUBUGDUFEFABJBKACLUHCMNQEDEFACBDBHACOPUABHATUEUJGGUBSDEFABJBKACLCMNQEDEFACBDBHACOPUABHATUEUJGGGUBUGDUFIUCUHCMNQEDEFACBDBHACOPUABHATUEUJGGUBSDIUCCMNQEDEFACBDBHACOPUABHATUEUJEFABJBKACLIRGEFABJBKACLIRULGGUBUGDUFEFABJBKACLUHCMNQEDEFACBDBHACOPUABHATUEGGUBUGDUFIUCUHCMNQEDEFACBDBHACOPUABHATUEEFABJBKACLIRGEFABJBKACLIRULGUBEFABJBKACLIRULIREFABJBKACLUGDUFEFABJBKACLUHCMNQEDEFACBDBHACOPUABHATUGDUFIUCUHCMNQEDEFACBDBHACOPUABHATIREFABJBKACLUGDUFEFABJBKACLUHCMNQEDEFACBDBHACOPUGDUFIUCUHCMNQEDEFACBDBHACOPIREFABJBKACLUGDUFEFABJBKACLUHCMNUGDUFIUCUHCMNIREFABJBKACLUGDUFEFABJBKACLUHCMUGDUFIUCUHCMUGDUFEFABJBKACLUHUGDUFIUCUHEFABJBKACLIRUGEFABJBKACLIRULDEFABJBKACLIRULIREFABJBKACLUFEFABJBKACLUFIUCUFEFABJBKACLIRULEFABJBKACLIRVCVTVIMEFABJBKACLIRULVJUQEDEFACBDBHACOPEFABJBKACLIRULURBHATEFABJBKACLIRULUSUTGGUBSDEFABJBKACLCMNQEDEFACBDBHACOPUABHATUEGGUBSDIUCCMNQEDEFACBDBHACOPUABHATUEEFABJBKACLIRGEFABJBKACLIRULGUBEFABJBKACLIRULIREFABJBKACLSDEFABJBKACLCMNQEDEFACBDBHACOPUABHATSDIUCCMNQEDEFACBDBHACOPUABHATIREFABJBKACLSDEFABJBKACLCMNQEDEFACBDBHACOPSDIUCCMNQEDEFACBDBHACOPIREFABJBKACLSDEFABJBKACLCMNSDIUCCMNIREFABJBKACLSDEFABJBKACLCMSDIUCCMSDEFABJBKACLSDIUCEFABJBKACLIRSEFABJBKACLIRULDEFABJBKACLIRULEFABJBKACLIRVCVIMEFABJBKACLIRULVJUQEDEFACBDBHACOPEFABJBKACLIRULURBHATEFABJBKACLIRULUSUTVKVLVMUDUIUDUISUMUKUNGGGGUBUGDUFUDUIUHCMNQEDEFACBDBHACOPUABHATUEUJGGUBSDUDUICMNQEDEFACBDBHACOPUABHATUEUJUOUPIUCSUMUKUNGGGGUBUGDUFIUCUHCMNQEDEFACBDBHACOPUABHATUEUJGGUBSDIUCCMNQEDEFACBDBHACOPUABHATUEUJUOUPIRIUDWAGGGGUBUGDUFUDUIUHCMNQEDEFACBDBHACOPUABHATUEUJGGUBSDUDUICMNQEDEFACBDBHACOPUABHATUEUJUOGGGGUBUGDUFIUCUHCMNQEDEFACBDBHACOPUABHATUEUJGGUBSDIUCCMNQEDEFACBDBHACOPUABHATUEUJUOUDUIIRIUDVAGGGUBUGDUFUDUIUHCMNQEDEFACBDBHACOPUABHATUEUJGGUBSDUDUICMNQEDEFACBDBHACOPUABHATUEUJGGGUBUGDUFIUCUHCMNQEDEFACBDBHACOPUABHATUEUJGGUBSDIUCCMNQEDEFACBDBHACOPUABHATUEUJUDUIIRIUDVAGGUBUGDUFUDUIUHCMNQEDEFACBDBHACOPUABHATUEGGUBUGDUFIUCUHCMNQEDEFACBDBHACOPUABHATUEUDUIIRIUDVAGUBUDUIIRULIRUDUIUGDUFUDUIUHCMNQEDEFACBDBHACOPUABHATUGDUFIUCUHCMNQEDEFACBDBHACOPUABHATIRUDUIUGDUFUDUIUHCMNQEDEFACBDBHACOPUGDUFIUCUHCMNQEDEFACBDBHACOPIRUDUIUGDUFUDUIUHCMNUGDUFIUCUHCMNIUDWBUQEDEFACBDBHACOPUDUIIRULURBHATUDUIIRULUSUTGGUBSDUDUICMNQEDEFACBDBHACOPUABHATUEGGUBSDIUCCMNQEDEFACBDBHACOPUABHATUEUDUIIRIUDVAGUBUDUIIRULIRUDUISDUDUICMNQEDEFACBDBHACOPUABHATSDIUCCMNQEDEFACBDBHACOPUABHATIRUDUISDUDUICMNQEDEFACBDBHACOPSDIUCCMNQEDEFACBDBHACOPIRUDUISDUDUICMNSDIUCCMNIUDWCUQEDEFACBDBHACOPUDUIIRULURBHATUDUIIRULUSUTVKVLVMWDVH $.
sorting-cache-304 $p |- ( \imp \top ( \in-sort ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) \kore-symbol-dotk ) ) ( \kore-symbol-Lbl'-LT-'state'-GT-' ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem ( \kore-dv \kore-sort-SortId "a" ) ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortKItem ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) \kore-sort-SortGeneratedTopCell ) ) $= ( kore-dv-is-pattern IMP-sort-22-is-pattern kore-inj-is-pattern BASIC-K-sort-1-is-pattern IMP-sort-17-is-pattern string-literal-11-is-pattern string-literal-1-is-pattern IMP-sort-8-is-pattern in-sort-is-pattern IMP-sort-30-is-pattern IMP-sort-13-is-pattern string-literal-10-is-pattern IMP-symbol-169-is-pattern KSEQ-symbol-1-is-pattern KSEQ-symbol-0-is-pattern IMP-symbol-119-is-pattern IMP-symbol-196-is-pattern IMP-symbol-120-is-pattern IMP-symbol-114-is-pattern IMP-symbol-116-is-pattern IMP-symbol-117-is-pattern top-is-pattern kore-top-is-pattern and-is-pattern IMP-sort-29-is-pattern IMP-sort-10-is-pattern rule-and-intro-alt2-sugar rule-imp-transitivity kore-and-is-pattern sorting-cache-0 sorting-cache-29 sorting-cache-23 IMP-symbol-117-sorting kore-and-sorting ) UBHUCHIJDEFABKBLACMCNOPEDEFACBDBGACQRSBGATUAHIUDHHUCJDEFABKBLACMCNOPEDEFACBDBGACQRSBGATUAUIHIUBHUCHIJDEFABKBLACMCNOPEDEFACBDBGACQRSBGATUAHIUJUBJDEFABKBLACMCNOPEDEFACBDBGACQRSUEIBGATUFIUDJDEFABKBLACMCNOPEDEFACBDBGACQRSBGATUAHIUBJDEFABKBLACMCNOPEDEFACBDBGACQRSUEIBGATUFIUKULUGJDEFABKBLACMCNOPEDEFACBDBGACQRSBGATUMUHUGHHUCJDEFABKBLACMCNOPEDEFACBDBGACQRSBGATUAUNUH $.
sorting-cache-305 $p |- ( \imp \top ( \in-sort ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) \kore-symbol-dotk ) ) ( \kore-symbol-Lbl'-LT-'state'-GT-' ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem ( \kore-dv \kore-sort-SortId "a" ) ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortKItem ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) \kore-sort-SortTCell ) ) $= ( kore-dv-is-pattern IMP-sort-22-is-pattern kore-inj-is-pattern BASIC-K-sort-1-is-pattern IMP-sort-17-is-pattern string-literal-11-is-pattern in-sort-is-pattern string-literal-1-is-pattern IMP-symbol-196-is-pattern IMP-symbol-120-is-pattern IMP-sort-26-is-pattern IMP-symbol-111-is-pattern IMP-sort-13-is-pattern string-literal-10-is-pattern IMP-symbol-169-is-pattern IMP-symbol-220-is-pattern KSEQ-symbol-1-is-pattern KSEQ-symbol-0-is-pattern IMP-symbol-119-is-pattern top-is-pattern IMP-sort-9-is-pattern IMP-sort-7-is-pattern rule-imp-transitivity and-is-pattern IMP-symbol-114-is-pattern IMP-sort-29-is-pattern sorting-cache-14 IMP-sort-14-is-pattern sorting-cache-20 IMP-symbol-120-sorting rule-and-intro-alt2-sugar IMP-symbol-114-sorting ) TKDLEFABMBNACOPCQRSUBGEDEFACBDBHACIJUAGUDKDLEFABMBNACOPCQRSEDEFACBDBHACIJUEUFGTKDLEFABMBNACOPCQRSUBGEDEFACBDBHACIJUAGUGTEDEFACBDBHACIUHGEDEFACBDBHACIJUAGUIEDEFACBDBHACIUJUCUKKDLEFABMBNACOPCQRSEDEFACBDBHACIJULUC $.
sorting-cache-306 $p |- ( \imp \top ( \in-sort ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-top \kore-sort-SortGeneratedTopCell ) ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) \kore-symbol-dotk ) ) ( \kore-symbol-Lbl'-LT-'state'-GT-' ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem ( \kore-dv \kore-sort-SortId "a" ) ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortKItem ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) \kore-sort-SortGeneratedTopCell ) ) $= ( kore-dv-is-pattern IMP-sort-22-is-pattern IMP-sort-8-is-pattern kore-inj-is-pattern BASIC-K-sort-1-is-pattern IMP-sort-17-is-pattern kore-top-is-pattern string-literal-11-is-pattern string-literal-1-is-pattern in-sort-is-pattern IMP-sort-26-is-pattern IMP-symbol-111-is-pattern IMP-sort-13-is-pattern string-literal-10-is-pattern IMP-symbol-169-is-pattern IMP-symbol-220-is-pattern KSEQ-symbol-1-is-pattern KSEQ-symbol-0-is-pattern IMP-symbol-119-is-pattern IMP-symbol-196-is-pattern IMP-symbol-120-is-pattern IMP-symbol-114-is-pattern IMP-symbol-116-is-pattern top-is-pattern kore-and-is-pattern IMP-symbol-117-is-pattern and-is-pattern rule-and-intro-alt2-sugar rule-imp-transitivity sorting-cache-0 kore-and-sorting IMP-sort-29-is-pattern IMP-sort-10-is-pattern sorting-cache-305 sorting-cache-23 IMP-symbol-117-sorting ) UDCCGCGUECJKELFHABMBNADOPDQRSFEFHADBEBIADTUAUBBIAUCUFCJUGCCCGCGUEKELFHABMBNADOPDQRSFEFHADBEBIADTUAUBBIAUCUFUECJUDCCGCGUECJKELFHABMBNADOPDQRSFEFHADBEBIADTUAUBBIAUCUFCJUDCGCJCGCJUGCCGCGUECJUDCGCJCGCJUJUJUHCCGCGUKUIUDKELFHABMBNADOPDQRSFEFHADBEBIADTUAUBULJBIAUCUMJUGKELFHABMBNADOPDQRSFEFHADBEBIADTUAUBBIAUCUFCJUDKELFHABMBNADOPDQRSFEFHADBEBIADTUAUBULJBIAUCUMJUNUOUHKELFHABMBNADOPDQRSFEFHADBEBIADTUAUBBIAUCUPUIUHCCCGCGUEKELFHABMBNADOPDQRSFEFHADBEBIADTUAUBBIAUCUFUKUI $.
pattern-subsumption-2 $p |- ( \imp \top ( \kore-valid \kore-sort-SortGeneratedTopCell ( \kore-implies \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-top \kore-sort-SortGeneratedTopCell ) ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) \kore-symbol-dotk ) ) ( \kore-symbol-Lbl'-LT-'state'-GT-' ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem ( \kore-dv \kore-sort-SortId "a" ) ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortKItem ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) \kore-symbol-dotk ) ) ( \kore-symbol-Lbl'-LT-'state'-GT-' ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem ( \kore-dv \kore-sort-SortId "a" ) ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortKItem ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) ) $= ( IMP-sort-8-is-pattern kore-dv-is-pattern IMP-sort-22-is-pattern kore-inj-is-pattern BASIC-K-sort-1-is-pattern IMP-sort-17-is-pattern kore-top-is-pattern string-literal-11-is-pattern string-literal-1-is-pattern in-sort-is-pattern top-is-pattern kore-and-is-pattern IMP-sort-26-is-pattern IMP-symbol-111-is-pattern IMP-sort-13-is-pattern string-literal-10-is-pattern IMP-symbol-169-is-pattern IMP-symbol-220-is-pattern KSEQ-symbol-1-is-pattern KSEQ-symbol-0-is-pattern IMP-symbol-119-is-pattern IMP-symbol-196-is-pattern IMP-symbol-120-is-pattern IMP-symbol-114-is-pattern IMP-symbol-116-is-pattern IMP-symbol-117-is-pattern sorting-cache-0 and-is-pattern rule-and-intro-alt2-sugar rule-imp-transitivity IMP-sort-29-is-pattern IMP-sort-10-is-pattern kore-and-sorting sorting-cache-305 sorting-cache-23 IMP-symbol-117-sorting kore-valid-is-pattern kore-top-valid rule-weakening kore-weakening sorting-cache-306 kore-implies-reflexivity-alt kore-imp-conj-simplify ) AAAGAGLAGAAAGAGLMENFHBCOCPBDQRDSTUAFEFHBDCECIBDUBUCUDCIBUEUFLMENFHBCOCPBDQRDSTUAFEFHBDCECIBDUBUCUDCIBUEUFKKAGAJAGAJUHAAGAGLAJKAGAJAGAJUGUGUIAAGAGUMUJUGKMENFHBCOCPBDQRDSTUAFEFHBDCECIBDUBUCUDUKJCIBUEULJUHMENFHBCOCPBDQRDSTUAFEFHBDCECIBDUBUCUDCIBUEUFAJKMENFHBCOCPBDQRDSTUAFEFHBDCECIBDUBUCUDUKJCIBUEULJUNUOUIMENFHBCOCPBDQRDSTUAFEFHBDCECIBDUBUCUDCIBUEUPUJAAAGAGLAGKKAAGUQAURUSUTAAAAGAGLMENFHBCOCPBDQRDSTUAFEFHBDCECIBDUBUCUDCIBUEUFLKVAVBVC $.
pattern-subsumption-3 $p |- ( \imp \top ( \kore-valid \kore-sort-SortGeneratedTopCell ( \kore-implies \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-top \kore-sort-SortGeneratedTopCell ) ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) \kore-symbol-dotk ) ) ( \kore-symbol-Lbl'-LT-'state'-GT-' ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem ( \kore-dv \kore-sort-SortId "a" ) ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortKItem ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-top \kore-sort-SortGeneratedTopCell ) ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) \kore-symbol-dotk ) ) ( \kore-symbol-Lbl'-LT-'state'-GT-' ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem ( \kore-dv \kore-sort-SortId "a" ) ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortKItem ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) ) $= ( IMP-sort-8-is-pattern kore-dv-is-pattern IMP-sort-22-is-pattern kore-inj-is-pattern BASIC-K-sort-1-is-pattern IMP-sort-17-is-pattern kore-top-is-pattern kore-and-is-pattern string-literal-11-is-pattern string-literal-1-is-pattern IMP-sort-30-is-pattern IMP-sort-13-is-pattern string-literal-10-is-pattern IMP-symbol-169-is-pattern KSEQ-symbol-1-is-pattern KSEQ-symbol-0-is-pattern IMP-symbol-119-is-pattern IMP-symbol-196-is-pattern IMP-symbol-120-is-pattern IMP-symbol-114-is-pattern IMP-symbol-116-is-pattern IMP-symbol-117-is-pattern top-is-pattern sorting-cache-30 kore-implies-reflexivity-alt ) AAAAGAGHKEFIBCLCMBDNDOPQFEFIBDCECJBDRSTCJBUAUBHUCUDUE $.
symbolic-step-2 $p |- ( \imp \top ( \kore-valid \kore-sort-SortGeneratedTopCell ( \kore-rewrites-star \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-top \kore-sort-SortGeneratedTopCell ) ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) \kore-symbol-dotk ) ) ( \kore-symbol-Lbl'-LT-'state'-GT-' ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem ( \kore-dv \kore-sort-SortId "a" ) ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortKItem ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-top \kore-sort-SortGeneratedTopCell ) ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) \kore-symbol-dotk ) ) ( \kore-symbol-Lbl'-LT-'state'-GT-' ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem ( \kore-dv \kore-sort-SortId "a" ) ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortKItem ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) ) $= ( kore-dv-is-pattern IMP-sort-22-is-pattern kore-inj-is-pattern IMP-sort-8-is-pattern BASIC-K-sort-1-is-pattern IMP-sort-17-is-pattern string-literal-11-is-pattern string-literal-1-is-pattern kore-top-is-pattern in-sort-is-pattern IMP-sort-13-is-pattern string-literal-10-is-pattern IMP-symbol-169-is-pattern KSEQ-symbol-1-is-pattern KSEQ-symbol-0-is-pattern IMP-symbol-119-is-pattern IMP-symbol-196-is-pattern IMP-symbol-120-is-pattern IMP-symbol-114-is-pattern IMP-symbol-116-is-pattern top-is-pattern kore-and-is-pattern IMP-sort-26-is-pattern IMP-symbol-111-is-pattern IMP-symbol-220-is-pattern IMP-symbol-117-is-pattern IMP-sort-30-is-pattern IMP-sort-29-is-pattern IMP-sort-10-is-pattern and-is-pattern rule-and-intro-alt2-sugar rule-imp-transitivity sorting-cache-0 sorting-cache-23 IMP-symbol-117-sorting kore-and-sorting sorting-cache-305 sorting-cache-30 sorting-cache-29 predicate-intro-top kore-is-predicate-top kore-rewrites-subsumption-rhs kore-implies-is-pattern kore-valid-is-pattern top-intro proof-rule-mp kore-implies-reflexivity rule-weakening kore-implies-reflexivity-alt kore-implies-compat-in-kore-and sorting-cache-306 kore-is-predicate-and-alt pattern-subsumption-2 sorting-cache-304 sorting-rearrange-163 kore-and-elim-right-alt3 kore-rewrites-subsumption-lhs kore-rewrites-constraint-lemma pattern-subsumption-3 kore-rewrites-star-intro kore-rewrites-star-subsumption-lhs ) DDDDIDIUBUCEUDFGABKBLACMUECNOPFEFGACBEBHACQRSBHATUFUBDDDIDIUBUCEUDFGABKBLACMUECNOPFEFGACBEBHACQRSBHATUFUBDDDIDIUBUGEFGABKBLACMCNOPFEFGACBEBHACQRSBHATUFUBUADDDIDIUBDDIDIUBUCEUDFGABKBLACMUECNOPFEFGACBEBHACQRSBHATUFUCEUDFGABKBLACMUECNOPFEFGACBEBHACQRSBHATUFUAUADIDJDIDJUJDDIDIUBDJUADIDJDIDJUMUMUKDDIDIUPULUADIDJDIDJUJDDIDIUBDJUADIDJDIDJUMUMUKDDIDIUPULUAUCEUDFGABKBLACMUECNOPFEFGACBEBHACQRSUHJBHATUIJUJUCEUDFGABKBLACMUECNOPFEFGACBEBHACQRSBHATUFDJUAUCEUDFGABKBLACMUECNOPFEFGACBEBHACQRSUHJBHATUIJUQUNUKUCEUDFGABKBLACMUECNOPFEFGACBEBHACQRSBHATUOULUAUCEUDFGABKBLACMUECNOPFEFGACBEBHACQRSUHJBHATUIJUJUCEUDFGABKBLACMUECNOPFEFGACBEBHACQRSBHATUFDJUAUCEUDFGABKBLACMUECNOPFEFGACBEBHACQRSUHJBHATUIJUQUNUKUCEUDFGABKBLACMUECNOPFEFGACBEBHACQRSBHATUOULUADDDDIDIUBDDIDIUBVCVDDDDIDIUBUADDIDIUBDJUADIDJDIDJUJDDIDIUBDJUADIDJDIDJUMUMUKDDIDIUPULVEVFVGVHDUCEUDFGABKBLACMUECNOPFEFGACBEBHACQRSBHATUFUAUAUCEUDFGABKBLACMUECNOPFEFGACBEBHACQRSUHJBHATUIJUJUCEUDFGABKBLACMUECNOPFEFGACBEBHACQRSBHATUFDJUAUCEUDFGABKBLACMUECNOPFEFGACBEBHACQRSUHJBHATUIJUQUNUKUCEUDFGABKBLACMUECNOPFEFGACBEBHACQRSBHATUOULVIVJDDDDIDIUBUCEUDFGABKBLACMUECNOPFEFGACBEBHACQRSBHATUFUBDDDIDIUBUGEFGABKBLACMCNOPFEFGACBEBHACQRSBHATUFUBUAVKURDDDDIDIUBUCEUDFGABKBLACMUECNOPFEFGACBEBHACQRSBHATUFUBDDDIDIUBUGEFGABKBLACMCNOPFEFGACBEBHACQRSBHATUFUBDDDIDIUBUGEFGABKBLACMCNOPFEFGACBEBHACQRSBHATUFUBUAUTURURDDDIDIUBUCEUDFGABKBLACMUECNOPFEFGACBEBHACQRSBHATUFUGEFGABKBLACMCNOPFEFGACBEBHACQRSBHATUFUADDIDIDVADVAVLUADIDJDIDJUJDDIDIUBDJUADIDJDIDJUMUMUKDDIDIUPULUAUCEUDFGABKBLACMUECNOPFEFGACBEBHACQRSUHJBHATUIJUJUCEUDFGABKBLACMUECNOPFEFGACBEBHACQRSBHATUFDJUAUCEUDFGABKBLACMUECNOPFEFGACBEBHACQRSUHJBHATUIJUQUNUKUCEUDFGABKBLACMUECNOPFEFGACBEBHACQRSBHATUOULUAUGEFGABKBLACMCNOPFEFGACBEBHACQRSUHJBHATUIJUJUGEFGABKBLACMCNOPFEFGACBEBHACQRSBHATUFDJUAUGEFGABKBLACMCNOPFEFGACBEBHACQRSUHJBHATUIJUSUNUKUGEFGABKBLACMCNOPFEFGACBEBHACQRSBHATUOULDDDDIDIUBUCEUDFGABKBLACMUECNOPFEFGACBEBHACQRSBHATUFUBDDIUCEUDFGABKBLACMUECNOPFEFGACBEBHACQRSBHATUFUBUGEFGABKBLACMCNOPFEFGACBEBHACQRSBHATUFUAVMDDDIUCEUDFGABKBLACMUECNOPFEFGACBEBHACQRSBHATUFUBDDIUGEFGABKBLACMCNOPFEFGACBEBHACQRSBHATUFUBUGEFGABKBLACMCNOPFEFGACBEBHACQRSBHATUFUAUTVNUAUGEFGABKBLACMCNOPFEFGACBEBHACQRSUHJBHATUIJUJUGEFGABKBLACMCNOPFEFGACBEBHACQRSBHATUFDJUAUGEFGABKBLACMCNOPFEFGACBEBHACQRSUHJBHATUIJUSUNUKUGEFGABKBLACMCNOPFEFGACBEBHACQRSBHATUOULVODDIUGEFGABKBLACMCNOPFEFGACBEBHACQRSBHATUFUAUMUAUGEFGABKBLACMCNOPFEFGACBEBHACQRSUHJBHATUIJUJUGEFGABKBLACMCNOPFEFGACBEBHACQRSBHATUFDJUAUGEFGABKBLACMCNOPFEFGACBEBHACQRSUHJBHATUIJUSUNUKUGEFGABKBLACMCNOPFEFGACBEBHACQRSBHATUOULVPVBVQVRVSVBVTWA $.
sorting-rearrange-164 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-equals \kore-sort-SortMap kore-sort-var-R ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem ( \kore-dv \kore-sort-SortId "a" ) ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortKItem ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ( \kore-symbol-Lbl'Unds'Map'Unds' ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem ( \kore-dv \kore-sort-SortId "a" ) ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortKItem ( \kore-dv \kore-sort-SortInt "0" ) ) ) \kore-symbol-Lbl'Stop'Map ) ) ) ) $= ( IMP-sort-17-is-pattern BASIC-K-sort-1-is-pattern kore-dv-is-pattern kore-inj-is-pattern IMP-sort-22-is-pattern kore-element-var-K2-elementvariable string-literal-11-is-pattern string-literal-1-is-pattern IMP-symbol-196-is-pattern typecode-cache-Pattern-2 IMP-symbol-112-is-pattern IMP-sort-14-is-pattern IMP-symbol-176-is-pattern top-is-pattern typecode-cache-Pattern-119 element-var-is-var and-is-pattern kore-element-var-x0-elementvariable in-sort-is-pattern kore-equals-is-pattern typecode-cache-Pattern-16 kore-valid-is-pattern kore-is-sort-is-pattern substitution-disjoint substitution-var-same rule-and-intro-alt2-sugar kore-element-var-Val-elementvariable IMP-symbol-176-substitution substitution-kore-valid substitution-imp sorting-cache-58 sorting-cache-281 top-intro rule-weakening sorting-rearrange-151 sorting-rearrange-134 substitution-in-sort substitution-and substitution-kore-equals substitution-393 substitution-394 substitution-398 functional-substitution-alt rule-imp-transitivity ) AKUDORAKUDORBCBHDEFCFIDEJMTORRAKMAKLBCBHDEFCFIDEJNBCBHDEFCFIDEJLNUAUCAKUDORAKUDORBCBHDEFCFIDEJMTORAULAKUDORBCBHDEFCFIDEJMTOAUMAKUDOROUNUOUGUGBCBHDEFCFIDEJAKMAKLGPNGPLNUAUCAKMAKLBCBHDEFCFIDEJNBCBHDEFCFIDEJLNUAUCAKMAKLSUBNSUBLNUAUCAKUDORGPMTORBCBHDEFCFIDEJMTORSUBMTORUHGSAUHUPAGUQBCBHDEFCFIDEJBCBHDEFCFIDEJMTORAKMAKLBCBHDEFCFIDEJNBCBHDEFCFIDEJLNUAUCGPMTORAKMAKLGPNGPLNUAUCGQBCBHDEFCFIDEJBCBHDEFCFIDEJMTOGPMTOGQBCBHDEFCFIDEJBCBHDEFCFIDEJMGPMGQBCBHDEFCFIDEJGQUFMBCBHDEFCFIDEJGQUEUROBCBHDEFCFIDEJGQUEUSAKMAKLBCBHDEFCFIDEJNBCBHDEFCFIDEJLNUAAKMAKLGPNGPLNUABCBHDEFCFIDEJGQAKBCBHDEFCFIDEJGQUEMAKLBCBHDEFCFIDEJNBCBHDEFCFIDEJLNMAKLGPNGPLNBCBHDEFCFIDEJGQMBCBHDEFCFIDEJGQUEAKBCBHDEFCFIDEJGQUEGQBCBHDEFCFIDEJLBCBHDEFCFIDEJLGPLBCBHDEFCFIDEJGQUEBCBHDEFCFIDEJGQUFUIGQBCBHDEFCFIDEJBCBHDEFCFIDEJLGPLBCBHDEFCFIDEJGQUFLBCBHDEFCFIDEJGQUEUIUTUJUKSUBSUBMTORAKMAKLSUBNSUBLNUAUCGPMTORAKMAKLGPNGPLNUAUCGQGSVAAKMAKLSUBNSUBLNUAAKMAKLGPNGPLNUASUBGQAGSVBAGSVCUJUKVDVE $.
sorting-rearrange-165 $p |- ( \imp \top ( \kore-valid \unit-sort ( \kore-equals \kore-sort-SortMap \unit-sort ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem ( \kore-dv \kore-sort-SortId "a" ) ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortKItem ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ( \kore-symbol-Lbl'Unds'Map'Unds' ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem ( \kore-dv \kore-sort-SortId "a" ) ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortKItem ( \kore-dv \kore-sort-SortInt "0" ) ) ) \kore-symbol-Lbl'Stop'Map ) ) ) ) $= ( IMP-sort-17-is-pattern BASIC-K-sort-1-is-pattern kore-dv-is-pattern kore-inj-is-pattern IMP-sort-22-is-pattern kore-sort-var-R-elementvariable IMP-symbol-112-is-pattern string-literal-11-is-pattern string-literal-1-is-pattern IMP-symbol-196-is-pattern IMP-symbol-176-is-pattern top-is-pattern typecode-cache-Pattern-2 unit-sort-is-symbol symbol-is-pattern kore-sort-var-x0-elementvariable and-is-pattern IMP-sort-14-is-pattern typecode-cache-Pattern-6 kore-is-sort-is-pattern element-var-is-var kore-equals-is-pattern kore-valid-is-pattern x-is-element-var substitution-var-same substitution-disjoint rule-weakening top-intro rule-and-intro-alt2-sugar rule-imp-transitivity substitution-kore-equals substitution-kore-valid substitution-imp sorting-cache-49 typecode-cache-Pattern-1 exists-is-pattern unit-sort-is-functional sorting-cache-47 sorting-rearrange-164 substitution-2 substitution-3 substitution-9 substitution-10 functional-substitution-alt ) LLNOTLQQNORNOGABAHCDEBEICDJKABAHCDEBEICDJGKUBUCLLNOTLQLLUHUGUNUINOFMRFMGABAHCDEBEICDJKABAHCDEBEICDJGKUBUCNORNOGABAHCDEBEICDJKABAHCDEBEICDJGKUBUCPSRPSGABAHCDEBEICDJKABAHCDEBEICDJGKUBUCLFMTLQNOTLQPSTLQUDFPLUDUOUDUPUDUQUGLFMTLQQFMTLQFMRFMGABAHCDEBEICDJKABAHCDEBEICDJGKUBUCLFMTLQQFMTLFURLFMTLQQLUHUGUIFUSUJNONOTLQNORNOGABAHCDEBEICDJKABAHCDEBEICDJGKUBUCFMTLQFMRFMGABAHCDEBEICDJKABAHCDEBEICDJGKUBUCFUAFUTNORNOGABAHCDEBEICDJKABAHCDEBEICDJGKUBFMRFMGABAHCDEBEICDJKABAHCDEBEICDJGKUBNOFUANOFUAUERNOGABAHCDEBEICDJKABAHCDEBEICDJGKRFMGABAHCDEBEICDJKABAHCDEBEICDJGKNOFUAFVANOFUAUEGABAHCDEBEICDJKNOFUAUFABAHCDEBEICDJGKNOFUAUFUKULUMPSPSTLQPSRPSGABAHCDEBEICDJKABAHCDEBEICDJGKUBUCFMTLQFMRFMGABAHCDEBEICDJKABAHCDEBEICDJGKUBUCFUAFPVBPSRPSGABAHCDEBEICDJKABAHCDEBEICDJGKUBFMRFMGABAHCDEBEICDJKABAHCDEBEICDJGKUBPSFUAPSFUAUERPSGABAHCDEBEICDJKABAHCDEBEICDJGKRFMGABAHCDEBEICDJKABAHCDEBEICDJGKPSFUAFPVCPSFUAUEGABAHCDEBEICDJKPSFUAUFABAHCDEBEICDJGKPSFUAUFUKULUMVDUJ $.
sorting-cache-307 $p |- ( \imp \top ( \in-sort ( \kore-symbol-Lbl'Unds'Map'Unds' ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem ( \kore-dv \kore-sort-SortId "a" ) ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortKItem ( \kore-dv \kore-sort-SortInt "0" ) ) ) \kore-symbol-Lbl'Stop'Map ) \kore-sort-SortMap ) ) $= ( IMP-sort-17-is-pattern BASIC-K-sort-1-is-pattern kore-dv-is-pattern kore-inj-is-pattern IMP-sort-22-is-pattern IMP-sort-14-is-pattern in-sort-is-pattern string-literal-11-is-pattern string-literal-1-is-pattern IMP-symbol-196-is-pattern IMP-symbol-112-is-pattern top-is-pattern and-is-pattern IMP-symbol-176-is-pattern sorting-cache-20 sorting-cache-15 rule-and-intro-alt2-sugar IMP-symbol-176-sorting rule-imp-transitivity ) LABAHCDEBEICDJFGKFGMABAHCDEBEICDJKNFGLABAHCDEBEICDJFGKFGOPQABAHCDEBEICDJKRS $.
sorting-rearrange-166 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-equals \kore-sort-SortMap kore-sort-var-R ( \kore-symbol-Lbl'Unds'Map'Unds' ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem ( \kore-dv \kore-sort-SortId "a" ) ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortKItem ( \kore-dv \kore-sort-SortInt "0" ) ) ) \kore-symbol-Lbl'Stop'Map ) ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem ( \kore-dv \kore-sort-SortId "a" ) ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortKItem ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) $= ( IMP-sort-17-is-pattern BASIC-K-sort-1-is-pattern kore-dv-is-pattern kore-inj-is-pattern IMP-sort-22-is-pattern kore-element-var-K-elementvariable string-literal-11-is-pattern string-literal-1-is-pattern IMP-symbol-196-is-pattern typecode-cache-Pattern-2 IMP-sort-14-is-pattern top-is-pattern and-is-pattern typecode-cache-Pattern-117 element-var-is-var IMP-symbol-112-is-pattern in-sort-is-pattern IMP-symbol-176-is-pattern kore-equals-is-pattern kore-element-var-x0-elementvariable kore-valid-is-pattern kore-is-sort-is-pattern typecode-cache-Pattern-16 substitution-disjoint substitution-var-same rule-and-intro-alt2-sugar kore-element-var-Val-elementvariable substitution-imp sorting-cache-58 sorting-cache-281 top-intro rule-weakening sorting-rearrange-151 sorting-rearrange-124 substitution-in-sort substitution-and IMP-symbol-176-substitution substitution-kore-equals substitution-kore-valid substitution-366 substitution-371 functional-substitution-alt rule-imp-transitivity ) AKUCMNAKUCMNBCBHDEFCFIDEJLRMNNAKLAKBCBHDEFCFIDEJQSBCBHDEFCFIDEJTUBAKUCMNAKUCMNBCBHDEFCFIDEJLRMNAUJAKUCMNBCBHDEFCFIDEJLRMAUKAKUCMNMULUMUGUGBCBHDEFCFIDEJAKLAKGOQSGOTUBAKLAKBCBHDEFCFIDEJQSBCBHDEFCFIDEJTUBAKLAKUAUDQSUAUDTUBAKUCMNGOLRMNBCBHDEFCFIDEJLRMNUAUDLRMNUHGUAAUHUNAGUOBCBHDEFCFIDEJBCBHDEFCFIDEJLRMNAKLAKBCBHDEFCFIDEJQSBCBHDEFCFIDEJTUBGOLRMNAKLAKGOQSGOTUBGPBCBHDEFCFIDEJBCBHDEFCFIDEJLRMGOLRMGPBCBHDEFCFIDEJBCBHDEFCFIDEJLGOLGPBCBHDEFCFIDEJGPUFLBCBHDEFCFIDEJGPUEUPMBCBHDEFCFIDEJGPUEUQAKLAKBCBHDEFCFIDEJQSBCBHDEFCFIDEJTAKLAKGOQSGOTBCBHDEFCFIDEJGPAKBCBHDEFCFIDEJGPUELAKBCBHDEFCFIDEJQSBCBHDEFCFIDEJLAKGOQSGOBCBHDEFCFIDEJGPLBCBHDEFCFIDEJGPUEAKBCBHDEFCFIDEJGPUEGPBCBHDEFCFIDEJBCBHDEFCFIDEJQGOQBCBHDEFCFIDEJGPUFQBCBHDEFCFIDEJGPUEURBCBHDEFCFIDEJGPUFUSUTUIUAUDUAUDLRMNAKLAKUAUDQSUAUDTUBGOLRMNAKLAKGOQSGOTUBGPGUAVAAGUAVBUIVCVD $.
sorting-rearrange-167 $p |- ( \imp \top ( \kore-valid \unit-sort ( \kore-equals \kore-sort-SortMap \unit-sort ( \kore-symbol-Lbl'Unds'Map'Unds' ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem ( \kore-dv \kore-sort-SortId "a" ) ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortKItem ( \kore-dv \kore-sort-SortInt "0" ) ) ) \kore-symbol-Lbl'Stop'Map ) ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem ( \kore-dv \kore-sort-SortId "a" ) ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortKItem ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) $= ( IMP-sort-17-is-pattern BASIC-K-sort-1-is-pattern kore-dv-is-pattern kore-inj-is-pattern IMP-sort-22-is-pattern kore-sort-var-R-elementvariable string-literal-11-is-pattern string-literal-1-is-pattern IMP-symbol-196-is-pattern top-is-pattern typecode-cache-Pattern-2 unit-sort-is-symbol symbol-is-pattern IMP-symbol-112-is-pattern IMP-symbol-176-is-pattern kore-sort-var-x0-elementvariable and-is-pattern IMP-sort-14-is-pattern typecode-cache-Pattern-6 kore-is-sort-is-pattern element-var-is-var kore-equals-is-pattern kore-valid-is-pattern x-is-element-var substitution-var-same substitution-disjoint rule-weakening top-intro rule-and-intro-alt2-sugar rule-imp-transitivity substitution-kore-equals substitution-kore-valid substitution-imp sorting-cache-49 typecode-cache-Pattern-1 exists-is-pattern unit-sort-is-functional sorting-cache-47 sorting-rearrange-166 substitution-2 substitution-3 substitution-9 substitution-10 functional-substitution-alt ) JJLMTJQQLMRLMABAGCDEBEHCDINOABAGCDEBEHCDIUBUCJJLMTJQJJUHUGUNUILMFKRFKABAGCDEBEHCDINOABAGCDEBEHCDIUBUCLMRLMABAGCDEBEHCDINOABAGCDEBEHCDIUBUCPSRPSABAGCDEBEHCDINOABAGCDEBEHCDIUBUCJFKTJQLMTJQPSTJQUDFPJUDUOUDUPUDUQUGJFKTJQQFKTJQFKRFKABAGCDEBEHCDINOABAGCDEBEHCDIUBUCJFKTJQQFKTJFURJFKTJQQJUHUGUIFUSUJLMLMTJQLMRLMABAGCDEBEHCDINOABAGCDEBEHCDIUBUCFKTJQFKRFKABAGCDEBEHCDINOABAGCDEBEHCDIUBUCFUAFUTLMRLMABAGCDEBEHCDINOABAGCDEBEHCDIUBFKRFKABAGCDEBEHCDINOABAGCDEBEHCDIUBLMFUALMFUAUERLMABAGCDEBEHCDINOABAGCDEBEHCDIRFKABAGCDEBEHCDINOABAGCDEBEHCDILMFUAFVALMFUAUEABAGCDEBEHCDINOLMFUAUFABAGCDEBEHCDILMFUAUFUKULUMPSPSTJQPSRPSABAGCDEBEHCDINOABAGCDEBEHCDIUBUCFKTJQFKRFKABAGCDEBEHCDINOABAGCDEBEHCDIUBUCFUAFPVBPSRPSABAGCDEBEHCDINOABAGCDEBEHCDIUBFKRFKABAGCDEBEHCDINOABAGCDEBEHCDIUBPSFUAPSFUAUERPSABAGCDEBEHCDINOABAGCDEBEHCDIRFKABAGCDEBEHCDINOABAGCDEBEHCDIPSFUAFPVCPSFUAUEABAGCDEBEHCDINOPSFUAUFABAGCDEBEHCDIPSFUAUFUKULUMVDUJ $.
intermediate-state-3 $p |- ( \imp \top ( \kore-valid \kore-sort-SortGeneratedTopCell ( \kore-rewrites-star \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-top \kore-sort-SortGeneratedTopCell ) ) ( \kore-symbol-LblinitGeneratedTopCell ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) ) ) ) ) ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-top \kore-sort-SortGeneratedTopCell ) ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) \kore-symbol-dotk ) ) ( \kore-symbol-Lbl'-LT-'state'-GT-' ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem ( \kore-dv \kore-sort-SortId "a" ) ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortKItem ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) ) $= ( kore-dv-is-pattern IMP-sort-22-is-pattern kore-inj-is-pattern BASIC-K-sort-1-is-pattern IMP-sort-17-is-pattern IMP-sort-8-is-pattern string-literal-11-is-pattern string-literal-1-is-pattern kore-top-is-pattern kore-and-is-pattern IMP-symbol-196-is-pattern IMP-symbol-112-is-pattern IMP-symbol-176-is-pattern kore-element-var-x0-elementvariable IMP-sort-13-is-pattern string-literal-10-is-pattern IMP-symbol-169-is-pattern KSEQ-symbol-1-is-pattern KSEQ-symbol-0-is-pattern IMP-symbol-119-is-pattern IMP-sort-26-is-pattern IMP-symbol-111-is-pattern IMP-symbol-220-is-pattern IMP-symbol-120-is-pattern IMP-symbol-116-is-pattern IMP-symbol-114-is-pattern IMP-symbol-117-is-pattern element-var-is-var substitution-disjoint typecode-cache-Pattern-16 kore-implies-is-pattern top-is-pattern substitution-var-same IMP-symbol-120-substitution IMP-symbol-114-substitution IMP-symbol-117-substitution substitution-kore-and substitution-kore-implies substitution-kore-valid IMP-sort-20-is-pattern IMP-sort-30-is-pattern sorting-cache-24 IMP-sort-14-is-pattern kore-valid-is-pattern sorting-cache-307 kore-equals-elim-alt string-literal-9-is-pattern IMP-symbol-148-is-pattern IMP-symbol-216-is-pattern sorting-cache-46 sorting-cache-30 intermediate-state-1 sorting-cache-20 sorting-rearrange-167 sorting-cache-21 sorting-rearrange-165 kore-implies-reflexivity-alt symbolic-step-2 kore-rewrites-star-subsumption-lhs kore-rewrites-star-transitivity ) FFFFIFIJLUTDUTVGACUADEGAUBVHEGABOBPACQUCCKMVIJFFFIFIJUADUBEGABOBPACQUCCRSTLEDEGACBDBHACKMUDUFBHAUEUGJFFFIFIJVADEGABOBPACQCRSTEDEGACBDBHACKUDUFBHAUEUGJULVJVBVKVLFFFFIFIJUADUBEGABOBPACQUCCRSTLEDEGACBDBHACKMUDUFBHAUEUGJFFFIFIJUADUBEGABOBPACQUCCRSTEDEGACBDBHACKUDUFBHAUEUGJFFFIFIJVADEGABOBPACQCRSTEDEGACBDBHACKUDUFBHAUEUGJULVCEDEGACBDBHACKLMEDEGACBDBHACKFFFFIFIJUADUBEGABOBPACQUCCRSTLEDEGACBDBHACKMUDUFBHAUEUGJFFFIFIJUADUBEGABOBPACQUCCRSTEDEGACBDBHACKLMUDUFBHAUEUGJUKFFFFFIFIJUADUBEGABOBPACQUCCRSTLEDEGACBDBHACKMUDUFBHAUEUGJFFFIFIJUADUBEGABOBPACQUCCRSTNUJUDUFBHAUEUGJUKVDFFFFIFIJUADUBEGABOBPACQUCCRSTLEDEGACBDBHACKMUDUFBHAUEUGJFFFIFIJUADUBEGABOBPACQUCCRSTEDEGACBDBHACKUDUFBHAUEUGJUKFFULNVEVMVNVCLEDEGACBDBHACKMEDEGACBDBHACKLMFFFFIFIJUADUBEGABOBPACQUCCRSTLEDEGACBDBHACKMUDUFBHAUEUGJFFFIFIJUADUBEGABOBPACQUCCRSTLEDEGACBDBHACKMUDUFBHAUEUGJUKFFFFFIFIJUADUBEGABOBPACQUCCRSTLEDEGACBDBHACKMUDUFBHAUEUGJFFFIFIJUADUBEGABOBPACQUCCRSTNUJUDUFBHAUEUGJUKVDFFFFIFIJUADUBEGABOBPACQUCCRSTLEDEGACBDBHACKMUDUFBHAUEUGJFFFIFIJUADUBEGABOBPACQUCCRSTEDEGACBDBHACKLMUDUFBHAUEUGJUKFFULNVOVEVPFFFFIFIJUADUBEGABOBPACQUCCRSTLEDEGACBDBHACKMUDUFBHAUEUGJULVBVQFFFFFIFIJUADUBEGABOBPACQUCCRSTLEDEGACBDBHACKMUDUFBHAUEUGJFFFIFIJUADUBEGABOBPACQUCCRSTLEDEGACBDBHACKMUDUFBHAUEUGJUKFFFFFIFIJUADUBEGABOBPACQUCCRSTLEDEGACBDBHACKMUDUFBHAUEUGJFFFIFIJUADUBEGABOBPACQUCCRSTNUJUDUFBHAUEUGJUKLEDEGACBDBHACKMNUHFLEDEGACBDBHACKMNUHUIFFFFIFIJUADUBEGABOBPACQUCCRSTLEDEGACBDBHACKMUDUFBHAUEUGJFFFIFIJUADUBEGABOBPACQUCCRSTLEDEGACBDBHACKMUDUFBHAUEUGJFFFFIFIJUADUBEGABOBPACQUCCRSTLEDEGACBDBHACKMUDUFBHAUEUGJFFFIFIJUADUBEGABOBPACQUCCRSTNUJUDUFBHAUEUGJLEDEGACBDBHACKMNUHFLEDEGACBDBHACKMNUHUIFFFIFIJUADUBEGABOBPACQUCCRSTLEDEGACBDBHACKMUDUFBHAUEUGJLEDEGACBDBHACKMNUHUIFFFIFIJUADUBEGABOBPACQUCCRSTLEDEGACBDBHACKMUDUFBHAUEUGFFFIFIJUADUBEGABOBPACQUCCRSTNUJUDUFBHAUEUGLEDEGACBDBHACKMNUHFLEDEGACBDBHACKMNUHUIFFIFIJLEDEGACBDBHACKMNUHUINUHLEDEGACBDBHACKMUADUBEGABOBPACQUCCRSTLEDEGACBDBHACKMUDUFBHAUEUADUBEGABOBPACQUCCRSTNUJUDUFBHAUENUHLEDEGACBDBHACKMUADUBEGABOBPACQUCCRSTLEDEGACBDBHACKMUDUADUBEGABOBPACQUCCRSTNUJUDUADUBEGABOBPACQUCCRSTLEDEGACBDBHACKMNUHUINUHLEDEGACBDBHACKMLEDEGACBDBHACKMNUJLEDEGACBDBHACKMNUHUMUNUOBHAUELEDEGACBDBHACKMNUHUIUPUQURUSFFFFFIFIJUADUBEGABOBPACQUCCRSTLEDEGACBDBHACKMUDUFBHAUEUGJFFFIFIJUADUBEGABOBPACQUCCRSTEDEGACBDBHACKLMUDUFBHAUEUGJUKFFFFFIFIJUADUBEGABOBPACQUCCRSTLEDEGACBDBHACKMUDUFBHAUEUGJFFFIFIJUADUBEGABOBPACQUCCRSTNUJUDUFBHAUEUGJUKEDEGACBDBHACKLMNUHFEDEGACBDBHACKLMNUHUIFFFFIFIJUADUBEGABOBPACQUCCRSTLEDEGACBDBHACKMUDUFBHAUEUGJFFFIFIJUADUBEGABOBPACQUCCRSTEDEGACBDBHACKLMUDUFBHAUEUGJFFFFIFIJUADUBEGABOBPACQUCCRSTLEDEGACBDBHACKMUDUFBHAUEUGJFFFIFIJUADUBEGABOBPACQUCCRSTNUJUDUFBHAUEUGJEDEGACBDBHACKLMNUHFEDEGACBDBHACKLMNUHUIFFFIFIJUADUBEGABOBPACQUCCRSTLEDEGACBDBHACKMUDUFBHAUEUGJEDEGACBDBHACKLMNUHUIFFFIFIJUADUBEGABOBPACQUCCRSTEDEGACBDBHACKLMUDUFBHAUEUGFFFIFIJUADUBEGABOBPACQUCCRSTNUJUDUFBHAUEUGEDEGACBDBHACKLMNUHFEDEGACBDBHACKLMNUHUIFFIFIJEDEGACBDBHACKLMNUHUINUHEDEGACBDBHACKLMUADUBEGABOBPACQUCCRSTEDEGACBDBHACKLMUDUFBHAUEUADUBEGABOBPACQUCCRSTNUJUDUFBHAUENUHEDEGACBDBHACKLMUADUBEGABOBPACQUCCRSTEDEGACBDBHACKLMUDUADUBEGABOBPACQUCCRSTNUJUDUADUBEGABOBPACQUCCRSTEDEGACBDBHACKLMNUHUINUHEDEGACBDBHACKLMEDEGACBDBHACKLMNUJEDEGACBDBHACKLMNUHUMUNUOBHAUEEDEGACBDBHACKLMNUHUIUPUQURUSVFFFFFFIFIJUADUBEGABOBPACQUCCRSTLEDEGACBDBHACKMUDUFBHAUEUGJFFFIFIJUADUBEGABOBPACQUCCRSTEDEGACBDBHACKLMUDUFBHAUEUGJUKFFFFFIFIJUADUBEGABOBPACQUCCRSTLEDEGACBDBHACKMUDUFBHAUEUGJFFFIFIJUADUBEGABOBPACQUCCRSTNUJUDUFBHAUEUGJUKEDEGACBDBHACKLMNUHFEDEGACBDBHACKLMNUHUIFFFFIFIJUADUBEGABOBPACQUCCRSTLEDEGACBDBHACKMUDUFBHAUEUGJFFFIFIJUADUBEGABOBPACQUCCRSTEDEGACBDBHACKLMUDUFBHAUEUGJFFFFIFIJUADUBEGABOBPACQUCCRSTLEDEGACBDBHACKMUDUFBHAUEUGJFFFIFIJUADUBEGABOBPACQUCCRSTNUJUDUFBHAUEUGJEDEGACBDBHACKLMNUHFEDEGACBDBHACKLMNUHUIFFFIFIJUADUBEGABOBPACQUCCRSTLEDEGACBDBHACKMUDUFBHAUEUGJEDEGACBDBHACKLMNUHUIFFFIFIJUADUBEGABOBPACQUCCRSTEDEGACBDBHACKLMUDUFBHAUEUGFFFIFIJUADUBEGABOBPACQUCCRSTNUJUDUFBHAUEUGEDEGACBDBHACKLMNUHFEDEGACBDBHACKLMNUHUIFFIFIJEDEGACBDBHACKLMNUHUINUHEDEGACBDBHACKLMUADUBEGABOBPACQUCCRSTEDEGACBDBHACKLMUDUFBHAUEUADUBEGABOBPACQUCCRSTNUJUDUFBHAUENUHEDEGACBDBHACKLMUADUBEGABOBPACQUCCRSTEDEGACBDBHACKLMUDUADUBEGABOBPACQUCCRSTNUJUDUADUBEGABOBPACQUCCRSTEDEGACBDBHACKLMNUHUINUHEDEGACBDBHACKLMEDEGACBDBHACKLMNUJEDEGACBDBHACKLMNUHUMUNUOBHAUEEDEGACBDBHACKLMNUHUIUPUQURUSFFFFFIFIJUADUBEGABOBPACQUCCRSTLEDEGACBDBHACKMUDUFBHAUEUGJFFFIFIJUADUBEGABOBPACQUCCRSTEDEGACBDBHACKUDUFBHAUEUGJUKFFFFFIFIJUADUBEGABOBPACQUCCRSTLEDEGACBDBHACKMUDUFBHAUEUGJFFFIFIJUADUBEGABOBPACQUCCRSTNUJUDUFBHAUEUGJUKEDEGACBDBHACKNUHFEDEGACBDBHACKNUHUIFFFFIFIJUADUBEGABOBPACQUCCRSTLEDEGACBDBHACKMUDUFBHAUEUGJFFFIFIJUADUBEGABOBPACQUCCRSTEDEGACBDBHACKUDUFBHAUEUGJFFFFIFIJUADUBEGABOBPACQUCCRSTLEDEGACBDBHACKMUDUFBHAUEUGJFFFIFIJUADUBEGABOBPACQUCCRSTNUJUDUFBHAUEUGJEDEGACBDBHACKNUHFEDEGACBDBHACKNUHUIFFFIFIJUADUBEGABOBPACQUCCRSTLEDEGACBDBHACKMUDUFBHAUEUGJEDEGACBDBHACKNUHUIFFFIFIJUADUBEGABOBPACQUCCRSTEDEGACBDBHACKUDUFBHAUEUGFFFIFIJUADUBEGABOBPACQUCCRSTNUJUDUFBHAUEUGEDEGACBDBHACKNUHFEDEGACBDBHACKNUHUIFFIFIJEDEGACBDBHACKNUHUINUHEDEGACBDBHACKUADUBEGABOBPACQUCCRSTEDEGACBDBHACKUDUFBHAUEUADUBEGABOBPACQUCCRSTNUJUDUFBHAUENUHEDEGACBDBHACKUADUBEGABOBPACQUCCRSTEDEGACBDBHACKUDUADUBEGABOBPACQUCCRSTNUJUDUADUBEGABOBPACQUCCRSTEDEGACBDBHACKNUHUINUHEDEGACBDBHACKEDEGACBDBHACKNUJEDEGACBDBHACKNUHUMUNUOBHAUEEDEGACBDBHACKNUHUIUPUQURUSVFVRVSVT $.
typecode-cache-Pattern-141 $p #Pattern kore-element-var-VE5 $= ( element-var-is-var var-is-pattern ) ABC $.
typecode-cache-Pattern-142 $p #Pattern ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE5 \kore-sort-SortGeneratedCounterCell ) \top ) ) $= ( in-sort-is-pattern and-is-pattern typecode-cache-Pattern-99 IMP-sort-22-is-pattern typecode-cache-Pattern-141 IMP-sort-10-is-pattern top-is-pattern ) AEFCBGHCIDD $.
sorting-rearrange-168 $p |- ( \imp ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortMap ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortKItem ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE5 \kore-sort-SortGeneratedCounterCell ) \top ) ) ) ) ) ( \exists kore-element-var-x1 ( \eq kore-element-var-x1 ( \kore-dv \kore-sort-SortId "a" ) ) ) ) $= ( in-sort-is-pattern and-is-pattern top-is-pattern IMP-sort-17-is-pattern typecode-cache-Pattern-72 IMP-sort-14-is-pattern typecode-cache-Pattern-97 BASIC-K-sort-1-is-pattern typecode-cache-Pattern-98 BASIC-K-sort-0-is-pattern typecode-cache-Pattern-142 string-literal-11-is-pattern kore-dv-is-pattern typecode-cache-Pattern-19 eq-is-pattern exists-is-pattern top-intro rule-weakening sorting-cache-4 sorting-rearrange-16 kore-functional rule-imp-transitivity ) BKLGAMNGDOPGCFQHHHIETJRSUAEUBBKLGAMNGDOPGCFQHHHIUCUDJJRSIEUEEUFUGUH $.
sorting-cache-308 $p |- ( \imp ( \and ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortMap ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortKItem ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE5 \kore-sort-SortGeneratedCounterCell ) \top ) ) ) ) ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortId ) \top ) ) ( \in-sort kore-element-var-VE3 \kore-sort-SortK ) ) $= ( in-sort-is-pattern and-is-pattern typecode-cache-Pattern-98 BASIC-K-sort-0-is-pattern typecode-cache-Pattern-142 typecode-cache-Pattern-97 BASIC-K-sort-1-is-pattern typecode-cache-Pattern-72 IMP-sort-14-is-pattern rule-imp-transitivity typecode-cache-Pattern-74 IMP-sort-17-is-pattern top-is-pattern and-elim-left-sugar and-elim-right-sugar imp-reflexivity ) CNOGBLMGEIJGDFKHHHAQRGSHHCNOGBLMGEIJGDFKHHHEIJGCNOGBLMGEIJGDFKHHHAQRGSHTCNOGBLMGEIJGDFKHHHBLMGEIJGDFKHHEIJGCNOGBLMGEIJGDFKHHUABLMGEIJGDFKHHEIJGDFKHEIJGBLMGEIJGDFKHUAEIJGDFKHEIJGEIJGEIJGDFKTEIJGUBPPPP $.
sorting-cache-309 $p |- ( \imp ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE5 \kore-sort-SortGeneratedCounterCell ) \top ) ) ( \in-sort kore-element-var-VE4 \kore-sort-SortInt ) ) $= ( in-sort-is-pattern typecode-cache-Pattern-99 IMP-sort-22-is-pattern typecode-cache-Pattern-142 typecode-cache-Pattern-141 IMP-sort-10-is-pattern top-is-pattern and-is-pattern and-elim-left-sugar imp-reflexivity rule-imp-transitivity ) ABFADECADECADECBGHCIJKADECLM $.
sorting-cache-310 $p |- ( \imp ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortKItem ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE5 \kore-sort-SortGeneratedCounterCell ) \top ) ) ) ) ( \in-sort kore-element-var-VE4 \kore-sort-SortInt ) ) $= ( in-sort-is-pattern typecode-cache-Pattern-142 typecode-cache-Pattern-98 BASIC-K-sort-0-is-pattern and-is-pattern typecode-cache-Pattern-97 BASIC-K-sort-1-is-pattern typecode-cache-Pattern-99 IMP-sort-22-is-pattern and-elim-right-sugar rule-imp-transitivity sorting-cache-309 ) AJKECGHEBDFIICGHEBDFIBLMEAJKECGHEBDFINCGHEBDFIBDFBLMECGHEBDFNBDPOO $.
sorting-cache-311 $p |- ( \imp ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortMap ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortKItem ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE5 \kore-sort-SortGeneratedCounterCell ) \top ) ) ) ) ) ( \in-sort kore-element-var-VE4 \kore-sort-SortInt ) ) $= ( in-sort-is-pattern and-is-pattern typecode-cache-Pattern-97 BASIC-K-sort-1-is-pattern typecode-cache-Pattern-98 BASIC-K-sort-0-is-pattern typecode-cache-Pattern-142 typecode-cache-Pattern-72 IMP-sort-14-is-pattern typecode-cache-Pattern-99 IMP-sort-22-is-pattern and-elim-right-sugar sorting-cache-310 rule-imp-transitivity ) BMNFAHIFDJKFCELGGGAHIFDJKFCELGGCOPFBMNFAHIFDJKFCELGGQACDERS $.
sorting-cache-312 $p |- ( \imp ( \and ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortMap ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortKItem ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE5 \kore-sort-SortGeneratedCounterCell ) \top ) ) ) ) ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortId ) \top ) ) ( \in-sort kore-element-var-VE4 \kore-sort-SortInt ) ) $= ( in-sort-is-pattern and-is-pattern typecode-cache-Pattern-72 IMP-sort-14-is-pattern typecode-cache-Pattern-97 BASIC-K-sort-1-is-pattern typecode-cache-Pattern-98 BASIC-K-sort-0-is-pattern typecode-cache-Pattern-142 typecode-cache-Pattern-74 IMP-sort-17-is-pattern top-is-pattern typecode-cache-Pattern-99 IMP-sort-22-is-pattern and-elim-left-sugar sorting-cache-311 rule-imp-transitivity ) CIJGBKLGEMNGDFOHHHAPQGRHHCIJGBKLGEMNGDFOHHHDSTGCIJGBKLGEMNGDFOHHHAPQGRHUABCDEFUBUC $.
sorting-cache-313 $p |- ( \imp ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE5 \kore-sort-SortGeneratedCounterCell ) \top ) ) ( \in-sort kore-element-var-VE5 \kore-sort-SortGeneratedCounterCell ) ) $= ( in-sort-is-pattern typecode-cache-Pattern-141 IMP-sort-10-is-pattern top-is-pattern and-is-pattern rule-imp-transitivity typecode-cache-Pattern-142 typecode-cache-Pattern-99 IMP-sort-22-is-pattern and-elim-right-sugar and-elim-left-sugar imp-reflexivity ) ABIBDECFGBDECAJKCBDECFGLBDECFGBDECBDECBDECFMBDECNHH $.
sorting-cache-314 $p |- ( \imp ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortKItem ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE5 \kore-sort-SortGeneratedCounterCell ) \top ) ) ) ) ( \in-sort kore-element-var-VE5 \kore-sort-SortGeneratedCounterCell ) ) $= ( in-sort-is-pattern typecode-cache-Pattern-142 typecode-cache-Pattern-98 BASIC-K-sort-0-is-pattern and-is-pattern typecode-cache-Pattern-97 BASIC-K-sort-1-is-pattern typecode-cache-Pattern-141 IMP-sort-10-is-pattern and-elim-right-sugar rule-imp-transitivity sorting-cache-313 ) AJKECGHEBDFIICGHEBDFIDLMEAJKECGHEBDFINCGHEBDFIBDFDLMECGHEBDFNBDPOO $.
sorting-cache-315 $p |- ( \imp ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortMap ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortKItem ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE5 \kore-sort-SortGeneratedCounterCell ) \top ) ) ) ) ) ( \in-sort kore-element-var-VE5 \kore-sort-SortGeneratedCounterCell ) ) $= ( in-sort-is-pattern and-is-pattern typecode-cache-Pattern-97 BASIC-K-sort-1-is-pattern typecode-cache-Pattern-98 BASIC-K-sort-0-is-pattern typecode-cache-Pattern-142 typecode-cache-Pattern-72 IMP-sort-14-is-pattern typecode-cache-Pattern-141 IMP-sort-10-is-pattern and-elim-right-sugar sorting-cache-314 rule-imp-transitivity ) BMNFAHIFDJKFCELGGGAHIFDJKFCELGGEOPFBMNFAHIFDJKFCELGGQACDERS $.
sorting-cache-316 $p |- ( \imp ( \and ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortMap ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortKItem ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE5 \kore-sort-SortGeneratedCounterCell ) \top ) ) ) ) ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortId ) \top ) ) ( \in-sort kore-element-var-VE5 \kore-sort-SortGeneratedCounterCell ) ) $= ( in-sort-is-pattern and-is-pattern typecode-cache-Pattern-72 IMP-sort-14-is-pattern typecode-cache-Pattern-97 BASIC-K-sort-1-is-pattern typecode-cache-Pattern-98 BASIC-K-sort-0-is-pattern typecode-cache-Pattern-142 typecode-cache-Pattern-74 IMP-sort-17-is-pattern top-is-pattern typecode-cache-Pattern-141 IMP-sort-10-is-pattern and-elim-left-sugar sorting-cache-315 rule-imp-transitivity ) CIJGBKLGEMNGDFOHHHAPQGRHHCIJGBKLGEMNGDFOHHHFSTGCIJGBKLGEMNGDFOHHHAPQGRHUABCDEFUBUC $.
sorting-cache-317 $p |- ( \imp ( \and ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortMap ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortKItem ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE5 \kore-sort-SortGeneratedCounterCell ) \top ) ) ) ) ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortId ) \top ) ) ( \and ( \in-sort kore-element-var-VE5 \kore-sort-SortGeneratedCounterCell ) \top ) ) $= ( and-is-pattern in-sort-is-pattern top-is-pattern typecode-cache-Pattern-72 IMP-sort-14-is-pattern typecode-cache-Pattern-97 BASIC-K-sort-1-is-pattern typecode-cache-Pattern-98 BASIC-K-sort-0-is-pattern typecode-cache-Pattern-142 typecode-cache-Pattern-74 IMP-sort-17-is-pattern typecode-cache-Pattern-141 IMP-sort-10-is-pattern sorting-cache-316 top-intro rule-weakening rule-and-intro-alt2-sugar ) CJKHBLMHENOHDFPGGGAQRHIGGFSTHIABCDEFUACJKHBLMHENOHDFPGGGAQRHIGGIUBUCUD $.
sorting-cache-318 $p |- ( \imp ( \and ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortMap ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortKItem ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE5 \kore-sort-SortGeneratedCounterCell ) \top ) ) ) ) ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortId ) \top ) ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE5 \kore-sort-SortGeneratedCounterCell ) \top ) ) ) $= ( in-sort-is-pattern and-is-pattern top-is-pattern typecode-cache-Pattern-72 IMP-sort-14-is-pattern typecode-cache-Pattern-97 BASIC-K-sort-1-is-pattern typecode-cache-Pattern-98 BASIC-K-sort-0-is-pattern typecode-cache-Pattern-142 typecode-cache-Pattern-74 IMP-sort-17-is-pattern typecode-cache-Pattern-99 IMP-sort-22-is-pattern typecode-cache-Pattern-141 IMP-sort-10-is-pattern sorting-cache-312 sorting-cache-317 rule-and-intro-alt2-sugar ) CJKGBLMGENOGDFPHHHAQRGIHHDSTGFUAUBGIHABCDEFUCABCDEFUDUE $.
sorting-cache-319 $p |- ( \imp ( \and ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortMap ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortKItem ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE5 \kore-sort-SortGeneratedCounterCell ) \top ) ) ) ) ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortId ) \top ) ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortKItem ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE5 \kore-sort-SortGeneratedCounterCell ) \top ) ) ) ) ) $= ( in-sort-is-pattern and-is-pattern typecode-cache-Pattern-97 BASIC-K-sort-1-is-pattern typecode-cache-Pattern-98 BASIC-K-sort-0-is-pattern typecode-cache-Pattern-142 typecode-cache-Pattern-72 IMP-sort-14-is-pattern typecode-cache-Pattern-74 IMP-sort-17-is-pattern top-is-pattern rule-imp-transitivity and-elim-left-sugar rule-and-intro-alt2-sugar and-elim-right-sugar imp-reflexivity sorting-cache-308 sorting-cache-318 ) CNOGBIJGEKLGDFMHHHAPQGRHHBIJGEKLGDFMHCNOGBIJGEKLGDFMHHHAPQGRHHCNOGBIJGEKLGDFMHHHBIJGCNOGBIJGEKLGDFMHHHAPQGRHTCNOGBIJGEKLGDFMHHHBIJGEKLGDFMHHBIJGCNOGBIJGEKLGDFMHHUBBIJGEKLGDFMHHBIJGBIJGBIJGEKLGDFMHTBIJGUCSSSCNOGBIJGEKLGDFMHHHAPQGRHHEKLGDFMABCDEFUDABCDEFUEUAUA $.
typecode-cache-Pattern-143 $p #Pattern ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp kore-element-var-VE0 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp kore-element-var-VE4 ) ) $= ( typecode-cache-Pattern-74 IMP-sort-22-is-pattern IMP-sort-13-is-pattern typecode-cache-Pattern-99 kore-inj-is-pattern IMP-symbol-169-is-pattern ) ACDEBFGH $.
typecode-cache-Pattern-144 $p #Pattern ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem kore-element-var-VE0 ) kore-element-var-VE2 ) $= ( IMP-sort-17-is-pattern BASIC-K-sort-1-is-pattern typecode-cache-Pattern-74 kore-inj-is-pattern typecode-cache-Pattern-97 IMP-symbol-196-is-pattern ) CDAEFBGH $.
typecode-cache-Pattern-145 $p #Pattern ( \kore-symbol-Lbl'Unds'Map'Unds' ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem kore-element-var-VE0 ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortKItem kore-element-var-VE4 ) ) kore-element-var-VE1 ) $= ( BASIC-K-sort-1-is-pattern kore-inj-is-pattern IMP-sort-17-is-pattern typecode-cache-Pattern-74 IMP-sort-22-is-pattern typecode-cache-Pattern-99 IMP-symbol-196-is-pattern typecode-cache-Pattern-72 IMP-symbol-176-is-pattern ) FDAGEHDCIEJBKL $.
sorting-rearrange-169 $p |- ( \imp ( \and ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortMap ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortKItem ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE5 \kore-sort-SortGeneratedCounterCell ) \top ) ) ) ) ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortId ) \top ) ) ( \kore-valid \kore-sort-SortGeneratedTopCell ( \kore-rewrites \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp kore-element-var-VE0 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp kore-element-var-VE4 ) ) ) kore-element-var-VE3 ) ) ( \kore-symbol-Lbl'-LT-'state'-GT-' ( \kore-symbol-Lbl'Unds'Map'Unds' ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem kore-element-var-VE0 ) kore-element-var-VE2 ) kore-element-var-VE1 ) ) ) kore-element-var-VE5 ) ) ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' kore-element-var-VE3 ) ( \kore-symbol-Lbl'-LT-'state'-GT-' ( \kore-symbol-Lbl'Unds'Map'Unds' ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem kore-element-var-VE0 ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortKItem kore-element-var-VE4 ) ) kore-element-var-VE1 ) ) ) kore-element-var-VE5 ) ) ) ) ) $= ( in-sort-is-pattern and-is-pattern typecode-cache-Pattern-72 IMP-sort-14-is-pattern typecode-cache-Pattern-74 IMP-sort-17-is-pattern typecode-cache-Pattern-98 BASIC-K-sort-1-is-pattern typecode-cache-Pattern-97 BASIC-K-sort-0-is-pattern typecode-cache-Pattern-142 top-is-pattern IMP-sort-8-is-pattern rule-imp-transitivity and-elim-left-sugar kore-top-is-pattern IMP-symbol-119-is-pattern IMP-symbol-120-is-pattern IMP-symbol-114-is-pattern typecode-cache-Pattern-141 IMP-symbol-117-is-pattern kore-and-is-pattern imp-reflexivity rule-and-intro-alt2-sugar IMP-sort-30-is-pattern typecode-cache-Pattern-143 kore-inj-is-pattern KSEQ-symbol-0-is-pattern typecode-cache-Pattern-144 IMP-symbol-176-is-pattern typecode-cache-Pattern-145 kore-rewrites-is-pattern kore-valid-is-pattern and-elim-right-sugar sorting-cache-319 IMP-axiom-2872 ) CIJGBONGEMPGDFQHHHAKLGRHHAKLGCIJGBONGEMPGDFQHHHHSSSSUBUKNADULUMEMUNUCABUOCIUPUDUEFUFUGUHSSUBEMUCACDUQUDUEFUFUGUHURUSCIJGBONGEMPGDFQHHHAKLGRHHAKLGCIJGBONGEMPGDFQHHHCIJGBONGEMPGDFQHHHAKLGRHHAKLGRHAKLGCIJGBONGEMPGDFQHHHAKLGRHUTAKLGRHAKLGAKLGAKLGRUAAKLGUITTCIJGBONGEMPGDFQHHHAKLGRHHCIJGBONGEMPGDFQHHCIJGBONGEMPGDFQHHHAKLGRHHCIJGBONGEMPGDFQHHHCIJGCIJGBONGEMPGDFQHHHAKLGRHUACIJGBONGEMPGDFQHHHCIJGCIJGCIJGBONGEMPGDFQHHUACIJGUITTABCDEFVAUJUJABCDEFVBT $.
typecode-cache-Pattern-146 $p #Pattern ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp kore-element-var-VE4 ) ) ) kore-element-var-VE3 ) $= ( kore-inj-is-pattern IMP-sort-30-is-pattern BASIC-K-sort-1-is-pattern IMP-sort-17-is-pattern string-literal-11-is-pattern kore-dv-is-pattern IMP-sort-22-is-pattern IMP-sort-13-is-pattern typecode-cache-Pattern-99 IMP-symbol-169-is-pattern typecode-cache-Pattern-98 KSEQ-symbol-0-is-pattern ) DEFGHIJAKCLCBMN $.
typecode-cache-Pattern-147 $p #Pattern ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' kore-element-var-VE3 ) ( \kore-symbol-Lbl'-LT-'state'-GT-' ( \kore-symbol-Lbl'Unds'Map'Unds' ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem ( \kore-dv \kore-sort-SortId "a" ) ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortKItem kore-element-var-VE4 ) ) kore-element-var-VE1 ) ) ) kore-element-var-VE5 ) $= ( IMP-sort-17-is-pattern BASIC-K-sort-1-is-pattern kore-inj-is-pattern typecode-cache-Pattern-98 IMP-symbol-119-is-pattern string-literal-11-is-pattern kore-dv-is-pattern IMP-sort-22-is-pattern typecode-cache-Pattern-99 IMP-symbol-196-is-pattern typecode-cache-Pattern-72 IMP-symbol-176-is-pattern IMP-symbol-120-is-pattern IMP-symbol-114-is-pattern typecode-cache-Pattern-141 IMP-symbol-117-is-pattern ) CHIEFEJKGLFBMGNAOPQRDST $.
typecode-cache-Pattern-148 $p #Pattern ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp kore-element-var-x0 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp kore-element-var-VE4 ) ) $= ( typecode-cache-Pattern-16 IMP-sort-22-is-pattern IMP-sort-13-is-pattern typecode-cache-Pattern-99 kore-inj-is-pattern IMP-symbol-169-is-pattern ) BCDEAFGH $.
typecode-cache-Pattern-149 $p #Pattern ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem kore-element-var-x0 ) kore-element-var-VE2 ) $= ( IMP-sort-17-is-pattern BASIC-K-sort-1-is-pattern typecode-cache-Pattern-16 kore-inj-is-pattern typecode-cache-Pattern-97 IMP-symbol-196-is-pattern ) CDBEFAGH $.
typecode-cache-Pattern-150 $p #Pattern ( \kore-symbol-Lbl'Unds'Map'Unds' ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem kore-element-var-x0 ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortKItem kore-element-var-VE4 ) ) kore-element-var-VE1 ) $= ( BASIC-K-sort-1-is-pattern kore-inj-is-pattern IMP-sort-17-is-pattern typecode-cache-Pattern-16 IMP-sort-22-is-pattern typecode-cache-Pattern-99 IMP-symbol-196-is-pattern typecode-cache-Pattern-72 IMP-symbol-176-is-pattern ) FDCGEHDBIEJAKL $.
substitution-448 $p #Substitution kore-element-var-VE3 kore-element-var-VE3 ( \kore-dv \kore-sort-SortId "a" ) kore-element-var-VE0 $= ( typecode-cache-Pattern-98 IMP-sort-17-is-pattern string-literal-11-is-pattern kore-dv-is-pattern element-var-is-var substitution-disjoint ) BCDEFAGH $.
substitution-449 $p #Substitution ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp kore-element-var-VE4 ) ) ) kore-element-var-VE3 ) ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp kore-element-var-VE0 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp kore-element-var-VE4 ) ) ) kore-element-var-VE3 ) ( \kore-dv \kore-sort-SortId "a" ) kore-element-var-VE0 $= ( IMP-sort-17-is-pattern string-literal-11-is-pattern kore-dv-is-pattern element-var-is-var kore-inj-is-pattern IMP-sort-30-is-pattern BASIC-K-sort-1-is-pattern IMP-sort-22-is-pattern IMP-sort-13-is-pattern typecode-cache-Pattern-99 substitution-disjoint IMP-symbol-169-is-pattern typecode-cache-Pattern-98 typecode-cache-Pattern-143 typecode-cache-Pattern-74 substitution-var-same IMP-symbol-169-substitution substitution-kore-inj substitution-448 KSEQ-symbol-0-substitution ) AGDEFIJDEFKLBMHOHCPIJABQHCPIJDEFKLBMHOIJABQDEFAGIDEFAGNJDEFAGNAGDEFDEFKLBMHARKLBMHDEFAGSKLBMHDEFAGNTUAACUBUC $.
substitution-450 $p #Substitution kore-element-var-VE2 kore-element-var-VE2 ( \kore-dv \kore-sort-SortId "a" ) kore-element-var-VE0 $= ( typecode-cache-Pattern-97 IMP-sort-17-is-pattern string-literal-11-is-pattern kore-dv-is-pattern element-var-is-var substitution-disjoint ) BCDEFAGH $.
substitution-451 $p #Substitution ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem ( \kore-dv \kore-sort-SortId "a" ) ) kore-element-var-VE2 ) ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem kore-element-var-VE0 ) kore-element-var-VE2 ) ( \kore-dv \kore-sort-SortId "a" ) kore-element-var-VE0 $= ( IMP-sort-17-is-pattern string-literal-11-is-pattern kore-dv-is-pattern element-var-is-var BASIC-K-sort-1-is-pattern kore-inj-is-pattern typecode-cache-Pattern-97 typecode-cache-Pattern-74 substitution-disjoint substitution-var-same substitution-kore-inj substitution-450 IMP-symbol-196-substitution ) AFCDECGCDEHBICGAJHBICGCDECGAJCDEAFCCDEAFKGCDEAFKCDEAFLMABNO $.
substitution-452 $p #Substitution kore-element-var-VE1 kore-element-var-VE1 ( \kore-dv \kore-sort-SortId "a" ) kore-element-var-VE0 $= ( typecode-cache-Pattern-72 IMP-sort-17-is-pattern string-literal-11-is-pattern kore-dv-is-pattern element-var-is-var substitution-disjoint ) BCDEFAGH $.
substitution-453 $p #Substitution kore-element-var-VE5 kore-element-var-VE5 ( \kore-dv \kore-sort-SortId "a" ) kore-element-var-VE0 $= ( typecode-cache-Pattern-141 IMP-sort-17-is-pattern string-literal-11-is-pattern kore-dv-is-pattern element-var-is-var substitution-disjoint ) BCDEFAGH $.
substitution-454 $p #Substitution ( \kore-symbol-Lbl'-LT-'state'-GT-' ( \kore-symbol-Lbl'Unds'Map'Unds' ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem ( \kore-dv \kore-sort-SortId "a" ) ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortKItem kore-element-var-VE4 ) ) kore-element-var-VE1 ) ) ( \kore-symbol-Lbl'-LT-'state'-GT-' ( \kore-symbol-Lbl'Unds'Map'Unds' ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem kore-element-var-VE0 ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortKItem kore-element-var-VE4 ) ) kore-element-var-VE1 ) ) ( \kore-dv \kore-sort-SortId "a" ) kore-element-var-VE0 $= ( IMP-sort-17-is-pattern BASIC-K-sort-1-is-pattern string-literal-11-is-pattern kore-dv-is-pattern kore-inj-is-pattern element-var-is-var IMP-sort-22-is-pattern typecode-cache-Pattern-99 IMP-symbol-196-is-pattern typecode-cache-Pattern-72 typecode-cache-Pattern-74 substitution-disjoint IMP-symbol-176-is-pattern typecode-cache-Pattern-145 substitution-var-same substitution-kore-inj IMP-symbol-196-substitution substitution-452 IMP-symbol-176-substitution IMP-symbol-120-substitution ) AIDFGDEDFGHJECKHLBMPABCQAIDFGDEDFGHJECKHLBMDEANHJECKHLBMAIDFGDEDFGHJECKHDEANHJECKHDEDFGDEANDFGAIDDFGAIOEDFGAIODFGAIRSJECKHDFGAIOTABUAUBUC $.
substitution-455 $p #Substitution \kore-sort-SortId \kore-sort-SortId kore-element-var-x0 kore-element-var-VE0 $= ( IMP-sort-17-is-pattern typecode-cache-Pattern-16 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-456 $p #Substitution ( \in-sort kore-element-var-x0 \kore-sort-SortId ) ( \in-sort kore-element-var-VE0 \kore-sort-SortId ) kore-element-var-x0 kore-element-var-VE0 $= ( typecode-cache-Pattern-16 IMP-sort-17-is-pattern element-var-is-var typecode-cache-Pattern-74 substitution-var-same substitution-455 substitution-in-sort ) BCBCDAFDAEBCAEGABHI $.
substitution-457 $p #Substitution ( \and ( \in-sort kore-element-var-x0 \kore-sort-SortId ) \top ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortId ) \top ) kore-element-var-x0 kore-element-var-VE0 $= ( typecode-cache-Pattern-16 IMP-sort-17-is-pattern in-sort-is-pattern top-is-pattern typecode-cache-Pattern-74 element-var-is-var substitution-456 substitution-183 substitution-and ) BCBCDEFAGDEFAHABIABJK $.
substitution-458 $p #Substitution \kore-sort-SortStmt \kore-sort-SortStmt kore-element-var-x0 kore-element-var-VE0 $= ( IMP-sort-30-is-pattern typecode-cache-Pattern-16 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-459 $p #Substitution ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp kore-element-var-x0 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp kore-element-var-VE4 ) ) ) ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp kore-element-var-VE0 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp kore-element-var-VE4 ) ) ) kore-element-var-x0 kore-element-var-VE0 $= ( typecode-cache-Pattern-16 element-var-is-var IMP-sort-22-is-pattern IMP-sort-13-is-pattern typecode-cache-Pattern-99 kore-inj-is-pattern IMP-sort-30-is-pattern BASIC-K-sort-1-is-pattern typecode-cache-Pattern-148 typecode-cache-Pattern-143 substitution-458 substitution-284 typecode-cache-Pattern-74 substitution-var-same substitution-disjoint IMP-symbol-169-substitution substitution-kore-inj ) JKBCLJKABMCDAEACNACOAECDCDFGBHIAPFGBHICDAEQFGBHICDAERST $.
substitution-460 $p #Substitution ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp kore-element-var-x0 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp kore-element-var-VE4 ) ) ) kore-element-var-VE3 ) ) ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp kore-element-var-VE0 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp kore-element-var-VE4 ) ) ) kore-element-var-VE3 ) ) kore-element-var-x0 kore-element-var-VE0 $= ( IMP-sort-30-is-pattern BASIC-K-sort-1-is-pattern kore-inj-is-pattern typecode-cache-Pattern-98 element-var-is-var typecode-cache-Pattern-16 typecode-cache-Pattern-148 KSEQ-symbol-0-is-pattern typecode-cache-Pattern-143 substitution-459 substitution-292 KSEQ-symbol-0-substitution IMP-symbol-119-substitution ) AIDJEFBDKGCHLEFABMGCHLAIDJEFBDKGCHEFABMGCHABDNACDOPQ $.
substitution-461 $p #Substitution ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem kore-element-var-x0 ) ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem kore-element-var-VE0 ) kore-element-var-x0 kore-element-var-VE0 $= ( typecode-cache-Pattern-16 IMP-sort-17-is-pattern BASIC-K-sort-1-is-pattern element-var-is-var typecode-cache-Pattern-74 substitution-455 substitution-284 substitution-var-same substitution-kore-inj ) DEBCDEAGBCAFABHABIBCAFJK $.
substitution-462 $p #Substitution ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem kore-element-var-x0 ) kore-element-var-VE2 ) ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem kore-element-var-VE0 ) kore-element-var-VE2 ) kore-element-var-x0 kore-element-var-VE0 $= ( typecode-cache-Pattern-16 IMP-sort-17-is-pattern BASIC-K-sort-1-is-pattern kore-inj-is-pattern typecode-cache-Pattern-97 element-var-is-var typecode-cache-Pattern-74 substitution-461 substitution-286 IMP-symbol-196-substitution ) AICDEFCDGBHEFAJGBHACKABCLM $.
substitution-463 $p #Substitution ( \kore-symbol-Lbl'Unds'Map'Unds' ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem kore-element-var-x0 ) kore-element-var-VE2 ) kore-element-var-VE1 ) ( \kore-symbol-Lbl'Unds'Map'Unds' ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem kore-element-var-VE0 ) kore-element-var-VE2 ) kore-element-var-VE1 ) kore-element-var-x0 kore-element-var-VE0 $= ( typecode-cache-Pattern-72 element-var-is-var typecode-cache-Pattern-16 typecode-cache-Pattern-149 typecode-cache-Pattern-144 substitution-462 substitution-187 IMP-symbol-176-substitution ) AFDGBDHCEABICEABDJACDKL $.
substitution-464 $p #Substitution kore-element-var-VE5 kore-element-var-VE5 kore-element-var-x0 kore-element-var-VE0 $= ( typecode-cache-Pattern-141 typecode-cache-Pattern-16 element-var-is-var substitution-disjoint ) BDCEAFG $.
substitution-465 $p #Substitution ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp kore-element-var-x0 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp kore-element-var-VE4 ) ) ) kore-element-var-VE3 ) ) ( \kore-symbol-Lbl'-LT-'state'-GT-' ( \kore-symbol-Lbl'Unds'Map'Unds' ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem kore-element-var-x0 ) kore-element-var-VE2 ) kore-element-var-VE1 ) ) ) kore-element-var-VE5 ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp kore-element-var-VE0 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp kore-element-var-VE4 ) ) ) kore-element-var-VE3 ) ) ( \kore-symbol-Lbl'-LT-'state'-GT-' ( \kore-symbol-Lbl'Unds'Map'Unds' ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem kore-element-var-VE0 ) kore-element-var-VE2 ) kore-element-var-VE1 ) ) ) kore-element-var-VE5 ) kore-element-var-x0 kore-element-var-VE0 $= ( typecode-cache-Pattern-72 IMP-symbol-176-is-pattern IMP-sort-30-is-pattern BASIC-K-sort-1-is-pattern kore-inj-is-pattern typecode-cache-Pattern-98 KSEQ-symbol-0-is-pattern IMP-symbol-119-is-pattern IMP-symbol-120-is-pattern element-var-is-var typecode-cache-Pattern-16 typecode-cache-Pattern-149 typecode-cache-Pattern-144 typecode-cache-Pattern-148 IMP-symbol-114-is-pattern typecode-cache-Pattern-141 typecode-cache-Pattern-143 substitution-460 substitution-463 IMP-symbol-120-substitution IMP-symbol-114-substitution substitution-464 IMP-symbol-117-substitution ) AQGRJKDGUALEMNOBGSCHIPUBFUCJKADUDLEMNOABTCHIPUBFUCAQGRJKDGUALEMNOBGSCHIPJKADUDLEMNOABTCHIPADEGUEAQGRBGSCHIABTCHIABCGUFUGUHAFGUIUJ $.
substitution-466 $p #Substitution ( \kore-symbol-Lbl'-LT-'k'-GT-' kore-element-var-VE3 ) ( \kore-symbol-Lbl'-LT-'k'-GT-' kore-element-var-VE3 ) kore-element-var-x0 kore-element-var-VE0 $= ( typecode-cache-Pattern-98 IMP-symbol-119-is-pattern typecode-cache-Pattern-16 element-var-is-var substitution-disjoint ) BDECFAGH $.
substitution-467 $p #Substitution ( \kore-symbol-Lbl'Unds'Map'Unds' ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem kore-element-var-x0 ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortKItem kore-element-var-VE4 ) ) kore-element-var-VE1 ) ( \kore-symbol-Lbl'Unds'Map'Unds' ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem kore-element-var-VE0 ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortKItem kore-element-var-VE4 ) ) kore-element-var-VE1 ) kore-element-var-x0 kore-element-var-VE0 $= ( BASIC-K-sort-1-is-pattern kore-inj-is-pattern typecode-cache-Pattern-16 IMP-sort-22-is-pattern typecode-cache-Pattern-99 IMP-sort-17-is-pattern element-var-is-var IMP-symbol-196-is-pattern typecode-cache-Pattern-72 typecode-cache-Pattern-74 substitution-461 substitution-disjoint IMP-symbol-196-substitution substitution-187 IMP-symbol-176-substitution ) AKDGJEDGFHECIFLBMJEANFHECIFLBMAKDGJEDGFHECIFJEANFHECIFADOHECIFDGAKPQABDRS $.
substitution-468 $p #Substitution ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' kore-element-var-VE3 ) ( \kore-symbol-Lbl'-LT-'state'-GT-' ( \kore-symbol-Lbl'Unds'Map'Unds' ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem kore-element-var-x0 ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortKItem kore-element-var-VE4 ) ) kore-element-var-VE1 ) ) ) kore-element-var-VE5 ) ) ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' kore-element-var-VE3 ) ( \kore-symbol-Lbl'-LT-'state'-GT-' ( \kore-symbol-Lbl'Unds'Map'Unds' ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem kore-element-var-VE0 ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortKItem kore-element-var-VE4 ) ) kore-element-var-VE1 ) ) ) kore-element-var-VE5 ) ) kore-element-var-x0 kore-element-var-VE0 $= ( typecode-cache-Pattern-98 IMP-symbol-119-is-pattern IMP-symbol-120-is-pattern IMP-sort-8-is-pattern typecode-cache-Pattern-16 element-var-is-var typecode-cache-Pattern-150 IMP-symbol-114-is-pattern typecode-cache-Pattern-141 typecode-cache-Pattern-145 kore-top-is-pattern IMP-symbol-117-is-pattern substitution-191 substitution-disjoint substitution-466 substitution-467 IMP-symbol-120-substitution IMP-symbol-114-substitution substitution-464 IMP-symbol-117-substitution substitution-kore-and ) JJQDGHBCFMINEORJJQDGHABCPINEORFKALAFSJQFKALTALFKDGHBCFMINEODGHABCPINEOALFKDGHBCFMIDGHABCPIADFUAALFKBCFMABCPABCFUBUCUDAEFUEUFUG $.
sorting-cache-320 $p |- ( \imp ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortMap ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortKItem ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE5 \kore-sort-SortGeneratedCounterCell ) \top ) ) ) ) ) ( \and ( \in-sort kore-element-var-VE5 \kore-sort-SortGeneratedCounterCell ) \top ) ) $= ( in-sort-is-pattern and-is-pattern typecode-cache-Pattern-72 IMP-sort-14-is-pattern typecode-cache-Pattern-97 BASIC-K-sort-1-is-pattern typecode-cache-Pattern-98 BASIC-K-sort-0-is-pattern typecode-cache-Pattern-142 top-is-pattern typecode-cache-Pattern-141 IMP-sort-10-is-pattern sorting-cache-315 top-intro rule-weakening rule-and-intro-alt2-sugar ) BHIFAJKFDLMFCENGGGEPQFOABCDERBHIFAJKFDLMFCENGGGOSTUA $.
sorting-cache-321 $p |- ( \imp ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortMap ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortKItem ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE5 \kore-sort-SortGeneratedCounterCell ) \top ) ) ) ) ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE5 \kore-sort-SortGeneratedCounterCell ) \top ) ) ) $= ( in-sort-is-pattern and-is-pattern typecode-cache-Pattern-72 IMP-sort-14-is-pattern typecode-cache-Pattern-97 BASIC-K-sort-1-is-pattern typecode-cache-Pattern-98 BASIC-K-sort-0-is-pattern typecode-cache-Pattern-142 typecode-cache-Pattern-99 IMP-sort-22-is-pattern typecode-cache-Pattern-141 IMP-sort-10-is-pattern top-is-pattern sorting-cache-311 sorting-cache-320 rule-and-intro-alt2-sugar ) BHIFAJKFDLMFCENGGGCOPFEQRFSGABCDETABCDEUAUB $.
sorting-cache-322 $p |- ( \imp ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortMap ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortKItem ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE5 \kore-sort-SortGeneratedCounterCell ) \top ) ) ) ) ) ( \and ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortMap ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortKItem ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE5 \kore-sort-SortGeneratedCounterCell ) \top ) ) ) ) ) ( \and ( \in-sort ( \kore-dv \kore-sort-SortId "a" ) \kore-sort-SortId ) \top ) ) ) $= ( in-sort-is-pattern and-is-pattern typecode-cache-Pattern-98 BASIC-K-sort-0-is-pattern typecode-cache-Pattern-97 BASIC-K-sort-1-is-pattern typecode-cache-Pattern-142 typecode-cache-Pattern-72 IMP-sort-14-is-pattern IMP-sort-17-is-pattern string-literal-11-is-pattern rule-imp-transitivity kore-dv-is-pattern rule-and-intro-alt2-sugar top-is-pattern and-elim-left-sugar imp-reflexivity and-elim-right-sugar sorting-cache-321 imp-is-pattern proof-rule-prop-1 kore-dv-sorting proof-rule-mp top-intro rule-weakening ) BMNFAJKFDHIFCELGGGBMNFAJKFDHIFCELGGGOPROFTGBMNFAJKFDHIFCELGGGBMNFAJKFDHIFCELGGBMNFAJKFDHIFCELGGGBMNFBMNFBMNFAJKFDHIFCELGGUABMNFUBQBMNFAJKFDHIFCELGGGAJKFDHIFCELGBMNFAJKFDHIFCELGGGAJKFDHIFCELGGAJKFBMNFAJKFDHIFCELGGUCAJKFDHIFCELGGAJKFAJKFAJKFDHIFCELGUAAJKFUBQQBMNFAJKFDHIFCELGGGDHIFCELBMNFAJKFDHIFCELGGGAJKFDHIFCELGGDHIFBMNFAJKFDHIFCELGGUCAJKFDHIFCELGGDHIFCELGDHIFAJKFDHIFCELGUCDHIFCELGDHIFDHIFDHIFCELUADHIFUBQQQABCDEUDSSSBMNFAJKFDHIFCELGGGOPROFTOPROFBMNFAJKFDHIFCELGGGOPROFUEOPROFBMNFAJKFDHIFCELGGGUFOPUGUHBMNFAJKFDHIFCELGGGTUIUJSS $.
sorting-rearrange-170 $p |- ( \imp ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortMap ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortKItem ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE5 \kore-sort-SortGeneratedCounterCell ) \top ) ) ) ) ) ( \kore-valid \kore-sort-SortGeneratedTopCell ( \kore-rewrites \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp kore-element-var-VE4 ) ) ) kore-element-var-VE3 ) ) ( \kore-symbol-Lbl'-LT-'state'-GT-' ( \kore-symbol-Lbl'Unds'Map'Unds' ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem ( \kore-dv \kore-sort-SortId "a" ) ) kore-element-var-VE2 ) kore-element-var-VE1 ) ) ) kore-element-var-VE5 ) ) ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' kore-element-var-VE3 ) ( \kore-symbol-Lbl'-LT-'state'-GT-' ( \kore-symbol-Lbl'Unds'Map'Unds' ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem ( \kore-dv \kore-sort-SortId "a" ) ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortKItem kore-element-var-VE4 ) ) kore-element-var-VE1 ) ) ) kore-element-var-VE5 ) ) ) ) ) $= ( IMP-sort-8-is-pattern kore-element-var-VE0-elementvariable IMP-sort-17-is-pattern string-literal-11-is-pattern kore-dv-is-pattern kore-top-is-pattern IMP-symbol-119-is-pattern IMP-symbol-120-is-pattern typecode-cache-Pattern-98 IMP-symbol-114-is-pattern typecode-cache-Pattern-141 BASIC-K-sort-1-is-pattern typecode-cache-Pattern-72 IMP-symbol-117-is-pattern kore-and-is-pattern kore-inj-is-pattern element-var-is-var IMP-symbol-176-is-pattern kore-element-var-x0-elementvariable in-sort-is-pattern and-is-pattern IMP-sort-30-is-pattern KSEQ-symbol-0-is-pattern typecode-cache-Pattern-97 typecode-cache-Pattern-144 IMP-symbol-196-is-pattern kore-rewrites-is-pattern typecode-cache-Pattern-143 top-is-pattern typecode-cache-Pattern-145 substitution-disjoint typecode-cache-Pattern-146 kore-valid-is-pattern typecode-cache-Pattern-16 typecode-cache-Pattern-147 typecode-cache-Pattern-148 typecode-cache-Pattern-149 typecode-cache-Pattern-74 typecode-cache-Pattern-150 IMP-sort-14-is-pattern BASIC-K-sort-0-is-pattern typecode-cache-Pattern-142 substitution-kore-and substitution-191 kore-element-var-x1-elementvariable IMP-symbol-114-substitution substitution-453 IMP-symbol-117-substitution IMP-sort-22-is-pattern typecode-cache-Pattern-99 substitution-kore-rewrites substitution-kore-valid substitution-imp sorting-cache-322 sorting-rearrange-168 sorting-rearrange-169 substitution-var-same substitution-in-sort substitution-and substitution-449 IMP-symbol-119-substitution substitution-451 substitution-452 IMP-symbol-176-substitution IMP-symbol-120-substitution substitution-454 substitution-457 substitution-465 substitution-468 functional-substitution-alt rule-imp-transitivity ) BRVEUEAUIQUEDNVFUECEVGUFUFUFBRVEUEAUIQUEDNVFUECEVGUFUFUFHIJHUEUNUFUFFFFFKCDUQLHQHIJUAAUIUKBRUCMOEPSTFFKBCDEUTTULURABCDEVSHIJFFFFKUGQGCUMUADNUHLGAUJBRUCMOEPSTFFKDNLGBCUOMOEPSTULURFFFFKCDUQLHQHIJUAAUIUKBRUCMOEPSTFFKBCDEUTTULURFFFFKUGQCUDVAUADNUHLAUDVBBRUCMOEPSTFFKDNLBCUDVDMOEPSTULURBRVEUEAUIQUEDNVFUECEVGUFUFUFGVCHUEUNUFHIJHUEUNUFUDUSHUEUNUFVJGUDABCDVJEVTGABCDEWAHIJHIJHUEUNUFFFFFKCDUQLHQHIJUAAUIUKBRUCMOEPSTFFKBCDEUTTULURGVCHUEUNUFFFFFKUGQGCUMUADNUHLGAUJBRUCMOEPSTFFKDNLGBCUOMOEPSTULURGUBHIJHIJHUEUNGVCHUEUNGUBHIJHIJHGVCHGUBHIJGUBWBHHIJGUBUPWCUNHIJGUBUPWDFFFFKCDUQLHQHIJUAAUIUKBRUCMOEPSTFFKBCDEUTTULFFFFKUGQGCUMUADNUHLGAUJBRUCMOEPSTFFKDNLGBCUOMOEPSTULHIJGUBFHIJGUBUPFFFKCDUQLHQHIJUAAUIUKBRUCMOEPSTFFKBCDEUTTFFFKUGQGCUMUADNUHLGAUJBRUCMOEPSTFFKDNLGBCUOMOEPSTHIJGUBFHIJGUBUPFFKCDUQLHQHIJUAAUIUKBRUCMOEPSFFKUGQGCUMUADNUHLGAUJBRUCMOEPSHIJGUBFHIJGUBUPFKHIJGUBUPGUBHIJCDUQLHQHIJUAAUIUKBRUCMOEPUGQGCUMUADNUHLGAUJBRUCMOEPGUBHIJCDUQLHQHIJUAAUIUKBRUCMUGQGCUMUADNUHLGAUJBRUCMGUBHIJCDUQUGQGCUMUADNUHGCDWEWFGUBHIJHQHIJUAAUIUKBRUCGAUJBRUCGUBHIJHQHIJUAAUIUKBRGAUJBRGAWGGBWHWIWJVKGEVLVMVHFFKBCDEUTFFKDNLGBCUOMOEPSHIJGUBFHIJGUBUPFKHIJGUBUPGUBHIJDNLHQHIJUAVNQCVOUAUKBRUCMOEPDNLGBCUOMOEPGUBHIJDNLHQHIJUAVNQCVOUAUKBRUCMDNLGBCUOMDNLHIJGUBUPGBCWKVKGEVLVMVHVPVQVRUDUSUDUSHUEUNUFFFFFKUGQCUDVAUADNUHLAUDVBBRUCMOEPSTFFKDNLBCUDVDMOEPSTULURGVCHUEUNUFFFFFKUGQGCUMUADNUHLGAUJBRUCMOEPSTFFKDNLGBCUOMOEPSTULURGUBGUDWLFFFFKUGQCUDVAUADNUHLAUDVBBRUCMOEPSTFFKDNLBCUDVDMOEPSTULFFFFKUGQGCUMUADNUHLGAUJBRUCMOEPSTFFKDNLGBCUOMOEPSTULUDUSGUBGUDVIFFFKUGQCUDVAUADNUHLAUDVBBRUCMOEPSTFFKDNLBCUDVDMOEPSTFFFKUGQGCUMUADNUHLGAUJBRUCMOEPSTFFKDNLGBCUOMOEPSTUDUSGUBGUDVIFFKUGQCUDVAUADNUHLAUDVBBRUCMOEPSFFKUGQGCUMUADNUHLGAUJBRUCMOEPSUDUSGUBGUDVIFKUDUSGUBUPGABCDEUDWMVHGBCDEUDWNVPVQVRWOWP $.
sorting-rearrange-171 $p |- ( \imp ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortKItem ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE5 \kore-sort-SortGeneratedCounterCell ) \top ) ) ) ) ( \exists kore-element-var-Val ( \eq kore-element-var-Val \kore-symbol-Lbl'Stop'Map ) ) ) $= ( in-sort-is-pattern and-is-pattern top-is-pattern typecode-cache-Pattern-97 BASIC-K-sort-1-is-pattern typecode-cache-Pattern-98 BASIC-K-sort-0-is-pattern typecode-cache-Pattern-142 IMP-symbol-112-is-pattern typecode-cache-Pattern-3 eq-is-pattern exists-is-pattern top-intro rule-weakening IMP-sort-14-is-pattern sorting-cache-15 sorting-rearrange-1 kore-functional rule-imp-transitivity ) AIJFCKLFBEMGGHDONPDQAIJFCKLFBEMGGHRSTNHDUADUBUCUD $.
sorting-cache-323 $p |- ( \imp ( \and ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortKItem ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE5 \kore-sort-SortGeneratedCounterCell ) \top ) ) ) ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortMap ) \top ) ) ( \in-sort kore-element-var-VE4 \kore-sort-SortInt ) ) $= ( in-sort-is-pattern and-is-pattern typecode-cache-Pattern-97 BASIC-K-sort-1-is-pattern typecode-cache-Pattern-98 BASIC-K-sort-0-is-pattern typecode-cache-Pattern-142 typecode-cache-Pattern-72 IMP-sort-14-is-pattern top-is-pattern typecode-cache-Pattern-99 IMP-sort-22-is-pattern and-elim-left-sugar sorting-cache-310 rule-imp-transitivity ) AHIFDJKFCELGGBMNFOGGAHIFDJKFCELGGCPQFAHIFDJKFCELGGBMNFOGRACDEST $.
sorting-cache-324 $p |- ( \imp ( \and ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortKItem ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE5 \kore-sort-SortGeneratedCounterCell ) \top ) ) ) ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortMap ) \top ) ) ( \in-sort kore-element-var-VE5 \kore-sort-SortGeneratedCounterCell ) ) $= ( in-sort-is-pattern and-is-pattern typecode-cache-Pattern-97 BASIC-K-sort-1-is-pattern typecode-cache-Pattern-98 BASIC-K-sort-0-is-pattern typecode-cache-Pattern-142 typecode-cache-Pattern-72 IMP-sort-14-is-pattern top-is-pattern typecode-cache-Pattern-141 IMP-sort-10-is-pattern and-elim-left-sugar sorting-cache-314 rule-imp-transitivity ) AHIFDJKFCELGGBMNFOGGAHIFDJKFCELGGEPQFAHIFDJKFCELGGBMNFOGRACDEST $.
sorting-cache-325 $p |- ( \imp ( \and ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortKItem ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE5 \kore-sort-SortGeneratedCounterCell ) \top ) ) ) ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortMap ) \top ) ) ( \and ( \in-sort kore-element-var-VE5 \kore-sort-SortGeneratedCounterCell ) \top ) ) $= ( and-is-pattern in-sort-is-pattern top-is-pattern typecode-cache-Pattern-97 BASIC-K-sort-1-is-pattern typecode-cache-Pattern-98 BASIC-K-sort-0-is-pattern typecode-cache-Pattern-142 typecode-cache-Pattern-72 IMP-sort-14-is-pattern typecode-cache-Pattern-141 IMP-sort-10-is-pattern sorting-cache-324 top-intro rule-weakening rule-and-intro-alt2-sugar ) AIJGDKLGCEMFFBNOGHFFEPQGHABCDERAIJGDKLGCEMFFBNOGHFFHSTUA $.
sorting-cache-326 $p |- ( \imp ( \and ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortKItem ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE5 \kore-sort-SortGeneratedCounterCell ) \top ) ) ) ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortMap ) \top ) ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE5 \kore-sort-SortGeneratedCounterCell ) \top ) ) ) $= ( in-sort-is-pattern and-is-pattern top-is-pattern typecode-cache-Pattern-97 BASIC-K-sort-1-is-pattern typecode-cache-Pattern-98 BASIC-K-sort-0-is-pattern typecode-cache-Pattern-142 typecode-cache-Pattern-72 IMP-sort-14-is-pattern typecode-cache-Pattern-99 IMP-sort-22-is-pattern typecode-cache-Pattern-141 IMP-sort-10-is-pattern sorting-cache-323 sorting-cache-325 rule-and-intro-alt2-sugar ) AIJFDKLFCEMGGBNOFHGGCPQFERSFHGABCDETABCDEUAUB $.
typecode-cache-Pattern-151 $p #Pattern ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' kore-element-var-VE3 ) ( \kore-symbol-Lbl'-LT-'state'-GT-' ( \kore-symbol-Lbl'Unds'Map'Unds' ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem ( \kore-dv \kore-sort-SortId "a" ) ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortKItem kore-element-var-VE4 ) ) kore-element-var-x0 ) ) ) kore-element-var-VE5 ) $= ( IMP-sort-17-is-pattern BASIC-K-sort-1-is-pattern kore-inj-is-pattern typecode-cache-Pattern-98 IMP-symbol-119-is-pattern string-literal-11-is-pattern kore-dv-is-pattern IMP-sort-22-is-pattern typecode-cache-Pattern-99 IMP-symbol-196-is-pattern typecode-cache-Pattern-16 IMP-symbol-176-is-pattern IMP-symbol-120-is-pattern IMP-symbol-114-is-pattern typecode-cache-Pattern-141 IMP-symbol-117-is-pattern ) BHIEFEJKGLFAMGNDOPQRCST $.
substitution-469 $p #Substitution ( \and ( \in-sort \kore-symbol-Lbl'Stop'Map \kore-sort-SortMap ) \top ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortMap ) \top ) \kore-symbol-Lbl'Stop'Map kore-element-var-VE1 $= ( IMP-symbol-112-is-pattern IMP-sort-14-is-pattern element-var-is-var top-is-pattern in-sort-is-pattern typecode-cache-Pattern-72 substitution-disjoint substitution-var-same substitution-in-sort substitution-and ) BBCFEAGCFEADBBCAGCADBADICBADHJEBADHK $.
substitution-470 $p #Substitution kore-element-var-VE5 kore-element-var-VE5 \kore-symbol-Lbl'Stop'Map kore-element-var-VE1 $= ( typecode-cache-Pattern-141 IMP-symbol-112-is-pattern element-var-is-var substitution-disjoint ) BCDAEF $.
substitution-471 $p #Substitution kore-element-var-VE5 kore-element-var-VE5 kore-element-var-x0 kore-element-var-VE1 $= ( typecode-cache-Pattern-141 typecode-cache-Pattern-16 element-var-is-var substitution-disjoint ) BDCEAFG $.
substitution-472 $p #Substitution ( \kore-symbol-Lbl'-LT-'k'-GT-' kore-element-var-VE3 ) ( \kore-symbol-Lbl'-LT-'k'-GT-' kore-element-var-VE3 ) kore-element-var-x0 kore-element-var-VE1 $= ( typecode-cache-Pattern-98 IMP-symbol-119-is-pattern typecode-cache-Pattern-16 element-var-is-var substitution-disjoint ) BDECFAGH $.
substitution-473 $p #Substitution ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' kore-element-var-VE3 ) ( \kore-symbol-Lbl'-LT-'state'-GT-' ( \kore-symbol-Lbl'Unds'Map'Unds' ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem ( \kore-dv \kore-sort-SortId "a" ) ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortKItem kore-element-var-VE4 ) ) kore-element-var-x0 ) ) ) kore-element-var-VE5 ) ) ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' kore-element-var-VE3 ) ( \kore-symbol-Lbl'-LT-'state'-GT-' ( \kore-symbol-Lbl'Unds'Map'Unds' ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem ( \kore-dv \kore-sort-SortId "a" ) ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortKItem kore-element-var-VE4 ) ) kore-element-var-VE1 ) ) ) kore-element-var-VE5 ) ) kore-element-var-x0 kore-element-var-VE1 $= ( IMP-sort-17-is-pattern BASIC-K-sort-1-is-pattern kore-inj-is-pattern typecode-cache-Pattern-16 string-literal-11-is-pattern kore-dv-is-pattern IMP-sort-22-is-pattern typecode-cache-Pattern-99 IMP-symbol-196-is-pattern element-var-is-var IMP-symbol-176-is-pattern IMP-sort-8-is-pattern typecode-cache-Pattern-98 IMP-symbol-119-is-pattern IMP-symbol-120-is-pattern typecode-cache-Pattern-72 kore-top-is-pattern substitution-disjoint IMP-symbol-114-is-pattern typecode-cache-Pattern-141 typecode-cache-Pattern-151 typecode-cache-Pattern-147 substitution-200 substitution-472 substitution-var-same IMP-symbol-176-substitution IMP-symbol-120-substitution IMP-symbol-114-substitution substitution-471 IMP-symbol-117-substitution substitution-kore-and ) QQUBBCDEUFQQUBABCDUGEIAOAEUHQUBEIAOUCAOEICRSFGFJKHLGBMHNEIPTUDDUECRSFGFJKHLGBMHNAUAPTUDDUEAOEICRSFGFJKHLGBMHNEIPTCRSFGFJKHLGBMHNAUAPTACEUIAOEIFGFJKHLGBMHNEIPFGFJKHLGBMHNAUAPAOEIFGFJKHLGBMHNEIFGFJKHLGBMHNAUAFGFJKHLGBMHNEIAOUCEIAOUJUKULUMADEUNUOUP $.
sorting-cache-327 $p |- ( \imp ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortKItem ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE5 \kore-sort-SortGeneratedCounterCell ) \top ) ) ) ) ( \and ( \in-sort kore-element-var-VE5 \kore-sort-SortGeneratedCounterCell ) \top ) ) $= ( in-sort-is-pattern and-is-pattern typecode-cache-Pattern-97 BASIC-K-sort-1-is-pattern typecode-cache-Pattern-98 BASIC-K-sort-0-is-pattern typecode-cache-Pattern-142 top-is-pattern typecode-cache-Pattern-141 IMP-sort-10-is-pattern sorting-cache-314 top-intro rule-weakening rule-and-intro-alt2-sugar ) AGHECIJEBDKFFDMNELABCDOAGHECIJEBDKFFLPQR $.
sorting-cache-328 $p |- ( \imp ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortKItem ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE5 \kore-sort-SortGeneratedCounterCell ) \top ) ) ) ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE5 \kore-sort-SortGeneratedCounterCell ) \top ) ) ) $= ( in-sort-is-pattern and-is-pattern typecode-cache-Pattern-97 BASIC-K-sort-1-is-pattern typecode-cache-Pattern-98 BASIC-K-sort-0-is-pattern typecode-cache-Pattern-142 typecode-cache-Pattern-99 IMP-sort-22-is-pattern typecode-cache-Pattern-141 IMP-sort-10-is-pattern top-is-pattern sorting-cache-310 sorting-cache-327 rule-and-intro-alt2-sugar ) AGHECIJEBDKFFBLMEDNOEPFABCDQABCDRS $.
sorting-rearrange-172 $p |- ( \imp ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortKItem ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE5 \kore-sort-SortGeneratedCounterCell ) \top ) ) ) ) ( \kore-valid \kore-sort-SortGeneratedTopCell ( \kore-rewrites \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp kore-element-var-VE4 ) ) ) kore-element-var-VE3 ) ) ( \kore-symbol-Lbl'-LT-'state'-GT-' ( \kore-symbol-Lbl'Unds'Map'Unds' ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem ( \kore-dv \kore-sort-SortId "a" ) ) kore-element-var-VE2 ) \kore-symbol-Lbl'Stop'Map ) ) ) kore-element-var-VE5 ) ) ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' kore-element-var-VE3 ) ( \kore-symbol-Lbl'-LT-'state'-GT-' ( \kore-symbol-Lbl'Unds'Map'Unds' ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem ( \kore-dv \kore-sort-SortId "a" ) ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortKItem kore-element-var-VE4 ) ) \kore-symbol-Lbl'Stop'Map ) ) ) kore-element-var-VE5 ) ) ) ) ) $= ( in-sort-is-pattern IMP-sort-8-is-pattern IMP-sort-17-is-pattern BASIC-K-sort-1-is-pattern kore-element-var-VE1-elementvariable and-is-pattern typecode-cache-Pattern-97 kore-inj-is-pattern typecode-cache-Pattern-98 IMP-symbol-112-is-pattern string-literal-11-is-pattern kore-dv-is-pattern IMP-symbol-196-is-pattern BASIC-K-sort-0-is-pattern IMP-symbol-176-is-pattern typecode-cache-Pattern-72 kore-top-is-pattern typecode-cache-Pattern-142 IMP-symbol-119-is-pattern IMP-symbol-120-is-pattern element-var-is-var kore-and-is-pattern kore-element-var-x0-elementvariable IMP-symbol-114-is-pattern typecode-cache-Pattern-141 IMP-sort-14-is-pattern typecode-cache-Pattern-146 IMP-symbol-117-is-pattern top-is-pattern typecode-cache-Pattern-16 IMP-sort-22-is-pattern typecode-cache-Pattern-99 kore-rewrites-is-pattern substitution-disjoint rule-imp-transitivity kore-valid-is-pattern typecode-cache-Pattern-147 and-elim-left-sugar rule-and-intro-alt2-sugar imp-reflexivity typecode-cache-Pattern-151 and-elim-right-sugar substitution-var-same IMP-symbol-176-substitution IMP-symbol-120-substitution IMP-symbol-114-substitution IMP-symbol-117-substitution substitution-kore-and substitution-200 kore-element-var-Val-elementvariable substitution-470 substitution-kore-rewrites substitution-kore-valid substitution-imp sorting-cache-328 imp-is-pattern proof-rule-prop-1 IMP-symbol-112-sorting proof-rule-mp top-intro rule-weakening sorting-rearrange-171 sorting-cache-326 sorting-rearrange-170 substitution-469 substitution-197 substitution-471 substitution-473 functional-substitution-alt ) AKHECMREBDUBJJAKHECMREBDUBJJNUJEUMJJFFFFUABCUKUCGHGOPLAKQNSUDUHDUIULUFFFUACMUCGHGOPLUOHBUPLQNSUDUHDUIULUFUQUTAKHECMREBDUBJJAKHECMREBDUBJJNUJEUMJAKHECMREBDUBJJAKHECMREBDUBJAKHECMREBDUBJJAKHEAKHEAKHECMREBDUBJVBAKHEVDUSAKHECMREBDUBJJCMREBDUBAKHECMREBDUBJJCMREBDUBJCMREAKHECMREBDUBJVFCMREBDUBJCMRECMRECMREBDUBVBCMREVDUSUSABCDVSVCVCAKHECMREBDUBJJNUJEUMNUJEAKHECMREBDUBJJNUJEVTNUJEAKHECMREBDUBJJWAWBWCAKHECMREBDUBJJUMWDWEVCVCNFFFFUABCUKUCGHGOPLAKQITSUDUHDUIULUFFFUAIBCDVAUFUQUTFFFFUABCUKUCGHGOPLAKQNSUDUHDUIULUFFFUACMUCGHGOPLUOHBUPLQNSUDUHDUIULUFUQUTFFFFUABCUKUCGHGOPLAKQUGUNSUDUHDUIULUFFFUABCDUGVEUFUQUTAKHECMREBDUBJJITUJEUMJNUJEUMJUGUNUJEUMJVNIUGABCVNDWFAKHECMREBDUBJJITUJEUMJJITUJEAKHECMREBDUBJJJFFFFUABCUKUCGHGOPLAKQITSUDUHDUIULUFFFUAIBCDVAUFUQUTAKHECMREBDUBJJITUJEUMJJITUJEAKHECMREBDUBJJAKHECMREBDUBJJITUJEUMJJITUJEUMJITUJEAKHECMREBDUBJJITUJEUMJVFITUJEUMJITUJEITUJEITUJEUMVBITUJEVDUSUSAKHECMREBDUBJJITUJEUMJJAKHECMREBDUBJAKHECMREBDUBJJITUJEUMJJAKHECMREBDUBJJAKHEAKHECMREBDUBJJITUJEUMJVBAKHECMREBDUBJVBUSAKHECMREBDUBJJITUJEUMJJCMREBDUBAKHECMREBDUBJJITUJEUMJJAKHECMREBDUBJJCMREAKHECMREBDUBJJITUJEUMJVBAKHECMREBDUBJJCMREBDUBJCMREAKHECMREBDUBJVFCMREBDUBJCMRECMRECMREBDUBVBCMREVDUSUSUSAIBCDWGVCVCVCAIBCDWHUSNNUJEUMJFFFFUABCUKUCGHGOPLAKQNSUDUHDUIULUFFFUACMUCGHGOPLUOHBUPLQNSUDUHDUIULUFUQUTITUJEUMJFFFFUABCUKUCGHGOPLAKQITSUDUHDUIULUFFFUAIBCDVAUFUQUTIUEIWIFFFFUABCUKUCGHGOPLAKQNSUDUHDUIULUFFFUACMUCGHGOPLUOHBUPLQNSUDUHDUIULUFUQFFFFUABCUKUCGHGOPLAKQITSUDUHDUIULUFFFUAIBCDVAUFUQNIUEFNIUEURFFFUABCUKUCGHGOPLAKQNSUDUHDUIULUFFFUACMUCGHGOPLUOHBUPLQNSUDUHDUIULUFFFFUABCUKUCGHGOPLAKQITSUDUHDUIULUFFFUAIBCDVAUFNIUEFNIUEURFFUABCUKUCGHGOPLAKQNSUDUHDUIULFFUABCUKUCGHGOPLAKQITSUDUHDUIULNIUEFNIUEURFUANIUEURIUENBCUKUCGHGOPLAKQNSUDUHDUIBCUKUCGHGOPLAKQITSUDUHDUIIUENBCUKUCGHGOPLAKQNSUDBCUKUCGHGOPLAKQITSUDBCUKUCNIUEURIUENGHGOPLAKQNSGHGOPLAKQITSIUENGHGOPLAKQNGHGOPLAKQITGHGOPLAKQNIUEURNIUEVGVHVIVJIDVOVKVLFFUACMUCGHGOPLUOHBUPLQNSUDUHDUIULFFUAIBCDVANIUEFNIUEURFUANIUEURIUENCMUCGHGOPLUOHBUPLQNSUDUHDUICMUCGHGOPLUOHBUPLQITSUDUHDUIIUENCMUCGHGOPLUOHBUPLQNSUDCMUCGHGOPLUOHBUPLQITSUDCMUCNIUEURIUENGHGOPLUOHBUPLQNSGHGOPLUOHBUPLQITSIUENGHGOPLUOHBUPLQNGHGOPLUOHBUPLQITGHGOPLUOHBUPLQNIUEURNIUEVGVHVIVJIDVOVKVLVPVQVRUGUNUGUNUJEUMJFFFFUABCUKUCGHGOPLAKQUGUNSUDUHDUIULUFFFUABCDUGVEUFUQUTITUJEUMJFFFFUABCUKUCGHGOPLAKQITSUDUHDUIULUFFFUAIBCDVAUFUQUTIUEIUGWJFFFFUABCUKUCGHGOPLAKQUGUNSUDUHDUIULUFFFUABCDUGVEUFUQFFFFUABCUKUCGHGOPLAKQITSUDUHDUIULUFFFUAIBCDVAUFUQUGUNIUEIUGVMFFFUABCUKUCGHGOPLAKQUGUNSUDUHDUIULUFFFUABCDUGVEUFFFFUABCUKUCGHGOPLAKQITSUDUHDUIULUFFFUAIBCDVAUFUGUNIUEIUGVMFFUABCUKUCGHGOPLAKQUGUNSUDUHDUIULFFUABCUKUCGHGOPLAKQITSUDUHDUIULUGUNIUEIUGVMFUAUGUNIUEURIUEUGUNBCUKUCGHGOPLAKQUGUNSUDUHDUIBCUKUCGHGOPLAKQITSUDUHDUIIUEUGUNBCUKUCGHGOPLAKQUGUNSUDBCUKUCGHGOPLAKQITSUDBCUKUCUGUNIUEURIUEUGUNGHGOPLAKQUGUNSGHGOPLAKQITSIUEUGUNGHGOPLAKQUGUNGHGOPLAKQITGHGOPLAKQUGUNIUEURUGUNIUEVGVHVIVJIDUGWKVKVLIBCDUGWLVPVQVRWMUS $.
sorting-rearrange-173 $p |- ( \imp ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE5 \kore-sort-SortGeneratedCounterCell ) \top ) ) ) ( \exists kore-element-var-Val ( \eq kore-element-var-Val ( \kore-inj \kore-sort-SortInt \kore-sort-SortKItem ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) $= ( IMP-sort-22-is-pattern top-is-pattern BASIC-K-sort-1-is-pattern typecode-cache-Pattern-98 BASIC-K-sort-0-is-pattern in-sort-is-pattern typecode-cache-Pattern-142 and-is-pattern string-literal-1-is-pattern kore-dv-is-pattern kore-inj-is-pattern typecode-cache-Pattern-3 eq-is-pattern exists-is-pattern top-intro rule-weakening sorting-cache-19 sorting-rearrange-146 kore-functional rule-imp-transitivity ) BHIJADKLFCPEGEMNOQCRBHIJADKLFSTGEGEMNOFCUACUBUCUD $.
sorting-cache-329 $p |- ( \imp ( \and ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE5 \kore-sort-SortGeneratedCounterCell ) \top ) ) ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortKItem ) \top ) ) ( \in-sort kore-element-var-VE4 \kore-sort-SortInt ) ) $= ( in-sort-is-pattern and-is-pattern typecode-cache-Pattern-142 typecode-cache-Pattern-98 BASIC-K-sort-0-is-pattern typecode-cache-Pattern-97 BASIC-K-sort-1-is-pattern top-is-pattern typecode-cache-Pattern-99 IMP-sort-22-is-pattern rule-imp-transitivity and-elim-left-sugar and-elim-right-sugar sorting-cache-309 ) CHIEBDGFAJKELFFCHIEBDGFBMNECHIEBDGFAJKELFPCHIEBDGFBDGBMNECHIEBDGQBDROO $.
sorting-cache-330 $p |- ( \imp ( \and ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE5 \kore-sort-SortGeneratedCounterCell ) \top ) ) ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortKItem ) \top ) ) ( \in-sort kore-element-var-VE5 \kore-sort-SortGeneratedCounterCell ) ) $= ( in-sort-is-pattern and-is-pattern typecode-cache-Pattern-142 typecode-cache-Pattern-98 BASIC-K-sort-0-is-pattern typecode-cache-Pattern-97 BASIC-K-sort-1-is-pattern top-is-pattern typecode-cache-Pattern-141 IMP-sort-10-is-pattern rule-imp-transitivity and-elim-left-sugar and-elim-right-sugar sorting-cache-313 ) CHIEBDGFAJKELFFCHIEBDGFDMNECHIEBDGFAJKELFPCHIEBDGFBDGDMNECHIEBDGQBDROO $.
sorting-cache-331 $p |- ( \imp ( \and ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE5 \kore-sort-SortGeneratedCounterCell ) \top ) ) ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortKItem ) \top ) ) ( \and ( \in-sort kore-element-var-VE5 \kore-sort-SortGeneratedCounterCell ) \top ) ) $= ( and-is-pattern in-sort-is-pattern top-is-pattern typecode-cache-Pattern-98 BASIC-K-sort-0-is-pattern typecode-cache-Pattern-142 typecode-cache-Pattern-97 BASIC-K-sort-1-is-pattern typecode-cache-Pattern-141 IMP-sort-10-is-pattern sorting-cache-330 top-intro rule-weakening rule-and-intro-alt2-sugar ) CHIFBDJEAKLFGEEDMNFGABCDOCHIFBDJEAKLFGEEGPQR $.
sorting-cache-332 $p |- ( \imp ( \and ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE5 \kore-sort-SortGeneratedCounterCell ) \top ) ) ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortKItem ) \top ) ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE5 \kore-sort-SortGeneratedCounterCell ) \top ) ) ) $= ( in-sort-is-pattern and-is-pattern top-is-pattern typecode-cache-Pattern-98 BASIC-K-sort-0-is-pattern typecode-cache-Pattern-142 typecode-cache-Pattern-97 BASIC-K-sort-1-is-pattern typecode-cache-Pattern-99 IMP-sort-22-is-pattern typecode-cache-Pattern-141 IMP-sort-10-is-pattern sorting-cache-329 sorting-cache-331 rule-and-intro-alt2-sugar ) CHIEBDJFAKLEGFFBMNEDOPEGFABCDQABCDRS $.
substitution-474 $p #Substitution ( \in-sort kore-element-var-x0 \kore-sort-SortKItem ) ( \in-sort kore-element-var-VE2 \kore-sort-SortKItem ) kore-element-var-x0 kore-element-var-VE2 $= ( typecode-cache-Pattern-16 BASIC-K-sort-1-is-pattern element-var-is-var typecode-cache-Pattern-97 substitution-var-same substitution-322 substitution-in-sort ) BCBCDAFDAEBCAEGABHI $.
substitution-475 $p #Substitution ( \and ( \in-sort kore-element-var-x0 \kore-sort-SortKItem ) \top ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortKItem ) \top ) kore-element-var-x0 kore-element-var-VE2 $= ( typecode-cache-Pattern-16 BASIC-K-sort-1-is-pattern in-sort-is-pattern top-is-pattern typecode-cache-Pattern-97 element-var-is-var substitution-474 substitution-318 substitution-and ) BCBCDEFAGDEFAHABIABJK $.
substitution-476 $p #Substitution \kore-symbol-Lbl'Stop'Map \kore-symbol-Lbl'Stop'Map kore-element-var-x0 kore-element-var-VE2 $= ( IMP-symbol-112-is-pattern typecode-cache-Pattern-16 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-477 $p #Substitution kore-element-var-VE5 kore-element-var-VE5 kore-element-var-x0 kore-element-var-VE2 $= ( typecode-cache-Pattern-141 typecode-cache-Pattern-16 element-var-is-var substitution-disjoint ) BDCEAFG $.
sorting-cache-333 $p |- ( \imp ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE5 \kore-sort-SortGeneratedCounterCell ) \top ) ) ) ( \and ( \in-sort kore-element-var-VE5 \kore-sort-SortGeneratedCounterCell ) \top ) ) $= ( in-sort-is-pattern typecode-cache-Pattern-142 typecode-cache-Pattern-98 BASIC-K-sort-0-is-pattern and-is-pattern typecode-cache-Pattern-141 IMP-sort-10-is-pattern top-is-pattern and-elim-right-sugar sorting-cache-313 rule-imp-transitivity top-intro rule-weakening rule-and-intro-alt2-sugar ) BFGDACEHCIJDKBFGDACEHACECIJDBFGDACELACMNBFGDACEHKOPQ $.
sorting-cache-334 $p |- ( \imp ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE5 \kore-sort-SortGeneratedCounterCell ) \top ) ) ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE5 \kore-sort-SortGeneratedCounterCell ) \top ) ) ) $= ( in-sort-is-pattern typecode-cache-Pattern-142 typecode-cache-Pattern-98 BASIC-K-sort-0-is-pattern and-is-pattern typecode-cache-Pattern-99 IMP-sort-22-is-pattern typecode-cache-Pattern-141 IMP-sort-10-is-pattern top-is-pattern and-elim-right-sugar sorting-cache-309 rule-imp-transitivity sorting-cache-333 rule-and-intro-alt2-sugar ) BFGDACEHAIJDCKLDMHBFGDACEHACEAIJDBFGDACENACOPABCQR $.
sorting-cache-335 $p |- ( \imp ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE5 \kore-sort-SortGeneratedCounterCell ) \top ) ) ) ( \and ( \kore-is-sort \kore-sort-SortInt ) ( \kore-is-sort \kore-sort-SortKItem ) ) ) $= ( kore-is-sort-is-pattern typecode-cache-Pattern-98 BASIC-K-sort-0-is-pattern in-sort-is-pattern typecode-cache-Pattern-142 and-is-pattern IMP-sort-22-is-pattern BASIC-K-sort-1-is-pattern imp-is-pattern proof-rule-prop-1 proof-rule-mp IMP-sort-22-sort BASIC-K-sort-1-sort rule-and-intro-alt2-sugar ) BEFGACHIJDKDJDBEFGACHIJDLJDBEFGACHIMONKDBEFGACHIKDLKDBEFGACHIMPNQ $.
sorting-cache-336 $p |- ( \imp ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE5 \kore-sort-SortGeneratedCounterCell ) \top ) ) ) ( \in-sort ( \kore-inj \kore-sort-SortInt \kore-sort-SortKItem ( \kore-dv \kore-sort-SortInt "0" ) ) \kore-sort-SortKItem ) ) $= ( IMP-sort-22-is-pattern in-sort-is-pattern string-literal-1-is-pattern and-is-pattern kore-dv-is-pattern BASIC-K-sort-1-is-pattern typecode-cache-Pattern-98 BASIC-K-sort-0-is-pattern typecode-cache-Pattern-142 kore-is-sort-is-pattern kore-inj-is-pattern sorting-cache-335 imp-is-pattern proof-rule-prop-1 kore-dv-sorting proof-rule-mp rule-and-intro-alt2-sugar INJ-symbol-0-sorting rule-imp-transitivity ) BJKEACLGDMIMGDFHDEGDIDFHNIEBJKEACLGDMIMGDFHDEABCODFHDEBJKEACLGDFHDEPDFHDEBJKEACLGQDFRSTDIDFHUAUB $.
sorting-rearrange-174 $p |- ( \imp ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE5 \kore-sort-SortGeneratedCounterCell ) \top ) ) ) ( \kore-valid \kore-sort-SortGeneratedTopCell ( \kore-rewrites \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp kore-element-var-VE4 ) ) ) kore-element-var-VE3 ) ) ( \kore-symbol-Lbl'-LT-'state'-GT-' ( \kore-symbol-Lbl'Unds'Map'Unds' ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem ( \kore-dv \kore-sort-SortId "a" ) ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortKItem ( \kore-dv \kore-sort-SortInt "0" ) ) ) \kore-symbol-Lbl'Stop'Map ) ) ) kore-element-var-VE5 ) ) ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' kore-element-var-VE3 ) ( \kore-symbol-Lbl'-LT-'state'-GT-' ( \kore-symbol-Lbl'Unds'Map'Unds' ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem ( \kore-dv \kore-sort-SortId "a" ) ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortKItem kore-element-var-VE4 ) ) \kore-symbol-Lbl'Stop'Map ) ) ) kore-element-var-VE5 ) ) ) ) ) $= ( BASIC-K-sort-1-is-pattern kore-inj-is-pattern IMP-sort-17-is-pattern IMP-sort-8-is-pattern IMP-sort-22-is-pattern kore-dv-is-pattern kore-element-var-VE2-elementvariable string-literal-11-is-pattern IMP-symbol-112-is-pattern IMP-symbol-196-is-pattern in-sort-is-pattern IMP-symbol-176-is-pattern IMP-symbol-119-is-pattern IMP-symbol-120-is-pattern typecode-cache-Pattern-98 typecode-cache-Pattern-141 and-is-pattern IMP-symbol-114-is-pattern string-literal-1-is-pattern kore-top-is-pattern typecode-cache-Pattern-97 IMP-symbol-117-is-pattern element-var-is-var kore-and-is-pattern kore-element-var-x0-elementvariable typecode-cache-Pattern-146 BASIC-K-sort-0-is-pattern typecode-cache-Pattern-16 top-is-pattern typecode-cache-Pattern-142 typecode-cache-Pattern-99 substitution-disjoint kore-rewrites-is-pattern kore-valid-is-pattern rule-imp-transitivity rule-and-intro-alt2-sugar and-elim-left-sugar substitution-var-same substitution-320 imp-reflexivity kore-element-var-Val-elementvariable IMP-symbol-196-substitution IMP-symbol-176-substitution IMP-symbol-120-substitution IMP-symbol-114-substitution IMP-symbol-117-substitution substitution-kore-and substitution-kore-rewrites substitution-kore-valid substitution-imp sorting-cache-334 sorting-cache-336 top-intro rule-weakening sorting-rearrange-173 and-elim-right-sugar sorting-cache-332 sorting-rearrange-172 substitution-in-sort substitution-and substitution-475 substitution-476 substitution-477 functional-substitution-alt ) BRUJNACUMTBRUJNACUMTHDHUBIEDNULTTGGGGUCABUIPFDFKIEHDHUBIEMLOQUACSUEUGGGUCBRPFDFKIEHDAUNEMLOQUACSUEUGUPUQBRUJNACUMTBRUJNACUMTHDHUBIEDNULTBRUJNACUMTBRUJNACUMBRUJNACUMTBRUJNBRUJNBRUJNACUMUTBRUJNVCURABCVNUSBRUJNACUMTHDHUBIEDNULABCVOBRUJNACUMTULVPVQUSUSHDHUBIEGGGGUCABUIPFDFKIEJUDMLOQUACSUEUGGGUCBRPFDFKIEHDAUNEMLOQUACSUEUGUPUQGGGGUCABUIPFDFKIEHDHUBIEMLOQUACSUEUGGGUCBRPFDFKIEHDAUNEMLOQUACSUEUGUPUQGGGGUCABUIPFDFKIEUHUKMLOQUACSUEUGGGUCBRPFDFKIEHDAUNEMLOQUACSUEUGUPUQBRUJNACUMTJUDDNULTHDHUBIEDNULTUHUKDNULTVDJUHABVDCVRBRUJNACUMTJUDDNULTTJUDDNBRUJNACUMTTGGGGUCABUIPFDFKIEJUDMLOQUACSUEUGGGUCBRPFDFKIEHDAUNEMLOQUACSUEUGUPUQBRUJNACUMTJUDDNULTTJUDDNBRUJNACUMTBRUJNACUMTJUDDNULTTJUDDNULTJUDDNBRUJNACUMTJUDDNULTVSJUDDNULTJUDDNJUDDNJUDDNULUTJUDDNVCURURBRUJNACUMTJUDDNULTTBRUJNACUMBRUJNACUMTJUDDNULTTBRUJNACUMTBRUJNBRUJNACUMTJUDDNULTUTBRUJNACUMUTURJABCVTUSUSJABCWAURHDHUBIEHDHUBIEDNULTGGGGUCABUIPFDFKIEHDHUBIEMLOQUACSUEUGGGUCBRPFDFKIEHDAUNEMLOQUACSUEUGUPUQJUDDNULTGGGGUCABUIPFDFKIEJUDMLOQUACSUEUGGGUCBRPFDFKIEHDAUNEMLOQUACSUEUGUPUQJUFHDHUBIEHDHUBIEDNULJUDDNULJUFHDHUBIEHDHUBIEDJUDDJUFHDHUBIEJUFVADHDHUBIEJUFUOWBULHDHUBIEJUFUOWCGGGGUCABUIPFDFKIEHDHUBIEMLOQUACSUEUGGGUCBRPFDFKIEHDAUNEMLOQUACSUEUGUPGGGGUCABUIPFDFKIEJUDMLOQUACSUEUGGGUCBRPFDFKIEHDAUNEMLOQUACSUEUGUPHDHUBIEJUFGHDHUBIEJUFUOGGGUCABUIPFDFKIEHDHUBIEMLOQUACSUEUGGGUCBRPFDFKIEHDAUNEMLOQUACSUEUGGGGUCABUIPFDFKIEJUDMLOQUACSUEUGGGUCBRPFDFKIEHDAUNEMLOQUACSUEUGHDHUBIEJUFGHDHUBIEJUFUOGGUCABUIPFDFKIEHDHUBIEMLOQUACSUEGGUCABUIPFDFKIEJUDMLOQUACSUEHDHUBIEJUFGHDHUBIEJUFUOGUCHDHUBIEJUFUOJUFHDHUBIEABUIPFDFKIEHDHUBIEMLOQUACSABUIPFDFKIEJUDMLOQUACSJUFHDHUBIEABUIPFDFKIEHDHUBIEMLOQABUIPFDFKIEJUDMLOQABUIPHDHUBIEJUFUOJUFHDHUBIEFDFKIEHDHUBIEMLOFDFKIEJUDMLOJUFHDHUBIEFDFKIEHDHUBIEMLFDFKIEJUDMLJUFHDHUBIEFDFKIEHDHUBIEFDFKIEJUDFDFKIEHDHUBIEJUFUOHDHUBIEJUFVAVELHDHUBIEJUFUOVFVGVHCSHDHUBIEJUFUOVIVJGGUCBRPFDFKIEHDAUNEMLOQUACSUEUGHDHUBIEJUFUOVKVLVMUHUKUHUKDNULTGGGGUCABUIPFDFKIEUHUKMLOQUACSUEUGGGUCBRPFDFKIEHDAUNEMLOQUACSUEUGUPUQJUDDNULTGGGGUCABUIPFDFKIEJUDMLOQUACSUEUGGGUCBRPFDFKIEHDAUNEMLOQUACSUEUGUPUQJUFJUHWDGGGGUCABUIPFDFKIEUHUKMLOQUACSUEUGGGUCBRPFDFKIEHDAUNEMLOQUACSUEUGUPGGGGUCABUIPFDFKIEJUDMLOQUACSUEUGGGUCBRPFDFKIEHDAUNEMLOQUACSUEUGUPUHUKJUFJUHVBGGGUCABUIPFDFKIEUHUKMLOQUACSUEUGGGUCBRPFDFKIEHDAUNEMLOQUACSUEUGGGGUCABUIPFDFKIEJUDMLOQUACSUEUGGGUCBRPFDFKIEHDAUNEMLOQUACSUEUGUHUKJUFJUHVBGGUCABUIPFDFKIEUHUKMLOQUACSUEGGUCABUIPFDFKIEJUDMLOQUACSUEUHUKJUFJUHVBGUCUHUKJUFUOJUFUHUKABUIPFDFKIEUHUKMLOQUACSABUIPFDFKIEJUDMLOQUACSJUFUHUKABUIPFDFKIEUHUKMLOQABUIPFDFKIEJUDMLOQABUIPUHUKJUFUOJUFUHUKFDFKIEUHUKMLOFDFKIEJUDMLOJUFUHUKFDFKIEUHUKMLFDFKIEJUDMLJUFUHUKFDFKIEUHUKFDFKIEJUDFDFKIEUHUKJUFUOUHUKJUFVAVEJUHWEVFVGVHJCUHWFVIVJGGUCBRPFDFKIEHDAUNEMLOQUACSUEUGUHUKJUFUOVKVLVMWGUR $.
sorting-rearrange-175 $p |- ( \imp ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE5 \kore-sort-SortGeneratedCounterCell ) \top ) ) ( \exists kore-element-var-V0 ( \eq kore-element-var-V0 \kore-symbol-dotk ) ) ) $= ( top-is-pattern typecode-cache-Pattern-142 KSEQ-symbol-1-is-pattern typecode-cache-Pattern-12 eq-is-pattern exists-is-pattern top-intro rule-weakening BASIC-K-sort-0-is-pattern sorting-cache-12 sorting-rearrange-81 kore-functional rule-imp-transitivity ) ACEDBGFHBIACEDJKLFDBMBNOP $.
sorting-cache-337 $p |- ( \imp ( \and ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE5 \kore-sort-SortGeneratedCounterCell ) \top ) ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortK ) \top ) ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE5 \kore-sort-SortGeneratedCounterCell ) \top ) ) ) $= ( and-is-pattern in-sort-is-pattern top-is-pattern typecode-cache-Pattern-142 typecode-cache-Pattern-98 BASIC-K-sort-0-is-pattern typecode-cache-Pattern-141 IMP-sort-10-is-pattern typecode-cache-Pattern-99 IMP-sort-22-is-pattern and-elim-left-sugar rule-imp-transitivity rule-and-intro-alt2-sugar sorting-cache-309 sorting-cache-313 top-intro rule-weakening ) ACGBHIEFDDALMECJKEFDACGBHIEFDDACGALMEACGBHIEFDNACQOACGBHIEFDDCJKEFACGBHIEFDDACGCJKEACGBHIEFDNACROACGBHIEFDDFSTPP $.
typecode-cache-Pattern-152 $p #Pattern ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp kore-element-var-VE4 ) ) ) kore-element-var-x0 ) $= ( kore-inj-is-pattern IMP-sort-30-is-pattern BASIC-K-sort-1-is-pattern IMP-sort-17-is-pattern string-literal-11-is-pattern kore-dv-is-pattern IMP-sort-22-is-pattern IMP-sort-13-is-pattern typecode-cache-Pattern-99 IMP-symbol-169-is-pattern typecode-cache-Pattern-16 KSEQ-symbol-0-is-pattern ) DEFGHIJAKCLCBMN $.
substitution-478 $p #Substitution ( \and ( \in-sort \kore-symbol-dotk \kore-sort-SortK ) \top ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortK ) \top ) \kore-symbol-dotk kore-element-var-VE3 $= ( KSEQ-symbol-1-is-pattern BASIC-K-sort-0-is-pattern element-var-is-var top-is-pattern in-sort-is-pattern typecode-cache-Pattern-98 substitution-disjoint substitution-var-same substitution-in-sort substitution-and ) BBCFEAGCFEADBBCAGCADBADICBADHJEBADHK $.
substitution-479 $p #Substitution kore-element-var-VE5 kore-element-var-VE5 \kore-symbol-dotk kore-element-var-VE3 $= ( typecode-cache-Pattern-141 KSEQ-symbol-1-is-pattern element-var-is-var substitution-disjoint ) BCDAEF $.
substitution-480 $p #Substitution \kore-sort-SortK \kore-sort-SortK kore-element-var-x0 kore-element-var-VE3 $= ( BASIC-K-sort-0-is-pattern typecode-cache-Pattern-16 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-481 $p #Substitution ( \in-sort kore-element-var-x0 \kore-sort-SortK ) ( \in-sort kore-element-var-VE3 \kore-sort-SortK ) kore-element-var-x0 kore-element-var-VE3 $= ( typecode-cache-Pattern-16 BASIC-K-sort-0-is-pattern element-var-is-var typecode-cache-Pattern-98 substitution-var-same substitution-480 substitution-in-sort ) BCBCDAFDAEBCAEGABHI $.
substitution-482 $p #Substitution ( \and ( \in-sort kore-element-var-x0 \kore-sort-SortK ) \top ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortK ) \top ) kore-element-var-x0 kore-element-var-VE3 $= ( typecode-cache-Pattern-16 BASIC-K-sort-0-is-pattern in-sort-is-pattern top-is-pattern typecode-cache-Pattern-98 element-var-is-var substitution-481 substitution-348 substitution-and ) BCBCDEFAGDEFAHABIABJK $.
substitution-483 $p #Substitution kore-element-var-VE5 kore-element-var-VE5 kore-element-var-x0 kore-element-var-VE3 $= ( typecode-cache-Pattern-141 typecode-cache-Pattern-16 element-var-is-var substitution-disjoint ) BDCEAFG $.
substitution-484 $p #Substitution ( \kore-symbol-Lbl'-LT-'k'-GT-' kore-element-var-x0 ) ( \kore-symbol-Lbl'-LT-'k'-GT-' kore-element-var-VE3 ) kore-element-var-x0 kore-element-var-VE3 $= ( typecode-cache-Pattern-16 element-var-is-var typecode-cache-Pattern-98 substitution-var-same IMP-symbol-119-substitution ) ADBCBCAEBCADFG $.
sorting-cache-338 $p |- ( \imp ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE5 \kore-sort-SortGeneratedCounterCell ) \top ) ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE5 \kore-sort-SortGeneratedCounterCell ) \top ) ) ) $= ( typecode-cache-Pattern-142 in-sort-is-pattern top-is-pattern typecode-cache-Pattern-141 IMP-sort-10-is-pattern rule-and-intro-alt2-sugar typecode-cache-Pattern-99 IMP-sort-22-is-pattern and-is-pattern sorting-cache-309 sorting-cache-313 top-intro rule-weakening ) ABCAIJDBFGDEKABLABCBFGDEABMABCENOHH $.
sorting-rearrange-176 $p |- ( \imp ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE5 \kore-sort-SortGeneratedCounterCell ) \top ) ) ( \kore-valid \kore-sort-SortGeneratedTopCell ( \kore-rewrites \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp kore-element-var-VE4 ) ) ) \kore-symbol-dotk ) ) ( \kore-symbol-Lbl'-LT-'state'-GT-' ( \kore-symbol-Lbl'Unds'Map'Unds' ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem ( \kore-dv \kore-sort-SortId "a" ) ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortKItem ( \kore-dv \kore-sort-SortInt "0" ) ) ) \kore-symbol-Lbl'Stop'Map ) ) ) kore-element-var-VE5 ) ) ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' \kore-symbol-dotk ) ( \kore-symbol-Lbl'-LT-'state'-GT-' ( \kore-symbol-Lbl'Unds'Map'Unds' ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem ( \kore-dv \kore-sort-SortId "a" ) ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortKItem kore-element-var-VE4 ) ) \kore-symbol-Lbl'Stop'Map ) ) ) kore-element-var-VE5 ) ) ) ) ) $= ( kore-inj-is-pattern BASIC-K-sort-1-is-pattern IMP-sort-17-is-pattern IMP-sort-8-is-pattern kore-dv-is-pattern IMP-sort-22-is-pattern kore-element-var-VE3-elementvariable string-literal-11-is-pattern IMP-symbol-196-is-pattern IMP-symbol-112-is-pattern IMP-symbol-176-is-pattern IMP-symbol-120-is-pattern IMP-symbol-119-is-pattern KSEQ-symbol-1-is-pattern IMP-symbol-114-is-pattern typecode-cache-Pattern-141 kore-top-is-pattern typecode-cache-Pattern-99 kore-element-var-x0-elementvariable IMP-symbol-117-is-pattern element-var-is-var kore-and-is-pattern typecode-cache-Pattern-98 string-literal-1-is-pattern typecode-cache-Pattern-16 BASIC-K-sort-0-is-pattern in-sort-is-pattern and-is-pattern top-is-pattern typecode-cache-Pattern-146 typecode-cache-Pattern-142 IMP-sort-30-is-pattern IMP-sort-13-is-pattern IMP-symbol-169-is-pattern substitution-disjoint kore-rewrites-is-pattern KSEQ-symbol-0-is-pattern kore-valid-is-pattern typecode-cache-Pattern-152 rule-imp-transitivity IMP-symbol-114-substitution IMP-symbol-117-substitution substitution-kore-and substitution-350 rule-and-intro-alt2-sugar substitution-var-same IMP-symbol-119-substitution kore-element-var-V0-elementvariable KSEQ-symbol-0-substitution substitution-479 substitution-kore-rewrites substitution-kore-valid substitution-imp substitution-483 sorting-cache-338 imp-is-pattern proof-rule-prop-1 KSEQ-symbol-1-sorting proof-rule-mp top-intro rule-weakening sorting-rearrange-175 and-elim-right-sugar and-elim-left-sugar imp-reflexivity sorting-cache-337 sorting-rearrange-174 substitution-478 substitution-482 substitution-484 functional-substitution-alt ) ABUMABUMPUHUIUKUJUJFFFFSUNDEJGHUOATCUPCPUSOEDEJGCHDHUFGCKLMNQBRUBUDFFSPOEDEJGCHDATCKLMNQBRUBUDURUTABUMABUMPUHUIUKUJABVQABUMPUHUIUKPUHUIABUMPUHUIVRPUHUIABUMVSVTWAABUMUKWBWCVGVGPFFFFSAIULOEDEJGCHDHUFGCKLMNQBRUBUDFFSIUEOEDEJGCHDATCKLMNQBRUBUDURUTFFFFSUNDEJGHUOATCUPCPUSOEDEJGCHDHUFGCKLMNQBRUBUDFFSPOEDEJGCHDATCKLMNQBRUBUDURUTFFFFSAUAVAOEDEJGCHDHUFGCKLMNQBRUBUDFFSUAUGOEDEJGCHDATCKLMNQBRUBUDURUTABUMIUEUHUIUKUJPUHUIUKUJUAUGUHUIUKUJVJIUAAVJBWDABUMIUEUHUIUKUJUJIUEUHUIABUMUJFFFFSAIULOEDEJGCHDHUFGCKLMNQBRUBUDFFSIUEOEDEJGCHDATCKLMNQBRUBUDURUTABUMIUEUHUIUKUJUJIUEUHUIABUMABUMIUEUHUIUKUJUJIUEUHUIUKUJIUEUHUIABUMIUEUHUIUKUJWEIUEUHUIUKUJIUEUHUIIUEUHUIIUEUHUIUKWFIUEUHUIWGVBVBAIBWHVGAIBWIVBPPUHUIUKUJFFFFSUNDEJGHUOATCUPCPUSOEDEJGCHDHUFGCKLMNQBRUBUDFFSPOEDEJGCHDATCKLMNQBRUBUDURUTIUEUHUIUKUJFFFFSAIULOEDEJGCHDHUFGCKLMNQBRUBUDFFSIUEOEDEJGCHDATCKLMNQBRUBUDURUTIUCIWJFFFFSUNDEJGHUOATCUPCPUSOEDEJGCHDHUFGCKLMNQBRUBUDFFSPOEDEJGCHDATCKLMNQBRUBUDURFFFFSAIULOEDEJGCHDHUFGCKLMNQBRUBUDFFSIUEOEDEJGCHDATCKLMNQBRUBUDURPIUCFPIUCUQFFFSUNDEJGHUOATCUPCPUSOEDEJGCHDHUFGCKLMNQBRUBUDFFSPOEDEJGCHDATCKLMNQBRUBUDFFFSAIULOEDEJGCHDHUFGCKLMNQBRUBUDFFSIUEOEDEJGCHDATCKLMNQBRUBUDPIUCFPIUCUQFFSUNDEJGHUOATCUPCPUSOEDEJGCHDHUFGCKLMNQBRUBFFSAIULOEDEJGCHDHUFGCKLMNQBRUBPIUCFPIUCUQFSPIUCUQIUCPUNDEJGHUOATCUPCPUSOEDEJGCHDHUFGCKLMNQBRAIULOEDEJGCHDHUFGCKLMNQBRIUCPUNDEJGHUOATCUPCPUSOEDEJGCHDHUFGCKLMNAIULOEDEJGCHDHUFGCKLMNIUCPUNDEJGHUOATCUPCPUSAIULIUCPUNDEJGHUOATCUPCPUNDEJGHUOATCUPCIUEUNDEJGHUOATCUPCPIUCUQPIUCVHVKVIEDEJGCHDHUFGCKLMNPIUCUQVCIBVLVDVEFFSPOEDEJGCHDATCKLMNQBRUBFFSIUEOEDEJGCHDATCKLMNQBRUBPIUCFPIUCUQFSPIUCUQIUCPPOEDEJGCHDATCKLMNQBRIUEOEDEJGCHDATCKLMNQBRIUCPPOEDEJGCHDATCKLMNIUEOEDEJGCHDATCKLMNIUCPPIUEPIUCVHVIEDEJGCHDATCKLMNPIUCUQVCIBVLVDVEVMVNVOUAUGUAUGUHUIUKUJFFFFSAUAVAOEDEJGCHDHUFGCKLMNQBRUBUDFFSUAUGOEDEJGCHDATCKLMNQBRUBUDURUTIUEUHUIUKUJFFFFSAIULOEDEJGCHDHUFGCKLMNQBRUBUDFFSIUEOEDEJGCHDATCKLMNQBRUBUDURUTIUCIUAWKFFFFSAUAVAOEDEJGCHDHUFGCKLMNQBRUBUDFFSUAUGOEDEJGCHDATCKLMNQBRUBUDURFFFFSAIULOEDEJGCHDHUFGCKLMNQBRUBUDFFSIUEOEDEJGCHDATCKLMNQBRUBUDURUAUGIUCIUAVFFFFSAUAVAOEDEJGCHDHUFGCKLMNQBRUBUDFFSUAUGOEDEJGCHDATCKLMNQBRUBUDFFFSAIULOEDEJGCHDHUFGCKLMNQBRUBUDFFSIUEOEDEJGCHDATCKLMNQBRUBUDUAUGIUCIUAVFFFSAUAVAOEDEJGCHDHUFGCKLMNQBRUBFFSAIULOEDEJGCHDHUFGCKLMNQBRUBUAUGIUCIUAVFFSUAUGIUCUQIUCUAUGAUAVAOEDEJGCHDHUFGCKLMNQBRAIULOEDEJGCHDHUFGCKLMNQBRIUCUAUGAUAVAOEDEJGCHDHUFGCKLMNAIULOEDEJGCHDHUFGCKLMNIUCUAUGAUAVAAIULIUCUAUGUNDEJGHUOATCUPCUAUGUNDEJGHUOATCUPCIUEUNDEJGHUOATCUPCUAUGIUCUQUAUGIUCVHVKVIEDEJGCHDHUFGCKLMNUAUGIUCUQVCIBUAVPVDVEFFSUAUGOEDEJGCHDATCKLMNQBRUBFFSIUEOEDEJGCHDATCKLMNQBRUBUAUGIUCIUAVFFSUAUGIUCUQIUCUAUGUAUGOEDEJGCHDATCKLMNQBRIUEOEDEJGCHDATCKLMNQBRIUCUAUGUAUGOEDEJGCHDATCKLMNIUEOEDEJGCHDATCKLMNIUAWLEDEJGCHDATCKLMNUAUGIUCUQVCIBUAVPVDVEVMVNVOWMVB $.
sorting-rearrange-177 $p |- ( \imp ( \and ( \in-sort kore-element-var-VE5 \kore-sort-SortGeneratedCounterCell ) \top ) ( \exists kore-element-var-x1 ( \eq kore-element-var-x1 ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) $= ( top-is-pattern IMP-sort-22-is-pattern typecode-cache-Pattern-141 IMP-sort-10-is-pattern in-sort-is-pattern and-is-pattern string-literal-10-is-pattern kore-dv-is-pattern typecode-cache-Pattern-19 eq-is-pattern exists-is-pattern top-intro rule-weakening sorting-cache-7 sorting-rearrange-33 kore-functional rule-imp-transitivity ) BEFGCHCAKDIJLAMBEFGCHCNODDIJCAPAQRS $.
sorting-cache-339 $p |- ( \imp ( \and ( \and ( \in-sort kore-element-var-VE5 \kore-sort-SortGeneratedCounterCell ) \top ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortInt ) \top ) ) ( \in-sort kore-element-var-VE4 \kore-sort-SortInt ) ) $= ( in-sort-is-pattern typecode-cache-Pattern-99 IMP-sort-22-is-pattern top-is-pattern and-is-pattern typecode-cache-Pattern-141 IMP-sort-10-is-pattern rule-imp-transitivity and-elim-right-sugar and-elim-left-sugar imp-reflexivity ) BHICFGADECFGGADECFGADECBHICFGADECFGKADECFGADECADECADECFLADECMJJ $.
sorting-cache-340 $p |- ( \imp ( \and ( \and ( \in-sort kore-element-var-VE5 \kore-sort-SortGeneratedCounterCell ) \top ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortInt ) \top ) ) ( \in-sort kore-element-var-VE5 \kore-sort-SortGeneratedCounterCell ) ) $= ( in-sort-is-pattern typecode-cache-Pattern-141 IMP-sort-10-is-pattern top-is-pattern and-is-pattern typecode-cache-Pattern-99 IMP-sort-22-is-pattern and-elim-left-sugar rule-imp-transitivity imp-reflexivity ) BDECFGAHICFGGBDECFGBDECBDECFGAHICFGJBDECFGBDECBDECBDECFJBDECLKK $.
substitution-485 $p #Substitution kore-element-var-VE5 kore-element-var-VE5 ( \kore-dv \kore-sort-SortInt "10" ) kore-element-var-VE4 $= ( typecode-cache-Pattern-141 IMP-sort-22-is-pattern string-literal-10-is-pattern kore-dv-is-pattern element-var-is-var substitution-disjoint ) BCDEFAGH $.
substitution-486 $p #Substitution \kore-sort-SortInt \kore-sort-SortInt kore-element-var-x0 kore-element-var-VE4 $= ( IMP-sort-22-is-pattern typecode-cache-Pattern-16 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-487 $p #Substitution ( \in-sort kore-element-var-x0 \kore-sort-SortInt ) ( \in-sort kore-element-var-VE4 \kore-sort-SortInt ) kore-element-var-x0 kore-element-var-VE4 $= ( typecode-cache-Pattern-16 IMP-sort-22-is-pattern element-var-is-var typecode-cache-Pattern-99 substitution-var-same substitution-486 substitution-in-sort ) BCBCDAFDAEBCAEGABHI $.
substitution-488 $p #Substitution ( \and ( \in-sort kore-element-var-x0 \kore-sort-SortInt ) \top ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortInt ) \top ) kore-element-var-x0 kore-element-var-VE4 $= ( typecode-cache-Pattern-16 IMP-sort-22-is-pattern in-sort-is-pattern top-is-pattern typecode-cache-Pattern-99 element-var-is-var substitution-487 substitution-354 substitution-and ) BCBCDEFAGDEFAHABIABJK $.
substitution-489 $p #Substitution \kore-sort-SortStmt \kore-sort-SortStmt kore-element-var-x0 kore-element-var-VE4 $= ( IMP-sort-30-is-pattern typecode-cache-Pattern-16 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-490 $p #Substitution \kore-sort-SortKItem \kore-sort-SortKItem kore-element-var-x0 kore-element-var-VE4 $= ( BASIC-K-sort-1-is-pattern typecode-cache-Pattern-16 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-491 $p #Substitution \kore-sort-SortAExp \kore-sort-SortAExp kore-element-var-x0 kore-element-var-VE4 $= ( IMP-sort-13-is-pattern typecode-cache-Pattern-16 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-492 $p #Substitution ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp kore-element-var-x0 ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp kore-element-var-VE4 ) kore-element-var-x0 kore-element-var-VE4 $= ( typecode-cache-Pattern-16 IMP-sort-22-is-pattern IMP-sort-13-is-pattern element-var-is-var typecode-cache-Pattern-99 substitution-486 substitution-491 substitution-var-same substitution-kore-inj ) DEBCDEAGBCAFABHABIBCAFJK $.
substitution-493 $p #Substitution ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp kore-element-var-x0 ) ) ) ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp kore-element-var-VE4 ) ) ) kore-element-var-x0 kore-element-var-VE4 $= ( IMP-sort-17-is-pattern string-literal-11-is-pattern kore-dv-is-pattern typecode-cache-Pattern-16 IMP-sort-22-is-pattern IMP-sort-13-is-pattern kore-inj-is-pattern element-var-is-var IMP-sort-30-is-pattern BASIC-K-sort-1-is-pattern IMP-symbol-169-is-pattern typecode-cache-Pattern-99 substitution-489 substitution-490 substitution-disjoint substitution-492 IMP-symbol-169-substitution substitution-kore-inj ) KLCDEGHBFIMKLCDEGHANIMBFAJABOABPAJBFCDEGHBFICDEGHANICDEBFAJQABRST $.
substitution-494 $p #Substitution \kore-symbol-dotk \kore-symbol-dotk kore-element-var-x0 kore-element-var-VE4 $= ( KSEQ-symbol-1-is-pattern typecode-cache-Pattern-16 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-495 $p #Substitution kore-element-var-VE5 kore-element-var-VE5 kore-element-var-x0 kore-element-var-VE4 $= ( typecode-cache-Pattern-141 typecode-cache-Pattern-16 element-var-is-var substitution-disjoint ) BDCEAFG $.
substitution-496 $p #Substitution ( \kore-inj \kore-sort-SortInt \kore-sort-SortKItem kore-element-var-x0 ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortKItem kore-element-var-VE4 ) kore-element-var-x0 kore-element-var-VE4 $= ( typecode-cache-Pattern-16 IMP-sort-22-is-pattern BASIC-K-sort-1-is-pattern element-var-is-var typecode-cache-Pattern-99 substitution-486 substitution-490 substitution-var-same substitution-kore-inj ) DEBCDEAGBCAFABHABIBCAFJK $.
substitution-497 $p #Substitution ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' \kore-symbol-dotk ) ( \kore-symbol-Lbl'-LT-'state'-GT-' ( \kore-symbol-Lbl'Unds'Map'Unds' ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem ( \kore-dv \kore-sort-SortId "a" ) ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortKItem kore-element-var-x0 ) ) \kore-symbol-Lbl'Stop'Map ) ) ) kore-element-var-VE5 ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' \kore-symbol-dotk ) ( \kore-symbol-Lbl'-LT-'state'-GT-' ( \kore-symbol-Lbl'Unds'Map'Unds' ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem ( \kore-dv \kore-sort-SortId "a" ) ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortKItem kore-element-var-VE4 ) ) \kore-symbol-Lbl'Stop'Map ) ) ) kore-element-var-VE5 ) kore-element-var-x0 kore-element-var-VE4 $= ( IMP-sort-17-is-pattern BASIC-K-sort-1-is-pattern kore-inj-is-pattern typecode-cache-Pattern-16 string-literal-11-is-pattern kore-dv-is-pattern IMP-sort-22-is-pattern IMP-symbol-196-is-pattern IMP-symbol-112-is-pattern element-var-is-var IMP-symbol-176-is-pattern KSEQ-symbol-1-is-pattern IMP-symbol-119-is-pattern typecode-cache-Pattern-99 IMP-symbol-120-is-pattern IMP-symbol-114-is-pattern typecode-cache-Pattern-141 substitution-disjoint substitution-496 IMP-symbol-196-substitution substitution-357 IMP-symbol-176-substitution IMP-symbol-120-substitution IMP-symbol-114-substitution substitution-495 IMP-symbol-117-substitution ) AMCGOPDEDHIFJECGFKLNRSBTOPDEDHIFJEAQFKLNRSBTAMCGOPDEDHIFJECGFKLNROPDEDHIFJEAQFKLNROPCGAMUAAMCGDEDHIFJECGFKLNDEDHIFJEAQFKLNAMCGDEDHIFJECGFKLDEDHIFJEAQFKLAMCGDEDHIFJECGFDEDHIFJEAQFDEDHIFCGAMUAACUBUCACUDUEUFUGABCUHUI $.
sorting-cache-341 $p |- ( \imp ( \and ( \in-sort kore-element-var-VE5 \kore-sort-SortGeneratedCounterCell ) \top ) ( \in-sort ( \kore-dv \kore-sort-SortInt "10" ) \kore-sort-SortInt ) ) $= ( IMP-sort-22-is-pattern in-sort-is-pattern string-literal-10-is-pattern kore-dv-is-pattern typecode-cache-Pattern-141 IMP-sort-10-is-pattern top-is-pattern and-is-pattern imp-is-pattern proof-rule-prop-1 kore-dv-sorting proof-rule-mp ) BDEBCAFGCHIBDEBCJBDEBCAFGCHIKBDLM $.
sorting-cache-342 $p |- ( \imp ( \and ( \in-sort kore-element-var-VE5 \kore-sort-SortGeneratedCounterCell ) \top ) ( \and ( \in-sort ( \kore-dv \kore-sort-SortInt "10" ) \kore-sort-SortInt ) \top ) ) $= ( top-is-pattern in-sort-is-pattern typecode-cache-Pattern-141 IMP-sort-10-is-pattern and-is-pattern IMP-sort-22-is-pattern string-literal-10-is-pattern kore-dv-is-pattern sorting-cache-341 top-intro rule-weakening rule-and-intro-alt2-sugar ) ADECBFGHIGCBAJADECBFBKLM $.
sorting-rearrange-178 $p |- ( \imp ( \and ( \in-sort kore-element-var-VE5 \kore-sort-SortGeneratedCounterCell ) \top ) ( \kore-valid \kore-sort-SortGeneratedTopCell ( \kore-rewrites \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) \kore-symbol-dotk ) ) ( \kore-symbol-Lbl'-LT-'state'-GT-' ( \kore-symbol-Lbl'Unds'Map'Unds' ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem ( \kore-dv \kore-sort-SortId "a" ) ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortKItem ( \kore-dv \kore-sort-SortInt "0" ) ) ) \kore-symbol-Lbl'Stop'Map ) ) ) kore-element-var-VE5 ) ) ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' \kore-symbol-dotk ) ( \kore-symbol-Lbl'-LT-'state'-GT-' ( \kore-symbol-Lbl'Unds'Map'Unds' ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem ( \kore-dv \kore-sort-SortId "a" ) ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortKItem ( \kore-dv \kore-sort-SortInt "10" ) ) ) \kore-symbol-Lbl'Stop'Map ) ) ) kore-element-var-VE5 ) ) ) ) ) $= ( IMP-sort-22-is-pattern kore-dv-is-pattern kore-inj-is-pattern BASIC-K-sort-1-is-pattern IMP-sort-17-is-pattern IMP-sort-8-is-pattern kore-element-var-VE4-elementvariable string-literal-11-is-pattern string-literal-10-is-pattern typecode-cache-Pattern-141 KSEQ-symbol-1-is-pattern IMP-symbol-112-is-pattern IMP-symbol-196-is-pattern IMP-symbol-176-is-pattern IMP-symbol-120-is-pattern IMP-symbol-119-is-pattern element-var-is-var IMP-symbol-114-is-pattern typecode-cache-Pattern-99 kore-top-is-pattern IMP-sort-13-is-pattern IMP-symbol-117-is-pattern IMP-sort-30-is-pattern IMP-symbol-169-is-pattern kore-element-var-x0-elementvariable in-sort-is-pattern top-is-pattern kore-and-is-pattern KSEQ-symbol-0-is-pattern and-is-pattern string-literal-1-is-pattern typecode-cache-Pattern-16 substitution-disjoint IMP-sort-10-is-pattern kore-rewrites-is-pattern kore-valid-is-pattern rule-and-intro-alt2-sugar substitution-kore-and substitution-356 rule-imp-transitivity substitution-var-same substitution-kore-inj IMP-symbol-114-substitution IMP-symbol-117-substitution top-intro rule-weakening kore-element-var-x1-elementvariable KSEQ-symbol-0-substitution IMP-symbol-119-substitution substitution-485 substitution-kore-rewrites substitution-kore-valid substitution-imp and-elim-left-sugar imp-reflexivity sorting-cache-342 sorting-rearrange-177 typecode-cache-Pattern-142 sorting-cache-339 sorting-cache-340 sorting-rearrange-176 substitution-in-sort substitution-and IMP-symbol-169-substitution IMP-symbol-196-substitution IMP-symbol-176-substitution IMP-symbol-120-substitution substitution-488 substitution-493 substitution-494 substitution-495 substitution-497 functional-substitution-alt ) AKUOUGUHUKAKUOUGUHUKBJCBUGUHUKUKGGGGUAUDEFICBUBBJCDUEDLUJQFEFICDBEBULCDNMOPSAKUCUIGGUALQFEFICDBEBJCDNMOPSAKUCUIUPUQAKUOUGUHUKAKUOUGUHUKBJCBUGUHUKAKUOUGUHUKAKUOUGUHAKUOUGUHUKAKUOUGAKUOUGAKUOUGUHVOAKUOUGVPVAAKUOUGUHUKUHVFVGURAVQURBJCGGGGUAUDEFICBUBHTDUEDLUJQFEFICDBEBULCDNMOPSAKUCUIGGUALQFEFICDBEHTDNMOPSAKUCUIUPUQGGGGUAUDEFICBUBBJCDUEDLUJQFEFICDBEBULCDNMOPSAKUCUIGGUALQFEFICDBEBJCDNMOPSAKUCUIUPUQGGGGUAUDEFICBUBUFUMDUEDLUJQFEFICDBEBULCDNMOPSAKUCUIGGUALQFEFICDBEUFUMDNMOPSAKUCUIUPUQAKUOUGUHUKHTBUGUHUKBJCBUGUHUKUFUMBUGUHUKVHHUFVHAVRAKUOUGUHUKHTBUGUHUKUKHAVSGGGGUAUDEFICBUBHTDUEDLUJQFEFICDBEBULCDNMOPSAKUCUIGGUALQFEFICDBEHTDNMOPSAKUCUIUPUQAKUOUGUHUKHTBUGUHUKUKHTBUGAKUOUGUHUKHAVTAKUOUGUHUKHTBUGUHUKUKAKUOUGUHHAWAAKUOUGUHUKHTBUGUHUKUKUHVFVGURURHAWBVABJCBJCBUGUHUKGGGGUAUDEFICBUBBJCDUEDLUJQFEFICDBEBULCDNMOPSAKUCUIGGUALQFEFICDBEBJCDNMOPSAKUCUIUPUQHTBUGUHUKGGGGUAUDEFICBUBHTDUEDLUJQFEFICDBEBULCDNMOPSAKUCUIGGUALQFEFICDBEHTDNMOPSAKUCUIUPUQHRBJCBJCBUGUHHTBUGUHHRBJCBJCBHTBHRBJCHRVBBBJCHRUNWCUHBJCHRUNWDGGGGUAUDEFICBUBBJCDUEDLUJQFEFICDBEBULCDNMOPSAKUCUIGGUALQFEFICDBEBJCDNMOPSAKUCUIUPGGGGUAUDEFICBUBHTDUEDLUJQFEFICDBEBULCDNMOPSAKUCUIGGUALQFEFICDBEHTDNMOPSAKUCUIUPBJCHRGBJCHRUNGGGUAUDEFICBUBBJCDUEDLUJQFEFICDBEBULCDNMOPSAKUCUIGGUALQFEFICDBEBJCDNMOPSAKUCUIGGGUAUDEFICBUBHTDUEDLUJQFEFICDBEBULCDNMOPSAKUCUIGGUALQFEFICDBEHTDNMOPSAKUCUIBJCHRGBJCHRUNGGUAUDEFICBUBBJCDUEDLUJQFEFICDBEBULCDNMOPSAKUCGGUAUDEFICBUBHTDUEDLUJQFEFICDBEBULCDNMOPSAKUCBJCHRGBJCHRUNGUABJCHRUNHRBJCUDEFICBUBBJCDUEDLUJQFEFICDBEBULCDNMOPSAKUDEFICBUBHTDUEDLUJQFEFICDBEBULCDNMOPSAKHRBJCUDEFICBUBBJCDUEDLUJQFEFICDBEBULCDNMOPUDEFICBUBHTDUEDLUJQFEFICDBEBULCDNMOPHRBJCUDEFICBUBBJCDUEDLUJUDEFICBUBHTDUEDLUJHRBJCUDEFICBUBBJCDUEDLUDEFICBUBHTDUEDLUDEFICBUBBJCDUEUDEFICBUBHTDUEBJCHRUDBJCHRUNEBJCHRUNHRBJCFICBUBBJCDFICBUBHTDFICBJCHRUNBUBBJCBUBHTBJCHRBBJCHRUNUBBJCHRUNBJCHRVBVCWEVCLBJCHRUNVIVJFEFICDBEBULCDNMOPBJCHRUNVDHAVKVEUSGGUALQFEFICDBEBJCDNMOPSAKUCGGUALQFEFICDBEHTDNMOPSAKUCBJCHRGBJCHRUNGUABJCHRUNHRBJCLQFEFICDBEBJCDNMOPSAKLQFEFICDBEHTDNMOPSAKHRBJCLQFEFICDBEBJCDNMOPLQFEFICDBEHTDNMOPLQBJCHRUNHRBJCFEFICDBEBJCDNMOFEFICDBEHTDNMOHRBJCFEFICDBEBJCDNMFEFICDBEHTDNMHRBJCFEFICDBEBJCDFEFICDBEHTDFEFICDBJCHRUNBEBJCBEHTBJCHRBBJCHRUNEBJCHRUNBJCHRVBVCWFMBJCHRUNWGWHVDHAVKVEUSVLVMVNUFUMUFUMBUGUHUKGGGGUAUDEFICBUBUFUMDUEDLUJQFEFICDBEBULCDNMOPSAKUCUIGGUALQFEFICDBEUFUMDNMOPSAKUCUIUPUQHTBUGUHUKGGGGUAUDEFICBUBHTDUEDLUJQFEFICDBEBULCDNMOPSAKUCUIGGUALQFEFICDBEHTDNMOPSAKUCUIUPUQHRHUFWIGGGGUAUDEFICBUBUFUMDUEDLUJQFEFICDBEBULCDNMOPSAKUCUIGGUALQFEFICDBEUFUMDNMOPSAKUCUIUPGGGGUAUDEFICBUBHTDUEDLUJQFEFICDBEBULCDNMOPSAKUCUIGGUALQFEFICDBEHTDNMOPSAKUCUIUPUFUMHRHUFUTGGGUAUDEFICBUBUFUMDUEDLUJQFEFICDBEBULCDNMOPSAKUCUIGGUALQFEFICDBEUFUMDNMOPSAKUCUIGGGUAUDEFICBUBHTDUEDLUJQFEFICDBEBULCDNMOPSAKUCUIGGUALQFEFICDBEHTDNMOPSAKUCUIUFUMHRHUFUTGGUAUDEFICBUBUFUMDUEDLUJQFEFICDBEBULCDNMOPSAKUCGGUAUDEFICBUBHTDUEDLUJQFEFICDBEBULCDNMOPSAKUCUFUMHRHUFUTGUAUFUMHRUNHRUFUMUDEFICBUBUFUMDUEDLUJQFEFICDBEBULCDNMOPSAKUDEFICBUBHTDUEDLUJQFEFICDBEBULCDNMOPSAKHRUFUMUDEFICBUBUFUMDUEDLUJQFEFICDBEBULCDNMOPUDEFICBUBHTDUEDLUJQFEFICDBEBULCDNMOPHRUFUMUDEFICBUBUFUMDUEDLUJUDEFICBUBHTDUEDLUJHRUFUMUDEFICBUBUFUMDUEDLUDEFICBUBHTDUEDLHUFWJHUFWKVIVJFEFICDBEBULCDNMOPUFUMHRUNVDHAUFWLVEUSGGUALQFEFICDBEUFUMDNMOPSAKUCGGUALQFEFICDBEHTDNMOPSAKUCUFUMHRHUFUTGUAUFUMHRUNHAUFWMUSVLVMVNWNVA $.
sorting-cache-343 $p |- ( \imp ( \and \top ( \and ( \in-sort kore-element-var-VE5 \kore-sort-SortGeneratedCounterCell ) \top ) ) ( \and ( \in-sort kore-element-var-VE5 \kore-sort-SortGeneratedCounterCell ) \top ) ) $= ( top-is-pattern typecode-cache-Pattern-141 IMP-sort-10-is-pattern in-sort-is-pattern and-is-pattern rule-imp-transitivity and-elim-right-sugar and-elim-left-sugar imp-reflexivity top-intro rule-weakening rule-and-intro-alt2-sugar ) BACDEBFFACDEBBACDEBFFACDEBFACDEBACDEBFHACDEBFACDEACDEACDEBIACDEJGGBACDEBFFBKLM $.
substitution-498 $p #Substitution \kore-sort-SortGeneratedCounterCell \kore-sort-SortGeneratedCounterCell kore-element-var-x0 kore-element-var-VE5 $= ( IMP-sort-10-is-pattern typecode-cache-Pattern-16 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-499 $p #Substitution ( \in-sort kore-element-var-x0 \kore-sort-SortGeneratedCounterCell ) ( \in-sort kore-element-var-VE5 \kore-sort-SortGeneratedCounterCell ) kore-element-var-x0 kore-element-var-VE5 $= ( typecode-cache-Pattern-16 IMP-sort-10-is-pattern element-var-is-var typecode-cache-Pattern-141 substitution-var-same substitution-498 substitution-in-sort ) BCBCDAFDAEBCAEGABHI $.
substitution-500 $p #Substitution \top \top kore-element-var-x0 kore-element-var-VE5 $= ( top-is-pattern typecode-cache-Pattern-16 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-501 $p #Substitution ( \and ( \in-sort kore-element-var-x0 \kore-sort-SortGeneratedCounterCell ) \top ) ( \and ( \in-sort kore-element-var-VE5 \kore-sort-SortGeneratedCounterCell ) \top ) kore-element-var-x0 kore-element-var-VE5 $= ( typecode-cache-Pattern-16 IMP-sort-10-is-pattern in-sort-is-pattern top-is-pattern typecode-cache-Pattern-141 element-var-is-var substitution-499 substitution-500 substitution-and ) BCBCDEFAGDEFAHABIABJK $.
substitution-502 $p #Substitution \kore-sort-SortGeneratedTopCell \kore-sort-SortGeneratedTopCell kore-element-var-x0 kore-element-var-VE5 $= ( IMP-sort-8-is-pattern typecode-cache-Pattern-16 element-var-is-var substitution-disjoint ) CBDAEF $.
sorting-rearrange-179 $p |- ( \imp \top ( \kore-valid \kore-sort-SortGeneratedTopCell ( \kore-rewrites \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) \kore-symbol-dotk ) ) ( \kore-symbol-Lbl'-LT-'state'-GT-' ( \kore-symbol-Lbl'Unds'Map'Unds' ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem ( \kore-dv \kore-sort-SortId "a" ) ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortKItem ( \kore-dv \kore-sort-SortInt "0" ) ) ) \kore-symbol-Lbl'Stop'Map ) ) ) ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' \kore-symbol-dotk ) ( \kore-symbol-Lbl'-LT-'state'-GT-' ( \kore-symbol-Lbl'Unds'Map'Unds' ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem ( \kore-dv \kore-sort-SortId "a" ) ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortKItem ( \kore-dv \kore-sort-SortInt "10" ) ) ) \kore-symbol-Lbl'Stop'Map ) ) ) ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) ) $= ( IMP-sort-22-is-pattern kore-dv-is-pattern kore-inj-is-pattern BASIC-K-sort-1-is-pattern IMP-sort-17-is-pattern IMP-sort-8-is-pattern string-literal-11-is-pattern kore-element-var-VE5-elementvariable string-literal-1-is-pattern string-literal-10-is-pattern KSEQ-symbol-1-is-pattern IMP-symbol-119-is-pattern IMP-symbol-196-is-pattern IMP-symbol-112-is-pattern IMP-symbol-176-is-pattern IMP-symbol-120-is-pattern IMP-symbol-114-is-pattern kore-top-is-pattern IMP-symbol-116-is-pattern IMP-symbol-117-is-pattern element-var-is-var kore-and-is-pattern kore-element-var-x0-elementvariable typecode-cache-Pattern-141 top-is-pattern IMP-sort-30-is-pattern IMP-sort-13-is-pattern IMP-symbol-169-is-pattern KSEQ-symbol-0-is-pattern typecode-cache-Pattern-16 IMP-sort-10-is-pattern in-sort-is-pattern substitution-disjoint and-is-pattern kore-rewrites-is-pattern kore-valid-is-pattern substitution-var-same IMP-symbol-117-substitution substitution-kore-and substitution-502 kore-element-var-Val-elementvariable top-intro rule-weakening sorting-cache-23 rule-and-intro-alt2-sugar rule-imp-transitivity substitution-kore-rewrites substitution-kore-valid substitution-imp sorting-rearrange-119 kore-functional sorting-cache-343 sorting-rearrange-178 substitution-in-sort substitution-and substitution-501 functional-substitution-alt ) UEUEAIBSUKULUEUNUNFFFFRUFDEGBAUGAJBCUHCKUILEDEGBCADAIBCMNOPQAIBSTUBFFRKLEDEGBCADAJBCMNOPQAIBSTUBUOUPUEUEAIBSUKULUEUNUEUEVBVCUEAIBSUKULUEVDUEUEVBVCVEVEAIBSFFFFRUFDEGBAUGAJBCUHCKUILEDEGBCADAIBCMNOPQHUDTUBFFRKLEDEGBCADAJBCMNOPQHUDTUBUOUPFFFFRUFDEGBAUGAJBCUHCKUILEDEGBCADAIBCMNOPQAIBSTUBFFRKLEDEGBCADAJBCMNOPQAIBSTUBUOUPFFFFRUFDEGBAUGAJBCUHCKUILEDEGBCADAIBCMNOPQUCUJTUBFFRKLEDEGBCADAJBCMNOPQUCUJTUBUOUPUEHUDUKULUEUNAIBSUKULUEUNUCUJUKULUEUNVAHUCUKAIBSUEVAVDVAVJVKUEHUDUKULUEUNUNHUDUKULUEUNFFFFRUFDEGBAUGAJBCUHCKUILEDEGBCADAIBCMNOPQHUDTUBFFRKLEDEGBCADAJBCMNOPQHUDTUBUOUPHVLHVMVFAIBSAIBSUKULUEUNFFFFRUFDEGBAUGAJBCUHCKUILEDEGBCADAIBCMNOPQAIBSTUBFFRKLEDEGBCADAJBCMNOPQAIBSTUBUOUPHUDUKULUEUNFFFFRUFDEGBAUGAJBCUHCKUILEDEGBCADAIBCMNOPQHUDTUBFFRKLEDEGBCADAJBCMNOPQHUDTUBUOUPHUAAIBSAIBSUKULUEHUDUKULUEHUAAIBSAIBSUKHUDUKHUAAIBSHUAUQUKAIBSHUAUMVNUEAIBSHUAUMVOFFFFRUFDEGBAUGAJBCUHCKUILEDEGBCADAIBCMNOPQAIBSTUBFFRKLEDEGBCADAJBCMNOPQAIBSTUBUOFFFFRUFDEGBAUGAJBCUHCKUILEDEGBCADAIBCMNOPQHUDTUBFFRKLEDEGBCADAJBCMNOPQHUDTUBUOAIBSHUAFAIBSHUAUMFFFRUFDEGBAUGAJBCUHCKUILEDEGBCADAIBCMNOPQAIBSTUBFFRKLEDEGBCADAJBCMNOPQAIBSTUBFFFRUFDEGBAUGAJBCUHCKUILEDEGBCADAIBCMNOPQHUDTUBFFRKLEDEGBCADAJBCMNOPQHUDTUBAIBSHUAFAIBSHUAUMFFRUFDEGBAUGAJBCUHCKUILEDEGBCADAIBCMNOPQAIBSTFFRUFDEGBAUGAJBCUHCKUILEDEGBCADAIBCMNOPQHUDTAIBSHUAFAIBSHUAUMFRAIBSHUAUMHUAAIBSUFDEGBAUGAJBCUHCKUILEDEGBCADAIBCMNOPQAIBSUFDEGBAUGAJBCUHCKUILEDEGBCADAIBCMNOPQHUDUFDEGBAUGAJBCUHCKUILEDEGBCADAIBCMNOPQAIBSHUAUMAIBSHUAUQURUSFFRKLEDEGBCADAJBCMNOPQAIBSTFFRKLEDEGBCADAJBCMNOPQHUDTAIBSHUAFAIBSHUAUMFRAIBSHUAUMHUAAIBSKLEDEGBCADAJBCMNOPQAIBSKLEDEGBCADAJBCMNOPQHUDKLEDEGBCADAJBCMNOPQAIBSHUAUMAIBSHUAUQURUSVGVHVIUCUJUCUJUKULUEUNFFFFRUFDEGBAUGAJBCUHCKUILEDEGBCADAIBCMNOPQUCUJTUBFFRKLEDEGBCADAJBCMNOPQUCUJTUBUOUPHUDUKULUEUNFFFFRUFDEGBAUGAJBCUHCKUILEDEGBCADAIBCMNOPQHUDTUBFFRKLEDEGBCADAJBCMNOPQHUDTUBUOUPHUAHUCVPFFFFRUFDEGBAUGAJBCUHCKUILEDEGBCADAIBCMNOPQUCUJTUBFFRKLEDEGBCADAJBCMNOPQUCUJTUBUOFFFFRUFDEGBAUGAJBCUHCKUILEDEGBCADAIBCMNOPQHUDTUBFFRKLEDEGBCADAJBCMNOPQHUDTUBUOUCUJHUAHUCUTFFFRUFDEGBAUGAJBCUHCKUILEDEGBCADAIBCMNOPQUCUJTUBFFRKLEDEGBCADAJBCMNOPQUCUJTUBFFFRUFDEGBAUGAJBCUHCKUILEDEGBCADAIBCMNOPQHUDTUBFFRKLEDEGBCADAJBCMNOPQHUDTUBUCUJHUAHUCUTFFRUFDEGBAUGAJBCUHCKUILEDEGBCADAIBCMNOPQUCUJTFFRUFDEGBAUGAJBCUHCKUILEDEGBCADAIBCMNOPQHUDTUCUJHUAHUCUTFRUCUJHUAUMHUAUCUJUFDEGBAUGAJBCUHCKUILEDEGBCADAIBCMNOPQUCUJUFDEGBAUGAJBCUHCKUILEDEGBCADAIBCMNOPQHUDUFDEGBAUGAJBCUHCKUILEDEGBCADAIBCMNOPQUCUJHUAUMUCUJHUAUQURUSFFRKLEDEGBCADAJBCMNOPQUCUJTFFRKLEDEGBCADAJBCMNOPQHUDTUCUJHUAHUCUTFRUCUJHUAUMHUAUCUJKLEDEGBCADAJBCMNOPQUCUJKLEDEGBCADAJBCMNOPQHUDKLEDEGBCADAJBCMNOPQUCUJHUAUMUCUJHUAUQURUSVGVHVIVQVF $.
sorting-rearrange-180 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-equals \kore-sort-SortMap kore-sort-var-R ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem ( \kore-dv \kore-sort-SortId "a" ) ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortKItem ( \kore-dv \kore-sort-SortInt "0" ) ) ) ( \kore-symbol-Lbl'Unds'Map'Unds' ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem ( \kore-dv \kore-sort-SortId "a" ) ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortKItem ( \kore-dv \kore-sort-SortInt "0" ) ) ) \kore-symbol-Lbl'Stop'Map ) ) ) ) $= ( and-is-pattern top-is-pattern typecode-cache-Pattern-2 kore-is-sort-is-pattern IMP-sort-17-is-pattern BASIC-K-sort-1-is-pattern kore-dv-is-pattern kore-inj-is-pattern IMP-sort-22-is-pattern string-literal-11-is-pattern string-literal-1-is-pattern IMP-symbol-196-is-pattern rule-imp-transitivity IMP-sort-14-is-pattern IMP-symbol-112-is-pattern IMP-symbol-176-is-pattern rule-and-intro-alt2-sugar kore-equals-is-pattern kore-valid-is-pattern sorting-cache-58 top-intro rule-weakening and-elim-left-sugar imp-reflexivity sorting-rearrange-166 kore-equals-symmetry ) ADECBADECBADECBCBBADOADFGFKHIJGJLHIMFGFKHIJGJLHIMPQSTADECBADECBADECBCBAUAADECBADECBCAUAADECBCUBUCRRADOFGFKHIJGJLHIMFGFKHIJGJLHIMPQADECBADECBCBBADECBADECBCBBADECBADOADFGFKHIJGJLHIMPQFGFKHIJGJLHIMSTADECBADECBCBBADECADECBADECBCBBADECBADEADECBADECBCBUDADECBADEADEADECUDADEUENNADECBADECBCBBCUBUCRAUFNUGN $.
sorting-rearrange-181 $p |- ( \imp \top ( \kore-valid \unit-sort ( \kore-equals \kore-sort-SortMap \unit-sort ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem ( \kore-dv \kore-sort-SortId "a" ) ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortKItem ( \kore-dv \kore-sort-SortInt "0" ) ) ) ( \kore-symbol-Lbl'Unds'Map'Unds' ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem ( \kore-dv \kore-sort-SortId "a" ) ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortKItem ( \kore-dv \kore-sort-SortInt "0" ) ) ) \kore-symbol-Lbl'Stop'Map ) ) ) ) $= ( IMP-sort-17-is-pattern BASIC-K-sort-1-is-pattern kore-dv-is-pattern kore-inj-is-pattern IMP-sort-22-is-pattern kore-sort-var-R-elementvariable string-literal-11-is-pattern string-literal-1-is-pattern IMP-symbol-196-is-pattern top-is-pattern typecode-cache-Pattern-2 unit-sort-is-symbol symbol-is-pattern IMP-symbol-112-is-pattern IMP-symbol-176-is-pattern kore-sort-var-x0-elementvariable and-is-pattern IMP-sort-14-is-pattern typecode-cache-Pattern-6 kore-is-sort-is-pattern element-var-is-var kore-equals-is-pattern kore-valid-is-pattern x-is-element-var substitution-var-same substitution-disjoint rule-weakening top-intro rule-and-intro-alt2-sugar rule-imp-transitivity substitution-kore-equals substitution-kore-valid substitution-imp sorting-cache-49 typecode-cache-Pattern-1 exists-is-pattern unit-sort-is-functional sorting-cache-47 sorting-rearrange-180 substitution-2 substitution-3 substitution-9 substitution-10 functional-substitution-alt ) JJLMTJQQLMRLMABAGCDEBEHCDIABAGCDEBEHCDINOUBUCJJLMTJQJJUHUGUNUILMFKRFKABAGCDEBEHCDIABAGCDEBEHCDINOUBUCLMRLMABAGCDEBEHCDIABAGCDEBEHCDINOUBUCPSRPSABAGCDEBEHCDIABAGCDEBEHCDINOUBUCJFKTJQLMTJQPSTJQUDFPJUDUOUDUPUDUQUGJFKTJQQFKTJQFKRFKABAGCDEBEHCDIABAGCDEBEHCDINOUBUCJFKTJQQFKTJFURJFKTJQQJUHUGUIFUSUJLMLMTJQLMRLMABAGCDEBEHCDIABAGCDEBEHCDINOUBUCFKTJQFKRFKABAGCDEBEHCDIABAGCDEBEHCDINOUBUCFUAFUTLMRLMABAGCDEBEHCDIABAGCDEBEHCDINOUBFKRFKABAGCDEBEHCDIABAGCDEBEHCDINOUBLMFUALMFUAUERLMABAGCDEBEHCDIABAGCDEBEHCDINORFKABAGCDEBEHCDIABAGCDEBEHCDINOLMFUAFVALMFUAUEABAGCDEBEHCDILMFUAUFABAGCDEBEHCDINOLMFUAUFUKULUMPSPSTJQPSRPSABAGCDEBEHCDIABAGCDEBEHCDINOUBUCFKTJQFKRFKABAGCDEBEHCDIABAGCDEBEHCDINOUBUCFUAFPVBPSRPSABAGCDEBEHCDIABAGCDEBEHCDINOUBFKRFKABAGCDEBEHCDIABAGCDEBEHCDINOUBPSFUAPSFUAUERPSABAGCDEBEHCDIABAGCDEBEHCDINORFKABAGCDEBEHCDIABAGCDEBEHCDINOPSFUAFPVCPSFUAUEABAGCDEBEHCDIPSFUAUFABAGCDEBEHCDINOPSFUAUFUKULUMVDUJ $.
sorting-cache-344 $p |- ( \imp \top ( \in-sort ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) \kore-symbol-dotk ) ) ( \kore-symbol-Lbl'-LT-'state'-GT-' ( \kore-symbol-Lbl'Unds'Map'Unds' ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem ( \kore-dv \kore-sort-SortId "a" ) ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortKItem ( \kore-dv \kore-sort-SortInt "0" ) ) ) \kore-symbol-Lbl'Stop'Map ) ) ) \kore-sort-SortTCell ) ) $= ( kore-dv-is-pattern IMP-sort-22-is-pattern kore-inj-is-pattern BASIC-K-sort-1-is-pattern IMP-sort-17-is-pattern string-literal-11-is-pattern in-sort-is-pattern string-literal-1-is-pattern IMP-symbol-196-is-pattern IMP-symbol-112-is-pattern IMP-symbol-176-is-pattern IMP-symbol-120-is-pattern IMP-sort-30-is-pattern IMP-sort-13-is-pattern string-literal-10-is-pattern IMP-symbol-169-is-pattern KSEQ-symbol-1-is-pattern KSEQ-symbol-0-is-pattern IMP-symbol-119-is-pattern top-is-pattern IMP-sort-9-is-pattern IMP-sort-7-is-pattern rule-imp-transitivity and-is-pattern IMP-symbol-114-is-pattern IMP-sort-29-is-pattern sorting-cache-28 IMP-sort-14-is-pattern sorting-cache-307 IMP-symbol-120-sorting rule-and-intro-alt2-sugar IMP-symbol-114-sorting ) TMDEFABNBOACPCQRSUBGEDEFACBDBHACIJKLUAGUDMDEFABNBOACPCQRSEDEFACBDBHACIJKLUEUFGTMDEFABNBOACPCQRSUBGEDEFACBDBHACIJKLUAGUGTEDEFACBDBHACIJKUHGEDEFACBDBHACIJKLUAGUIEDEFACBDBHACIJKUJUCUKMDEFABNBOACPCQRSEDEFACBDBHACIJKLULUC $.
pattern-subsumption-4 $p |- ( \imp \top ( \kore-valid \kore-sort-SortGeneratedTopCell ( \kore-implies \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-top \kore-sort-SortGeneratedTopCell ) ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) \kore-symbol-dotk ) ) ( \kore-symbol-Lbl'-LT-'state'-GT-' ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem ( \kore-dv \kore-sort-SortId "a" ) ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortKItem ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) \kore-symbol-dotk ) ) ( \kore-symbol-Lbl'-LT-'state'-GT-' ( \kore-symbol-Lbl'Unds'Map'Unds' ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem ( \kore-dv \kore-sort-SortId "a" ) ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortKItem ( \kore-dv \kore-sort-SortInt "0" ) ) ) \kore-symbol-Lbl'Stop'Map ) ) ) ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) ) $= ( kore-dv-is-pattern IMP-sort-22-is-pattern kore-inj-is-pattern IMP-sort-8-is-pattern BASIC-K-sort-1-is-pattern IMP-sort-17-is-pattern string-literal-11-is-pattern string-literal-1-is-pattern kore-top-is-pattern IMP-symbol-196-is-pattern kore-and-is-pattern IMP-sort-30-is-pattern IMP-sort-13-is-pattern string-literal-10-is-pattern IMP-symbol-169-is-pattern KSEQ-symbol-1-is-pattern KSEQ-symbol-0-is-pattern IMP-symbol-119-is-pattern IMP-symbol-120-is-pattern kore-element-var-x0-elementvariable IMP-symbol-116-is-pattern IMP-symbol-114-is-pattern IMP-symbol-117-is-pattern element-var-is-var IMP-symbol-112-is-pattern IMP-symbol-176-is-pattern substitution-disjoint typecode-cache-Pattern-16 in-sort-is-pattern top-is-pattern kore-implies-is-pattern sorting-cache-0 and-is-pattern rule-and-intro-alt2-sugar rule-imp-transitivity IMP-sort-29-is-pattern IMP-sort-10-is-pattern kore-valid-is-pattern substitution-var-same IMP-symbol-120-substitution IMP-symbol-114-substitution IMP-symbol-117-substitution substitution-kore-and substitution-kore-implies substitution-kore-valid kore-and-sorting sorting-cache-344 sorting-cache-23 IMP-symbol-117-sorting kore-top-valid rule-weakening kore-weakening IMP-sort-14-is-pattern sorting-cache-20 sorting-cache-307 sorting-rearrange-181 sorting-cache-30 kore-implies-reflexivity-alt kore-equals-elim-alt kore-imp-conj-simplify ) DDDIDIKDIDDDIDIKLEFGABMBNACOCPQRFEFGACBEBHACJSUBBHAUAUCKLEFGABMBNACOCPQRFEFGACBEBHACJUEUFSUBBHAUAUCUJUJDIDUIDIDUIUMDDIDIKDUIUJDIDUIDIDUIULULUNDDIDIVFUOULUJLEFGABMBNACOCPQRFEFGACBEBHACJUEUFSUBUPUIBHAUAUQUIUMLEFGABMBNACOCPQRFEFGACBEBHACJUEUFSUBBHAUAUCDUIUJLEFGABMBNACOCPQRFEFGACBEBHACJUEUFSUBUPUIBHAUAUQUIVGVHUNLEFGABMBNACOCPQRFEFGACBEBHACJUEUFSUBBHAUAVIUODDDIDIKDIUJUJDDIURDVJVKVLVMFEFGACBEBHACJFEFGACBEBHACJUEUFDDDDIDIKLEFGABMBNACOCPQRFEFGACBEBHACJSUBBHAUAUCKDDDIDIKLEFGABMBNACOCPQRFEFGACBEBHACJSUBBHAUAUCKUKDDDDDIDIKLEFGABMBNACOCPQRFEFGACBEBHACJSUBBHAUAUCKDDDIDIKLEFGABMBNACOCPQRTUHSUBBHAUAUCKUKURDDDDIDIKLEFGABMBNACOCPQRFEFGACBEBHACJSUBBHAUAUCKDDDIDIKLEFGABMBNACOCPQRFEFGACBEBHACJUEUFSUBBHAUAUCKUKDDUJTVNVOVPDDDDIDIKLEFGABMBNACOCPQRFEFGACBEBHACJSUBBHAUAUCKUJVQVRDDDDDIDIKLEFGABMBNACOCPQRFEFGACBEBHACJSUBBHAUAUCKDDDIDIKLEFGABMBNACOCPQRFEFGACBEBHACJSUBBHAUAUCKUKDDDDDIDIKLEFGABMBNACOCPQRFEFGACBEBHACJSUBBHAUAUCKDDDIDIKLEFGABMBNACOCPQRTUHSUBBHAUAUCKUKFEFGACBEBHACJTUDDFEFGACBEBHACJTUDUGDDDDIDIKLEFGABMBNACOCPQRFEFGACBEBHACJSUBBHAUAUCKDDDIDIKLEFGABMBNACOCPQRFEFGACBEBHACJSUBBHAUAUCKDDDDIDIKLEFGABMBNACOCPQRFEFGACBEBHACJSUBBHAUAUCKDDDIDIKLEFGABMBNACOCPQRTUHSUBBHAUAUCKFEFGACBEBHACJTUDDFEFGACBEBHACJTUDUGDDDIDIKLEFGABMBNACOCPQRFEFGACBEBHACJSUBBHAUAUCKFEFGACBEBHACJTUDUGDDDIDIKLEFGABMBNACOCPQRFEFGACBEBHACJSUBBHAUAUCDDDIDIKLEFGABMBNACOCPQRTUHSUBBHAUAUCFEFGACBEBHACJTUDDFEFGACBEBHACJTUDUGDDIDIKFEFGACBEBHACJTUDUGTUDFEFGACBEBHACJLEFGABMBNACOCPQRFEFGACBEBHACJSUBBHAUALEFGABMBNACOCPQRTUHSUBBHAUATUDFEFGACBEBHACJLEFGABMBNACOCPQRFEFGACBEBHACJSLEFGABMBNACOCPQRTUHSLEFGABMBNACOCPQRFEFGACBEBHACJTUDUGTUDFEFGACBEBHACJFEFGACBEBHACJTUHFEFGACBEBHACJTUDUSUTVABHAUAFEFGACBEBHACJTUDUGVBVCVDVEDDDDDIDIKLEFGABMBNACOCPQRFEFGACBEBHACJSUBBHAUAUCKDDDIDIKLEFGABMBNACOCPQRFEFGACBEBHACJUEUFSUBBHAUAUCKUKDDDDDIDIKLEFGABMBNACOCPQRFEFGACBEBHACJSUBBHAUAUCKDDDIDIKLEFGABMBNACOCPQRTUHSUBBHAUAUCKUKFEFGACBEBHACJUEUFTUDDFEFGACBEBHACJUEUFTUDUGDDDDIDIKLEFGABMBNACOCPQRFEFGACBEBHACJSUBBHAUAUCKDDDIDIKLEFGABMBNACOCPQRFEFGACBEBHACJUEUFSUBBHAUAUCKDDDDIDIKLEFGABMBNACOCPQRFEFGACBEBHACJSUBBHAUAUCKDDDIDIKLEFGABMBNACOCPQRTUHSUBBHAUAUCKFEFGACBEBHACJUEUFTUDDFEFGACBEBHACJUEUFTUDUGDDDIDIKLEFGABMBNACOCPQRFEFGACBEBHACJSUBBHAUAUCKFEFGACBEBHACJUEUFTUDUGDDDIDIKLEFGABMBNACOCPQRFEFGACBEBHACJUEUFSUBBHAUAUCDDDIDIKLEFGABMBNACOCPQRTUHSUBBHAUAUCFEFGACBEBHACJUEUFTUDDFEFGACBEBHACJUEUFTUDUGDDIDIKFEFGACBEBHACJUEUFTUDUGTUDFEFGACBEBHACJUEUFLEFGABMBNACOCPQRFEFGACBEBHACJUEUFSUBBHAUALEFGABMBNACOCPQRTUHSUBBHAUATUDFEFGACBEBHACJUEUFLEFGABMBNACOCPQRFEFGACBEBHACJUEUFSLEFGABMBNACOCPQRTUHSLEFGABMBNACOCPQRFEFGACBEBHACJUEUFTUDUGTUDFEFGACBEBHACJUEUFFEFGACBEBHACJUEUFTUHFEFGACBEBHACJUEUFTUDUSUTVABHAUAFEFGACBEBHACJUEUFTUDUGVBVCVDVEVSVT $.
pattern-subsumption-5 $p |- ( \imp \top ( \kore-valid \kore-sort-SortGeneratedTopCell ( \kore-implies \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-top \kore-sort-SortGeneratedTopCell ) ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' \kore-symbol-dotk ) ( \kore-symbol-Lbl'-LT-'state'-GT-' ( \kore-symbol-Lbl'Unds'Map'Unds' ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem ( \kore-dv \kore-sort-SortId "a" ) ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortKItem ( \kore-dv \kore-sort-SortInt "10" ) ) ) \kore-symbol-Lbl'Stop'Map ) ) ) ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-top \kore-sort-SortGeneratedTopCell ) ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' \kore-symbol-dotk ) ( \kore-symbol-Lbl'-LT-'state'-GT-' ( \kore-symbol-Lbl'Unds'Map'Unds' ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem ( \kore-dv \kore-sort-SortId "a" ) ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortKItem ( \kore-dv \kore-sort-SortInt "10" ) ) ) \kore-symbol-Lbl'Stop'Map ) ) ) ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) ) $= ( IMP-sort-8-is-pattern kore-dv-is-pattern IMP-sort-22-is-pattern kore-top-is-pattern kore-and-is-pattern IMP-sort-17-is-pattern BASIC-K-sort-1-is-pattern kore-inj-is-pattern KSEQ-symbol-1-is-pattern IMP-symbol-119-is-pattern string-literal-11-is-pattern string-literal-10-is-pattern IMP-symbol-196-is-pattern IMP-symbol-112-is-pattern IMP-symbol-176-is-pattern IMP-symbol-120-is-pattern IMP-symbol-114-is-pattern string-literal-1-is-pattern IMP-symbol-116-is-pattern IMP-symbol-117-is-pattern top-is-pattern sorting-cache-38 kore-implies-reflexivity-alt ) AAAADADEIJFGFKBHCGCLBHMNOPQCRBSTEUAUBUC $.
symbolic-step-4 $p |- ( \imp \top ( \kore-valid \kore-sort-SortGeneratedTopCell ( \kore-rewrites-star \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-top \kore-sort-SortGeneratedTopCell ) ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) \kore-symbol-dotk ) ) ( \kore-symbol-Lbl'-LT-'state'-GT-' ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem ( \kore-dv \kore-sort-SortId "a" ) ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortKItem ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-top \kore-sort-SortGeneratedTopCell ) ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' \kore-symbol-dotk ) ( \kore-symbol-Lbl'-LT-'state'-GT-' ( \kore-symbol-Lbl'Unds'Map'Unds' ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem ( \kore-dv \kore-sort-SortId "a" ) ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortKItem ( \kore-dv \kore-sort-SortInt "10" ) ) ) \kore-symbol-Lbl'Stop'Map ) ) ) ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) ) $= ( kore-dv-is-pattern IMP-sort-22-is-pattern IMP-sort-8-is-pattern kore-inj-is-pattern BASIC-K-sort-1-is-pattern IMP-sort-17-is-pattern kore-top-is-pattern string-literal-11-is-pattern string-literal-1-is-pattern in-sort-is-pattern string-literal-10-is-pattern KSEQ-symbol-1-is-pattern IMP-symbol-119-is-pattern IMP-symbol-196-is-pattern IMP-symbol-120-is-pattern IMP-symbol-114-is-pattern IMP-symbol-116-is-pattern kore-and-is-pattern top-is-pattern IMP-symbol-117-is-pattern IMP-sort-30-is-pattern IMP-sort-13-is-pattern IMP-symbol-169-is-pattern KSEQ-symbol-0-is-pattern IMP-symbol-112-is-pattern IMP-symbol-176-is-pattern sorting-cache-0 and-is-pattern rule-and-intro-alt2-sugar rule-imp-transitivity IMP-sort-29-is-pattern IMP-sort-10-is-pattern kore-and-sorting sorting-cache-29 sorting-cache-23 IMP-symbol-117-sorting sorting-cache-37 sorting-cache-38 predicate-intro-top kore-is-predicate-top kore-rewrites-subsumption-rhs kore-implies-is-pattern kore-valid-is-pattern top-intro proof-rule-mp kore-implies-reflexivity rule-weakening kore-implies-reflexivity-alt kore-implies-compat-in-kore-and sorting-cache-30 kore-is-predicate-and-alt pattern-subsumption-4 sorting-rearrange-179 kore-and-elim-right-alt3 kore-rewrites-subsumption-lhs kore-rewrites-constraint-lemma pattern-subsumption-5 kore-rewrites-star-intro kore-rewrites-star-subsumption-lhs ) CCCCGCGRUAEFHABUBBKADUCDLUDMFEFHADBEBIADNOPBIAQTRCCCGCGRUAEFHABUBBKADUCDLUDMFEFHADBEBIADNOPBIAQTRCCCGCGRLMFEFHADBEBKADNUEUFOPBIAQTRSCCCGCGRCCGCGRUAEFHABUBBKADUCDLUDMFEFHADBEBIADNOPBIAQTUAEFHABUBBKADUCDLUDMFEFHADBEBIADNOPBIAQTSSCGCJCGCJUHCCGCGRCJSCGCJCGCJUGUGUICCGCGUMUJSCGCJCGCJUHCCGCGRCJSCGCJCGCJUGUGUICCGCGUMUJSUAEFHABUBBKADUCDLUDMFEFHADBEBIADNOPUKJBIAQULJUHUAEFHABUBBKADUCDLUDMFEFHADBEBIADNOPBIAQTCJSUAEFHABUBBKADUCDLUDMFEFHADBEBIADNOPUKJBIAQULJUNUOUIUAEFHABUBBKADUCDLUDMFEFHADBEBIADNOPBIAQUPUJSUAEFHABUBBKADUCDLUDMFEFHADBEBIADNOPUKJBIAQULJUHUAEFHABUBBKADUCDLUDMFEFHADBEBIADNOPBIAQTCJSUAEFHABUBBKADUCDLUDMFEFHADBEBIADNOPUKJBIAQULJUNUOUIUAEFHABUBBKADUCDLUDMFEFHADBEBIADNOPBIAQUPUJSCCCCGCGRCCGCGRVBVCCCCGCGRSCCGCGRCJSCGCJCGCJUHCCGCGRCJSCGCJCGCJUGUGUICCGCGUMUJVDVEVFVGCUAEFHABUBBKADUCDLUDMFEFHADBEBIADNOPBIAQTSSUAEFHABUBBKADUCDLUDMFEFHADBEBIADNOPUKJBIAQULJUHUAEFHABUBBKADUCDLUDMFEFHADBEBIADNOPBIAQTCJSUAEFHABUBBKADUCDLUDMFEFHADBEBIADNOPUKJBIAQULJUNUOUIUAEFHABUBBKADUCDLUDMFEFHADBEBIADNOPBIAQUPUJVHVICCCCGCGRUAEFHABUBBKADUCDLUDMFEFHADBEBIADNOPBIAQTRCCCGCGRLMFEFHADBEBKADNUEUFOPBIAQTRSVJURCCCCGCGRUAEFHABUBBKADUCDLUDMFEFHADBEBIADNOPBIAQTRCCCGCGRLMFEFHADBEBKADNUEUFOPBIAQTRCCCGCGRLMFEFHADBEBKADNUEUFOPBIAQTRSUSURURCCCGCGRUAEFHABUBBKADUCDLUDMFEFHADBEBIADNOPBIAQTLMFEFHADBEBKADNUEUFOPBIAQTSCCGCGCUTCUTVKSCGCJCGCJUHCCGCGRCJSCGCJCGCJUGUGUICCGCGUMUJSUAEFHABUBBKADUCDLUDMFEFHADBEBIADNOPUKJBIAQULJUHUAEFHABUBBKADUCDLUDMFEFHADBEBIADNOPBIAQTCJSUAEFHABUBBKADUCDLUDMFEFHADBEBIADNOPUKJBIAQULJUNUOUIUAEFHABUBBKADUCDLUDMFEFHADBEBIADNOPBIAQUPUJUQCCCCGCGRUAEFHABUBBKADUCDLUDMFEFHADBEBIADNOPBIAQTRCCGUAEFHABUBBKADUCDLUDMFEFHADBEBIADNUEUFOPBIAQTRLMFEFHADBEBKADNUEUFOPBIAQTSVLCCCGUAEFHABUBBKADUCDLUDMFEFHADBEBIADNUEUFOPBIAQTRCCGLMFEFHADBEBKADNUEUFOPBIAQTRLMFEFHADBEBKADNUEUFOPBIAQTSUSSCGCJLMFEFHADBEBKADNUEUFOPBIAQTCJUHCCGLMFEFHADBEBKADNUEUFOPBIAQTRCJSCGCJLMFEFHADBEBKADNUEUFOPBIAQTCJUGUQUICCGLMFEFHADBEBKADNUEUFOPBIAQTUMUJUQVMCCGLMFEFHADBEBKADNUEUFOPBIAQTSUGUQVNVAVOVPVQVAVRVS $.
goal $p |- ( \imp \top ( \kore-valid \kore-sort-SortGeneratedTopCell ( \kore-rewrites-star \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-top \kore-sort-SortGeneratedTopCell ) ) ( \kore-symbol-LblinitGeneratedTopCell ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblint'UndsSClnUndsUnds'IMP-SYNTAX'Unds'Pgm'Unds'Ids'Unds'Stmt ( \kore-symbol-Lbl'UndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids ( \kore-dv \kore-sort-SortId "a" ) \kore-symbol-Lbl'Stop'List'LBraQuotUndsCommUndsUnds'IMP-SYNTAX'Unds'Ids'Unds'Id'Unds'Ids'QuotRBraUnds'Ids ) ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id'Unds'AExp ( \kore-dv \kore-sort-SortId "a" ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "10" ) ) ) ) ) ) ) ) ) ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-top \kore-sort-SortGeneratedTopCell ) ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' \kore-symbol-dotk ) ( \kore-symbol-Lbl'-LT-'state'-GT-' ( \kore-symbol-Lbl'Unds'Map'Unds' ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortId \kore-sort-SortKItem ( \kore-dv \kore-sort-SortId "a" ) ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortKItem ( \kore-dv \kore-sort-SortInt "10" ) ) ) \kore-symbol-Lbl'Stop'Map ) ) ) ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) ) $= ( IMP-sort-8-is-pattern kore-dv-is-pattern IMP-sort-22-is-pattern kore-inj-is-pattern BASIC-K-sort-1-is-pattern IMP-sort-17-is-pattern kore-top-is-pattern kore-and-is-pattern string-literal-11-is-pattern string-literal-1-is-pattern string-literal-10-is-pattern IMP-symbol-196-is-pattern KSEQ-symbol-1-is-pattern IMP-symbol-119-is-pattern IMP-symbol-120-is-pattern IMP-symbol-114-is-pattern IMP-symbol-116-is-pattern IMP-symbol-117-is-pattern IMP-sort-13-is-pattern IMP-symbol-169-is-pattern IMP-sort-30-is-pattern KSEQ-symbol-0-is-pattern IMP-symbol-112-is-pattern IMP-symbol-176-is-pattern top-is-pattern IMP-sort-20-is-pattern sorting-cache-30 string-literal-9-is-pattern IMP-sort-26-is-pattern IMP-symbol-111-is-pattern IMP-symbol-148-is-pattern IMP-symbol-220-is-pattern IMP-symbol-216-is-pattern sorting-cache-46 sorting-cache-38 intermediate-state-3 kore-implies-reflexivity-alt symbolic-step-4 kore-rewrites-star-subsumption-lhs kore-rewrites-star-transitivity ) AAAAGAGHUCUFEUFUHBDUIEFIBUJUKFIBCSCKBDTULDLUDUMHAAAGAGHUAEFIBCSCKBDTDMUBNFEFIBDCECJBDLOPCJBQRHAAAGAGHMNFEFIBDCECKBDLUCUDOPCJBQRHUEUNUGUOUPAAAAGAGHUAEFIBCSCKBDTDMUBNFEFIBDCECJBDLOPCJBQRHAAAGAGHUAEFIBCSCKBDTDMUBNFEFIBDCECJBDLOPCJBQRHAAAGAGHMNFEFIBDCECKBDLUCUDOPCJBQRHUEAAAAGAGHUAEFIBCSCKBDTDMUBNFEFIBDCECJBDLOPCJBQRHUEUGUQURUSUT $.
